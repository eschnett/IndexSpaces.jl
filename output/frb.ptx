// PTX CompilerJob of kernel #frb(CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int32, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int32, 1}) for sm_86, minthreads=768, blocks_per_sm=1, always_inline=false

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z14julia_frb_548713CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE // -- Begin function _Z14julia_frb_548713CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE
.extern .func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
;
.extern .func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[8]
)
;
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z14julia_frb_548713CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE
.visible .entry _Z14julia_frb_548713CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE(
	.param .align 8 .b8 _Z14julia_frb_548713CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_0[8],
	.param .align 8 .b8 _Z14julia_frb_548713CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z14julia_frb_548713CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z14julia_frb_548713CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z14julia_frb_548713CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z14julia_frb_548713CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_5[32]
)
.reqntid 768, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<58>;
	.reg .b16 	%rs<430>;
	.reg .f32 	%f<172>;
	.reg .b32 	%r<2503>;
	.reg .b64 	%rd<181>;

// %bb.0:                               // %conversion
	// begin inline asm
	mov.u32 %r198, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r198, 76895;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L11
	ld.param.u64 	%rd13, [_Z14julia_frb_548713CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_5];
	ld.param.u64 	%rd9, [_Z14julia_frb_548713CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_2];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	or.b32  	%r223, %r3, %r1;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r224, %r4, 768, %r223;
	mul.wide.u32 	%rd19, %r224, 4;
	add.s64 	%rd4, %rd13, %rd19;
	mov.u32 	%r225, 1;
	st.global.u32 	[%rd4], %r225;
	and.b32  	%r5, %r1, 3;
	shr.u32 	%r6, %r1, 2;
	mul.lo.s32 	%r226, %r6, %r5;
	cvt.rn.f32.s32 	%f1, %r226;
	mul.f32 	%f2, %f1, 0f3E800000;
	add.f32 	%f3, %f2, %f2;
	mov.b32 	%r227, %f3;
	and.b32  	%r228, %r227, -2147483648;
	or.b32  	%r229, %r228, 1056964608;
	mov.b32 	%f4, %r229;
	add.f32 	%f5, %f3, %f4;
	cvt.rzi.f32.f32 	%f6, %f5;
	abs.f32 	%f7, %f3;
	setp.gt.f32 	%p2, %f7, 0f4B000000;
	selp.f32 	%f8, %f3, %f6, %p2;
	cvt.rzi.f32.f32 	%f9, %f3;
	setp.lt.f32 	%p3, %f7, 0f3F000000;
	selp.f32 	%f10, %f9, %f8, %p3;
	cvt.rzi.s32.f32 	%r230, %f10;
	fma.rn.f32 	%f11, %f10, 0fBF000000, %f2;
	mul.f32 	%f12, %f11, 0f34222169;
	fma.rn.f32 	%f13, %f11, 0f40490FDA, %f12;
	mul.f32 	%f14, %f13, %f13;
	fma.rn.f32 	%f15, %f14, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f16, %f15, %f14, 0f3D2AAABB;
	fma.rn.f32 	%f17, %f16, %f14, 0fBEFFFFFF;
	fma.rn.f32 	%f18, %f17, %f14, 0f3F800000;
	fma.rn.f32 	%f19, %f14, %f13, 0f00000000;
	fma.rn.f32 	%f20, %f14, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f21, %f20, %f14, 0fBE2AAAA8;
	fma.rn.f32 	%f22, %f21, %f19, %f13;
	and.b32  	%r231, %r230, 1;
	setp.eq.b32 	%p4, %r231, 1;
	selp.f32 	%f23, %f18, %f22, %p4;
	selp.f32 	%f24, %f22, %f18, %p4;
	and.b32  	%r232, %r230, 2;
	setp.eq.s32 	%p5, %r232, 0;
	neg.f32 	%f25, %f23;
	selp.f32 	%f26, %f23, %f25, %p5;
	add.s32 	%r233, %r230, 1;
	and.b32  	%r234, %r233, 2;
	setp.eq.s32 	%p6, %r234, 0;
	mov.f32 	%f27, 0f00000000;
	sub.f32 	%f28, %f27, %f24;
	selp.f32 	%f29, %f24, %f28, %p6;
	cvt.rzi.f32.f32 	%f30, %f2;
	setp.eq.f32 	%p7, %f30, %f2;
	mul.f32 	%f31, %f2, 0f00000000;
	selp.f32 	%f32, %f31, %f26, %p7;
	abs.f32 	%f33, %f2;
	setp.gt.f32 	%p8, %f33, 0f4B800000;
	add.f32 	%f34, %f32, 0f3F800000;
	selp.f32 	%f35, %f34, %f29, %p8;
	mov.b32 	%r201, %f35;
	mov.b32 	%r204, %f32;
	xor.b32  	%r200, %r204, -2147483648;
	shl.b32 	%r9, %r1, 1;
	and.b32  	%r235, %r9, 6;
	mul.lo.s32 	%r236, %r6, %r235;
	cvt.rn.f32.s32 	%f36, %r236;
	div.rn.f32 	%f37, %f36, 0f41C00000;
	add.f32 	%f38, %f37, %f37;
	mov.b32 	%r237, %f38;
	and.b32  	%r238, %r237, -2147483648;
	or.b32  	%r239, %r238, 1056964608;
	mov.b32 	%f39, %r239;
	add.f32 	%f40, %f38, %f39;
	cvt.rzi.f32.f32 	%f41, %f40;
	abs.f32 	%f42, %f38;
	setp.gt.f32 	%p9, %f42, 0f4B000000;
	selp.f32 	%f43, %f38, %f41, %p9;
	cvt.rzi.f32.f32 	%f44, %f38;
	setp.lt.f32 	%p10, %f42, 0f3F000000;
	selp.f32 	%f45, %f44, %f43, %p10;
	cvt.rzi.s32.f32 	%r240, %f45;
	fma.rn.f32 	%f46, %f45, 0fBF000000, %f37;
	mul.f32 	%f47, %f46, 0f34222169;
	fma.rn.f32 	%f48, %f46, 0f40490FDA, %f47;
	mul.f32 	%f49, %f48, %f48;
	fma.rn.f32 	%f50, %f49, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f51, %f50, %f49, 0f3D2AAABB;
	fma.rn.f32 	%f52, %f51, %f49, 0fBEFFFFFF;
	fma.rn.f32 	%f53, %f52, %f49, 0f3F800000;
	fma.rn.f32 	%f54, %f49, %f48, 0f00000000;
	fma.rn.f32 	%f55, %f49, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f56, %f55, %f49, 0fBE2AAAA8;
	fma.rn.f32 	%f57, %f56, %f54, %f48;
	and.b32  	%r241, %r240, 1;
	setp.eq.b32 	%p11, %r241, 1;
	selp.f32 	%f58, %f53, %f57, %p11;
	selp.f32 	%f59, %f57, %f53, %p11;
	and.b32  	%r242, %r240, 2;
	setp.eq.s32 	%p12, %r242, 0;
	neg.f32 	%f60, %f58;
	selp.f32 	%f61, %f58, %f60, %p12;
	add.s32 	%r243, %r240, 1;
	and.b32  	%r244, %r243, 2;
	setp.eq.s32 	%p13, %r244, 0;
	sub.f32 	%f62, %f27, %f59;
	selp.f32 	%f63, %f59, %f62, %p13;
	cvt.rzi.f32.f32 	%f64, %f37;
	setp.eq.f32 	%p14, %f64, %f37;
	mul.f32 	%f65, %f37, 0f00000000;
	selp.f32 	%f66, %f65, %f61, %p14;
	abs.f32 	%f67, %f37;
	setp.gt.f32 	%p15, %f67, 0f4B800000;
	add.f32 	%f68, %f66, 0f3F800000;
	selp.f32 	%f69, %f68, %f63, %p15;
	add.s32 	%r245, %r236, %r6;
	cvt.rn.f32.s32 	%f70, %r245;
	div.rn.f32 	%f71, %f70, 0f41C00000;
	add.f32 	%f72, %f71, %f71;
	mov.b32 	%r246, %f72;
	and.b32  	%r247, %r246, -2147483648;
	or.b32  	%r248, %r247, 1056964608;
	mov.b32 	%f73, %r248;
	add.f32 	%f74, %f72, %f73;
	cvt.rzi.f32.f32 	%f75, %f74;
	abs.f32 	%f76, %f72;
	setp.gt.f32 	%p16, %f76, 0f4B000000;
	selp.f32 	%f77, %f72, %f75, %p16;
	cvt.rzi.f32.f32 	%f78, %f72;
	setp.lt.f32 	%p17, %f76, 0f3F000000;
	selp.f32 	%f79, %f78, %f77, %p17;
	cvt.rzi.s32.f32 	%r249, %f79;
	fma.rn.f32 	%f80, %f79, 0fBF000000, %f71;
	mul.f32 	%f81, %f80, 0f34222169;
	fma.rn.f32 	%f82, %f80, 0f40490FDA, %f81;
	mul.f32 	%f83, %f82, %f82;
	fma.rn.f32 	%f84, %f83, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f85, %f84, %f83, 0f3D2AAABB;
	fma.rn.f32 	%f86, %f85, %f83, 0fBEFFFFFF;
	fma.rn.f32 	%f87, %f86, %f83, 0f3F800000;
	fma.rn.f32 	%f88, %f83, %f82, 0f00000000;
	fma.rn.f32 	%f89, %f83, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f90, %f89, %f83, 0fBE2AAAA8;
	fma.rn.f32 	%f91, %f90, %f88, %f82;
	and.b32  	%r250, %r249, 1;
	setp.eq.b32 	%p18, %r250, 1;
	selp.f32 	%f92, %f87, %f91, %p18;
	selp.f32 	%f93, %f91, %f87, %p18;
	and.b32  	%r251, %r249, 2;
	setp.eq.s32 	%p19, %r251, 0;
	neg.f32 	%f94, %f92;
	selp.f32 	%f95, %f92, %f94, %p19;
	add.s32 	%r252, %r249, 1;
	and.b32  	%r253, %r252, 2;
	setp.eq.s32 	%p20, %r253, 0;
	sub.f32 	%f96, %f27, %f93;
	selp.f32 	%f97, %f93, %f96, %p20;
	cvt.rzi.f32.f32 	%f98, %f71;
	setp.eq.f32 	%p21, %f98, %f71;
	mul.f32 	%f99, %f71, 0f00000000;
	selp.f32 	%f100, %f99, %f95, %p21;
	abs.f32 	%f101, %f71;
	setp.gt.f32 	%p22, %f101, 0f4B800000;
	add.f32 	%f102, %f100, 0f3F800000;
	selp.f32 	%f103, %f102, %f97, %p22;
	mov.b32 	%r206, %f69;
	mov.b32 	%r207, %f103;
	mov.b32 	%r209, %f66;
	mov.b32 	%r210, %f100;
	shl.b32 	%r254, %r1, 4;
	and.b32  	%r255, %r254, 48;
	mul.lo.s32 	%r256, %r6, %r255;
	cvt.rn.f32.s32 	%f104, %r256;
	div.rn.f32 	%f105, %f104, 0f41C00000;
	add.f32 	%f106, %f105, %f105;
	mov.b32 	%r257, %f106;
	and.b32  	%r258, %r257, -2147483648;
	or.b32  	%r259, %r258, 1056964608;
	mov.b32 	%f107, %r259;
	add.f32 	%f108, %f106, %f107;
	cvt.rzi.f32.f32 	%f109, %f108;
	abs.f32 	%f110, %f106;
	setp.gt.f32 	%p23, %f110, 0f4B000000;
	selp.f32 	%f111, %f106, %f109, %p23;
	cvt.rzi.f32.f32 	%f112, %f106;
	setp.lt.f32 	%p24, %f110, 0f3F000000;
	selp.f32 	%f113, %f112, %f111, %p24;
	cvt.rzi.s32.f32 	%r260, %f113;
	fma.rn.f32 	%f114, %f113, 0fBF000000, %f105;
	mul.f32 	%f115, %f114, 0f34222169;
	fma.rn.f32 	%f116, %f114, 0f40490FDA, %f115;
	mul.f32 	%f117, %f116, %f116;
	fma.rn.f32 	%f118, %f117, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f119, %f118, %f117, 0f3D2AAABB;
	fma.rn.f32 	%f120, %f119, %f117, 0fBEFFFFFF;
	fma.rn.f32 	%f121, %f120, %f117, 0f3F800000;
	fma.rn.f32 	%f122, %f117, %f116, 0f00000000;
	fma.rn.f32 	%f123, %f117, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f124, %f123, %f117, 0fBE2AAAA8;
	fma.rn.f32 	%f125, %f124, %f122, %f116;
	and.b32  	%r261, %r260, 1;
	setp.eq.b32 	%p25, %r261, 1;
	selp.f32 	%f126, %f121, %f125, %p25;
	selp.f32 	%f127, %f125, %f121, %p25;
	and.b32  	%r262, %r260, 2;
	setp.eq.s32 	%p26, %r262, 0;
	neg.f32 	%f128, %f126;
	selp.f32 	%f129, %f126, %f128, %p26;
	add.s32 	%r263, %r260, 1;
	and.b32  	%r264, %r263, 2;
	setp.eq.s32 	%p27, %r264, 0;
	sub.f32 	%f130, %f27, %f127;
	selp.f32 	%f131, %f127, %f130, %p27;
	cvt.rzi.f32.f32 	%f132, %f105;
	setp.eq.f32 	%p28, %f132, %f105;
	mul.f32 	%f133, %f105, 0f00000000;
	selp.f32 	%f134, %f133, %f129, %p28;
	abs.f32 	%f135, %f105;
	setp.gt.f32 	%p29, %f135, 0f4B800000;
	add.f32 	%f136, %f134, 0f3F800000;
	selp.f32 	%f137, %f136, %f131, %p29;
	shl.b32 	%r265, %r6, 3;
	add.s32 	%r266, %r256, %r265;
	cvt.rn.f32.s32 	%f138, %r266;
	div.rn.f32 	%f139, %f138, 0f41C00000;
	add.f32 	%f140, %f139, %f139;
	mov.b32 	%r267, %f140;
	and.b32  	%r268, %r267, -2147483648;
	or.b32  	%r269, %r268, 1056964608;
	mov.b32 	%f141, %r269;
	add.f32 	%f142, %f140, %f141;
	cvt.rzi.f32.f32 	%f143, %f142;
	abs.f32 	%f144, %f140;
	setp.gt.f32 	%p30, %f144, 0f4B000000;
	selp.f32 	%f145, %f140, %f143, %p30;
	cvt.rzi.f32.f32 	%f146, %f140;
	setp.lt.f32 	%p31, %f144, 0f3F000000;
	selp.f32 	%f147, %f146, %f145, %p31;
	cvt.rzi.s32.f32 	%r270, %f147;
	fma.rn.f32 	%f148, %f147, 0fBF000000, %f139;
	mul.f32 	%f149, %f148, 0f34222169;
	fma.rn.f32 	%f150, %f148, 0f40490FDA, %f149;
	mul.f32 	%f151, %f150, %f150;
	fma.rn.f32 	%f152, %f151, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f153, %f152, %f151, 0f3D2AAABB;
	fma.rn.f32 	%f154, %f153, %f151, 0fBEFFFFFF;
	fma.rn.f32 	%f155, %f154, %f151, 0f3F800000;
	fma.rn.f32 	%f156, %f151, %f150, 0f00000000;
	fma.rn.f32 	%f157, %f151, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f158, %f157, %f151, 0fBE2AAAA8;
	fma.rn.f32 	%f159, %f158, %f156, %f150;
	and.b32  	%r271, %r270, 1;
	setp.eq.b32 	%p32, %r271, 1;
	selp.f32 	%f160, %f155, %f159, %p32;
	selp.f32 	%f161, %f159, %f155, %p32;
	and.b32  	%r272, %r270, 2;
	setp.eq.s32 	%p33, %r272, 0;
	neg.f32 	%f162, %f160;
	selp.f32 	%f163, %f160, %f162, %p33;
	add.s32 	%r273, %r270, 1;
	and.b32  	%r274, %r273, 2;
	setp.eq.s32 	%p34, %r274, 0;
	sub.f32 	%f164, %f27, %f161;
	selp.f32 	%f165, %f161, %f164, %p34;
	cvt.rzi.f32.f32 	%f166, %f139;
	setp.eq.f32 	%p35, %f166, %f139;
	mul.f32 	%f167, %f139, 0f00000000;
	selp.f32 	%f168, %f167, %f163, %p35;
	abs.f32 	%f169, %f139;
	setp.gt.f32 	%p36, %f169, 0f4B800000;
	add.f32 	%f170, %f168, 0f3F800000;
	selp.f32 	%f171, %f170, %f165, %p36;
	mov.b32 	%r212, %f137;
	mov.b32 	%r213, %f171;
	mov.b32 	%r218, %f134;
	xor.b32  	%r215, %r218, -2147483648;
	mov.b32 	%r219, %f168;
	xor.b32  	%r216, %r219, -2147483648;
	cvt.u16.u32 	%rs1, %r1;
	and.b16  	%rs2, %rs1, 255;
	mul.lo.s16 	%rs3, %rs2, 171;
	shr.u16 	%rs4, %rs3, 12;
	mul.lo.s16 	%rs5, %rs4, 24;
	sub.s16 	%rs6, %rs1, %rs5;
	cvt.u32.u16 	%r275, %rs6;
	and.b32  	%r16, %r275, 255;
	mad.lo.s32 	%r276, %r16, 24, %r2;
	and.b32  	%r277, %r276, 511;
	mul.wide.u32 	%rd20, %r277, 4;
	add.s64 	%rd21, %rd9, %rd20;
	setp.lt.u32 	%p37, %r1, 24;
	@%p37 bra 	LBB0_4;
// %bb.3:                               // %L11.L833_crit_edge
	cvt.u16.u32 	%rs19, %r2;
	and.b16  	%rs20, %rs19, 255;
	mul.lo.s16 	%rs21, %rs20, 171;
	shr.u16 	%rs22, %rs21, 10;
	mul.lo.s16 	%rs23, %rs22, -6;
	add.s16 	%rs24, %rs23, %rs19;
	cvt.u32.u16 	%r293, %rs24;
	and.b32  	%r2445, %r293, 255;
	cvt.u16.u32 	%rs25, %r6;
	mul.lo.s16 	%rs26, %rs25, 171;
	shr.u16 	%rs27, %rs26, 10;
	mul.lo.s16 	%rs28, %rs27, 6;
	sub.s16 	%rs29, %rs25, %rs28;
	cvt.u32.u16 	%r294, %rs29;
	and.b32  	%r2444, %r294, 255;
	cvt.u32.u16 	%r2443, %rs22;
	mul.wide.u16 	%r2442, %rs22, 6;
	mov.u32 	%r2446, 0;
	mov.u32 	%r2447, %r2446;
	bra.uni 	LBB0_5;
LBB0_4:                                 // %L513
	ld.param.u64 	%rd2, [_Z14julia_frb_548713CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_3];
	mul.lo.s32 	%r278, %r5, 144;
	mad.lo.s32 	%r279, %r4, 576, %r278;
	cvt.u16.u32 	%rs7, %r2;
	and.b16  	%rs8, %rs7, 255;
	mul.lo.s16 	%rs9, %rs8, 171;
	shr.u16 	%rs10, %rs9, 10;
	mul.lo.s16 	%rs11, %rs10, -6;
	add.s16 	%rs12, %rs11, %rs7;
	cvt.u32.u16 	%r281, %rs12;
	and.b32  	%r2445, %r281, 255;
	or.b32  	%r282, %r279, %r2445;
	cvt.u32.u16 	%r2443, %rs10;
	mul.wide.u16 	%r2442, %rs10, 6;
	add.s32 	%r283, %r282, %r2442;
	cvt.u16.u32 	%rs13, %r6;
	mul.lo.s16 	%rs14, %rs13, 171;
	shr.u16 	%rs15, %rs14, 10;
	mul.lo.s16 	%rs16, %rs15, 6;
	sub.s16 	%rs17, %rs13, %rs16;
	cvt.u32.u16 	%r284, %rs17;
	and.b32  	%r2444, %r284, 255;
	and.b16  	%rs18, %rs17, 255;
	mul.wide.u16 	%r285, %rs18, 24;
	add.s32 	%r286, %r283, %r285;
	mul.wide.u32 	%rd22, %r286, 4;
	add.s64 	%rd23, %rd2, %rd22;
	ld.global.u32 	%r2446, [%rd23];
	add.s32 	%r287, %r279, 147456;
	or.b32  	%r288, %r287, %r2445;
	add.s32 	%r289, %r288, %r2442;
	add.s32 	%r290, %r289, %r285;
	mul.wide.u32 	%rd24, %r290, 4;
	add.s64 	%rd25, %rd2, %rd24;
	ld.global.u32 	%r2447, [%rd25];
LBB0_5:                                 // %L833
	ld.param.u64 	%rd1, [_Z14julia_frb_548713CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_1];
	ld.param.u64 	%rd3, [_Z14julia_frb_548713CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_4];
	// begin inline asm
	cvt.rn.f16x2.f32 %r199, %r201, %r200;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r202, %r204, %r201;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r205, %r207, %r206;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r208, %r210, %r209;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r211, %r213, %r212;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r214, %r216, %r215;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r217, %r219, %r218;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r220, %r213, %r212;
	// end inline asm
	ld.global.u32 	%r17, [%rd21];
	mov.u32 	%r2441, 0;
	shl.b32 	%r296, %r1, 2;
	shl.b32 	%r297, %r1, 11;
	or.b32  	%r298, %r297, %r296;
	and.b32  	%r299, %r297, 32768;
	and.b32  	%r300, %r298, 32828;
	shl.b32 	%r301, %r4, 7;
	or.b32  	%r34, %r300, %r301;
	or.b32  	%r302, %r299, %r296;
	or.b32  	%r303, %r301, %r302;
	or.b32  	%r35, %r303, 65;
	shr.u32 	%r36, %r1, 4;
	and.b32  	%r304, %r9, 30;
	or.b32  	%r305, %r304, %r36;
	mul.lo.s32 	%r37, %r305, 257;
	or.b32  	%r306, %r36, %r9;
	or.b32  	%r307, %r306, 32;
	mul.lo.s32 	%r38, %r307, 257;
	and.b32  	%r308, %r3, 224;
	add.s32 	%r311, %r2, 504;
	bfe.u32 	%r312, %r311, 3, 6;
	mad.lo.s32 	%r40, %r312, 257, %r308;
	mul.lo.s32 	%r41, %r2445, 33;
	mul.lo.s32 	%r42, %r5, 4806;
	mul.lo.s32 	%r43, %r2444, 801;
	mul.lo.s32 	%r44, %r2443, 198;
	bfe.u32 	%r313, %r1, 1, 1;
	mul.lo.s32 	%r314, %r313, 2056;
	mul.lo.s32 	%r315, %r36, 257;
	add.s32 	%r316, %r315, %r314;
	bfe.u32 	%r317, %r1, 3, 1;
	mul.lo.s32 	%r318, %r317, 514;
	add.s32 	%r319, %r316, %r318;
	add.s32 	%r320, %r319, %r2445;
	and.b32  	%r321, %r1, 1;
	mul.lo.s32 	%r322, %r321, 4112;
	add.s32 	%r323, %r320, %r322;
	and.b32  	%r324, %r6, 1;
	mul.lo.s32 	%r325, %r324, 1028;
	add.s32 	%r326, %r323, %r325;
	add.s32 	%r45, %r326, %r2442;
	mul.wide.u32 	%rd26, %r45, 4;
	mov.u64 	%rd27, shmem;
	add.s64 	%rd5, %rd27, %rd26;
	cvt.u64.u32 	%rd28, %r2442;
	cvt.u64.u32 	%rd29, %r325;
	cvt.u64.u32 	%rd30, %r322;
	cvt.u64.u32 	%rd31, %r2445;
	cvt.u64.u32 	%rd32, %r318;
	cvt.u64.u32 	%rd33, %r315;
	cvt.u64.u32 	%rd34, %r314;
	add.s64 	%rd35, %rd34, %rd33;
	add.s64 	%rd36, %rd35, %rd32;
	add.s64 	%rd37, %rd36, %rd31;
	add.s64 	%rd38, %rd37, %rd30;
	add.s64 	%rd39, %rd38, %rd29;
	add.s64 	%rd40, %rd39, %rd28;
	shl.b64 	%rd41, %rd40, 2;
	add.s64 	%rd6, %rd27, %rd41;
	bfe.u32 	%r327, %r2, 1, 1;
	mul.lo.s32 	%r46, %r327, 2056;
	shr.u32 	%r328, %r2, 4;
	mul.lo.s32 	%r47, %r328, 257;
	bfe.u32 	%r329, %r2, 3, 1;
	mul.lo.s32 	%r48, %r329, 514;
	and.b32  	%r330, %r2, 1;
	mul.lo.s32 	%r49, %r330, 4112;
	bfe.u32 	%r331, %r2, 2, 1;
	mul.lo.s32 	%r50, %r331, 1028;
	mul.lo.s32 	%r51, %r4, 1152;
	cvt.u16.u32 	%rs30, %r2;
	shl.b16 	%rs31, %rs30, 1;
	and.b16  	%rs32, %rs31, 254;
	mul.lo.s16 	%rs33, %rs32, 171;
	shr.u16 	%rs34, %rs33, 13;
	mul.lo.s16 	%rs35, %rs34, 48;
	sub.s16 	%rs36, %rs31, %rs35;
	and.b16  	%rs37, %rs36, 254;
	mul.wide.u16 	%r52, %rs37, 24;
	or.b16  	%rs38, %rs31, 1;
	and.b16  	%rs39, %rs38, 255;
	mul.lo.s16 	%rs40, %rs39, 171;
	shr.u16 	%rs41, %rs40, 13;
	mul.lo.s16 	%rs42, %rs41, 48;
	sub.s16 	%rs43, %rs38, %rs42;
	and.b16  	%rs44, %rs43, 255;
	mul.wide.u16 	%r53, %rs44, 24;
	cvt.u64.u32 	%rd42, %r44;
	cvt.u64.u32 	%rd43, %r43;
	cvt.u64.u32 	%rd44, %r41;
	cvt.u64.u32 	%rd45, %r42;
	add.s64 	%rd46, %rd45, %rd44;
	add.s64 	%rd47, %rd46, %rd43;
	add.s64 	%rd48, %rd47, %rd42;
	shl.b64 	%rd49, %rd48, 2;
	add.s64 	%rd7, %rd27, %rd49;
	setp.eq.s32 	%p38, %r36, 1;
	mov.u32 	%r2448, %r2441;
	mov.u32 	%r2486, %r2441;
	mov.u32 	%r2487, %r2441;
	mov.u32 	%r2488, %r2441;
	mov.u32 	%r2489, %r2441;
	mov.u32 	%r2490, %r2441;
	mov.u32 	%r2491, %r2441;
	bra.uni 	LBB0_6;
LBB0_16:                                // %L57642
                                        //   in Loop: Header=BB0_6 Depth=1
	add.s32 	%r169, %r2448, 48;
	setp.ne.s32 	%p57, %r2448, 2016;
	mov.u32 	%r2448, %r169;
	@%p57 bra 	LBB0_6;
	bra.uni 	LBB0_17;
LBB0_6:                                 // %L836
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_8 Depth 2
                                        //       Child Loop BB0_9 Depth 3
	mul.hi.u32 	%r525, %r2448, -1431655765;
	shr.u32 	%r526, %r525, 5;
	mul.lo.s32 	%r61, %r526, 48;
	add.s32 	%r527, %r2, %r61;
	cvt.u16.u32 	%rs45, %r527;
	mul.hi.s16 	%rs46, %rs45, 16257;
	shr.u16 	%rs47, %rs46, 15;
	shr.s16 	%rs48, %rs46, 9;
	add.s16 	%rs49, %rs48, %rs47;
	mul.lo.s16 	%rs50, %rs49, 2064;
	sub.s16 	%rs51, %rs45, %rs50;
	cvt.u32.u16 	%r528, %rs51;
	shl.b32 	%r529, %r528, 16;
	or.b32  	%r530, %r34, %r529;
	mul.wide.s32 	%rd50, %r530, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.global.v4.u32 	{%r531, %r532, %r533, %r534}, [%rd51];
	or.b32  	%r535, %r35, %r529;
	add.s32 	%r536, %r535, -1;
	mul.wide.s32 	%rd52, %r536, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.global.v4.u32 	{%r537, %r538, %r539, %r540}, [%rd53];
	add.s16 	%rs52, %rs45, 24;
	mul.hi.s16 	%rs53, %rs52, 16257;
	shr.u16 	%rs54, %rs53, 15;
	shr.s16 	%rs55, %rs53, 9;
	add.s16 	%rs56, %rs55, %rs54;
	mul.lo.s16 	%rs57, %rs56, 2064;
	sub.s16 	%rs58, %rs52, %rs57;
	cvt.u32.u16 	%r541, %rs58;
	shl.b32 	%r542, %r541, 16;
	or.b32  	%r543, %r34, %r542;
	mul.wide.s32 	%rd54, %r543, 4;
	add.s64 	%rd55, %rd1, %rd54;
	ld.global.v4.u32 	{%r544, %r545, %r546, %r547}, [%rd55];
	or.b32  	%r548, %r35, %r542;
	add.s32 	%r549, %r548, -1;
	mul.wide.s32 	%rd56, %r549, 4;
	add.s64 	%rd57, %rd1, %rd56;
	ld.global.v4.u32 	{%r550, %r551, %r552, %r553}, [%rd57];
	selp.b32 	%r554, %r531, %r533, %p38;
	shfl.sync.bfly.b32	%r555, %r554, 16, 31, -1;
	selp.b32 	%r334, %r555, %r531, %p38;
	selp.b32 	%r339, %r533, %r555, %p38;
	selp.b32 	%r556, %r532, %r534, %p38;
	shfl.sync.bfly.b32	%r557, %r556, 16, 31, -1;
	selp.b32 	%r342, %r557, %r532, %p38;
	selp.b32 	%r347, %r534, %r557, %p38;
	selp.b32 	%r558, %r537, %r539, %p38;
	shfl.sync.bfly.b32	%r559, %r558, 16, 31, -1;
	selp.b32 	%r350, %r559, %r537, %p38;
	selp.b32 	%r355, %r539, %r559, %p38;
	selp.b32 	%r560, %r538, %r540, %p38;
	shfl.sync.bfly.b32	%r561, %r560, 16, 31, -1;
	selp.b32 	%r358, %r561, %r538, %p38;
	selp.b32 	%r363, %r540, %r561, %p38;
	selp.b32 	%r562, %r544, %r546, %p38;
	shfl.sync.bfly.b32	%r563, %r562, 16, 31, -1;
	selp.b32 	%r366, %r563, %r544, %p38;
	selp.b32 	%r371, %r546, %r563, %p38;
	selp.b32 	%r564, %r545, %r547, %p38;
	shfl.sync.bfly.b32	%r565, %r564, 16, 31, -1;
	selp.b32 	%r374, %r565, %r545, %p38;
	selp.b32 	%r379, %r547, %r565, %p38;
	selp.b32 	%r566, %r550, %r552, %p38;
	shfl.sync.bfly.b32	%r567, %r566, 16, 31, -1;
	selp.b32 	%r382, %r567, %r550, %p38;
	selp.b32 	%r387, %r552, %r567, %p38;
	selp.b32 	%r568, %r551, %r553, %p38;
	shfl.sync.bfly.b32	%r569, %r568, 16, 31, -1;
	selp.b32 	%r390, %r569, %r551, %p38;
	selp.b32 	%r395, %r553, %r569, %p38;
	shl.b32 	%r335, %r339, 4;
	mov.u32 	%r333, 252645135;
	// begin inline asm
	lop3.b32 %r397, %r333, %r334, %r335, 202;
	// end inline asm
	shr.u32 	%r338, %r334, 4;
	// begin inline asm
	lop3.b32 %r413, %r333, %r338, %r339, 202;
	// end inline asm
	shl.b32 	%r343, %r347, 4;
	// begin inline asm
	lop3.b32 %r405, %r333, %r342, %r343, 202;
	// end inline asm
	shr.u32 	%r346, %r342, 4;
	// begin inline asm
	lop3.b32 %r421, %r333, %r346, %r347, 202;
	// end inline asm
	shl.b32 	%r351, %r355, 4;
	// begin inline asm
	lop3.b32 %r429, %r333, %r350, %r351, 202;
	// end inline asm
	shr.u32 	%r354, %r350, 4;
	// begin inline asm
	lop3.b32 %r445, %r333, %r354, %r355, 202;
	// end inline asm
	shl.b32 	%r359, %r363, 4;
	// begin inline asm
	lop3.b32 %r437, %r333, %r358, %r359, 202;
	// end inline asm
	shr.u32 	%r362, %r358, 4;
	// begin inline asm
	lop3.b32 %r453, %r333, %r362, %r363, 202;
	// end inline asm
	shl.b32 	%r367, %r371, 4;
	// begin inline asm
	lop3.b32 %r398, %r333, %r366, %r367, 202;
	// end inline asm
	shr.u32 	%r370, %r366, 4;
	// begin inline asm
	lop3.b32 %r414, %r333, %r370, %r371, 202;
	// end inline asm
	shl.b32 	%r375, %r379, 4;
	// begin inline asm
	lop3.b32 %r406, %r333, %r374, %r375, 202;
	// end inline asm
	shr.u32 	%r378, %r374, 4;
	// begin inline asm
	lop3.b32 %r422, %r333, %r378, %r379, 202;
	// end inline asm
	shl.b32 	%r383, %r387, 4;
	// begin inline asm
	lop3.b32 %r430, %r333, %r382, %r383, 202;
	// end inline asm
	shr.u32 	%r386, %r382, 4;
	// begin inline asm
	lop3.b32 %r446, %r333, %r386, %r387, 202;
	// end inline asm
	shl.b32 	%r391, %r395, 4;
	// begin inline asm
	lop3.b32 %r438, %r333, %r390, %r391, 202;
	// end inline asm
	shr.u32 	%r394, %r390, 4;
	// begin inline asm
	lop3.b32 %r454, %r333, %r394, %r395, 202;
	// end inline asm
	mov.u32 	%r399, 25152;
	// begin inline asm
	prmt.b32 %r461, %r397, %r398, %r399;
	// end inline asm
	mov.u32 	%r403, 29521;
	// begin inline asm
	prmt.b32 %r493, %r397, %r398, %r403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r469, %r405, %r406, %r399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r501, %r405, %r406, %r403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r462, %r413, %r414, %r399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r494, %r413, %r414, %r403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r470, %r421, %r422, %r399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r502, %r421, %r422, %r403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r477, %r429, %r430, %r399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r509, %r429, %r430, %r403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r485, %r437, %r438, %r399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r517, %r437, %r438, %r403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r478, %r445, %r446, %r399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r510, %r445, %r446, %r403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r486, %r453, %r454, %r399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r518, %r453, %r454, %r403;
	// end inline asm
	mov.u32 	%r519, 21520;
	// begin inline asm
	prmt.b32 %r460, %r461, %r462, %r519;
	// end inline asm
	mov.u32 	%r523, 30258;
	// begin inline asm
	prmt.b32 %r464, %r461, %r462, %r523;
	// end inline asm
	// begin inline asm
	prmt.b32 %r468, %r469, %r470, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r472, %r469, %r470, %r523;
	// end inline asm
	// begin inline asm
	prmt.b32 %r476, %r477, %r478, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r480, %r477, %r478, %r523;
	// end inline asm
	// begin inline asm
	prmt.b32 %r484, %r485, %r486, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r488, %r485, %r486, %r523;
	// end inline asm
	// begin inline asm
	prmt.b32 %r492, %r493, %r494, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r496, %r493, %r494, %r523;
	// end inline asm
	// begin inline asm
	prmt.b32 %r500, %r501, %r502, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r504, %r501, %r502, %r523;
	// end inline asm
	// begin inline asm
	prmt.b32 %r508, %r509, %r510, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r512, %r509, %r510, %r523;
	// end inline asm
	// begin inline asm
	prmt.b32 %r516, %r517, %r518, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r520, %r517, %r518, %r523;
	// end inline asm
	mul.hi.s16 	%rs59, %rs45, 10923;
	shr.u16 	%rs60, %rs59, 15;
	shr.s16 	%rs61, %rs59, 2;
	add.s16 	%rs62, %rs61, %rs60;
	mul.lo.s16 	%rs63, %rs62, 24;
	sub.s16 	%rs64, %rs45, %rs63;
	cvt.s32.s16 	%r570, %rs64;
	add.s32 	%r571, %r37, %r570;
	mul.wide.s32 	%rd58, %r571, 4;
	add.s64 	%rd60, %rd27, %rd58;
	st.shared.u32 	[%rd60], %r460;
	st.shared.u32 	[%rd60+512], %r468;
	st.shared.u32 	[%rd60+256], %r464;
	st.shared.u32 	[%rd60+768], %r472;
	add.s32 	%r572, %r38, %r570;
	mul.wide.s32 	%rd61, %r572, 4;
	add.s64 	%rd62, %rd27, %rd61;
	st.shared.u32 	[%rd62], %r476;
	st.shared.u32 	[%rd62+512], %r484;
	st.shared.u32 	[%rd62+256], %r480;
	st.shared.u32 	[%rd62+768], %r488;
	st.shared.u32 	[%rd60+128], %r492;
	st.shared.u32 	[%rd60+640], %r500;
	st.shared.u32 	[%rd60+384], %r496;
	st.shared.u32 	[%rd60+896], %r504;
	st.shared.u32 	[%rd62+128], %r508;
	st.shared.u32 	[%rd62+640], %r516;
	st.shared.u32 	[%rd62+384], %r512;
	st.shared.u32 	[%rd62+896], %r520;
	bar.sync 	0;
	add.s32 	%r573, %r61, %r16;
	cvt.u16.u32 	%rs65, %r573;
	mul.hi.s16 	%rs66, %rs65, 10923;
	shr.u16 	%rs67, %rs66, 15;
	shr.s16 	%rs68, %rs66, 2;
	add.s16 	%rs69, %rs68, %rs67;
	mul.lo.s16 	%rs70, %rs69, 24;
	sub.s16 	%rs71, %rs65, %rs70;
	cvt.s32.s16 	%r574, %rs71;
	add.s32 	%r575, %r40, %r574;
	mul.wide.s32 	%rd63, %r575, 4;
	add.s64 	%rd64, %rd27, %rd63;
	ld.shared.u32 	%r576, [%rd64];
	bar.sync 	0;
	shfl.sync.idx.b32	%r577, %r17, 0, 31, -1;
	shfl.sync.idx.b32	%r578, %r17, 1, 31, -1;
	shfl.sync.idx.b32	%r579, %r17, 2, 31, -1;
	shfl.sync.idx.b32	%r580, %r17, 3, 31, -1;
	shfl.sync.idx.b32	%r581, %r17, 4, 31, -1;
	shfl.sync.idx.b32	%r582, %r17, 5, 31, -1;
	shfl.sync.idx.b32	%r583, %r17, 6, 31, -1;
	shfl.sync.idx.b32	%r584, %r17, 7, 31, -1;
	shfl.sync.idx.b32	%r585, %r17, 8, 31, -1;
	shfl.sync.idx.b32	%r586, %r17, 9, 31, -1;
	shfl.sync.idx.b32	%r587, %r17, 10, 31, -1;
	shfl.sync.idx.b32	%r588, %r17, 11, 31, -1;
	shfl.sync.idx.b32	%r589, %r17, 12, 31, -1;
	shfl.sync.idx.b32	%r590, %r17, 13, 31, -1;
	shfl.sync.idx.b32	%r591, %r17, 14, 31, -1;
	shfl.sync.idx.b32	%r592, %r17, 15, 31, -1;
	shfl.sync.idx.b32	%r593, %r17, 16, 31, -1;
	shfl.sync.idx.b32	%r594, %r17, 17, 31, -1;
	shfl.sync.idx.b32	%r595, %r17, 18, 31, -1;
	shfl.sync.idx.b32	%r596, %r17, 19, 31, -1;
	shfl.sync.idx.b32	%r597, %r17, 20, 31, -1;
	shfl.sync.idx.b32	%r598, %r17, 21, 31, -1;
	shfl.sync.idx.b32	%r599, %r17, 22, 31, -1;
	shfl.sync.idx.b32	%r600, %r17, 23, 31, -1;
	add.s32 	%r601, %r577, %r574;
	mul.wide.s32 	%rd65, %r601, 4;
	add.s64 	%rd66, %rd27, %rd65;
	st.shared.u32 	[%rd66], %r576;
	add.s32 	%r602, %r578, %r574;
	mul.wide.s32 	%rd67, %r602, 4;
	add.s64 	%rd68, %rd27, %rd67;
	st.shared.u32 	[%rd68], %r576;
	add.s32 	%r603, %r579, %r574;
	mul.wide.s32 	%rd69, %r603, 4;
	add.s64 	%rd70, %rd27, %rd69;
	st.shared.u32 	[%rd70], %r576;
	add.s32 	%r604, %r580, %r574;
	mul.wide.s32 	%rd71, %r604, 4;
	add.s64 	%rd72, %rd27, %rd71;
	st.shared.u32 	[%rd72], %r576;
	add.s32 	%r605, %r581, %r574;
	mul.wide.s32 	%rd73, %r605, 4;
	add.s64 	%rd74, %rd27, %rd73;
	st.shared.u32 	[%rd74], %r576;
	add.s32 	%r606, %r582, %r574;
	mul.wide.s32 	%rd75, %r606, 4;
	add.s64 	%rd76, %rd27, %rd75;
	st.shared.u32 	[%rd76], %r576;
	add.s32 	%r607, %r583, %r574;
	mul.wide.s32 	%rd77, %r607, 4;
	add.s64 	%rd78, %rd27, %rd77;
	st.shared.u32 	[%rd78], %r576;
	add.s32 	%r608, %r584, %r574;
	mul.wide.s32 	%rd79, %r608, 4;
	add.s64 	%rd80, %rd27, %rd79;
	st.shared.u32 	[%rd80], %r576;
	add.s32 	%r609, %r585, %r574;
	mul.wide.s32 	%rd81, %r609, 4;
	add.s64 	%rd82, %rd27, %rd81;
	st.shared.u32 	[%rd82], %r576;
	add.s32 	%r610, %r586, %r574;
	mul.wide.s32 	%rd83, %r610, 4;
	add.s64 	%rd84, %rd27, %rd83;
	st.shared.u32 	[%rd84], %r576;
	add.s32 	%r611, %r587, %r574;
	mul.wide.s32 	%rd85, %r611, 4;
	add.s64 	%rd86, %rd27, %rd85;
	st.shared.u32 	[%rd86], %r576;
	add.s32 	%r612, %r588, %r574;
	mul.wide.s32 	%rd87, %r612, 4;
	add.s64 	%rd88, %rd27, %rd87;
	st.shared.u32 	[%rd88], %r576;
	add.s32 	%r613, %r589, %r574;
	mul.wide.s32 	%rd89, %r613, 4;
	add.s64 	%rd90, %rd27, %rd89;
	st.shared.u32 	[%rd90], %r576;
	add.s32 	%r614, %r590, %r574;
	mul.wide.s32 	%rd91, %r614, 4;
	add.s64 	%rd92, %rd27, %rd91;
	st.shared.u32 	[%rd92], %r576;
	add.s32 	%r615, %r591, %r574;
	mul.wide.s32 	%rd93, %r615, 4;
	add.s64 	%rd94, %rd27, %rd93;
	st.shared.u32 	[%rd94], %r576;
	add.s32 	%r616, %r592, %r574;
	mul.wide.s32 	%rd95, %r616, 4;
	add.s64 	%rd96, %rd27, %rd95;
	st.shared.u32 	[%rd96], %r576;
	add.s32 	%r617, %r593, %r574;
	mul.wide.s32 	%rd97, %r617, 4;
	add.s64 	%rd98, %rd27, %rd97;
	st.shared.u32 	[%rd98], %r576;
	add.s32 	%r618, %r594, %r574;
	mul.wide.s32 	%rd99, %r618, 4;
	add.s64 	%rd100, %rd27, %rd99;
	st.shared.u32 	[%rd100], %r576;
	add.s32 	%r619, %r595, %r574;
	mul.wide.s32 	%rd101, %r619, 4;
	add.s64 	%rd102, %rd27, %rd101;
	st.shared.u32 	[%rd102], %r576;
	add.s32 	%r620, %r596, %r574;
	mul.wide.s32 	%rd103, %r620, 4;
	add.s64 	%rd104, %rd27, %rd103;
	st.shared.u32 	[%rd104], %r576;
	add.s32 	%r621, %r597, %r574;
	mul.wide.s32 	%rd105, %r621, 4;
	add.s64 	%rd106, %rd27, %rd105;
	st.shared.u32 	[%rd106], %r576;
	add.s32 	%r622, %r598, %r574;
	mul.wide.s32 	%rd107, %r622, 4;
	add.s64 	%rd108, %rd27, %rd107;
	st.shared.u32 	[%rd108], %r576;
	add.s32 	%r623, %r599, %r574;
	mul.wide.s32 	%rd109, %r623, 4;
	add.s64 	%rd110, %rd27, %rd109;
	st.shared.u32 	[%rd110], %r2441;
	add.s32 	%r624, %r600, %r574;
	mul.wide.s32 	%rd111, %r624, 4;
	add.s64 	%rd112, %rd27, %rd111;
	st.shared.u32 	[%rd112], %r2441;
	bar.sync 	0;
	mov.u32 	%r2455, %r2441;
	mov.u32 	%r2456, %r2441;
	mov.u32 	%r2457, %r2441;
	mov.u32 	%r2458, %r2441;
	mov.u32 	%r2459, %r2441;
	mov.u32 	%r2460, %r2441;
	mov.u32 	%r2461, %r2441;
	mov.u32 	%r2462, %r2441;
	mov.u32 	%r2463, %r2441;
	mov.u32 	%r2464, %r2441;
	mov.u32 	%r2465, %r2441;
	mov.u32 	%r2466, %r2441;
	mov.u32 	%r2467, %r2441;
	mov.u32 	%r2468, %r2441;
	mov.u32 	%r2469, %r2441;
	mov.u32 	%r2470, %r2441;
	mov.u32 	%r2471, %r2441;
	mov.u32 	%r2472, %r2441;
	mov.u32 	%r2473, %r2441;
	mov.u32 	%r2474, %r2441;
	mov.u32 	%r2475, %r2441;
	mov.u32 	%r2476, %r2441;
	mov.u32 	%r2477, %r2441;
	mov.u32 	%r2478, %r2441;
	@%p37 bra 	LBB0_18;
	bra.uni 	LBB0_7;
LBB0_18:                                // %oksrem15862
                                        //   in Loop: Header=BB0_6 Depth=1
	cvt.u16.u32 	%rs72, %r61;
	mul.hi.s16 	%rs73, %rs72, 10923;
	shr.u16 	%rs74, %rs73, 15;
	shr.s16 	%rs75, %rs73, 2;
	add.s16 	%rs76, %rs75, %rs74;
	mul.lo.s16 	%rs77, %rs76, 24;
	sub.s16 	%rs78, %rs72, %rs77;
	cvt.s32.s16 	%r625, %rs78;
	add.s32 	%r626, %r42, %r625;
	add.s32 	%r627, %r626, %r41;
	add.s32 	%r628, %r627, %r43;
	add.s32 	%r629, %r628, %r44;
	mul.wide.s32 	%rd113, %r629, 4;
	add.s64 	%rd115, %rd27, %rd113;
	ld.shared.u32 	%r2455, [%rd115];
	ld.shared.u32 	%r2456, [%rd7+4];
	ld.shared.u32 	%r2457, [%rd7+8];
	ld.shared.u32 	%r2458, [%rd7+12];
	ld.shared.u32 	%r2459, [%rd7+16];
	ld.shared.u32 	%r2460, [%rd7+20];
	ld.shared.u32 	%r2461, [%rd7+24];
	ld.shared.u32 	%r2462, [%rd7+28];
	ld.shared.u32 	%r2463, [%rd7+32];
	ld.shared.u32 	%r2464, [%rd7+36];
	ld.shared.u32 	%r2465, [%rd7+40];
	ld.shared.u32 	%r2466, [%rd7+44];
	ld.shared.u32 	%r2467, [%rd7+48];
	ld.shared.u32 	%r2468, [%rd7+52];
	ld.shared.u32 	%r2469, [%rd7+56];
	ld.shared.u32 	%r2470, [%rd7+60];
	add.s16 	%rs79, %rs72, 16;
	mul.hi.s16 	%rs80, %rs79, 10923;
	shr.u16 	%rs81, %rs80, 15;
	shr.s16 	%rs82, %rs80, 2;
	add.s16 	%rs83, %rs82, %rs81;
	mul.lo.s16 	%rs84, %rs83, 24;
	sub.s16 	%rs85, %rs79, %rs84;
	cvt.s32.s16 	%r630, %rs85;
	add.s32 	%r631, %r42, %r630;
	add.s32 	%r632, %r631, %r41;
	add.s32 	%r633, %r632, %r43;
	add.s32 	%r634, %r633, %r44;
	mul.wide.s32 	%rd116, %r634, 4;
	add.s64 	%rd117, %rd27, %rd116;
	ld.shared.u32 	%r2471, [%rd117];
	add.s16 	%rs86, %rs72, 17;
	mul.hi.s16 	%rs87, %rs86, 10923;
	shr.u16 	%rs88, %rs87, 15;
	shr.s16 	%rs89, %rs87, 2;
	add.s16 	%rs90, %rs89, %rs88;
	mul.lo.s16 	%rs91, %rs90, 24;
	sub.s16 	%rs92, %rs86, %rs91;
	cvt.s32.s16 	%r635, %rs92;
	add.s32 	%r636, %r42, %r635;
	add.s32 	%r637, %r636, %r41;
	add.s32 	%r638, %r637, %r43;
	add.s32 	%r639, %r638, %r44;
	mul.wide.s32 	%rd118, %r639, 4;
	add.s64 	%rd119, %rd27, %rd118;
	ld.shared.u32 	%r2472, [%rd119];
	add.s16 	%rs93, %rs72, 18;
	mul.hi.s16 	%rs94, %rs93, 10923;
	shr.u16 	%rs95, %rs94, 15;
	shr.s16 	%rs96, %rs94, 2;
	add.s16 	%rs97, %rs96, %rs95;
	mul.lo.s16 	%rs98, %rs97, 24;
	sub.s16 	%rs99, %rs93, %rs98;
	cvt.s32.s16 	%r640, %rs99;
	add.s32 	%r641, %r42, %r640;
	add.s32 	%r642, %r641, %r41;
	add.s32 	%r643, %r642, %r43;
	add.s32 	%r644, %r643, %r44;
	mul.wide.s32 	%rd120, %r644, 4;
	add.s64 	%rd121, %rd27, %rd120;
	ld.shared.u32 	%r2473, [%rd121];
	add.s16 	%rs100, %rs72, 19;
	mul.hi.s16 	%rs101, %rs100, 10923;
	shr.u16 	%rs102, %rs101, 15;
	shr.s16 	%rs103, %rs101, 2;
	add.s16 	%rs104, %rs103, %rs102;
	mul.lo.s16 	%rs105, %rs104, 24;
	sub.s16 	%rs106, %rs100, %rs105;
	cvt.s32.s16 	%r645, %rs106;
	add.s32 	%r646, %r42, %r645;
	add.s32 	%r647, %r646, %r41;
	add.s32 	%r648, %r647, %r43;
	add.s32 	%r649, %r648, %r44;
	mul.wide.s32 	%rd122, %r649, 4;
	add.s64 	%rd123, %rd27, %rd122;
	ld.shared.u32 	%r2474, [%rd123];
	add.s16 	%rs107, %rs72, 20;
	mul.hi.s16 	%rs108, %rs107, 10923;
	shr.u16 	%rs109, %rs108, 15;
	shr.s16 	%rs110, %rs108, 2;
	add.s16 	%rs111, %rs110, %rs109;
	mul.lo.s16 	%rs112, %rs111, 24;
	sub.s16 	%rs113, %rs107, %rs112;
	cvt.s32.s16 	%r650, %rs113;
	add.s32 	%r651, %r42, %r650;
	add.s32 	%r652, %r651, %r41;
	add.s32 	%r653, %r652, %r43;
	add.s32 	%r654, %r653, %r44;
	mul.wide.s32 	%rd124, %r654, 4;
	add.s64 	%rd125, %rd27, %rd124;
	ld.shared.u32 	%r2475, [%rd125];
	add.s16 	%rs114, %rs72, 21;
	mul.hi.s16 	%rs115, %rs114, 10923;
	shr.u16 	%rs116, %rs115, 15;
	shr.s16 	%rs117, %rs115, 2;
	add.s16 	%rs118, %rs117, %rs116;
	mul.lo.s16 	%rs119, %rs118, 24;
	sub.s16 	%rs120, %rs114, %rs119;
	cvt.s32.s16 	%r655, %rs120;
	add.s32 	%r656, %r42, %r655;
	add.s32 	%r657, %r656, %r41;
	add.s32 	%r658, %r657, %r43;
	add.s32 	%r659, %r658, %r44;
	mul.wide.s32 	%rd126, %r659, 4;
	add.s64 	%rd127, %rd27, %rd126;
	ld.shared.u32 	%r2476, [%rd127];
	add.s16 	%rs121, %rs72, 22;
	mul.hi.s16 	%rs122, %rs121, 10923;
	shr.u16 	%rs123, %rs122, 15;
	shr.s16 	%rs124, %rs122, 2;
	add.s16 	%rs125, %rs124, %rs123;
	mul.lo.s16 	%rs126, %rs125, 24;
	sub.s16 	%rs127, %rs121, %rs126;
	cvt.s32.s16 	%r660, %rs127;
	add.s32 	%r661, %r42, %r660;
	add.s32 	%r662, %r661, %r41;
	add.s32 	%r663, %r662, %r43;
	add.s32 	%r664, %r663, %r44;
	mul.wide.s32 	%rd128, %r664, 4;
	add.s64 	%rd129, %rd27, %rd128;
	ld.shared.u32 	%r2477, [%rd129];
	add.s16 	%rs128, %rs72, 23;
	mul.hi.s16 	%rs129, %rs128, 10923;
	shr.u16 	%rs130, %rs129, 15;
	shr.s16 	%rs131, %rs129, 2;
	add.s16 	%rs132, %rs131, %rs130;
	mul.lo.s16 	%rs133, %rs132, 24;
	sub.s16 	%rs134, %rs128, %rs133;
	cvt.s32.s16 	%r665, %rs134;
	add.s32 	%r666, %r42, %r665;
	add.s32 	%r667, %r666, %r41;
	add.s32 	%r668, %r667, %r43;
	add.s32 	%r669, %r668, %r44;
	mul.wide.s32 	%rd130, %r669, 4;
	add.s64 	%rd131, %rd27, %rd130;
	ld.shared.u32 	%r2478, [%rd131];
LBB0_7:                                 // %L48625
                                        //   in Loop: Header=BB0_6 Depth=1
	bar.sync 	0;
	xor.b32  	%r86, %r2455, -2004318072;
	shr.u32 	%r87, %r86, 8;
	xor.b32  	%r88, %r2456, -2004318072;
	shr.u32 	%r89, %r88, 8;
	xor.b32  	%r90, %r2457, -2004318072;
	shr.u32 	%r91, %r90, 8;
	xor.b32  	%r92, %r2458, -2004318072;
	shr.u32 	%r93, %r92, 8;
	xor.b32  	%r94, %r2459, -2004318072;
	shr.u32 	%r95, %r94, 8;
	xor.b32  	%r96, %r2460, -2004318072;
	shr.u32 	%r97, %r96, 8;
	xor.b32  	%r98, %r2461, -2004318072;
	shr.u32 	%r99, %r98, 8;
	xor.b32  	%r100, %r2462, -2004318072;
	shr.u32 	%r101, %r100, 8;
	xor.b32  	%r102, %r2463, -2004318072;
	shr.u32 	%r103, %r102, 8;
	xor.b32  	%r104, %r2464, -2004318072;
	shr.u32 	%r105, %r104, 8;
	xor.b32  	%r106, %r2465, -2004318072;
	shr.u32 	%r107, %r106, 8;
	xor.b32  	%r108, %r2466, -2004318072;
	shr.u32 	%r109, %r108, 8;
	xor.b32  	%r110, %r2467, -2004318072;
	shr.u32 	%r111, %r110, 8;
	xor.b32  	%r112, %r2468, -2004318072;
	shr.u32 	%r113, %r112, 8;
	xor.b32  	%r114, %r2469, -2004318072;
	shr.u32 	%r115, %r114, 8;
	xor.b32  	%r116, %r2470, -2004318072;
	shr.u32 	%r117, %r116, 8;
	xor.b32  	%r118, %r2471, -2004318072;
	shr.u32 	%r119, %r118, 8;
	xor.b32  	%r120, %r2472, -2004318072;
	shr.u32 	%r121, %r120, 8;
	xor.b32  	%r122, %r2473, -2004318072;
	shr.u32 	%r123, %r122, 8;
	xor.b32  	%r124, %r2474, -2004318072;
	shr.u32 	%r125, %r124, 8;
	xor.b32  	%r126, %r2475, -2004318072;
	shr.u32 	%r127, %r126, 8;
	xor.b32  	%r128, %r2476, -2004318072;
	shr.u32 	%r129, %r128, 8;
	xor.b32  	%r130, %r2477, -2004318072;
	shr.u32 	%r131, %r130, 8;
	xor.b32  	%r132, %r2478, -2004318072;
	shr.u32 	%r133, %r132, 8;
	add.s32 	%r134, %r61, 1;
	add.s32 	%r135, %r61, 2;
	add.s32 	%r136, %r61, 3;
	mov.u32 	%r2485, %r2441;
	bra.uni 	LBB0_8;
LBB0_15:                                // %L57622
                                        //   in Loop: Header=BB0_8 Depth=2
	setp.ne.s32 	%p56, %r2485, 44;
	bar.sync 	0;
	add.s32 	%r2485, %r2485, 4;
	@%p56 bra 	LBB0_8;
	bra.uni 	LBB0_16;
LBB0_8:                                 // %L48651
                                        //   Parent Loop BB0_6 Depth=1
                                        // =>  This Loop Header: Depth=2
                                        //       Child Loop BB0_9 Depth 3
	mov.u16 	%rs135, 25600;
	// begin inline asm
	mov.b32 %r676, {%rs135, %rs135};
	// end inline asm
	mov.u16 	%rs137, 21504;
	// begin inline asm
	mov.b32 %r687, {%rs137, %rs137};
	// end inline asm
	mov.u32 	%r674, 983055;
	// begin inline asm
	lop3.b32 %r682, %r674, %r86, %r676, 202;
	// end inline asm
	mov.u16 	%rs139, 18432;
	// begin inline asm
	mov.b32 %r680, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r683, %r676, %r680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r681, %r682, %r683;
	// end inline asm
	mov.u32 	%r685, 15728880;
	// begin inline asm
	lop3.b32 %r693, %r685, %r86, %r687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r691, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r694, %r687, %r691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r692, %r693, %r694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r704, %r674, %r87, %r676, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r702, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r705, %r676, %r702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r703, %r704, %r705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r715, %r685, %r87, %r687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r713, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r716, %r687, %r713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r714, %r715, %r716;
	// end inline asm
	// begin inline asm
	mov.b32 %r722, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r733, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r728, %r674, %r88, %r722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r726, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r729, %r722, %r726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r727, %r728, %r729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r739, %r685, %r88, %r733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r737, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r740, %r733, %r737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r738, %r739, %r740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r750, %r674, %r89, %r722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r748, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r751, %r722, %r748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r749, %r750, %r751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r761, %r685, %r89, %r733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r759, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r762, %r733, %r759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r760, %r761, %r762;
	// end inline asm
	// begin inline asm
	mov.b32 %r768, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r779, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r774, %r674, %r90, %r768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r772, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r775, %r768, %r772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r773, %r774, %r775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r785, %r685, %r90, %r779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r783, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r786, %r779, %r783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r784, %r785, %r786;
	// end inline asm
	// begin inline asm
	lop3.b32 %r796, %r674, %r91, %r768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r794, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r797, %r768, %r794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r795, %r796, %r797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r807, %r685, %r91, %r779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r805, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r808, %r779, %r805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r806, %r807, %r808;
	// end inline asm
	// begin inline asm
	mov.b32 %r814, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r825, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r820, %r674, %r92, %r814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r818, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r821, %r814, %r818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r819, %r820, %r821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r831, %r685, %r92, %r825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r829, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r832, %r825, %r829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r830, %r831, %r832;
	// end inline asm
	// begin inline asm
	lop3.b32 %r842, %r674, %r93, %r814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r840, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r843, %r814, %r840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r841, %r842, %r843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r853, %r685, %r93, %r825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r851, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r854, %r825, %r851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r852, %r853, %r854;
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r871, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r866, %r674, %r94, %r860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r864, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r867, %r860, %r864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r865, %r866, %r867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r877, %r685, %r94, %r871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r875, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r878, %r871, %r875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r876, %r877, %r878;
	// end inline asm
	// begin inline asm
	lop3.b32 %r888, %r674, %r95, %r860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r886, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r889, %r860, %r886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r887, %r888, %r889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r899, %r685, %r95, %r871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r897, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r900, %r871, %r897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r898, %r899, %r900;
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r917, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r912, %r674, %r96, %r906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r913, %r906, %r910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r911, %r912, %r913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r923, %r685, %r96, %r917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r921, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r924, %r917, %r921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r922, %r923, %r924;
	// end inline asm
	// begin inline asm
	lop3.b32 %r934, %r674, %r97, %r906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r932, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r935, %r906, %r932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r933, %r934, %r935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r945, %r685, %r97, %r917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r943, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r946, %r917, %r943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r944, %r945, %r946;
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r963, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r958, %r674, %r98, %r952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r959, %r952, %r956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r957, %r958, %r959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r969, %r685, %r98, %r963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r967, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r970, %r963, %r967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r968, %r969, %r970;
	// end inline asm
	// begin inline asm
	lop3.b32 %r980, %r674, %r99, %r952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r978, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r981, %r952, %r978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r979, %r980, %r981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r991, %r685, %r99, %r963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r989, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r992, %r963, %r989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r990, %r991, %r992;
	// end inline asm
	// begin inline asm
	mov.b32 %r998, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r1009, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1004, %r674, %r100, %r998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1002, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1005, %r998, %r1002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1003, %r1004, %r1005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1015, %r685, %r100, %r1009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1013, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1016, %r1009, %r1013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1014, %r1015, %r1016;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1026, %r674, %r101, %r998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1024, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1027, %r998, %r1024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1025, %r1026, %r1027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1037, %r685, %r101, %r1009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1035, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1038, %r1009, %r1035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1036, %r1037, %r1038;
	// end inline asm
	// begin inline asm
	mov.b32 %r1044, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r1055, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1050, %r674, %r102, %r1044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1048, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1051, %r1044, %r1048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1049, %r1050, %r1051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1061, %r685, %r102, %r1055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1059, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1062, %r1055, %r1059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1060, %r1061, %r1062;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1072, %r674, %r103, %r1044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1070, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1073, %r1044, %r1070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1071, %r1072, %r1073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1083, %r685, %r103, %r1055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1081, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1084, %r1055, %r1081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1082, %r1083, %r1084;
	// end inline asm
	// begin inline asm
	mov.b32 %r1090, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r1101, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1096, %r674, %r104, %r1090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1094, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1097, %r1090, %r1094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1095, %r1096, %r1097;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1107, %r685, %r104, %r1101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1105, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1108, %r1101, %r1105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1106, %r1107, %r1108;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1118, %r674, %r105, %r1090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1116, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1119, %r1090, %r1116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1117, %r1118, %r1119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1129, %r685, %r105, %r1101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1127, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1130, %r1101, %r1127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1128, %r1129, %r1130;
	// end inline asm
	// begin inline asm
	mov.b32 %r1136, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r1147, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1142, %r674, %r106, %r1136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1140, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1143, %r1136, %r1140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1141, %r1142, %r1143;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1153, %r685, %r106, %r1147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1151, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1154, %r1147, %r1151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1152, %r1153, %r1154;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1164, %r674, %r107, %r1136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1162, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1165, %r1136, %r1162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1163, %r1164, %r1165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1175, %r685, %r107, %r1147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1173, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1176, %r1147, %r1173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1174, %r1175, %r1176;
	// end inline asm
	// begin inline asm
	mov.b32 %r1182, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r1193, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1188, %r674, %r108, %r1182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1186, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1189, %r1182, %r1186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1187, %r1188, %r1189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1199, %r685, %r108, %r1193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1197, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1200, %r1193, %r1197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1198, %r1199, %r1200;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1210, %r674, %r109, %r1182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1208, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1211, %r1182, %r1208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1209, %r1210, %r1211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1221, %r685, %r109, %r1193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1219, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1222, %r1193, %r1219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1220, %r1221, %r1222;
	// end inline asm
	// begin inline asm
	mov.b32 %r1228, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r1239, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1234, %r674, %r110, %r1228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1232, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1235, %r1228, %r1232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1233, %r1234, %r1235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1245, %r685, %r110, %r1239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1243, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1246, %r1239, %r1243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1244, %r1245, %r1246;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1256, %r674, %r111, %r1228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1254, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1257, %r1228, %r1254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1255, %r1256, %r1257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1267, %r685, %r111, %r1239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1265, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1268, %r1239, %r1265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1266, %r1267, %r1268;
	// end inline asm
	// begin inline asm
	mov.b32 %r1274, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r1285, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1280, %r674, %r112, %r1274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1278, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1281, %r1274, %r1278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1279, %r1280, %r1281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1291, %r685, %r112, %r1285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1289, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1292, %r1285, %r1289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1290, %r1291, %r1292;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1302, %r674, %r113, %r1274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1300, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1303, %r1274, %r1300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1301, %r1302, %r1303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1313, %r685, %r113, %r1285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1311, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1314, %r1285, %r1311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1312, %r1313, %r1314;
	// end inline asm
	// begin inline asm
	mov.b32 %r1320, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r1331, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1326, %r674, %r114, %r1320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1324, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1327, %r1320, %r1324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1325, %r1326, %r1327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1337, %r685, %r114, %r1331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1335, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1338, %r1331, %r1335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1336, %r1337, %r1338;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1348, %r674, %r115, %r1320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1346, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1349, %r1320, %r1346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1347, %r1348, %r1349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1359, %r685, %r115, %r1331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1357, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1360, %r1331, %r1357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1358, %r1359, %r1360;
	// end inline asm
	// begin inline asm
	mov.b32 %r1366, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r1377, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1372, %r674, %r116, %r1366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1370, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1373, %r1366, %r1370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1371, %r1372, %r1373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1383, %r685, %r116, %r1377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1381, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1384, %r1377, %r1381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1382, %r1383, %r1384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1394, %r674, %r117, %r1366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1392, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1395, %r1366, %r1392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1393, %r1394, %r1395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1405, %r685, %r117, %r1377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1403, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1406, %r1377, %r1403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1404, %r1405, %r1406;
	// end inline asm
	// begin inline asm
	mov.b32 %r1412, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r1423, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1418, %r674, %r118, %r1412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1416, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1419, %r1412, %r1416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1417, %r1418, %r1419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1429, %r685, %r118, %r1423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1427, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1430, %r1423, %r1427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1428, %r1429, %r1430;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1440, %r674, %r119, %r1412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1441, %r1412, %r1438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1439, %r1440, %r1441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1451, %r685, %r119, %r1423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1449, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1452, %r1423, %r1449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1450, %r1451, %r1452;
	// end inline asm
	// begin inline asm
	mov.b32 %r1458, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r1469, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1464, %r674, %r120, %r1458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1462, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1465, %r1458, %r1462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1463, %r1464, %r1465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1475, %r685, %r120, %r1469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1473, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1476, %r1469, %r1473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1474, %r1475, %r1476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1486, %r674, %r121, %r1458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1484, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1487, %r1458, %r1484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1485, %r1486, %r1487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1497, %r685, %r121, %r1469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1495, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1498, %r1469, %r1495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1496, %r1497, %r1498;
	// end inline asm
	// begin inline asm
	mov.b32 %r1504, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r1515, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1510, %r674, %r122, %r1504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1508, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1511, %r1504, %r1508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1509, %r1510, %r1511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1521, %r685, %r122, %r1515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1519, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1522, %r1515, %r1519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1520, %r1521, %r1522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1532, %r674, %r123, %r1504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1530, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1533, %r1504, %r1530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1531, %r1532, %r1533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1543, %r685, %r123, %r1515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1541, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1544, %r1515, %r1541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1542, %r1543, %r1544;
	// end inline asm
	// begin inline asm
	mov.b32 %r1550, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r1561, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1556, %r674, %r124, %r1550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1554, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1557, %r1550, %r1554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1555, %r1556, %r1557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1567, %r685, %r124, %r1561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1565, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1568, %r1561, %r1565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1566, %r1567, %r1568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1578, %r674, %r125, %r1550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1576, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1579, %r1550, %r1576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1577, %r1578, %r1579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1589, %r685, %r125, %r1561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1587, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1590, %r1561, %r1587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1588, %r1589, %r1590;
	// end inline asm
	// begin inline asm
	mov.b32 %r1596, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r1607, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1602, %r674, %r126, %r1596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1600, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1603, %r1596, %r1600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1601, %r1602, %r1603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1613, %r685, %r126, %r1607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1611, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1614, %r1607, %r1611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1612, %r1613, %r1614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1624, %r674, %r127, %r1596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1622, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1625, %r1596, %r1622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1623, %r1624, %r1625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1635, %r685, %r127, %r1607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1633, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1636, %r1607, %r1633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1634, %r1635, %r1636;
	// end inline asm
	// begin inline asm
	mov.b32 %r1642, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r1653, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1648, %r674, %r128, %r1642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1646, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1649, %r1642, %r1646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1647, %r1648, %r1649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1659, %r685, %r128, %r1653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1657, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1660, %r1653, %r1657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1658, %r1659, %r1660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1670, %r674, %r129, %r1642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1668, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1671, %r1642, %r1668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1669, %r1670, %r1671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1681, %r685, %r129, %r1653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1679, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1682, %r1653, %r1679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1680, %r1681, %r1682;
	// end inline asm
	// begin inline asm
	mov.b32 %r1688, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r1699, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1694, %r674, %r130, %r1688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1692, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1695, %r1688, %r1692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1693, %r1694, %r1695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1705, %r685, %r130, %r1699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1703, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1706, %r1699, %r1703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1704, %r1705, %r1706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1716, %r674, %r131, %r1688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1714, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1717, %r1688, %r1714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1715, %r1716, %r1717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1727, %r685, %r131, %r1699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1725, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1728, %r1699, %r1725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1726, %r1727, %r1728;
	// end inline asm
	// begin inline asm
	mov.b32 %r1734, {%rs135, %rs135};
	// end inline asm
	// begin inline asm
	mov.b32 %r1745, {%rs137, %rs137};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1740, %r674, %r132, %r1734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1738, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1741, %r1734, %r1738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1739, %r1740, %r1741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1751, %r685, %r132, %r1745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1749, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1752, %r1745, %r1749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1750, %r1751, %r1752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1762, %r674, %r133, %r1734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1760, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1763, %r1734, %r1760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1761, %r1762, %r1763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1773, %r685, %r133, %r1745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1771, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1774, %r1745, %r1771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1772, %r1773, %r1774;
	// end inline asm
	setp.eq.s32 	%p40, %r2485, 0;
	selp.b32 	%r2128, %r681, 0, %p40;
	setp.eq.s32 	%p41, %r2485, 4;
	selp.b32 	%r2129, %r865, %r2128, %p41;
	setp.eq.s32 	%p42, %r2485, 8;
	selp.b32 	%r2130, %r1049, %r2129, %p42;
	setp.eq.s32 	%p43, %r2485, 12;
	selp.b32 	%r2131, %r1233, %r2130, %p43;
	setp.eq.s32 	%p44, %r2485, 16;
	selp.b32 	%r2132, %r1417, %r2131, %p44;
	setp.eq.s32 	%p45, %r2485, 20;
	selp.b32 	%r2133, %r1601, %r2132, %p45;
	setp.eq.s32 	%p46, %r2485, 24;
	selp.b32 	%r2134, %r703, %r2133, %p46;
	setp.eq.s32 	%p47, %r2485, 28;
	selp.b32 	%r2135, %r887, %r2134, %p47;
	setp.eq.s32 	%p48, %r2485, 32;
	selp.b32 	%r2136, %r1071, %r2135, %p48;
	setp.eq.s32 	%p49, %r2485, 36;
	selp.b32 	%r2137, %r1255, %r2136, %p49;
	setp.eq.s32 	%p50, %r2485, 40;
	selp.b32 	%r2138, %r1439, %r2137, %p50;
	setp.eq.s32 	%p51, %r2485, 44;
	selp.b32 	%r1777, %r1623, %r2138, %p51;
	selp.b32 	%r2139, %r692, 0, %p40;
	selp.b32 	%r2140, %r876, %r2139, %p41;
	selp.b32 	%r2141, %r1060, %r2140, %p42;
	selp.b32 	%r2142, %r1244, %r2141, %p43;
	selp.b32 	%r2143, %r1428, %r2142, %p44;
	selp.b32 	%r2144, %r1612, %r2143, %p45;
	selp.b32 	%r2145, %r714, %r2144, %p46;
	selp.b32 	%r2146, %r898, %r2145, %p47;
	selp.b32 	%r2147, %r1082, %r2146, %p48;
	selp.b32 	%r2148, %r1266, %r2147, %p49;
	selp.b32 	%r2149, %r1450, %r2148, %p50;
	selp.b32 	%r1780, %r1634, %r2149, %p51;
	selp.b32 	%r2150, %r727, 0, %p40;
	selp.b32 	%r2151, %r911, %r2150, %p41;
	selp.b32 	%r2152, %r1095, %r2151, %p42;
	selp.b32 	%r2153, %r1279, %r2152, %p43;
	selp.b32 	%r2154, %r1463, %r2153, %p44;
	selp.b32 	%r2155, %r1647, %r2154, %p45;
	selp.b32 	%r2156, %r749, %r2155, %p46;
	selp.b32 	%r2157, %r933, %r2156, %p47;
	selp.b32 	%r2158, %r1117, %r2157, %p48;
	selp.b32 	%r2159, %r1301, %r2158, %p49;
	selp.b32 	%r2160, %r1485, %r2159, %p50;
	selp.b32 	%r1783, %r1669, %r2160, %p51;
	selp.b32 	%r2161, %r738, 0, %p40;
	selp.b32 	%r2162, %r922, %r2161, %p41;
	selp.b32 	%r2163, %r1106, %r2162, %p42;
	selp.b32 	%r2164, %r1290, %r2163, %p43;
	selp.b32 	%r2165, %r1474, %r2164, %p44;
	selp.b32 	%r2166, %r1658, %r2165, %p45;
	selp.b32 	%r2167, %r760, %r2166, %p46;
	selp.b32 	%r2168, %r944, %r2167, %p47;
	selp.b32 	%r2169, %r1128, %r2168, %p48;
	selp.b32 	%r2170, %r1312, %r2169, %p49;
	selp.b32 	%r2171, %r1496, %r2170, %p50;
	selp.b32 	%r1786, %r1680, %r2171, %p51;
	selp.b32 	%r2172, %r773, 0, %p40;
	selp.b32 	%r2173, %r957, %r2172, %p41;
	selp.b32 	%r2174, %r1141, %r2173, %p42;
	selp.b32 	%r2175, %r1325, %r2174, %p43;
	selp.b32 	%r2176, %r1509, %r2175, %p44;
	selp.b32 	%r2177, %r1693, %r2176, %p45;
	selp.b32 	%r2178, %r795, %r2177, %p46;
	selp.b32 	%r2179, %r979, %r2178, %p47;
	selp.b32 	%r2180, %r1163, %r2179, %p48;
	selp.b32 	%r2181, %r1347, %r2180, %p49;
	selp.b32 	%r2182, %r1531, %r2181, %p50;
	selp.b32 	%r1789, %r1715, %r2182, %p51;
	selp.b32 	%r2183, %r784, 0, %p40;
	selp.b32 	%r2184, %r968, %r2183, %p41;
	selp.b32 	%r2185, %r1152, %r2184, %p42;
	selp.b32 	%r2186, %r1336, %r2185, %p43;
	selp.b32 	%r2187, %r1520, %r2186, %p44;
	selp.b32 	%r2188, %r1704, %r2187, %p45;
	selp.b32 	%r2189, %r806, %r2188, %p46;
	selp.b32 	%r2190, %r990, %r2189, %p47;
	selp.b32 	%r2191, %r1174, %r2190, %p48;
	selp.b32 	%r2192, %r1358, %r2191, %p49;
	selp.b32 	%r2193, %r1542, %r2192, %p50;
	selp.b32 	%r1792, %r1726, %r2193, %p51;
	selp.b32 	%r2194, %r819, 0, %p40;
	selp.b32 	%r2195, %r1003, %r2194, %p41;
	selp.b32 	%r2196, %r1187, %r2195, %p42;
	selp.b32 	%r2197, %r1371, %r2196, %p43;
	selp.b32 	%r2198, %r1555, %r2197, %p44;
	selp.b32 	%r2199, %r1739, %r2198, %p45;
	selp.b32 	%r2200, %r841, %r2199, %p46;
	selp.b32 	%r2201, %r1025, %r2200, %p47;
	selp.b32 	%r2202, %r1209, %r2201, %p48;
	selp.b32 	%r2203, %r1393, %r2202, %p49;
	selp.b32 	%r2204, %r1577, %r2203, %p50;
	selp.b32 	%r1795, %r1761, %r2204, %p51;
	selp.b32 	%r2205, %r830, 0, %p40;
	selp.b32 	%r2206, %r1014, %r2205, %p41;
	selp.b32 	%r2207, %r1198, %r2206, %p42;
	selp.b32 	%r2208, %r1382, %r2207, %p43;
	selp.b32 	%r2209, %r1566, %r2208, %p44;
	selp.b32 	%r2210, %r1750, %r2209, %p45;
	selp.b32 	%r2211, %r852, %r2210, %p46;
	selp.b32 	%r2212, %r1036, %r2211, %p47;
	selp.b32 	%r2213, %r1220, %r2212, %p48;
	selp.b32 	%r2214, %r1404, %r2213, %p49;
	selp.b32 	%r2215, %r1588, %r2214, %p50;
	selp.b32 	%r1798, %r1772, %r2215, %p51;
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r2446;
    mov.b32 {%r2re, %r2im}, %r1777;
    mul.f16 %retmp, %r1re, %r2re;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    mul.f16 %imtmp, %r1re, %r2im;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1803, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r2447;
    mov.b32 {%r2re, %r2im}, %r1780;
    mul.f16 %retmp, %r1re, %r2re;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    mul.f16 %imtmp, %r1re, %r2im;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1810, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r2446;
    mov.b32 {%r2re, %r2im}, %r1783;
    mul.f16 %retmp, %r1re, %r2re;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    mul.f16 %imtmp, %r1re, %r2im;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1817, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r2447;
    mov.b32 {%r2re, %r2im}, %r1786;
    mul.f16 %retmp, %r1re, %r2re;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    mul.f16 %imtmp, %r1re, %r2im;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1824, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r2446;
    mov.b32 {%r2re, %r2im}, %r1789;
    mul.f16 %retmp, %r1re, %r2re;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    mul.f16 %imtmp, %r1re, %r2im;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1831, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r2447;
    mov.b32 {%r2re, %r2im}, %r1792;
    mul.f16 %retmp, %r1re, %r2re;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    mul.f16 %imtmp, %r1re, %r2im;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1838, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r2446;
    mov.b32 {%r2re, %r2im}, %r1795;
    mul.f16 %retmp, %r1re, %r2re;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    mul.f16 %imtmp, %r1re, %r2im;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1845, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r2447;
    mov.b32 {%r2re, %r2im}, %r1798;
    mul.f16 %retmp, %r1re, %r2re;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    mul.f16 %imtmp, %r1re, %r2im;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1852, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1859, %r1862}, {%r202, %r199}, {%r1803}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1868, %r1871}, {%r202, %r199}, {%r1810}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1877, %r1880}, {%r202, %r199}, {%r1817}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1886, %r1889}, {%r202, %r199}, {%r1824}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1895, %r1898}, {%r202, %r199}, {%r1831}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1904, %r1907}, {%r202, %r199}, {%r1838}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1913, %r1916}, {%r202, %r199}, {%r1845}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1922, %r1925}, {%r202, %r199}, {%r1852}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1858, %r208;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1863, %r1858, %r1859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1990, %r205, %r1862, %r1863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1867, %r208;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1872, %r1867, %r1868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2000, %r205, %r1871, %r1872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1876, %r208;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1881, %r1876, %r1877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2010, %r205, %r1880, %r1881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1885, %r208;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1890, %r1885, %r1886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2020, %r205, %r1889, %r1890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1894, %r208;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1899, %r1894, %r1895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2030, %r205, %r1898, %r1899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1903, %r208;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1908, %r1903, %r1904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2040, %r205, %r1907, %r1908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1912, %r208;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1917, %r1912, %r1913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2050, %r205, %r1916, %r1917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1921, %r208;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1926, %r1921, %r1922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2060, %r205, %r1925, %r1926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1933, %r208, %r1862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1989, %r205, %r1859, %r1933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1940, %r208, %r1871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1999, %r205, %r1868, %r1940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1947, %r208, %r1880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2009, %r205, %r1877, %r1947;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1954, %r208, %r1889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2019, %r205, %r1886, %r1954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1961, %r208, %r1898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2029, %r205, %r1895, %r1961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1968, %r208, %r1907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2039, %r205, %r1904, %r1968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1975, %r208, %r1916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2049, %r205, %r1913, %r1975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1982, %r208, %r1925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2059, %r205, %r1922, %r1982;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2064, %r2065}, {%r220, %r214, %r217, %r211}, {%r1989, %r1990}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2072, %r2073}, {%r220, %r214, %r217, %r211}, {%r1999, %r2000}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2080, %r2081}, {%r220, %r214, %r217, %r211}, {%r2009, %r2010}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2088, %r2089}, {%r220, %r214, %r217, %r211}, {%r2019, %r2020}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2096, %r2097}, {%r220, %r214, %r217, %r211}, {%r2029, %r2030}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2104, %r2105}, {%r220, %r214, %r217, %r211}, {%r2039, %r2040}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2112, %r2113}, {%r220, %r214, %r217, %r211}, {%r2049, %r2050}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2120, %r2121}, {%r220, %r214, %r217, %r211}, {%r2059, %r2060}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	prmt.b32 %r2063, %r2064, %r2065, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2067, %r2064, %r2065, %r523;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2071, %r2072, %r2073, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2075, %r2072, %r2073, %r523;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2079, %r2080, %r2081, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2083, %r2080, %r2081, %r523;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2087, %r2088, %r2089, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2091, %r2088, %r2089, %r523;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2095, %r2096, %r2097, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2099, %r2096, %r2097, %r523;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2103, %r2104, %r2105, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2107, %r2104, %r2105, %r523;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2111, %r2112, %r2113, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2115, %r2112, %r2113, %r523;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2119, %r2120, %r2121, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2123, %r2120, %r2121, %r523;
	// end inline asm
	st.shared.u32 	[%rd5], %r2063;
	st.shared.u32 	[%rd6+33024], %r2067;
	st.shared.u32 	[%rd6+128], %r2071;
	st.shared.u32 	[%rd6+33152], %r2075;
	shr.u32 	%r2216, %r2485, 2;
	cvt.u16.u32 	%rs423, %r2216;
	and.b16  	%rs424, %rs423, 255;
	mul.lo.s16 	%rs425, %rs424, 171;
	shr.u16 	%rs426, %rs425, 11;
	mul.lo.s16 	%rs427, %rs426, 12;
	sub.s16 	%rs428, %rs423, %rs427;
	shl.b16 	%rs429, %rs428, 2;
	cvt.u32.u16 	%r2217, %rs429;
	and.b32  	%r2218, %r2217, 252;
	add.s32 	%r2219, %r134, %r2218;
	shr.s32 	%r2220, %r2219, 31;
	shr.u32 	%r2221, %r2220, 30;
	add.s32 	%r2222, %r2219, %r2221;
	and.b32  	%r2223, %r2222, 67108860;
	sub.s32 	%r2224, %r2219, %r2223;
	shl.b32 	%r2225, %r2224, 6;
	add.s32 	%r2226, %r45, %r2225;
	mul.wide.s32 	%rd132, %r2226, 4;
	add.s64 	%rd134, %rd27, %rd132;
	st.shared.u32 	[%rd134], %r2079;
	add.s32 	%r2227, %r2226, 8256;
	mul.wide.u32 	%rd135, %r2227, 4;
	add.s64 	%rd136, %rd27, %rd135;
	st.shared.u32 	[%rd136], %r2083;
	add.s32 	%r2228, %r2226, 32;
	mul.wide.s32 	%rd137, %r2228, 4;
	add.s64 	%rd138, %rd27, %rd137;
	st.shared.u32 	[%rd138], %r2087;
	add.s32 	%r2229, %r2226, 8288;
	mul.wide.u32 	%rd139, %r2229, 4;
	add.s64 	%rd140, %rd27, %rd139;
	st.shared.u32 	[%rd140], %r2091;
	add.s32 	%r2230, %r135, %r2218;
	shr.s32 	%r2231, %r2230, 31;
	shr.u32 	%r2232, %r2231, 30;
	add.s32 	%r2233, %r2230, %r2232;
	and.b32  	%r2234, %r2233, 67108860;
	sub.s32 	%r2235, %r2230, %r2234;
	shl.b32 	%r2236, %r2235, 6;
	add.s32 	%r2237, %r45, %r2236;
	mul.wide.s32 	%rd141, %r2237, 4;
	add.s64 	%rd142, %rd27, %rd141;
	st.shared.u32 	[%rd142], %r2095;
	add.s32 	%r2238, %r2237, 8256;
	mul.wide.u32 	%rd143, %r2238, 4;
	add.s64 	%rd144, %rd27, %rd143;
	st.shared.u32 	[%rd144], %r2099;
	add.s32 	%r2239, %r2237, 32;
	mul.wide.s32 	%rd145, %r2239, 4;
	add.s64 	%rd146, %rd27, %rd145;
	st.shared.u32 	[%rd146], %r2103;
	add.s32 	%r2240, %r2237, 8288;
	mul.wide.u32 	%rd147, %r2240, 4;
	add.s64 	%rd148, %rd27, %rd147;
	st.shared.u32 	[%rd148], %r2107;
	add.s32 	%r2241, %r136, %r2218;
	shr.s32 	%r2242, %r2241, 31;
	shr.u32 	%r2243, %r2242, 30;
	add.s32 	%r2244, %r2241, %r2243;
	and.b32  	%r2245, %r2244, 67108860;
	sub.s32 	%r2246, %r2241, %r2245;
	shl.b32 	%r2247, %r2246, 6;
	add.s32 	%r2248, %r45, %r2247;
	mul.wide.s32 	%rd149, %r2248, 4;
	add.s64 	%rd150, %rd27, %rd149;
	st.shared.u32 	[%rd150], %r2111;
	add.s32 	%r2249, %r2248, 8256;
	mul.wide.u32 	%rd151, %r2249, 4;
	add.s64 	%rd152, %rd27, %rd151;
	st.shared.u32 	[%rd152], %r2115;
	add.s32 	%r2250, %r2248, 32;
	mul.wide.s32 	%rd153, %r2250, 4;
	add.s64 	%rd154, %rd27, %rd153;
	st.shared.u32 	[%rd154], %r2119;
	add.s32 	%r2251, %r2248, 8288;
	mul.wide.u32 	%rd155, %r2251, 4;
	add.s64 	%rd156, %rd27, %rd155;
	st.shared.u32 	[%rd156], %r2123;
	bar.sync 	0;
	mov.u32 	%r2492, %r2441;
	bra.uni 	LBB0_9;
LBB0_13:                                // %L57602
                                        //   in Loop: Header=BB0_9 Depth=3
	add.s32 	%r2487, %r2487, 1;
	mov.u32 	%r2486, 0;
	mov.u32 	%r2488, %r2486;
	mov.u32 	%r2489, %r2486;
	mov.u32 	%r2490, %r2486;
	mov.u32 	%r2491, %r2486;
LBB0_14:                                // %L57603
                                        //   in Loop: Header=BB0_9 Depth=3
	add.s32 	%r2492, %r2492, 1;
	setp.ne.s32 	%p55, %r2492, 4;
	@%p55 bra 	LBB0_9;
	bra.uni 	LBB0_15;
LBB0_9:                                 // %L55561
                                        //   Parent Loop BB0_6 Depth=1
                                        //     Parent Loop BB0_8 Depth=2
                                        // =>    This Inner Loop Header: Depth=3
	mov.u32 	%r2493, %r2441;
	mov.u32 	%r2494, %r2441;
	mov.u32 	%r2495, %r2441;
	mov.u32 	%r2496, %r2441;
	@%p37 bra 	LBB0_19;
	bra.uni 	LBB0_10;
LBB0_19:                                // %oksrem19783
                                        //   in Loop: Header=BB0_9 Depth=3
	or.b32  	%r2253, %r2492, %r61;
	add.s32 	%r2254, %r2253, %r2485;
	shr.s32 	%r2255, %r2254, 31;
	shr.u32 	%r2256, %r2255, 30;
	add.s32 	%r2257, %r2254, %r2256;
	and.b32  	%r2258, %r2257, 67108860;
	sub.s32 	%r2259, %r2254, %r2258;
	shl.b32 	%r2260, %r2259, 6;
	add.s32 	%r2261, %r46, %r2260;
	add.s32 	%r2262, %r2261, %r47;
	add.s32 	%r2263, %r2262, %r48;
	add.s32 	%r2264, %r2263, %r2444;
	add.s32 	%r2265, %r2264, %r49;
	add.s32 	%r2266, %r2265, %r50;
	mul.wide.s32 	%rd157, %r2266, 4;
	add.s64 	%rd159, %rd27, %rd157;
	ld.shared.u32 	%r2496, [%rd159];
	add.s32 	%r2267, %r2266, 8256;
	mul.wide.u32 	%rd160, %r2267, 4;
	add.s64 	%rd161, %rd27, %rd160;
	ld.shared.u32 	%r2495, [%rd161];
	add.s32 	%r2268, %r2266, 32;
	mul.wide.s32 	%rd162, %r2268, 4;
	add.s64 	%rd163, %rd27, %rd162;
	ld.shared.u32 	%r2494, [%rd163];
	add.s32 	%r2269, %r2266, 8288;
	mul.wide.u32 	%rd164, %r2269, 4;
	add.s64 	%rd165, %rd27, %rd164;
	ld.shared.u32 	%r2493, [%rd165];
LBB0_10:                                // %L56840
                                        //   in Loop: Header=BB0_9 Depth=3
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2302, %r2305}, {%r202, %r199}, {%r2496}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2311, %r2314}, {%r202, %r199}, {%r2495}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2320, %r2323}, {%r202, %r199}, {%r2494}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2329, %r2332}, {%r202, %r199}, {%r2493}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2298, %r208;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2300, %r2298, %r2302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2303, %r205, %r2305, %r2300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2307, %r208;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2309, %r2307, %r2311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2312, %r205, %r2314, %r2309;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2316, %r208;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2318, %r2316, %r2320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2321, %r205, %r2323, %r2318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2325, %r208;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2327, %r2325, %r2329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2330, %r205, %r2332, %r2327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2334, %r208, %r2305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2337, %r205, %r2302, %r2334;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2341, %r208, %r2314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2344, %r205, %r2311, %r2341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2348, %r208, %r2323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2351, %r205, %r2320, %r2348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2355, %r208, %r2332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2358, %r205, %r2329, %r2355;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2403, %r2407}, {%r220, %r214, %r217, %r211}, {%r2337, %r2303}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2411, %r2415}, {%r220, %r214, %r217, %r211}, {%r2344, %r2312}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2419, %r2423}, {%r220, %r214, %r217, %r211}, {%r2351, %r2321}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2427, %r2431}, {%r220, %r214, %r217, %r211}, {%r2358, %r2330}, {%r2441, %r2441};
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2402, %r2403, %r2403, %r2491;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2491, %r2407, %r2407, %r2402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2410, %r2411, %r2411, %r2490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2490, %r2415, %r2415, %r2410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2418, %r2419, %r2419, %r2489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2489, %r2423, %r2423, %r2418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2426, %r2427, %r2427, %r2488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2488, %r2431, %r2431, %r2426;
	// end inline asm
	add.s32 	%r2486, %r2486, 1;
	setp.ne.s32 	%p53, %r2486, 40;
	@%p53 bra 	LBB0_14;
// %bb.11:                              // %L57024
                                        //   in Loop: Header=BB0_9 Depth=3
	setp.gt.u32 	%p54, %r1, 23;
	@%p54 bra 	LBB0_13;
// %bb.12:                              // %L57089
                                        //   in Loop: Header=BB0_9 Depth=3
	mul.lo.s32 	%r2434, %r2487, 589824;
	or.b32  	%r2435, %r2434, %r16;
	add.s32 	%r2436, %r2435, %r51;
	add.s32 	%r2437, %r2436, %r52;
	mul.wide.u32 	%rd166, %r2437, 4;
	add.s64 	%rd167, %rd3, %rd166;
	st.global.u32 	[%rd167], %r2491;
	add.s32 	%r2438, %r2436, %r53;
	mul.wide.u32 	%rd168, %r2438, 4;
	add.s64 	%rd169, %rd3, %rd168;
	st.global.u32 	[%rd169], %r2490;
	cvt.u64.u32 	%rd170, %r52;
	cvt.u64.u32 	%rd171, %r51;
	cvt.u64.u32 	%rd172, %r2435;
	add.s64 	%rd173, %rd172, %rd171;
	add.s64 	%rd174, %rd173, %rd170;
	shl.b64 	%rd175, %rd174, 2;
	add.s64 	%rd176, %rd3, %rd175;
	st.global.u32 	[%rd176+1179648], %r2489;
	cvt.u64.u32 	%rd177, %r53;
	add.s64 	%rd178, %rd173, %rd177;
	shl.b64 	%rd179, %rd178, 2;
	add.s64 	%rd180, %rd3, %rd179;
	st.global.u32 	[%rd180+1179648], %r2488;
	bra.uni 	LBB0_13;
LBB0_17:                                // %L57661
	mov.u32 	%r2440, 0;
	st.global.u32 	[%rd4], %r2440;
	ret;
LBB0_1:                                 // %L9
	ld.param.u64 	%rd8, [_Z14julia_frb_548713CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_0];
	mov.u64 	%rd17, exception1;
	cvta.global.u64 	%rd18, %rd17;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd18;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd8;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
