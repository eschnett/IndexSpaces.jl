CHORD FRB beamformer
Compiling kernel...
// PTX CompilerJob of kernel #frb(CuDeviceVector{Int32, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int32, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Float16x2, 1}) for sm_86, minthreads=768, blocks_per_sm=1

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE // -- Begin function _Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE
.extern .func julia__throw_boundserror_13307
(
	.param .align 8 .b8 julia__throw_boundserror_13307_param_0[8]
)
;
.extern .func julia__throw_boundserror_13301
(
	.param .align 8 .b8 julia__throw_boundserror_13301_param_0[8]
)
;
.extern .func julia_unreachable_13299
(
	.param .align 8 .b8 julia_unreachable_13299_param_0[8]
)
;
.extern .func julia__throw_boundserror_13304
(
	.param .align 8 .b8 julia__throw_boundserror_13304_param_0[8]
)
;
.extern .func julia__throw_boundserror_13316
(
	.param .align 8 .b8 julia__throw_boundserror_13316_param_0[8]
)
;
.extern .func julia__throw_boundserror_13325
(
	.param .align 8 .b8 julia__throw_boundserror_13325_param_0[8]
)
;
.extern .func julia__throw_boundserror_13322
(
	.param .align 8 .b8 julia__throw_boundserror_13322_param_0[8]
)
;
.extern .func julia__throw_boundserror_13313
(
	.param .align 8 .b8 julia__throw_boundserror_13313_param_0[8]
)
;
.extern .func julia__throw_boundserror_13310
(
	.param .align 8 .b8 julia__throw_boundserror_13310_param_0[8]
)
;
                                        // @_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE
.visible .entry _Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE(
	.param .align 8 .b8 _Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_0[8],
	.param .align 8 .b8 _Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_8[32]
)
.reqntid 768, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<213>;
	.reg .b16 	%rs<406>;
	.reg .f32 	%f<197>;
	.reg .b32 	%r<2674>;
	.reg .b64 	%rd<357>;

// %bb.0:                               // %conversion
	ld.param.u64 	%rd111, [_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_0];
	mov.u32 	%r262, %ctaid.x;
	setp.eq.s32 	%p3, %r262, 0;
	@%p3 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L25
	ld.param.u64 	%rd11, [_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_6+16];
	setp.gt.s64 	%p4, %rd11, 16447;
	@%p4 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L63
	ld.param.u64 	%rd13, [_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_7+16];
	setp.gt.s64 	%p5, %rd13, 19223;
	@%p5 bra 	LBB0_6;
	bra.uni 	LBB0_5;
LBB0_6:                                 // %L130
	ld.param.u64 	%rd15, [_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_8+16];
	setp.gt.s64 	%p6, %rd15, 16511;
	@%p6 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %L197
	mov.u32 	%r1, %tid.x;
	setp.lt.u32 	%p7, %r1, 32;
	@%p7 bra 	LBB0_195;
	bra.uni 	LBB0_9;
LBB0_195:                               // %oksrem
	mov.u32 	%r211, %tid.y;
	setp.gt.u32 	%p8, %r211, 23;
	@%p8 bra 	LBB0_10;
// %bb.196:                             // %oksrem16
	ld.param.u64 	%rd9, [_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_5+16];
	cvt.u16.u32 	%rs1, %r211;
	and.b16  	%rs3, %rs1, 255;
	mul.lo.s16 	%rs4, %rs3, 171;
	shr.u16 	%rs5, %rs4, 12;
	mul.lo.s16 	%rs6, %rs5, 24;
	sub.s16 	%rs7, %rs1, %rs6;
	and.b16  	%rs8, %rs7, 255;
	mul.wide.u16 	%r213, %rs8, 32;
	or.b32  	%r214, %r213, %r1;
	add.s32 	%r264, %r214, 1;
	cvt.u64.u32 	%rd112, %r264;
	max.s64 	%rd113, %rd9, 0;
	setp.lt.s64 	%p9, %rd113, %rd112;
	@%p9 bra 	LBB0_197;
// %bb.11:                              // %L274
	ld.param.u64 	%rd8, [_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd114, %r214, 4;
	add.s64 	%rd115, %rd114, %rd8;
	mov.u32 	%r271, 1;
	st.global.u32 	[%rd115], %r271;
	shr.u32 	%r3, %r1, 2;
	mov.f32 	%f17, 0f00000000;
	shl.b32 	%r6, %r1, 1;
	and.b32  	%r7, %r6, 6;
	or.b32  	%r8, %r7, 1;
	setp.eq.s32 	%p17, %r7, 6;
	mul.lo.s32 	%r2635, %r7, %r3;
	mov.f32 	%f3, %f17;
	mov.f32 	%f4, %f17;
	@%p17 bra 	LBB0_13;
// %bb.12:                              // %L361
	cvt.u16.u32 	%rs9, %r2635;
	and.b16  	%rs10, %rs9, 255;
	mul.lo.s16 	%rs11, %rs10, 171;
	shr.u16 	%rs12, %rs11, 13;
	mul.lo.s16 	%rs13, %rs12, 48;
	sub.s16 	%rs14, %rs9, %rs13;
	and.b16  	%rs15, %rs14, 255;
	cvt.rn.f32.u16 	%f51, %rs15;
	div.rn.f32 	%f52, %f51, 0f41C00000;
	add.f32 	%f53, %f52, %f52;
	mov.b32 	%r283, %f53;
	and.b32  	%r284, %r283, -2147483648;
	or.b32  	%r285, %r284, 1056964608;
	mov.b32 	%f54, %r285;
	add.f32 	%f55, %f53, %f54;
	cvt.rzi.f32.f32 	%f56, %f55;
	abs.f32 	%f57, %f53;
	setp.gt.f32 	%p18, %f57, 0f4B000000;
	selp.f32 	%f58, %f53, %f56, %p18;
	cvt.rzi.f32.f32 	%f59, %f53;
	setp.lt.f32 	%p19, %f57, 0f3F000000;
	selp.f32 	%f60, %f59, %f58, %p19;
	cvt.rzi.s32.f32 	%r286, %f60;
	fma.rn.f32 	%f61, %f60, 0fBF000000, %f52;
	mul.f32 	%f62, %f61, 0f34222169;
	fma.rn.f32 	%f63, %f61, 0f40490FDA, %f62;
	mul.f32 	%f64, %f63, %f63;
	fma.rn.f32 	%f65, %f64, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f66, %f65, %f64, 0f3D2AAABB;
	fma.rn.f32 	%f67, %f66, %f64, 0fBEFFFFFF;
	fma.rn.f32 	%f68, %f67, %f64, 0f3F800000;
	fma.rn.f32 	%f69, %f64, %f63, 0f00000000;
	fma.rn.f32 	%f70, %f64, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f71, %f70, %f64, 0fBE2AAAA8;
	fma.rn.f32 	%f72, %f71, %f69, %f63;
	and.b32  	%r287, %r286, 1;
	setp.eq.b32 	%p20, %r287, 1;
	selp.f32 	%f73, %f68, %f72, %p20;
	selp.f32 	%f74, %f72, %f68, %p20;
	and.b32  	%r288, %r286, 2;
	setp.eq.s32 	%p21, %r288, 0;
	neg.f32 	%f75, %f73;
	selp.f32 	%f76, %f73, %f75, %p21;
	add.s32 	%r289, %r286, 1;
	and.b32  	%r290, %r289, 2;
	setp.eq.s32 	%p22, %r290, 0;
	mov.f32 	%f77, 0f00000000;
	sub.f32 	%f78, %f77, %f74;
	selp.f32 	%f79, %f74, %f78, %p22;
	cvt.rzi.f32.f32 	%f80, %f52;
	setp.eq.f32 	%p23, %f80, %f52;
	mul.f32 	%f81, %f52, 0f00000000;
	selp.f32 	%f4, %f81, %f76, %p23;
	setp.gt.f32 	%p24, %f52, 0f4B800000;
	add.f32 	%f82, %f4, 0f3F800000;
	selp.f32 	%f3, %f82, %f79, %p24;
LBB0_13:                                // %L376
	setp.gt.u32 	%p25, %r8, 5;
	mul.lo.s32 	%r2636, %r8, %r3;
	mov.f32 	%f7, %f17;
	mov.f32 	%f8, %f17;
	@%p25 bra 	LBB0_15;
// %bb.14:                              // %L380
	cvt.u16.u32 	%rs16, %r2636;
	and.b16  	%rs17, %rs16, 255;
	mul.lo.s16 	%rs18, %rs17, 171;
	shr.u16 	%rs19, %rs18, 13;
	mul.lo.s16 	%rs20, %rs19, 48;
	sub.s16 	%rs21, %rs16, %rs20;
	and.b16  	%rs22, %rs21, 255;
	cvt.rn.f32.u16 	%f84, %rs22;
	div.rn.f32 	%f85, %f84, 0f41C00000;
	add.f32 	%f86, %f85, %f85;
	mov.b32 	%r292, %f86;
	and.b32  	%r293, %r292, -2147483648;
	or.b32  	%r294, %r293, 1056964608;
	mov.b32 	%f87, %r294;
	add.f32 	%f88, %f86, %f87;
	cvt.rzi.f32.f32 	%f89, %f88;
	abs.f32 	%f90, %f86;
	setp.gt.f32 	%p26, %f90, 0f4B000000;
	selp.f32 	%f91, %f86, %f89, %p26;
	cvt.rzi.f32.f32 	%f92, %f86;
	setp.lt.f32 	%p27, %f90, 0f3F000000;
	selp.f32 	%f93, %f92, %f91, %p27;
	cvt.rzi.s32.f32 	%r295, %f93;
	fma.rn.f32 	%f94, %f93, 0fBF000000, %f85;
	mul.f32 	%f95, %f94, 0f34222169;
	fma.rn.f32 	%f96, %f94, 0f40490FDA, %f95;
	mul.f32 	%f97, %f96, %f96;
	fma.rn.f32 	%f98, %f97, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f99, %f98, %f97, 0f3D2AAABB;
	fma.rn.f32 	%f100, %f99, %f97, 0fBEFFFFFF;
	fma.rn.f32 	%f101, %f100, %f97, 0f3F800000;
	fma.rn.f32 	%f102, %f97, %f96, 0f00000000;
	fma.rn.f32 	%f103, %f97, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f104, %f103, %f97, 0fBE2AAAA8;
	fma.rn.f32 	%f105, %f104, %f102, %f96;
	and.b32  	%r296, %r295, 1;
	setp.eq.b32 	%p28, %r296, 1;
	selp.f32 	%f106, %f101, %f105, %p28;
	selp.f32 	%f107, %f105, %f101, %p28;
	and.b32  	%r297, %r295, 2;
	setp.eq.s32 	%p29, %r297, 0;
	neg.f32 	%f108, %f106;
	selp.f32 	%f109, %f106, %f108, %p29;
	add.s32 	%r298, %r295, 1;
	and.b32  	%r299, %r298, 2;
	setp.eq.s32 	%p30, %r299, 0;
	mov.f32 	%f110, 0f00000000;
	sub.f32 	%f111, %f110, %f107;
	selp.f32 	%f112, %f107, %f111, %p30;
	cvt.rzi.f32.f32 	%f113, %f85;
	setp.eq.f32 	%p31, %f113, %f85;
	mul.f32 	%f114, %f85, 0f00000000;
	selp.f32 	%f8, %f114, %f109, %p31;
	setp.gt.f32 	%p32, %f85, 0f4B800000;
	add.f32 	%f115, %f8, 0f3F800000;
	selp.f32 	%f7, %f115, %f112, %p32;
LBB0_15:                                // %L395
	setp.gt.u32 	%p34, %r1, 23;
	or.pred  	%p1, %p17, %p34;
	mov.f32 	%f11, %f17;
	mov.f32 	%f12, %f17;
	@%p1 bra 	LBB0_17;
// %bb.16:                              // %L438
	cvt.u16.u32 	%rs23, %r2635;
	and.b16  	%rs24, %rs23, 255;
	mul.lo.s16 	%rs25, %rs24, 171;
	shr.u16 	%rs26, %rs25, 10;
	mul.lo.s16 	%rs27, %rs26, 6;
	sub.s16 	%rs28, %rs23, %rs27;
	and.b16  	%rs29, %rs28, 255;
	cvt.rn.f32.u16 	%f117, %rs29;
	div.rn.f32 	%f118, %f117, 0f40400000;
	add.f32 	%f119, %f118, %f118;
	mov.b32 	%r307, %f119;
	and.b32  	%r308, %r307, -2147483648;
	or.b32  	%r309, %r308, 1056964608;
	mov.b32 	%f120, %r309;
	add.f32 	%f121, %f119, %f120;
	cvt.rzi.f32.f32 	%f122, %f121;
	abs.f32 	%f123, %f119;
	setp.gt.f32 	%p35, %f123, 0f4B000000;
	selp.f32 	%f124, %f119, %f122, %p35;
	cvt.rzi.f32.f32 	%f125, %f119;
	setp.lt.f32 	%p36, %f123, 0f3F000000;
	selp.f32 	%f126, %f125, %f124, %p36;
	cvt.rzi.s32.f32 	%r310, %f126;
	fma.rn.f32 	%f127, %f126, 0fBF000000, %f118;
	mul.f32 	%f128, %f127, 0f34222169;
	fma.rn.f32 	%f129, %f127, 0f40490FDA, %f128;
	mul.f32 	%f130, %f129, %f129;
	fma.rn.f32 	%f131, %f130, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f132, %f131, %f130, 0f3D2AAABB;
	fma.rn.f32 	%f133, %f132, %f130, 0fBEFFFFFF;
	fma.rn.f32 	%f134, %f133, %f130, 0f3F800000;
	fma.rn.f32 	%f135, %f130, %f129, 0f00000000;
	fma.rn.f32 	%f136, %f130, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f137, %f136, %f130, 0fBE2AAAA8;
	fma.rn.f32 	%f138, %f137, %f135, %f129;
	and.b32  	%r311, %r310, 1;
	setp.eq.b32 	%p37, %r311, 1;
	selp.f32 	%f139, %f134, %f138, %p37;
	selp.f32 	%f140, %f138, %f134, %p37;
	and.b32  	%r312, %r310, 2;
	setp.eq.s32 	%p38, %r312, 0;
	neg.f32 	%f141, %f139;
	selp.f32 	%f142, %f139, %f141, %p38;
	add.s32 	%r313, %r310, 1;
	and.b32  	%r314, %r313, 2;
	setp.eq.s32 	%p39, %r314, 0;
	mov.f32 	%f143, 0f00000000;
	sub.f32 	%f144, %f143, %f140;
	selp.f32 	%f145, %f140, %f144, %p39;
	cvt.rzi.f32.f32 	%f146, %f118;
	setp.eq.f32 	%p40, %f146, %f118;
	mul.f32 	%f147, %f118, 0f00000000;
	selp.f32 	%f12, %f147, %f142, %p40;
	setp.gt.f32 	%p41, %f118, 0f4B800000;
	add.f32 	%f148, %f12, 0f3F800000;
	selp.f32 	%f11, %f148, %f145, %p41;
LBB0_17:                                // %L453
	cvt.u32.u16 	%r263, %rs7;
	or.pred  	%p2, %p25, %p34;
	mov.f32 	%f15, %f17;
	mov.f32 	%f16, %f17;
	@%p2 bra 	LBB0_19;
// %bb.18:                              // %L461
	cvt.u16.u32 	%rs30, %r2636;
	and.b16  	%rs31, %rs30, 255;
	mul.lo.s16 	%rs32, %rs31, 171;
	shr.u16 	%rs33, %rs32, 10;
	mul.lo.s16 	%rs34, %rs33, 6;
	sub.s16 	%rs35, %rs30, %rs34;
	and.b16  	%rs36, %rs35, 255;
	cvt.rn.f32.u16 	%f150, %rs36;
	div.rn.f32 	%f151, %f150, 0f40400000;
	add.f32 	%f152, %f151, %f151;
	mov.b32 	%r316, %f152;
	and.b32  	%r317, %r316, -2147483648;
	or.b32  	%r318, %r317, 1056964608;
	mov.b32 	%f153, %r318;
	add.f32 	%f154, %f152, %f153;
	cvt.rzi.f32.f32 	%f155, %f154;
	abs.f32 	%f156, %f152;
	setp.gt.f32 	%p44, %f156, 0f4B000000;
	selp.f32 	%f157, %f152, %f155, %p44;
	cvt.rzi.f32.f32 	%f158, %f152;
	setp.lt.f32 	%p45, %f156, 0f3F000000;
	selp.f32 	%f159, %f158, %f157, %p45;
	cvt.rzi.s32.f32 	%r319, %f159;
	fma.rn.f32 	%f160, %f159, 0fBF000000, %f151;
	mul.f32 	%f161, %f160, 0f34222169;
	fma.rn.f32 	%f162, %f160, 0f40490FDA, %f161;
	mul.f32 	%f163, %f162, %f162;
	fma.rn.f32 	%f164, %f163, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f165, %f164, %f163, 0f3D2AAABB;
	fma.rn.f32 	%f166, %f165, %f163, 0fBEFFFFFF;
	fma.rn.f32 	%f167, %f166, %f163, 0f3F800000;
	fma.rn.f32 	%f168, %f163, %f162, 0f00000000;
	fma.rn.f32 	%f169, %f163, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f170, %f169, %f163, 0fBE2AAAA8;
	fma.rn.f32 	%f171, %f170, %f168, %f162;
	and.b32  	%r320, %r319, 1;
	setp.eq.b32 	%p46, %r320, 1;
	selp.f32 	%f172, %f167, %f171, %p46;
	selp.f32 	%f173, %f171, %f167, %p46;
	and.b32  	%r321, %r319, 2;
	setp.eq.s32 	%p47, %r321, 0;
	neg.f32 	%f174, %f172;
	selp.f32 	%f175, %f172, %f174, %p47;
	add.s32 	%r322, %r319, 1;
	and.b32  	%r323, %r322, 2;
	setp.eq.s32 	%p48, %r323, 0;
	mov.f32 	%f176, 0f00000000;
	sub.f32 	%f177, %f176, %f173;
	selp.f32 	%f178, %f173, %f177, %p48;
	cvt.rzi.f32.f32 	%f179, %f151;
	setp.eq.f32 	%p49, %f179, %f151;
	mul.f32 	%f180, %f151, 0f00000000;
	selp.f32 	%f16, %f180, %f175, %p49;
	setp.gt.f32 	%p50, %f151, 0f4B800000;
	add.f32 	%f181, %f16, 0f3F800000;
	selp.f32 	%f15, %f181, %f178, %p50;
LBB0_19:                                // %L476
	and.b32  	%r212, %r263, 255;
	mov.u32 	%r215, 999999999;
	cvt.u16.u32 	%rs405, %r1;
	@%p34 bra 	LBB0_201;
// %bb.198:                             // %oksrem155
	ld.param.u64 	%rd2, [_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_1+16];
	and.b16  	%rs38, %rs405, 255;
	mul.lo.s16 	%rs39, %rs38, 171;
	shr.u16 	%rs40, %rs39, 12;
	mul.lo.s16 	%rs41, %rs40, 24;
	sub.s16 	%rs42, %rs405, %rs41;
	cvt.u32.u16 	%r361, %rs42;
	and.b32  	%r362, %r361, 255;
	mad.lo.s32 	%r363, %r362, 24, %r212;
	cvt.u16.u32 	%rs43, %r363;
	mul.hi.u16 	%rs44, %rs43, -7281;
	shr.u16 	%rs45, %rs44, 9;
	mul.lo.s16 	%rs46, %rs45, 576;
	sub.s16 	%rs2, %rs43, %rs46;
	add.s16 	%rs47, %rs2, 1;
	max.s64 	%rd116, %rd2, 0;
	cvt.u64.u16 	%rd117, %rs47;
	setp.lt.s64 	%p57, %rd116, %rd117;
	@%p57 bra 	LBB0_199;
// %bb.200:                             // %L748
	ld.param.u64 	%rd1, [_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_1];
	cvt.u32.u16 	%r364, %rs2;
	mul.wide.u32 	%rd118, %r364, 4;
	add.s64 	%rd119, %rd1, %rd118;
	ld.global.u32 	%r215, [%rd119];
LBB0_201:                               // %pass165
	and.b32  	%r2, %r1, 3;
	mov.u32 	%r356, 0;
	mov.u32 	%r222, %r356;
	mov.u32 	%r223, %r356;
	@%p34 bra 	LBB0_205;
// %bb.202:                             // %oksrem170
	ld.param.u64 	%rd4, [_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_2+16];
	mul.lo.s32 	%r216, %r2, 144;
	cvt.u16.u32 	%rs48, %r3;
	mul.lo.s16 	%rs49, %rs48, 171;
	shr.u16 	%rs50, %rs49, 10;
	mul.lo.s16 	%rs51, %rs50, 6;
	sub.s16 	%rs52, %rs48, %rs51;
	mul.lo.s16 	%rs53, %rs52, 24;
	cvt.u32.u16 	%r366, %rs53;
	and.b32  	%r217, %r366, 248;
	add.s32 	%r218, %r216, %r217;
	shr.u16 	%rs56, %rs4, 10;
	mul.lo.s16 	%rs57, %rs56, 6;
	sub.s16 	%rs58, %rs1, %rs57;
	cvt.u32.u16 	%r367, %rs58;
	and.b32  	%r219, %r367, 255;
	or.b32  	%r368, %r218, %r219;
	mul.wide.u16 	%r220, %rs56, 6;
	add.s32 	%r221, %r368, %r220;
	add.s32 	%r369, %r221, 1;
	max.s64 	%rd108, %rd4, 0;
	cvt.u64.u32 	%rd120, %r369;
	setp.lt.s64 	%p59, %rd108, %rd120;
	@%p59 bra 	LBB0_203;
// %bb.20:                              // %L914
	add.s32 	%r370, %r218, 576;
	or.b32  	%r371, %r370, %r219;
	add.s32 	%r372, %r371, %r220;
	add.s32 	%r373, %r372, 1;
	cvt.u64.u32 	%rd123, %r373;
	setp.ge.s64 	%p60, %rd108, %rd123;
	@%p60 bra 	LBB0_204;
	bra.uni 	LBB0_21;
LBB0_204:                               // %L1052
	ld.param.u64 	%rd3, [_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd121, %r221, 4;
	add.s64 	%rd122, %rd3, %rd121;
	ld.global.u32 	%r222, [%rd122];
	cvt.u64.u32 	%rd124, %r220;
	cvt.u64.u32 	%rd125, %r219;
	cvt.u64.u32 	%rd126, %r217;
	cvt.u64.u32 	%rd127, %r216;
	add.s64 	%rd128, %rd127, %rd126;
	add.s64 	%rd129, %rd128, %rd125;
	add.s64 	%rd130, %rd129, %rd124;
	shl.b64 	%rd131, %rd130, 2;
	add.s64 	%rd132, %rd3, %rd131;
	ld.global.u32 	%r223, [%rd132+2304];
LBB0_205:                               // %pass268
	ld.param.u64 	%rd5, [_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_3];
	shl.b32 	%r566, %r1, 5;
	and.b32  	%r567, %r566, 512;
	shl.b32 	%r568, %r1, 4;
	and.b32  	%r569, %r568, 240;
	or.b32  	%r570, %r567, %r569;
	shl.b32 	%r571, %r212, 10;
	or.b32  	%r572, %r571, %r570;
	cvt.u64.u32 	%rd133, %r572;
	add.s64 	%rd134, %rd133, %rd5;
	ld.global.v4.u32 	{%r573, %r574, %r575, %r576}, [%rd134];
	ld.global.v4.u32 	{%r577, %r578, %r579, %r580}, [%rd134+256];
	add.s32 	%r224, %r212, 24;
	cvt.u16.u32 	%rs59, %r224;
	and.b16  	%rs60, %rs59, 255;
	mul.lo.s16 	%rs61, %rs60, 171;
	shr.u16 	%rs62, %rs61, 13;
	mul.lo.s16 	%rs63, %rs62, 48;
	sub.s16 	%rs64, %rs59, %rs63;
	and.b16  	%rs65, %rs64, 255;
	mul.wide.u16 	%r581, %rs65, 1024;
	or.b32  	%r582, %r581, %r570;
	cvt.u64.u32 	%rd135, %r582;
	add.s64 	%rd136, %rd135, %rd5;
	ld.global.v4.u32 	{%r583, %r584, %r585, %r586}, [%rd136];
	ld.global.v4.u32 	{%r587, %r588, %r589, %r590}, [%rd136+256];
	shr.u32 	%r225, %r1, 4;
	setp.eq.s32 	%p61, %r225, 1;
	selp.b32 	%r591, %r573, %r575, %p61;
	shfl.sync.bfly.b32	%r592, %r591, 16, 31, -1;
	selp.b32 	%r376, %r592, %r573, %p61;
	selp.b32 	%r381, %r575, %r592, %p61;
	selp.b32 	%r593, %r574, %r576, %p61;
	shfl.sync.bfly.b32	%r594, %r593, 16, 31, -1;
	selp.b32 	%r384, %r594, %r574, %p61;
	selp.b32 	%r389, %r576, %r594, %p61;
	selp.b32 	%r595, %r577, %r579, %p61;
	shfl.sync.bfly.b32	%r596, %r595, 16, 31, -1;
	selp.b32 	%r392, %r596, %r577, %p61;
	selp.b32 	%r397, %r579, %r596, %p61;
	selp.b32 	%r597, %r578, %r580, %p61;
	shfl.sync.bfly.b32	%r598, %r597, 16, 31, -1;
	selp.b32 	%r400, %r598, %r578, %p61;
	selp.b32 	%r405, %r580, %r598, %p61;
	selp.b32 	%r599, %r583, %r585, %p61;
	shfl.sync.bfly.b32	%r600, %r599, 16, 31, -1;
	selp.b32 	%r408, %r600, %r583, %p61;
	selp.b32 	%r413, %r585, %r600, %p61;
	selp.b32 	%r601, %r584, %r586, %p61;
	shfl.sync.bfly.b32	%r602, %r601, 16, 31, -1;
	selp.b32 	%r416, %r602, %r584, %p61;
	selp.b32 	%r421, %r586, %r602, %p61;
	selp.b32 	%r603, %r587, %r589, %p61;
	shfl.sync.bfly.b32	%r604, %r603, 16, 31, -1;
	selp.b32 	%r424, %r604, %r587, %p61;
	selp.b32 	%r429, %r589, %r604, %p61;
	selp.b32 	%r605, %r588, %r590, %p61;
	shfl.sync.bfly.b32	%r606, %r605, 16, 31, -1;
	selp.b32 	%r432, %r606, %r588, %p61;
	selp.b32 	%r437, %r590, %r606, %p61;
	shl.b32 	%r377, %r381, 4;
	mov.u32 	%r375, 252645135;
	// begin inline asm
	lop3.b32 %r374, %r375, %r376, %r377, 202;
	// end inline asm
	shr.u32 	%r380, %r376, 4;
	// begin inline asm
	lop3.b32 %r378, %r375, %r380, %r381, 202;
	// end inline asm
	shl.b32 	%r385, %r389, 4;
	// begin inline asm
	lop3.b32 %r382, %r375, %r384, %r385, 202;
	// end inline asm
	shr.u32 	%r388, %r384, 4;
	// begin inline asm
	lop3.b32 %r386, %r375, %r388, %r389, 202;
	// end inline asm
	shl.b32 	%r393, %r397, 4;
	// begin inline asm
	lop3.b32 %r390, %r375, %r392, %r393, 202;
	// end inline asm
	shr.u32 	%r396, %r392, 4;
	// begin inline asm
	lop3.b32 %r394, %r375, %r396, %r397, 202;
	// end inline asm
	shl.b32 	%r401, %r405, 4;
	// begin inline asm
	lop3.b32 %r398, %r375, %r400, %r401, 202;
	// end inline asm
	shr.u32 	%r404, %r400, 4;
	// begin inline asm
	lop3.b32 %r402, %r375, %r404, %r405, 202;
	// end inline asm
	shl.b32 	%r409, %r413, 4;
	// begin inline asm
	lop3.b32 %r406, %r375, %r408, %r409, 202;
	// end inline asm
	shr.u32 	%r412, %r408, 4;
	// begin inline asm
	lop3.b32 %r410, %r375, %r412, %r413, 202;
	// end inline asm
	shl.b32 	%r417, %r421, 4;
	// begin inline asm
	lop3.b32 %r414, %r375, %r416, %r417, 202;
	// end inline asm
	shr.u32 	%r420, %r416, 4;
	// begin inline asm
	lop3.b32 %r418, %r375, %r420, %r421, 202;
	// end inline asm
	shl.b32 	%r425, %r429, 4;
	// begin inline asm
	lop3.b32 %r422, %r375, %r424, %r425, 202;
	// end inline asm
	shr.u32 	%r428, %r424, 4;
	// begin inline asm
	lop3.b32 %r426, %r375, %r428, %r429, 202;
	// end inline asm
	shl.b32 	%r433, %r437, 4;
	// begin inline asm
	lop3.b32 %r430, %r375, %r432, %r433, 202;
	// end inline asm
	shr.u32 	%r436, %r432, 4;
	// begin inline asm
	lop3.b32 %r434, %r375, %r436, %r437, 202;
	// end inline asm
	and.b32  	%r607, %r6, 30;
	or.b32  	%r242, %r607, %r225;
	mul.lo.s32 	%r243, %r242, 257;
	add.s32 	%r244, %r212, 1;
	add.s32 	%r608, %r244, %r243;
	setp.gt.u32 	%p62, %r608, 16448;
	@%p62 bra 	LBB0_206;
// %bb.22:                              // %L1937
	ld.param.u64 	%rd10, [_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_6];
	mov.u32 	%r497, 25152;
	// begin inline asm
	prmt.b32 %r438, %r374, %r406, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r454, %r378, %r410, %r497;
	// end inline asm
	mov.u32 	%r561, 21520;
	// begin inline asm
	prmt.b32 %r502, %r438, %r454, %r561;
	// end inline asm
	cvt.u64.u32 	%rd137, %r243;
	cvt.u64.u32 	%rd17, %r212;
	add.s64 	%rd138, %rd17, %rd137;
	shl.b64 	%rd139, %rd138, 2;
	add.s64 	%rd140, %rd139, %rd10;
	st.global.u32 	[%rd140], %r502;
	add.s32 	%r26, %r212, 129;
	add.s32 	%r609, %r26, %r243;
	setp.lt.u32 	%p63, %r609, 16449;
	@%p63 bra 	LBB0_24;
	bra.uni 	LBB0_23;
LBB0_24:                                // %L2119
	// begin inline asm
	prmt.b32 %r446, %r382, %r414, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r462, %r386, %r418, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r510, %r446, %r462, %r561;
	// end inline asm
	add.s64 	%rd18, %rd140, -4;
	st.global.u32 	[%rd18+516], %r510;
	add.s32 	%r27, %r212, 65;
	add.s32 	%r610, %r27, %r243;
	setp.lt.u32 	%p64, %r610, 16449;
	@%p64 bra 	LBB0_26;
	bra.uni 	LBB0_25;
LBB0_26:                                // %L2301
	mov.u32 	%r565, 30258;
	// begin inline asm
	prmt.b32 %r506, %r438, %r454, %r565;
	// end inline asm
	st.global.u32 	[%rd18+260], %r506;
	add.s32 	%r28, %r212, 193;
	add.s32 	%r611, %r28, %r243;
	setp.lt.u32 	%p65, %r611, 16449;
	@%p65 bra 	LBB0_28;
	bra.uni 	LBB0_27;
LBB0_28:                                // %L2485
	// begin inline asm
	prmt.b32 %r514, %r446, %r462, %r565;
	// end inline asm
	st.global.u32 	[%rd18+772], %r514;
	or.b32  	%r612, %r242, 32;
	mul.lo.s32 	%r29, %r612, 257;
	add.s32 	%r613, %r244, %r29;
	setp.lt.u32 	%p66, %r613, 16449;
	@%p66 bra 	LBB0_30;
	bra.uni 	LBB0_29;
LBB0_30:                                // %L2667
	// begin inline asm
	prmt.b32 %r470, %r390, %r422, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r486, %r394, %r426, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r518, %r470, %r486, %r561;
	// end inline asm
	cvt.u64.u32 	%rd141, %r29;
	add.s64 	%rd142, %rd17, %rd141;
	shl.b64 	%rd143, %rd142, 2;
	add.s64 	%rd144, %rd143, %rd10;
	st.global.u32 	[%rd144], %r518;
	add.s32 	%r614, %r26, %r29;
	setp.lt.u32 	%p67, %r614, 16449;
	@%p67 bra 	LBB0_32;
	bra.uni 	LBB0_31;
LBB0_32:                                // %L2851
	// begin inline asm
	prmt.b32 %r478, %r398, %r430, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r494, %r402, %r434, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r526, %r478, %r494, %r561;
	// end inline asm
	add.s64 	%rd19, %rd144, -4;
	st.global.u32 	[%rd19+516], %r526;
	add.s32 	%r615, %r27, %r29;
	setp.lt.u32 	%p68, %r615, 16449;
	@%p68 bra 	LBB0_34;
	bra.uni 	LBB0_33;
LBB0_34:                                // %L3035
	// begin inline asm
	prmt.b32 %r522, %r470, %r486, %r565;
	// end inline asm
	st.global.u32 	[%rd19+260], %r522;
	add.s32 	%r616, %r28, %r29;
	setp.lt.u32 	%p69, %r616, 16449;
	@%p69 bra 	LBB0_36;
	bra.uni 	LBB0_35;
LBB0_36:                                // %L3221
	// begin inline asm
	prmt.b32 %r530, %r478, %r494, %r565;
	// end inline asm
	st.global.u32 	[%rd19+772], %r530;
	add.s32 	%r30, %r212, 33;
	add.s32 	%r617, %r30, %r243;
	setp.lt.u32 	%p70, %r617, 16449;
	@%p70 bra 	LBB0_38;
	bra.uni 	LBB0_37;
LBB0_38:                                // %L3403
	mov.u32 	%r501, 29521;
	// begin inline asm
	prmt.b32 %r442, %r374, %r406, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r458, %r378, %r410, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r534, %r442, %r458, %r561;
	// end inline asm
	st.global.u32 	[%rd18+132], %r534;
	add.s32 	%r31, %r212, 161;
	add.s32 	%r618, %r31, %r243;
	setp.lt.u32 	%p71, %r618, 16449;
	@%p71 bra 	LBB0_40;
	bra.uni 	LBB0_39;
LBB0_40:                                // %L3587
	// begin inline asm
	prmt.b32 %r450, %r382, %r414, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r466, %r386, %r418, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r542, %r450, %r466, %r561;
	// end inline asm
	st.global.u32 	[%rd18+644], %r542;
	add.s32 	%r32, %r212, 97;
	add.s32 	%r619, %r32, %r243;
	setp.lt.u32 	%p72, %r619, 16449;
	@%p72 bra 	LBB0_42;
	bra.uni 	LBB0_41;
LBB0_42:                                // %L3771
	// begin inline asm
	prmt.b32 %r538, %r442, %r458, %r565;
	// end inline asm
	st.global.u32 	[%rd18+388], %r538;
	add.s32 	%r33, %r212, 225;
	add.s32 	%r620, %r33, %r243;
	setp.lt.u32 	%p73, %r620, 16449;
	@%p73 bra 	LBB0_44;
	bra.uni 	LBB0_43;
LBB0_44:                                // %L3957
	// begin inline asm
	prmt.b32 %r546, %r450, %r466, %r565;
	// end inline asm
	st.global.u32 	[%rd18+900], %r546;
	add.s32 	%r621, %r30, %r29;
	setp.lt.u32 	%p74, %r621, 16449;
	@%p74 bra 	LBB0_46;
	bra.uni 	LBB0_45;
LBB0_46:                                // %L4141
	// begin inline asm
	prmt.b32 %r474, %r390, %r422, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r490, %r394, %r426, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r550, %r474, %r490, %r561;
	// end inline asm
	st.global.u32 	[%rd19+132], %r550;
	add.s32 	%r622, %r31, %r29;
	setp.lt.u32 	%p75, %r622, 16449;
	@%p75 bra 	LBB0_48;
	bra.uni 	LBB0_47;
LBB0_48:                                // %L4327
	// begin inline asm
	prmt.b32 %r482, %r398, %r430, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r498, %r402, %r434, %r501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r558, %r482, %r498, %r561;
	// end inline asm
	st.global.u32 	[%rd19+644], %r558;
	add.s32 	%r623, %r32, %r29;
	setp.lt.u32 	%p76, %r623, 16449;
	@%p76 bra 	LBB0_50;
	bra.uni 	LBB0_49;
LBB0_50:                                // %L4513
	// begin inline asm
	prmt.b32 %r554, %r474, %r490, %r565;
	// end inline asm
	st.global.u32 	[%rd19+388], %r554;
	add.s32 	%r624, %r33, %r29;
	setp.lt.u32 	%p77, %r624, 16449;
	@%p77 bra 	LBB0_52;
	bra.uni 	LBB0_51;
LBB0_52:                                // %L4701
	// begin inline asm
	prmt.b32 %r562, %r482, %r498, %r565;
	// end inline asm
	st.global.u32 	[%rd19+900], %r562;
	bar.sync 	0;
	and.b32  	%r625, %r213, 224;
	and.b16  	%rs67, %rs405, 255;
	mul.lo.s16 	%rs68, %rs67, 171;
	shr.u16 	%rs69, %rs68, 12;
	mul.lo.s16 	%rs70, %rs69, 24;
	sub.s16 	%rs71, %rs405, %rs70;
	cvt.u32.u16 	%r626, %rs71;
	and.b32  	%r627, %r626, 255;
	shr.u32 	%r34, %r212, 3;
	mul.lo.s32 	%r628, %r34, 257;
	cvt.u64.u32 	%rd145, %r628;
	cvt.u64.u16 	%rd146, %rs71;
	and.b64  	%rd20, %rd146, 255;
	cvt.u64.u32 	%rd147, %r625;
	or.b64  	%rd148, %rd147, %rd20;
	add.s64 	%rd149, %rd148, %rd145;
	shl.b64 	%rd150, %rd149, 2;
	add.s64 	%rd151, %rd150, %rd10;
	ld.global.u32 	%r35, [%rd151];
	shr.u32 	%r629, %r224, 3;
	mul.lo.s32 	%r630, %r629, 257;
	cvt.u64.u32 	%rd152, %r630;
	add.s64 	%rd153, %rd148, %rd152;
	shl.b64 	%rd154, %rd153, 2;
	add.s64 	%rd155, %rd154, %rd10;
	ld.global.u32 	%r36, [%rd155];
	add.s32 	%r631, %r212, 48;
	shr.u32 	%r632, %r631, 3;
	mul.lo.s32 	%r633, %r632, 257;
	cvt.u64.u32 	%rd156, %r633;
	add.s64 	%rd157, %rd148, %rd156;
	shl.b64 	%rd158, %rd157, 2;
	add.s64 	%rd159, %rd158, %rd10;
	ld.global.u32 	%r37, [%rd159];
	add.s32 	%r634, %r212, 72;
	shr.u32 	%r635, %r634, 3;
	mul.lo.s32 	%r636, %r635, 257;
	cvt.u64.u32 	%rd160, %r636;
	add.s64 	%rd161, %rd148, %rd160;
	shl.b64 	%rd162, %rd161, 2;
	add.s64 	%rd163, %rd162, %rd10;
	ld.global.u32 	%r38, [%rd163];
	add.s32 	%r637, %r628, 3084;
	cvt.u64.u32 	%rd164, %r637;
	add.s64 	%rd165, %rd148, %rd164;
	shl.b64 	%rd166, %rd165, 2;
	add.s64 	%rd167, %rd166, %rd10;
	ld.global.u32 	%r39, [%rd167];
	add.s32 	%r638, %r212, 120;
	shr.u32 	%r639, %r638, 3;
	mul.lo.s32 	%r640, %r639, 257;
	cvt.u64.u32 	%rd168, %r640;
	add.s64 	%rd169, %rd148, %rd168;
	shl.b64 	%rd170, %rd169, 2;
	add.s64 	%rd171, %rd170, %rd10;
	ld.global.u32 	%r40, [%rd171];
	add.s32 	%r641, %r212, 144;
	shr.u32 	%r642, %r641, 3;
	mul.lo.s32 	%r643, %r642, 257;
	cvt.u64.u32 	%rd172, %r643;
	add.s64 	%rd173, %rd148, %rd172;
	shl.b64 	%rd174, %rd173, 2;
	add.s64 	%rd175, %rd174, %rd10;
	ld.global.u32 	%r41, [%rd175];
	add.s32 	%r644, %r212, 168;
	shr.u32 	%r645, %r644, 3;
	mul.lo.s32 	%r646, %r645, 257;
	cvt.u64.u32 	%rd176, %r646;
	add.s64 	%rd177, %rd148, %rd176;
	shl.b64 	%rd178, %rd177, 2;
	add.s64 	%rd179, %rd178, %rd10;
	ld.global.u32 	%r42, [%rd179];
	add.s32 	%r647, %r628, 6168;
	cvt.u64.u32 	%rd180, %r647;
	add.s64 	%rd181, %rd148, %rd180;
	shl.b64 	%rd182, %rd181, 2;
	add.s64 	%rd183, %rd182, %rd10;
	ld.global.u32 	%r43, [%rd183];
	add.s32 	%r648, %r212, 216;
	shr.u32 	%r649, %r648, 3;
	mul.lo.s32 	%r650, %r649, 257;
	cvt.u64.u32 	%rd184, %r650;
	add.s64 	%rd185, %rd148, %rd184;
	shl.b64 	%rd186, %rd185, 2;
	add.s64 	%rd187, %rd186, %rd10;
	ld.global.u32 	%r44, [%rd187];
	add.s32 	%r651, %r212, 240;
	shr.u32 	%r652, %r651, 3;
	mul.lo.s32 	%r653, %r652, 257;
	cvt.u64.u32 	%rd188, %r653;
	add.s64 	%rd189, %rd148, %rd188;
	shl.b64 	%rd190, %rd189, 2;
	add.s64 	%rd191, %rd190, %rd10;
	ld.global.u32 	%r45, [%rd191];
	add.s32 	%r654, %r212, 264;
	shr.u32 	%r655, %r654, 3;
	mul.lo.s32 	%r656, %r655, 257;
	cvt.u64.u32 	%rd192, %r656;
	add.s64 	%rd193, %rd148, %rd192;
	shl.b64 	%rd194, %rd193, 2;
	add.s64 	%rd195, %rd194, %rd10;
	ld.global.u32 	%r46, [%rd195];
	add.s32 	%r657, %r628, 9252;
	cvt.u64.u32 	%rd196, %r657;
	add.s64 	%rd197, %rd148, %rd196;
	shl.b64 	%rd198, %rd197, 2;
	add.s64 	%rd199, %rd198, %rd10;
	ld.global.u32 	%r47, [%rd199];
	add.s32 	%r658, %r212, 312;
	shr.u32 	%r659, %r658, 3;
	mul.lo.s32 	%r660, %r659, 257;
	cvt.u64.u32 	%rd200, %r660;
	add.s64 	%rd201, %rd148, %rd200;
	shl.b64 	%rd202, %rd201, 2;
	add.s64 	%rd203, %rd202, %rd10;
	ld.global.u32 	%r48, [%rd203];
	add.s32 	%r661, %r212, 336;
	shr.u32 	%r662, %r661, 3;
	mul.lo.s32 	%r663, %r662, 257;
	cvt.u64.u32 	%rd204, %r663;
	add.s64 	%rd205, %rd148, %rd204;
	shl.b64 	%rd206, %rd205, 2;
	add.s64 	%rd207, %rd206, %rd10;
	ld.global.u32 	%r49, [%rd207];
	add.s32 	%r664, %r212, 360;
	shr.u32 	%r665, %r664, 3;
	mul.lo.s32 	%r666, %r665, 257;
	cvt.u64.u32 	%rd208, %r666;
	add.s64 	%rd209, %rd148, %rd208;
	shl.b64 	%rd210, %rd209, 2;
	add.s64 	%rd211, %rd210, %rd10;
	ld.global.u32 	%r50, [%rd211];
	add.s32 	%r667, %r628, 12336;
	cvt.u64.u32 	%rd212, %r667;
	add.s64 	%rd213, %rd148, %rd212;
	shl.b64 	%rd214, %rd213, 2;
	add.s64 	%rd215, %rd214, %rd10;
	ld.global.u32 	%r51, [%rd215];
	add.s32 	%r668, %r212, 408;
	shr.u32 	%r669, %r668, 3;
	mul.lo.s32 	%r670, %r669, 257;
	cvt.u64.u32 	%rd216, %r670;
	add.s64 	%rd217, %rd148, %rd216;
	shl.b64 	%rd218, %rd217, 2;
	add.s64 	%rd219, %rd218, %rd10;
	ld.global.u32 	%r52, [%rd219];
	add.s32 	%r671, %r212, 432;
	shr.u32 	%r672, %r671, 3;
	mul.lo.s32 	%r673, %r672, 257;
	cvt.u64.u32 	%rd220, %r673;
	add.s64 	%rd221, %rd148, %rd220;
	shl.b64 	%rd222, %rd221, 2;
	add.s64 	%rd223, %rd222, %rd10;
	ld.global.u32 	%r53, [%rd223];
	add.s32 	%r674, %r212, 456;
	shr.u32 	%r675, %r674, 3;
	mul.lo.s32 	%r676, %r675, 257;
	cvt.u64.u32 	%rd224, %r676;
	add.s64 	%rd225, %rd148, %rd224;
	shl.b64 	%rd226, %rd225, 2;
	add.s64 	%rd227, %rd226, %rd10;
	ld.global.u32 	%r54, [%rd227];
	add.s32 	%r677, %r628, 15420;
	cvt.u64.u32 	%rd228, %r677;
	add.s64 	%rd229, %rd148, %rd228;
	shl.b64 	%rd230, %rd229, 2;
	add.s64 	%rd231, %rd230, %rd10;
	ld.global.u32 	%r55, [%rd231];
	add.s32 	%r678, %r212, 504;
	bfe.u32 	%r679, %r678, 3, 6;
	mul.lo.s32 	%r680, %r679, 257;
	cvt.u64.u32 	%rd232, %r680;
	add.s64 	%rd233, %rd148, %rd232;
	shl.b64 	%rd234, %rd233, 2;
	add.s64 	%rd235, %rd234, %rd10;
	ld.global.u32 	%r56, [%rd235];
	bar.sync 	0;
	shfl.sync.idx.b32	%r681, %r215, 0, 31, -1;
	shfl.sync.idx.b32	%r57, %r215, 1, 31, -1;
	shfl.sync.idx.b32	%r58, %r215, 2, 31, -1;
	shfl.sync.idx.b32	%r59, %r215, 3, 31, -1;
	shfl.sync.idx.b32	%r60, %r215, 4, 31, -1;
	shfl.sync.idx.b32	%r61, %r215, 5, 31, -1;
	shfl.sync.idx.b32	%r62, %r215, 6, 31, -1;
	shfl.sync.idx.b32	%r63, %r215, 7, 31, -1;
	shfl.sync.idx.b32	%r64, %r215, 8, 31, -1;
	shfl.sync.idx.b32	%r65, %r215, 9, 31, -1;
	shfl.sync.idx.b32	%r66, %r215, 10, 31, -1;
	shfl.sync.idx.b32	%r67, %r215, 11, 31, -1;
	shfl.sync.idx.b32	%r68, %r215, 12, 31, -1;
	shfl.sync.idx.b32	%r69, %r215, 13, 31, -1;
	shfl.sync.idx.b32	%r70, %r215, 14, 31, -1;
	shfl.sync.idx.b32	%r71, %r215, 15, 31, -1;
	shfl.sync.idx.b32	%r72, %r215, 16, 31, -1;
	shfl.sync.idx.b32	%r73, %r215, 17, 31, -1;
	shfl.sync.idx.b32	%r74, %r215, 18, 31, -1;
	shfl.sync.idx.b32	%r75, %r215, 19, 31, -1;
	shfl.sync.idx.b32	%r76, %r215, 20, 31, -1;
	shfl.sync.idx.b32	%r77, %r215, 21, 31, -1;
	shfl.sync.idx.b32	%r78, %r215, 22, 31, -1;
	shfl.sync.idx.b32	%r79, %r215, 23, 31, -1;
	add.s32 	%r682, %r681, %r627;
	add.s32 	%r683, %r682, 1;
	setp.lt.u32 	%p78, %r682, 2147483647;
	setp.lt.s32 	%p79, %r683, 19225;
	and.pred  	%p80, %p78, %p79;
	@%p80 bra 	LBB0_54;
	bra.uni 	LBB0_53;
LBB0_54:                                // %L7588
	ld.param.u64 	%rd12, [_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_7];
	cvt.s64.s32 	%rd21, %r683;
	cvt.u32.u64 	%r684, %rd20;
	shl.b64 	%rd236, %rd21, 2;
	add.s64 	%rd237, %rd12, %rd236;
	st.global.u32 	[%rd237+-4], %r35;
	add.s32 	%r685, %r57, %r684;
	add.s32 	%r686, %r685, 1;
	setp.lt.u32 	%p81, %r685, 2147483647;
	setp.lt.s32 	%p82, %r686, 19225;
	and.pred  	%p83, %p81, %p82;
	@%p83 bra 	LBB0_56;
	bra.uni 	LBB0_55;
LBB0_56:                                // %L7659
	cvt.s64.s32 	%rd22, %r686;
	shl.b64 	%rd238, %rd22, 2;
	add.s64 	%rd239, %rd12, %rd238;
	st.global.u32 	[%rd239+-4], %r36;
	add.s32 	%r688, %r58, %r684;
	add.s32 	%r689, %r688, 1;
	setp.lt.u32 	%p84, %r688, 2147483647;
	setp.lt.s32 	%p85, %r689, 19225;
	and.pred  	%p86, %p84, %p85;
	@%p86 bra 	LBB0_58;
	bra.uni 	LBB0_57;
LBB0_58:                                // %L7730
	cvt.s64.s32 	%rd23, %r689;
	shl.b64 	%rd240, %rd23, 2;
	add.s64 	%rd241, %rd12, %rd240;
	st.global.u32 	[%rd241+-4], %r37;
	add.s32 	%r691, %r59, %r684;
	add.s32 	%r692, %r691, 1;
	setp.lt.u32 	%p87, %r691, 2147483647;
	setp.lt.s32 	%p88, %r692, 19225;
	and.pred  	%p89, %p87, %p88;
	@%p89 bra 	LBB0_60;
	bra.uni 	LBB0_59;
LBB0_60:                                // %L7801
	cvt.s64.s32 	%rd24, %r692;
	shl.b64 	%rd242, %rd24, 2;
	add.s64 	%rd243, %rd12, %rd242;
	st.global.u32 	[%rd243+-4], %r38;
	add.s32 	%r694, %r60, %r684;
	add.s32 	%r695, %r694, 1;
	setp.lt.u32 	%p90, %r694, 2147483647;
	setp.lt.s32 	%p91, %r695, 19225;
	and.pred  	%p92, %p90, %p91;
	@%p92 bra 	LBB0_62;
	bra.uni 	LBB0_61;
LBB0_62:                                // %L7872
	cvt.s64.s32 	%rd25, %r695;
	shl.b64 	%rd244, %rd25, 2;
	add.s64 	%rd245, %rd12, %rd244;
	st.global.u32 	[%rd245+-4], %r39;
	add.s32 	%r697, %r61, %r684;
	add.s32 	%r698, %r697, 1;
	setp.lt.u32 	%p93, %r697, 2147483647;
	setp.lt.s32 	%p94, %r698, 19225;
	and.pred  	%p95, %p93, %p94;
	@%p95 bra 	LBB0_64;
	bra.uni 	LBB0_63;
LBB0_64:                                // %L7943
	cvt.s64.s32 	%rd26, %r698;
	shl.b64 	%rd246, %rd26, 2;
	add.s64 	%rd247, %rd12, %rd246;
	st.global.u32 	[%rd247+-4], %r40;
	add.s32 	%r700, %r62, %r684;
	add.s32 	%r701, %r700, 1;
	setp.lt.u32 	%p96, %r700, 2147483647;
	setp.lt.s32 	%p97, %r701, 19225;
	and.pred  	%p98, %p96, %p97;
	@%p98 bra 	LBB0_66;
	bra.uni 	LBB0_65;
LBB0_66:                                // %L8014
	cvt.s64.s32 	%rd27, %r701;
	shl.b64 	%rd248, %rd27, 2;
	add.s64 	%rd249, %rd12, %rd248;
	st.global.u32 	[%rd249+-4], %r41;
	add.s32 	%r703, %r63, %r684;
	add.s32 	%r704, %r703, 1;
	setp.lt.u32 	%p99, %r703, 2147483647;
	setp.lt.s32 	%p100, %r704, 19225;
	and.pred  	%p101, %p99, %p100;
	@%p101 bra 	LBB0_68;
	bra.uni 	LBB0_67;
LBB0_68:                                // %L8085
	cvt.s64.s32 	%rd28, %r704;
	shl.b64 	%rd250, %rd28, 2;
	add.s64 	%rd251, %rd12, %rd250;
	st.global.u32 	[%rd251+-4], %r42;
	add.s32 	%r706, %r64, %r684;
	add.s32 	%r707, %r706, 1;
	setp.lt.u32 	%p102, %r706, 2147483647;
	setp.lt.s32 	%p103, %r707, 19225;
	and.pred  	%p104, %p102, %p103;
	@%p104 bra 	LBB0_70;
	bra.uni 	LBB0_69;
LBB0_70:                                // %L8156
	cvt.s64.s32 	%rd29, %r707;
	shl.b64 	%rd252, %rd29, 2;
	add.s64 	%rd253, %rd12, %rd252;
	st.global.u32 	[%rd253+-4], %r43;
	add.s32 	%r709, %r65, %r684;
	add.s32 	%r710, %r709, 1;
	setp.lt.u32 	%p105, %r709, 2147483647;
	setp.lt.s32 	%p106, %r710, 19225;
	and.pred  	%p107, %p105, %p106;
	@%p107 bra 	LBB0_72;
	bra.uni 	LBB0_71;
LBB0_72:                                // %L8227
	cvt.s64.s32 	%rd30, %r710;
	shl.b64 	%rd254, %rd30, 2;
	add.s64 	%rd255, %rd12, %rd254;
	st.global.u32 	[%rd255+-4], %r44;
	add.s32 	%r712, %r66, %r684;
	add.s32 	%r713, %r712, 1;
	setp.lt.u32 	%p108, %r712, 2147483647;
	setp.lt.s32 	%p109, %r713, 19225;
	and.pred  	%p110, %p108, %p109;
	@%p110 bra 	LBB0_74;
	bra.uni 	LBB0_73;
LBB0_74:                                // %L8298
	cvt.s64.s32 	%rd31, %r713;
	shl.b64 	%rd256, %rd31, 2;
	add.s64 	%rd257, %rd12, %rd256;
	st.global.u32 	[%rd257+-4], %r45;
	add.s32 	%r715, %r67, %r684;
	add.s32 	%r716, %r715, 1;
	setp.lt.u32 	%p111, %r715, 2147483647;
	setp.lt.s32 	%p112, %r716, 19225;
	and.pred  	%p113, %p111, %p112;
	@%p113 bra 	LBB0_76;
	bra.uni 	LBB0_75;
LBB0_76:                                // %L8369
	cvt.s64.s32 	%rd32, %r716;
	shl.b64 	%rd258, %rd32, 2;
	add.s64 	%rd259, %rd12, %rd258;
	st.global.u32 	[%rd259+-4], %r46;
	add.s32 	%r718, %r68, %r684;
	add.s32 	%r719, %r718, 1;
	setp.lt.u32 	%p114, %r718, 2147483647;
	setp.lt.s32 	%p115, %r719, 19225;
	and.pred  	%p116, %p114, %p115;
	@%p116 bra 	LBB0_78;
	bra.uni 	LBB0_77;
LBB0_78:                                // %L8440
	cvt.s64.s32 	%rd33, %r719;
	shl.b64 	%rd260, %rd33, 2;
	add.s64 	%rd261, %rd12, %rd260;
	st.global.u32 	[%rd261+-4], %r47;
	add.s32 	%r721, %r69, %r684;
	add.s32 	%r722, %r721, 1;
	setp.lt.u32 	%p117, %r721, 2147483647;
	setp.lt.s32 	%p118, %r722, 19225;
	and.pred  	%p119, %p117, %p118;
	@%p119 bra 	LBB0_80;
	bra.uni 	LBB0_79;
LBB0_80:                                // %L8511
	cvt.s64.s32 	%rd34, %r722;
	shl.b64 	%rd262, %rd34, 2;
	add.s64 	%rd263, %rd12, %rd262;
	st.global.u32 	[%rd263+-4], %r48;
	add.s32 	%r724, %r70, %r684;
	add.s32 	%r725, %r724, 1;
	setp.lt.u32 	%p120, %r724, 2147483647;
	setp.lt.s32 	%p121, %r725, 19225;
	and.pred  	%p122, %p120, %p121;
	@%p122 bra 	LBB0_82;
	bra.uni 	LBB0_81;
LBB0_82:                                // %L8582
	cvt.s64.s32 	%rd35, %r725;
	shl.b64 	%rd264, %rd35, 2;
	add.s64 	%rd265, %rd12, %rd264;
	st.global.u32 	[%rd265+-4], %r49;
	add.s32 	%r727, %r71, %r684;
	add.s32 	%r728, %r727, 1;
	setp.lt.u32 	%p123, %r727, 2147483647;
	setp.lt.s32 	%p124, %r728, 19225;
	and.pred  	%p125, %p123, %p124;
	@%p125 bra 	LBB0_84;
	bra.uni 	LBB0_83;
LBB0_84:                                // %L8653
	cvt.s64.s32 	%rd36, %r728;
	shl.b64 	%rd266, %rd36, 2;
	add.s64 	%rd267, %rd12, %rd266;
	st.global.u32 	[%rd267+-4], %r50;
	add.s32 	%r730, %r72, %r684;
	add.s32 	%r731, %r730, 1;
	setp.lt.u32 	%p126, %r730, 2147483647;
	setp.lt.s32 	%p127, %r731, 19225;
	and.pred  	%p128, %p126, %p127;
	@%p128 bra 	LBB0_86;
	bra.uni 	LBB0_85;
LBB0_86:                                // %L8724
	cvt.s64.s32 	%rd37, %r731;
	shl.b64 	%rd268, %rd37, 2;
	add.s64 	%rd269, %rd12, %rd268;
	st.global.u32 	[%rd269+-4], %r51;
	add.s32 	%r733, %r73, %r684;
	add.s32 	%r734, %r733, 1;
	setp.lt.u32 	%p129, %r733, 2147483647;
	setp.lt.s32 	%p130, %r734, 19225;
	and.pred  	%p131, %p129, %p130;
	@%p131 bra 	LBB0_88;
	bra.uni 	LBB0_87;
LBB0_88:                                // %L8795
	cvt.s64.s32 	%rd38, %r734;
	shl.b64 	%rd270, %rd38, 2;
	add.s64 	%rd271, %rd12, %rd270;
	st.global.u32 	[%rd271+-4], %r52;
	add.s32 	%r736, %r74, %r684;
	add.s32 	%r737, %r736, 1;
	setp.lt.u32 	%p132, %r736, 2147483647;
	setp.lt.s32 	%p133, %r737, 19225;
	and.pred  	%p134, %p132, %p133;
	@%p134 bra 	LBB0_90;
	bra.uni 	LBB0_89;
LBB0_90:                                // %L8866
	cvt.s64.s32 	%rd39, %r737;
	shl.b64 	%rd272, %rd39, 2;
	add.s64 	%rd273, %rd12, %rd272;
	st.global.u32 	[%rd273+-4], %r53;
	add.s32 	%r739, %r75, %r684;
	add.s32 	%r740, %r739, 1;
	setp.lt.u32 	%p135, %r739, 2147483647;
	setp.lt.s32 	%p136, %r740, 19225;
	and.pred  	%p137, %p135, %p136;
	@%p137 bra 	LBB0_92;
	bra.uni 	LBB0_91;
LBB0_92:                                // %L8937
	cvt.s64.s32 	%rd40, %r740;
	shl.b64 	%rd274, %rd40, 2;
	add.s64 	%rd275, %rd12, %rd274;
	st.global.u32 	[%rd275+-4], %r54;
	add.s32 	%r742, %r76, %r684;
	add.s32 	%r743, %r742, 1;
	setp.lt.u32 	%p138, %r742, 2147483647;
	setp.lt.s32 	%p139, %r743, 19225;
	and.pred  	%p140, %p138, %p139;
	@%p140 bra 	LBB0_94;
	bra.uni 	LBB0_93;
LBB0_94:                                // %L9008
	cvt.s64.s32 	%rd41, %r743;
	shl.b64 	%rd276, %rd41, 2;
	add.s64 	%rd277, %rd12, %rd276;
	st.global.u32 	[%rd277+-4], %r55;
	add.s32 	%r745, %r77, %r684;
	add.s32 	%r746, %r745, 1;
	setp.lt.u32 	%p141, %r745, 2147483647;
	setp.lt.s32 	%p142, %r746, 19225;
	and.pred  	%p143, %p141, %p142;
	@%p143 bra 	LBB0_96;
	bra.uni 	LBB0_95;
LBB0_96:                                // %L9109
	cvt.s64.s32 	%rd42, %r746;
	setp.gt.u32 	%p144, %r211, 7;
	selp.b32 	%r748, 0, %r56, %p144;
	shl.b64 	%rd278, %rd42, 2;
	add.s64 	%rd279, %rd12, %rd278;
	st.global.u32 	[%rd279+-4], %r748;
	add.s32 	%r749, %r78, %r684;
	add.s32 	%r750, %r749, 1;
	setp.lt.u32 	%p145, %r749, 2147483647;
	setp.lt.s32 	%p146, %r750, 19225;
	and.pred  	%p147, %p145, %p146;
	@%p147 bra 	LBB0_98;
	bra.uni 	LBB0_97;
LBB0_98:                                // %L9180
	cvt.s64.s32 	%rd43, %r750;
	shl.b64 	%rd280, %rd43, 2;
	add.s64 	%rd281, %rd12, %rd280;
	mov.u32 	%r752, 0;
	st.global.u32 	[%rd281+-4], %r752;
	add.s32 	%r753, %r79, %r684;
	add.s32 	%r754, %r753, 1;
	setp.lt.u32 	%p148, %r753, 2147483647;
	setp.lt.s32 	%p149, %r754, 19225;
	and.pred  	%p150, %p148, %p149;
	@%p150 bra 	LBB0_208;
	bra.uni 	LBB0_99;
LBB0_208:                               // %L9251
	cvt.s64.s32 	%rd44, %r754;
	shl.b64 	%rd282, %rd44, 2;
	add.s64 	%rd283, %rd12, %rd282;
	st.global.u32 	[%rd283+-4], %r752;
	bar.sync 	0;
	@%p34 bra 	LBB0_207;
	bra.uni 	LBB0_209;
LBB0_207:                               // %pass2307.L13074_crit_edge
	shr.u16 	%rs87, %rs4, 10;
	mul.lo.s16 	%rs88, %rs87, 6;
	sub.s16 	%rs89, %rs1, %rs88;
	cvt.u32.u16 	%r856, %rs89;
	and.b32  	%r2639, %r856, 255;
	cvt.u32.u16 	%r2638, %rs87;
	cvt.u16.u32 	%rs90, %r3;
	mul.lo.s16 	%rs91, %rs90, 171;
	shr.u16 	%rs92, %rs91, 10;
	mul.lo.s16 	%rs93, %rs92, 6;
	sub.s16 	%rs94, %rs90, %rs93;
	cvt.u32.u16 	%r857, %rs94;
	and.b32  	%r2637, %r857, 255;
	mov.u32 	%r130, -2004318072;
	mov.u32 	%r131, %r130;
	mov.u32 	%r132, %r130;
	mov.u32 	%r133, %r130;
	mov.u32 	%r134, %r130;
	mov.u32 	%r135, %r130;
	mov.u32 	%r136, %r130;
	mov.u32 	%r137, %r130;
	mov.u32 	%r138, %r130;
	mov.u32 	%r139, %r130;
	mov.u32 	%r140, %r130;
	mov.u32 	%r141, %r130;
	mov.u32 	%r142, %r130;
	mov.u32 	%r143, %r130;
	mov.u32 	%r144, %r130;
	mov.u32 	%r145, %r130;
	mov.u32 	%r146, %r130;
	mov.u32 	%r147, %r130;
	mov.u32 	%r148, %r130;
	mov.u32 	%r149, %r130;
	mov.u32 	%r150, %r130;
	mov.u32 	%r151, %r130;
	mov.u32 	%r152, %r130;
	mov.u32 	%r153, %r130;
	bra.uni 	LBB0_147;
LBB0_209:                               // %pass2352
	cvt.u16.u32 	%rs72, %r3;
	mul.lo.s16 	%rs73, %rs72, 171;
	shr.u16 	%rs74, %rs73, 10;
	mul.lo.s16 	%rs75, %rs74, 6;
	sub.s16 	%rs76, %rs72, %rs75;
	and.b16  	%rs77, %rs76, 255;
	mul.wide.u16 	%r249, %rs77, 801;
	mul.lo.s32 	%r250, %r2, 4806;
	shr.u16 	%rs81, %rs4, 10;
	mul.lo.s16 	%rs82, %rs81, -6;
	add.s16 	%rs83, %rs82, %rs1;
	and.b16  	%rs84, %rs83, 255;
	mul.wide.u16 	%r252, %rs84, 33;
	mul.wide.u16 	%r254, %rs81, 198;
	add.s32 	%r758, %r249, %r250;
	add.s32 	%r759, %r758, %r252;
	add.s32 	%r760, %r759, %r254;
	add.s32 	%r761, %r760, 1;
	setp.gt.u32 	%p152, %r761, 19224;
	@%p152 bra 	LBB0_210;
// %bb.100:                             // %L9435
	add.s32 	%r765, %r760, 2;
	setp.lt.u32 	%p153, %r765, 19225;
	@%p153 bra 	LBB0_102;
	bra.uni 	LBB0_101;
LBB0_102:                               // %L9592
	add.s32 	%r769, %r760, 3;
	setp.lt.u32 	%p154, %r769, 19225;
	@%p154 bra 	LBB0_104;
	bra.uni 	LBB0_103;
LBB0_104:                               // %L9749
	add.s32 	%r773, %r760, 4;
	setp.lt.u32 	%p155, %r773, 19225;
	@%p155 bra 	LBB0_106;
	bra.uni 	LBB0_105;
LBB0_106:                               // %L9906
	add.s32 	%r777, %r760, 5;
	setp.lt.u32 	%p156, %r777, 19225;
	@%p156 bra 	LBB0_108;
	bra.uni 	LBB0_107;
LBB0_108:                               // %L10063
	add.s32 	%r781, %r760, 6;
	setp.lt.u32 	%p157, %r781, 19225;
	@%p157 bra 	LBB0_110;
	bra.uni 	LBB0_109;
LBB0_110:                               // %L10220
	add.s32 	%r785, %r760, 7;
	setp.lt.u32 	%p158, %r785, 19225;
	@%p158 bra 	LBB0_112;
	bra.uni 	LBB0_111;
LBB0_112:                               // %L10377
	add.s32 	%r789, %r760, 8;
	setp.lt.u32 	%p159, %r789, 19225;
	@%p159 bra 	LBB0_114;
	bra.uni 	LBB0_113;
LBB0_114:                               // %L10534
	add.s32 	%r793, %r760, 9;
	setp.lt.u32 	%p160, %r793, 19225;
	@%p160 bra 	LBB0_116;
	bra.uni 	LBB0_115;
LBB0_116:                               // %L10691
	add.s32 	%r797, %r760, 10;
	setp.lt.u32 	%p161, %r797, 19225;
	@%p161 bra 	LBB0_118;
	bra.uni 	LBB0_117;
LBB0_118:                               // %L10848
	add.s32 	%r801, %r760, 11;
	setp.lt.u32 	%p162, %r801, 19225;
	@%p162 bra 	LBB0_120;
	bra.uni 	LBB0_119;
LBB0_120:                               // %L11005
	add.s32 	%r805, %r760, 12;
	setp.lt.u32 	%p163, %r805, 19225;
	@%p163 bra 	LBB0_122;
	bra.uni 	LBB0_121;
LBB0_122:                               // %L11162
	add.s32 	%r809, %r760, 13;
	setp.lt.u32 	%p164, %r809, 19225;
	@%p164 bra 	LBB0_124;
	bra.uni 	LBB0_123;
LBB0_124:                               // %L11319
	add.s32 	%r813, %r760, 14;
	setp.lt.u32 	%p165, %r813, 19225;
	@%p165 bra 	LBB0_126;
	bra.uni 	LBB0_125;
LBB0_126:                               // %L11476
	add.s32 	%r817, %r760, 15;
	setp.lt.u32 	%p166, %r817, 19225;
	@%p166 bra 	LBB0_128;
	bra.uni 	LBB0_127;
LBB0_128:                               // %L11633
	add.s32 	%r821, %r760, 16;
	setp.lt.u32 	%p167, %r821, 19225;
	@%p167 bra 	LBB0_130;
	bra.uni 	LBB0_129;
LBB0_130:                               // %L11790
	add.s32 	%r825, %r760, 17;
	setp.lt.u32 	%p168, %r825, 19225;
	@%p168 bra 	LBB0_132;
	bra.uni 	LBB0_131;
LBB0_132:                               // %L11947
	add.s32 	%r829, %r760, 18;
	setp.lt.u32 	%p169, %r829, 19225;
	@%p169 bra 	LBB0_134;
	bra.uni 	LBB0_133;
LBB0_134:                               // %L12104
	add.s32 	%r833, %r760, 19;
	setp.lt.u32 	%p170, %r833, 19225;
	@%p170 bra 	LBB0_136;
	bra.uni 	LBB0_135;
LBB0_136:                               // %L12261
	add.s32 	%r837, %r760, 20;
	setp.lt.u32 	%p171, %r837, 19225;
	@%p171 bra 	LBB0_138;
	bra.uni 	LBB0_137;
LBB0_138:                               // %L12418
	add.s32 	%r841, %r760, 21;
	setp.lt.u32 	%p172, %r841, 19225;
	@%p172 bra 	LBB0_140;
	bra.uni 	LBB0_139;
LBB0_140:                               // %L12575
	add.s32 	%r845, %r760, 22;
	setp.lt.u32 	%p173, %r845, 19225;
	@%p173 bra 	LBB0_142;
	bra.uni 	LBB0_141;
LBB0_142:                               // %L12732
	add.s32 	%r849, %r760, 23;
	setp.lt.u32 	%p174, %r849, 19225;
	@%p174 bra 	LBB0_144;
	bra.uni 	LBB0_143;
LBB0_144:                               // %L12889
	add.s32 	%r853, %r760, 24;
	setp.lt.u32 	%p175, %r853, 19225;
	@%p175 bra 	LBB0_146;
	bra.uni 	LBB0_145;
LBB0_146:                               // %L13046
	cvt.u32.u16 	%r756, %rs76;
	and.b32  	%r2637, %r756, 255;
	cvt.u32.u16 	%r757, %rs83;
	and.b32  	%r2639, %r757, 255;
	cvt.u32.u16 	%r2638, %rs81;
	cvt.u64.u32 	%rd284, %r254;
	cvt.u64.u32 	%rd285, %r252;
	cvt.u64.u32 	%rd286, %r250;
	cvt.u64.u32 	%rd287, %r249;
	add.s64 	%rd288, %rd287, %rd286;
	add.s64 	%rd289, %rd288, %rd285;
	add.s64 	%rd290, %rd289, %rd284;
	shl.b64 	%rd291, %rd290, 2;
	add.s64 	%rd292, %rd291, %rd12;
	add.s64 	%rd45, %rd292, -4;
	ld.global.u32 	%r80, [%rd292];
	ld.global.u32 	%r81, [%rd45+8];
	ld.global.u32 	%r82, [%rd45+12];
	ld.global.u32 	%r83, [%rd45+16];
	ld.global.u32 	%r84, [%rd45+20];
	ld.global.u32 	%r85, [%rd45+24];
	ld.global.u32 	%r86, [%rd45+28];
	ld.global.u32 	%r87, [%rd45+32];
	ld.global.u32 	%r88, [%rd45+36];
	ld.global.u32 	%r89, [%rd45+40];
	ld.global.u32 	%r90, [%rd45+44];
	ld.global.u32 	%r91, [%rd45+48];
	ld.global.u32 	%r92, [%rd45+52];
	ld.global.u32 	%r93, [%rd45+56];
	ld.global.u32 	%r94, [%rd45+60];
	ld.global.u32 	%r95, [%rd45+64];
	ld.global.u32 	%r96, [%rd45+68];
	ld.global.u32 	%r97, [%rd45+72];
	ld.global.u32 	%r98, [%rd45+76];
	ld.global.u32 	%r99, [%rd45+80];
	ld.global.u32 	%r100, [%rd45+84];
	ld.global.u32 	%r101, [%rd45+88];
	ld.global.u32 	%r102, [%rd45+92];
	ld.global.u32 	%r854, [%rd45+96];
	xor.b32  	%r130, %r80, -2004318072;
	xor.b32  	%r131, %r81, -2004318072;
	xor.b32  	%r132, %r82, -2004318072;
	xor.b32  	%r133, %r83, -2004318072;
	xor.b32  	%r134, %r84, -2004318072;
	xor.b32  	%r135, %r85, -2004318072;
	xor.b32  	%r136, %r86, -2004318072;
	xor.b32  	%r137, %r87, -2004318072;
	xor.b32  	%r138, %r88, -2004318072;
	xor.b32  	%r139, %r89, -2004318072;
	xor.b32  	%r140, %r90, -2004318072;
	xor.b32  	%r141, %r91, -2004318072;
	xor.b32  	%r142, %r92, -2004318072;
	xor.b32  	%r143, %r93, -2004318072;
	xor.b32  	%r144, %r94, -2004318072;
	xor.b32  	%r145, %r95, -2004318072;
	xor.b32  	%r146, %r96, -2004318072;
	xor.b32  	%r147, %r97, -2004318072;
	xor.b32  	%r148, %r98, -2004318072;
	xor.b32  	%r149, %r99, -2004318072;
	xor.b32  	%r150, %r100, -2004318072;
	xor.b32  	%r151, %r101, -2004318072;
	xor.b32  	%r152, %r102, -2004318072;
	xor.b32  	%r153, %r854, -2004318072;
LBB0_147:                               // %L13074
	mul.lo.s32 	%r272, %r2, %r3;
	and.b32  	%r273, %r272, 7;
	cvt.rn.f32.u32 	%f18, %r273;
	mul.f32 	%f19, %f18, 0f3E800000;
	add.f32 	%f20, %f19, %f19;
	mov.b32 	%r274, %f20;
	and.b32  	%r275, %r274, -2147483648;
	or.b32  	%r276, %r275, 1056964608;
	mov.b32 	%f21, %r276;
	add.f32 	%f22, %f20, %f21;
	abs.f32 	%f24, %f20;
	cvt.rzi.f32.f32 	%f23, %f22;
	setp.gt.f32 	%p10, %f24, 0f4B000000;
	selp.f32 	%f25, %f20, %f23, %p10;
	cvt.rzi.f32.f32 	%f26, %f20;
	setp.lt.f32 	%p11, %f24, 0f3F000000;
	selp.f32 	%f27, %f26, %f25, %p11;
	fma.rn.f32 	%f28, %f27, 0fBF000000, %f19;
	mul.f32 	%f29, %f28, 0f34222169;
	fma.rn.f32 	%f30, %f28, 0f40490FDA, %f29;
	mul.f32 	%f31, %f30, %f30;
	fma.rn.f32 	%f32, %f31, 0f37CBAC00, 0fBAB607ED;
	cvt.rzi.s32.f32 	%r277, %f27;
	fma.rn.f32 	%f33, %f32, %f31, 0f3D2AAABB;
	fma.rn.f32 	%f37, %f31, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f34, %f33, %f31, 0fBEFFFFFF;
	fma.rn.f32 	%f36, %f31, %f30, 0f00000000;
	fma.rn.f32 	%f38, %f37, %f31, 0fBE2AAAA8;
	and.b32  	%r278, %r277, 1;
	fma.rn.f32 	%f35, %f34, %f31, 0f3F800000;
	fma.rn.f32 	%f39, %f38, %f36, %f30;
	setp.eq.b32 	%p12, %r278, 1;
	selp.f32 	%f40, %f35, %f39, %p12;
	and.b32  	%r279, %r277, 2;
	setp.eq.s32 	%p13, %r279, 0;
	neg.f32 	%f42, %f40;
	add.s32 	%r280, %r277, 1;
	cvt.rzi.f32.f32 	%f46, %f19;
	selp.f32 	%f41, %f39, %f35, %p12;
	selp.f32 	%f43, %f40, %f42, %p13;
	and.b32  	%r281, %r280, 2;
	setp.eq.f32 	%p15, %f46, %f19;
	mul.f32 	%f47, %f19, 0f00000000;
	setp.eq.s32 	%p14, %r281, 0;
	sub.f32 	%f44, %f17, %f41;
	selp.f32 	%f48, %f47, %f43, %p15;
	selp.f32 	%f45, %f41, %f44, %p14;
	setp.gt.f32 	%p16, %f19, 0f4B800000;
	add.f32 	%f49, %f48, 0f3F800000;
	selp.f32 	%f50, %f49, %f45, %p16;
	mov.b32 	%r267, %f50;
	mov.b32 	%r270, %f48;
	ld.param.u64 	%rd6, [_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_4];
	ld.param.u64 	%rd7, [_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_4+16];
	ld.param.u64 	%rd14, [_Z15julia_frb_1040713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_8];
	xor.b32  	%r266, %r270, -2147483648;
	mov.b32 	%r301, %f3;
	mov.b32 	%r302, %f7;
	mov.b32 	%r304, %f4;
	mov.b32 	%r305, %f8;
	add.s64 	%rd16, %rd115, -4;
	// begin inline asm
	cvt.rn.f16x2.f32 %r265, %r267, %r266;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r268, %r270, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r300, %r302, %r301;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r303, %r305, %r304;
	// end inline asm
	mov.b32 	%r325, %f11;
	mov.b32 	%r326, %f15;
	// begin inline asm
	cvt.rn.f16x2.f32 %r324, %r326, %r325;
	// end inline asm
	mov.b32 	%r331, %f12;
	xor.b32  	%r328, %r331, -2147483648;
	mov.b32 	%r332, %f16;
	xor.b32  	%r329, %r332, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r327, %r329, %r328;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r330, %r332, %r331;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r333, %r326, %r325;
	// end inline asm
	setp.eq.s32 	%p54, %r2, %r3;
	selp.f32 	%f182, 0f3F800000, 0f00000000, %p54;
	mov.b32 	%r338, %f182;
	mov.u32 	%r337, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r336, %r338, %r337;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r339, %r356, %r338;
	// end inline asm
	setp.eq.s32 	%p55, %r7, %r3;
	selp.f32 	%f183, 0f3F800000, 0f00000000, %p55;
	selp.f32 	%f184, 0f00000000, %f183, %p17;
	setp.eq.s32 	%p56, %r8, %r3;
	selp.f32 	%f185, 0f3F800000, 0f00000000, %p56;
	selp.f32 	%f186, 0f00000000, %f185, %p25;
	mov.b32 	%r343, %f184;
	mov.b32 	%r344, %f186;
	// begin inline asm
	cvt.rn.f16x2.f32 %r342, %r344, %r343;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r345, %r356, %r356;
	// end inline asm
	selp.f32 	%f187, 0f00000000, %f183, %p1;
	selp.f32 	%f188, 0f00000000, %f185, %p2;
	mov.b32 	%r349, %f187;
	mov.b32 	%r350, %f188;
	// begin inline asm
	cvt.rn.f16x2.f32 %r348, %r350, %r349;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r351, %r337, %r337;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r354, %r356, %r356;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r357, %r350, %r349;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r154, %r130, 8;
	shr.u32 	%r155, %r131, 8;
	shr.u32 	%r156, %r132, 8;
	shr.u32 	%r157, %r133, 8;
	shr.u32 	%r158, %r134, 8;
	shr.u32 	%r159, %r135, 8;
	shr.u32 	%r160, %r136, 8;
	shr.u32 	%r161, %r137, 8;
	shr.u32 	%r162, %r138, 8;
	shr.u32 	%r163, %r139, 8;
	shr.u32 	%r164, %r140, 8;
	shr.u32 	%r165, %r141, 8;
	shr.u32 	%r166, %r142, 8;
	shr.u32 	%r167, %r143, 8;
	shr.u32 	%r168, %r144, 8;
	shr.u32 	%r169, %r145, 8;
	shr.u32 	%r170, %r146, 8;
	shr.u32 	%r171, %r147, 8;
	shr.u32 	%r172, %r148, 8;
	shr.u32 	%r173, %r149, 8;
	shr.u32 	%r174, %r150, 8;
	shr.u32 	%r175, %r151, 8;
	shr.u32 	%r176, %r152, 8;
	shr.u32 	%r177, %r153, 8;
	and.b32  	%r859, %r1, 1;
	mul.lo.s32 	%r860, %r859, 4112;
	and.b32  	%r861, %r3, 1;
	mad.lo.s32 	%r862, %r861, 1028, %r860;
	bfe.u32 	%r863, %r1, 1, 1;
	mad.lo.s32 	%r864, %r863, 2056, %r862;
	mad.lo.s32 	%r865, %r225, 257, %r864;
	add.s32 	%r866, %r865, %r2639;
	mad.lo.s32 	%r867, %r2638, 6, %r866;
	bfe.u32 	%r868, %r1, 3, 1;
	mad.lo.s32 	%r869, %r868, 514, %r867;
	cvt.u64.u32 	%rd46, %r869;
	add.s32 	%r870, %r869, 8256;
	cvt.u64.u32 	%rd47, %r870;
	add.s32 	%r871, %r869, 32;
	cvt.u64.u32 	%rd48, %r871;
	add.s32 	%r872, %r869, 8288;
	cvt.u64.u32 	%rd49, %r872;
	and.b32  	%r873, %r212, 1;
	bfe.u32 	%r874, %r212, 2, 1;
	bfe.u32 	%r875, %r212, 1, 1;
	shr.u32 	%r876, %r212, 4;
	and.b32  	%r877, %r34, 1;
	cvt.u16.u32 	%rs95, %r212;
	shl.b16 	%rs96, %rs95, 1;
	and.b16  	%rs97, %rs96, 254;
	mul.lo.s16 	%rs98, %rs97, 171;
	shr.u16 	%rs99, %rs98, 13;
	mul.lo.s16 	%rs100, %rs99, 48;
	sub.s16 	%rs101, %rs96, %rs100;
	and.b16  	%rs102, %rs101, 254;
	mul.wide.u16 	%r178, %rs102, 24;
	or.b16  	%rs103, %rs96, 1;
	and.b16  	%rs104, %rs103, 255;
	mul.lo.s16 	%rs105, %rs104, 171;
	shr.u16 	%rs106, %rs105, 13;
	mul.lo.s16 	%rs107, %rs106, 48;
	sub.s16 	%rs108, %rs103, %rs107;
	and.b16  	%rs109, %rs108, 255;
	mul.wide.u16 	%r179, %rs109, 24;
	add.s32 	%r878, %r869, 64;
	cvt.u64.u32 	%rd50, %r878;
	add.s32 	%r879, %r869, 8320;
	cvt.u64.u32 	%rd51, %r879;
	add.s32 	%r880, %r869, 96;
	cvt.u64.u32 	%rd52, %r880;
	add.s32 	%r881, %r869, 8352;
	cvt.u64.u32 	%rd53, %r881;
	add.s32 	%r882, %r869, 128;
	cvt.u64.u32 	%rd54, %r882;
	add.s32 	%r883, %r869, 8384;
	cvt.u64.u32 	%rd55, %r883;
	add.s32 	%r884, %r869, 160;
	cvt.u64.u32 	%rd56, %r884;
	add.s32 	%r885, %r869, 8416;
	cvt.u64.u32 	%rd57, %r885;
	add.s32 	%r886, %r869, 192;
	cvt.u64.u32 	%rd58, %r886;
	add.s32 	%r887, %r869, 8448;
	cvt.u64.u32 	%rd59, %r887;
	add.s32 	%r888, %r869, 224;
	cvt.u64.u32 	%rd60, %r888;
	add.s32 	%r889, %r869, 8480;
	cvt.u64.u32 	%rd61, %r889;
	mad.lo.s32 	%r890, %r873, 4112, %r2637;
	mad.lo.s32 	%r891, %r875, 2056, %r890;
	mad.lo.s32 	%r892, %r874, 1028, %r891;
	mad.lo.s32 	%r893, %r877, 514, %r892;
	mad.lo.s32 	%r894, %r876, 257, %r893;
	add.s32 	%r895, %r894, 8289;
	cvt.u64.u32 	%rd62, %r895;
	mul.wide.u32 	%rd294, %r895, 4;
	add.s64 	%rd295, %rd294, %rd14;
	add.s64 	%rd63, %rd295, -4;
	add.s32 	%r896, %r894, 33;
	cvt.u64.u32 	%rd64, %r896;
	mul.wide.u32 	%rd296, %r896, 4;
	add.s64 	%rd297, %rd296, %rd14;
	add.s64 	%rd65, %rd297, -4;
	add.s32 	%r897, %r894, 8257;
	cvt.u64.u32 	%rd66, %r897;
	mul.wide.u32 	%rd298, %r897, 4;
	add.s64 	%rd299, %rd298, %rd14;
	add.s64 	%rd67, %rd299, -4;
	add.s32 	%r898, %r894, 1;
	cvt.u64.u32 	%rd68, %r898;
	mul.wide.u32 	%rd300, %r898, 4;
	add.s64 	%rd301, %rd300, %rd14;
	add.s64 	%rd69, %rd301, -4;
	mov.u16 	%rs387, 25600;
	mov.u16 	%rs389, 21504;
	max.s64 	%rd110, %rd7, 0;
	mov.u32 	%r180, %r752;
	mov.u32 	%r181, %r752;
	bra.uni 	LBB0_148;
LBB0_193:                               // %L22134
                                        //   in Loop: Header=BB0_148 Depth=1
	bar.sync 	0;
	add.s32 	%r181, %r181, 4;
	@%p188 bra 	LBB0_194;
LBB0_148:                               // %L13100
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_181 Depth 2
	cvt.u32.u64 	%r2355, %rd46;
	setp.lt.u32 	%p176, %r2355, 16512;
	// begin inline asm
	mov.b32 %r904, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r915, {%rs389, %rs389};
	// end inline asm
	mov.u32 	%r902, 983055;
	// begin inline asm
	lop3.b32 %r901, %r902, %r130, %r904, 202;
	// end inline asm
	mov.u16 	%rs114, 18432;
	// begin inline asm
	mov.b32 %r905, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r906, %r904, %r905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r909, %r901, %r906;
	// end inline asm
	mov.u32 	%r913, 15728880;
	// begin inline asm
	lop3.b32 %r912, %r913, %r130, %r915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r916, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r917, %r915, %r916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r920, %r912, %r917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r923, %r902, %r154, %r904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r927, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r928, %r904, %r927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r931, %r923, %r928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r934, %r913, %r154, %r915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r938, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r939, %r915, %r938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r942, %r934, %r939;
	// end inline asm
	// begin inline asm
	mov.b32 %r950, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r961, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r947, %r902, %r131, %r950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r951, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r952, %r950, %r951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r955, %r947, %r952;
	// end inline asm
	// begin inline asm
	lop3.b32 %r958, %r913, %r131, %r961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r962, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r963, %r961, %r962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r966, %r958, %r963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r969, %r902, %r155, %r950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r973, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r974, %r950, %r973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r977, %r969, %r974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r980, %r913, %r155, %r961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r984, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r985, %r961, %r984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r988, %r980, %r985;
	// end inline asm
	// begin inline asm
	mov.b32 %r996, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1007, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r993, %r902, %r132, %r996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r997, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r998, %r996, %r997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1001, %r993, %r998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1004, %r913, %r132, %r1007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1008, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1009, %r1007, %r1008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1012, %r1004, %r1009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1015, %r902, %r156, %r996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1019, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1020, %r996, %r1019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1023, %r1015, %r1020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1026, %r913, %r156, %r1007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1030, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1031, %r1007, %r1030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1034, %r1026, %r1031;
	// end inline asm
	// begin inline asm
	mov.b32 %r1042, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1053, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1039, %r902, %r133, %r1042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1043, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1044, %r1042, %r1043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1047, %r1039, %r1044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1050, %r913, %r133, %r1053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1054, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1055, %r1053, %r1054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1058, %r1050, %r1055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1061, %r902, %r157, %r1042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1065, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1066, %r1042, %r1065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1069, %r1061, %r1066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1072, %r913, %r157, %r1053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1076, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1077, %r1053, %r1076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1080, %r1072, %r1077;
	// end inline asm
	// begin inline asm
	mov.b32 %r1088, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1099, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1085, %r902, %r134, %r1088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1089, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1090, %r1088, %r1089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1093, %r1085, %r1090;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1096, %r913, %r134, %r1099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1100, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1101, %r1099, %r1100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1104, %r1096, %r1101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1107, %r902, %r158, %r1088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1111, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1112, %r1088, %r1111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1115, %r1107, %r1112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1118, %r913, %r158, %r1099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1122, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1123, %r1099, %r1122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1126, %r1118, %r1123;
	// end inline asm
	// begin inline asm
	mov.b32 %r1134, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1145, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1131, %r902, %r135, %r1134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1135, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1136, %r1134, %r1135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1139, %r1131, %r1136;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1142, %r913, %r135, %r1145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1146, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1147, %r1145, %r1146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1150, %r1142, %r1147;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1153, %r902, %r159, %r1134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1157, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1158, %r1134, %r1157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1161, %r1153, %r1158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1164, %r913, %r159, %r1145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1168, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1169, %r1145, %r1168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1172, %r1164, %r1169;
	// end inline asm
	// begin inline asm
	mov.b32 %r1180, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1191, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1177, %r902, %r136, %r1180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1181, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1182, %r1180, %r1181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1185, %r1177, %r1182;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1188, %r913, %r136, %r1191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1192, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1193, %r1191, %r1192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1196, %r1188, %r1193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1199, %r902, %r160, %r1180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1203, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1204, %r1180, %r1203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1207, %r1199, %r1204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1210, %r913, %r160, %r1191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1214, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1215, %r1191, %r1214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1218, %r1210, %r1215;
	// end inline asm
	// begin inline asm
	mov.b32 %r1226, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1237, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1223, %r902, %r137, %r1226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1227, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1228, %r1226, %r1227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1231, %r1223, %r1228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1234, %r913, %r137, %r1237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1238, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1239, %r1237, %r1238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1242, %r1234, %r1239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1245, %r902, %r161, %r1226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1249, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1250, %r1226, %r1249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1253, %r1245, %r1250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1256, %r913, %r161, %r1237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1260, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1261, %r1237, %r1260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1264, %r1256, %r1261;
	// end inline asm
	// begin inline asm
	mov.b32 %r1272, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1283, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1269, %r902, %r138, %r1272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1273, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1274, %r1272, %r1273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1277, %r1269, %r1274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1280, %r913, %r138, %r1283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1284, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1285, %r1283, %r1284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1288, %r1280, %r1285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1291, %r902, %r162, %r1272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1295, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1296, %r1272, %r1295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1299, %r1291, %r1296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1302, %r913, %r162, %r1283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1306, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1307, %r1283, %r1306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1310, %r1302, %r1307;
	// end inline asm
	// begin inline asm
	mov.b32 %r1318, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1329, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1315, %r902, %r139, %r1318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1319, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1320, %r1318, %r1319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1323, %r1315, %r1320;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1326, %r913, %r139, %r1329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1330, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1331, %r1329, %r1330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1334, %r1326, %r1331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1337, %r902, %r163, %r1318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1341, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1342, %r1318, %r1341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1345, %r1337, %r1342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1348, %r913, %r163, %r1329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1352, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1353, %r1329, %r1352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1356, %r1348, %r1353;
	// end inline asm
	// begin inline asm
	mov.b32 %r1364, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1375, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1361, %r902, %r140, %r1364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1365, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1366, %r1364, %r1365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1369, %r1361, %r1366;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1372, %r913, %r140, %r1375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1376, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1377, %r1375, %r1376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1380, %r1372, %r1377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1383, %r902, %r164, %r1364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1387, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1388, %r1364, %r1387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1391, %r1383, %r1388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1394, %r913, %r164, %r1375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1398, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1399, %r1375, %r1398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1402, %r1394, %r1399;
	// end inline asm
	// begin inline asm
	mov.b32 %r1410, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1421, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1407, %r902, %r141, %r1410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1411, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1412, %r1410, %r1411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1415, %r1407, %r1412;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1418, %r913, %r141, %r1421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1422, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1423, %r1421, %r1422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1426, %r1418, %r1423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1429, %r902, %r165, %r1410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1433, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1434, %r1410, %r1433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1437, %r1429, %r1434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1440, %r913, %r165, %r1421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1444, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1445, %r1421, %r1444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1448, %r1440, %r1445;
	// end inline asm
	// begin inline asm
	mov.b32 %r1456, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1467, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1453, %r902, %r142, %r1456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1457, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1458, %r1456, %r1457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1461, %r1453, %r1458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1464, %r913, %r142, %r1467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1468, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1469, %r1467, %r1468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1472, %r1464, %r1469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1475, %r902, %r166, %r1456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1479, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1480, %r1456, %r1479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1483, %r1475, %r1480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1486, %r913, %r166, %r1467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1490, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1491, %r1467, %r1490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1494, %r1486, %r1491;
	// end inline asm
	// begin inline asm
	mov.b32 %r1502, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1513, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1499, %r902, %r143, %r1502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1503, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1504, %r1502, %r1503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1507, %r1499, %r1504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1510, %r913, %r143, %r1513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1514, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1515, %r1513, %r1514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1518, %r1510, %r1515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1521, %r902, %r167, %r1502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1525, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1526, %r1502, %r1525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1529, %r1521, %r1526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1532, %r913, %r167, %r1513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1536, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1537, %r1513, %r1536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1540, %r1532, %r1537;
	// end inline asm
	// begin inline asm
	mov.b32 %r1548, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1559, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1545, %r902, %r144, %r1548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1549, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1550, %r1548, %r1549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1553, %r1545, %r1550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1556, %r913, %r144, %r1559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1560, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1561, %r1559, %r1560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1564, %r1556, %r1561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1567, %r902, %r168, %r1548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1571, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1572, %r1548, %r1571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1575, %r1567, %r1572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1578, %r913, %r168, %r1559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1582, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1583, %r1559, %r1582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1586, %r1578, %r1583;
	// end inline asm
	// begin inline asm
	mov.b32 %r1594, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1605, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1591, %r902, %r145, %r1594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1595, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1596, %r1594, %r1595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1599, %r1591, %r1596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1602, %r913, %r145, %r1605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1606, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1607, %r1605, %r1606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1610, %r1602, %r1607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1613, %r902, %r169, %r1594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1617, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1618, %r1594, %r1617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1621, %r1613, %r1618;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1624, %r913, %r169, %r1605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1628, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1629, %r1605, %r1628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1632, %r1624, %r1629;
	// end inline asm
	// begin inline asm
	mov.b32 %r1640, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1651, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1637, %r902, %r146, %r1640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1641, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1642, %r1640, %r1641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1645, %r1637, %r1642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1648, %r913, %r146, %r1651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1652, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1653, %r1651, %r1652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1656, %r1648, %r1653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1659, %r902, %r170, %r1640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1663, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1664, %r1640, %r1663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1667, %r1659, %r1664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1670, %r913, %r170, %r1651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1674, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1675, %r1651, %r1674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1678, %r1670, %r1675;
	// end inline asm
	// begin inline asm
	mov.b32 %r1686, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1697, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1683, %r902, %r147, %r1686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1687, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1688, %r1686, %r1687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1691, %r1683, %r1688;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1694, %r913, %r147, %r1697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1698, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1699, %r1697, %r1698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1702, %r1694, %r1699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1705, %r902, %r171, %r1686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1709, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1710, %r1686, %r1709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1713, %r1705, %r1710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1716, %r913, %r171, %r1697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1720, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1721, %r1697, %r1720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1724, %r1716, %r1721;
	// end inline asm
	// begin inline asm
	mov.b32 %r1732, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1743, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1729, %r902, %r148, %r1732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1733, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1734, %r1732, %r1733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1737, %r1729, %r1734;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1740, %r913, %r148, %r1743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1744, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1745, %r1743, %r1744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1748, %r1740, %r1745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1751, %r902, %r172, %r1732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1755, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1756, %r1732, %r1755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1759, %r1751, %r1756;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1762, %r913, %r172, %r1743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1766, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1767, %r1743, %r1766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1770, %r1762, %r1767;
	// end inline asm
	// begin inline asm
	mov.b32 %r1778, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1789, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1775, %r902, %r149, %r1778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1779, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1780, %r1778, %r1779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1783, %r1775, %r1780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1786, %r913, %r149, %r1789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1790, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1791, %r1789, %r1790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1794, %r1786, %r1791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1797, %r902, %r173, %r1778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1801, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1802, %r1778, %r1801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1805, %r1797, %r1802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1808, %r913, %r173, %r1789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1812, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1813, %r1789, %r1812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1816, %r1808, %r1813;
	// end inline asm
	// begin inline asm
	mov.b32 %r1824, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1835, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1821, %r902, %r150, %r1824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1825, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1826, %r1824, %r1825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1829, %r1821, %r1826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1832, %r913, %r150, %r1835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1836, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1837, %r1835, %r1836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1840, %r1832, %r1837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1843, %r902, %r174, %r1824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1847, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1848, %r1824, %r1847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1851, %r1843, %r1848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1854, %r913, %r174, %r1835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1858, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1859, %r1835, %r1858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1862, %r1854, %r1859;
	// end inline asm
	// begin inline asm
	mov.b32 %r1870, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1881, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1867, %r902, %r151, %r1870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1871, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1872, %r1870, %r1871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1875, %r1867, %r1872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1878, %r913, %r151, %r1881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1882, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1883, %r1881, %r1882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1886, %r1878, %r1883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1889, %r902, %r175, %r1870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1893, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1894, %r1870, %r1893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1897, %r1889, %r1894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1900, %r913, %r175, %r1881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1904, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1905, %r1881, %r1904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1908, %r1900, %r1905;
	// end inline asm
	// begin inline asm
	mov.b32 %r1916, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1927, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1913, %r902, %r152, %r1916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1917, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1918, %r1916, %r1917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1921, %r1913, %r1918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1924, %r913, %r152, %r1927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1928, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1929, %r1927, %r1928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1932, %r1924, %r1929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1935, %r902, %r176, %r1916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1939, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1940, %r1916, %r1939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1943, %r1935, %r1940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1946, %r913, %r176, %r1927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1950, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1951, %r1927, %r1950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1954, %r1946, %r1951;
	// end inline asm
	// begin inline asm
	mov.b32 %r1962, {%rs387, %rs387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1973, {%rs389, %rs389};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1959, %r902, %r153, %r1962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1963, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1964, %r1962, %r1963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1967, %r1959, %r1964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1970, %r913, %r153, %r1973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1974, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1975, %r1973, %r1974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1978, %r1970, %r1975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1981, %r902, %r177, %r1962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1985, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1986, %r1962, %r1985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1989, %r1981, %r1986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1992, %r913, %r177, %r1973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1996, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1997, %r1973, %r1996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2000, %r1992, %r1997;
	// end inline asm
	setp.eq.s32 	%p177, %r181, 0;
	selp.b32 	%r2356, %r909, 0, %p177;
	setp.eq.s32 	%p178, %r181, 4;
	selp.b32 	%r2357, %r1093, %r2356, %p178;
	setp.eq.s32 	%p179, %r181, 8;
	selp.b32 	%r2358, %r1277, %r2357, %p179;
	setp.eq.s32 	%p180, %r181, 12;
	selp.b32 	%r2359, %r1461, %r2358, %p180;
	setp.eq.s32 	%p181, %r181, 16;
	selp.b32 	%r2360, %r1645, %r2359, %p181;
	setp.eq.s32 	%p182, %r181, 20;
	selp.b32 	%r2361, %r1829, %r2360, %p182;
	setp.eq.s32 	%p183, %r181, 24;
	selp.b32 	%r2362, %r931, %r2361, %p183;
	setp.eq.s32 	%p184, %r181, 28;
	selp.b32 	%r2363, %r1115, %r2362, %p184;
	setp.eq.s32 	%p185, %r181, 32;
	selp.b32 	%r2364, %r1299, %r2363, %p185;
	setp.eq.s32 	%p186, %r181, 36;
	selp.b32 	%r2365, %r1483, %r2364, %p186;
	setp.eq.s32 	%p187, %r181, 40;
	selp.b32 	%r2366, %r1667, %r2365, %p187;
	setp.eq.s32 	%p188, %r181, 44;
	selp.b32 	%r2005, %r1851, %r2366, %p188;
	selp.b32 	%r2367, %r920, 0, %p177;
	selp.b32 	%r2368, %r1104, %r2367, %p178;
	selp.b32 	%r2369, %r1288, %r2368, %p179;
	selp.b32 	%r2370, %r1472, %r2369, %p180;
	selp.b32 	%r2371, %r1656, %r2370, %p181;
	selp.b32 	%r2372, %r1840, %r2371, %p182;
	selp.b32 	%r2373, %r942, %r2372, %p183;
	selp.b32 	%r2374, %r1126, %r2373, %p184;
	selp.b32 	%r2375, %r1310, %r2374, %p185;
	selp.b32 	%r2376, %r1494, %r2375, %p186;
	selp.b32 	%r2377, %r1678, %r2376, %p187;
	selp.b32 	%r2008, %r1862, %r2377, %p188;
	selp.b32 	%r2378, %r955, 0, %p177;
	selp.b32 	%r2379, %r1139, %r2378, %p178;
	selp.b32 	%r2380, %r1323, %r2379, %p179;
	selp.b32 	%r2381, %r1507, %r2380, %p180;
	selp.b32 	%r2382, %r1691, %r2381, %p181;
	selp.b32 	%r2383, %r1875, %r2382, %p182;
	selp.b32 	%r2384, %r977, %r2383, %p183;
	selp.b32 	%r2385, %r1161, %r2384, %p184;
	selp.b32 	%r2386, %r1345, %r2385, %p185;
	selp.b32 	%r2387, %r1529, %r2386, %p186;
	selp.b32 	%r2388, %r1713, %r2387, %p187;
	selp.b32 	%r2011, %r1897, %r2388, %p188;
	selp.b32 	%r2389, %r966, 0, %p177;
	selp.b32 	%r2390, %r1150, %r2389, %p178;
	selp.b32 	%r2391, %r1334, %r2390, %p179;
	selp.b32 	%r2392, %r1518, %r2391, %p180;
	selp.b32 	%r2393, %r1702, %r2392, %p181;
	selp.b32 	%r2394, %r1886, %r2393, %p182;
	selp.b32 	%r2395, %r988, %r2394, %p183;
	selp.b32 	%r2396, %r1172, %r2395, %p184;
	selp.b32 	%r2397, %r1356, %r2396, %p185;
	selp.b32 	%r2398, %r1540, %r2397, %p186;
	selp.b32 	%r2399, %r1724, %r2398, %p187;
	selp.b32 	%r2014, %r1908, %r2399, %p188;
	selp.b32 	%r2400, %r1001, 0, %p177;
	selp.b32 	%r2401, %r1185, %r2400, %p178;
	selp.b32 	%r2402, %r1369, %r2401, %p179;
	selp.b32 	%r2403, %r1553, %r2402, %p180;
	selp.b32 	%r2404, %r1737, %r2403, %p181;
	selp.b32 	%r2405, %r1921, %r2404, %p182;
	selp.b32 	%r2406, %r1023, %r2405, %p183;
	selp.b32 	%r2407, %r1207, %r2406, %p184;
	selp.b32 	%r2408, %r1391, %r2407, %p185;
	selp.b32 	%r2409, %r1575, %r2408, %p186;
	selp.b32 	%r2410, %r1759, %r2409, %p187;
	selp.b32 	%r2017, %r1943, %r2410, %p188;
	selp.b32 	%r2411, %r1012, 0, %p177;
	selp.b32 	%r2412, %r1196, %r2411, %p178;
	selp.b32 	%r2413, %r1380, %r2412, %p179;
	selp.b32 	%r2414, %r1564, %r2413, %p180;
	selp.b32 	%r2415, %r1748, %r2414, %p181;
	selp.b32 	%r2416, %r1932, %r2415, %p182;
	selp.b32 	%r2417, %r1034, %r2416, %p183;
	selp.b32 	%r2418, %r1218, %r2417, %p184;
	selp.b32 	%r2419, %r1402, %r2418, %p185;
	selp.b32 	%r2420, %r1586, %r2419, %p186;
	selp.b32 	%r2421, %r1770, %r2420, %p187;
	selp.b32 	%r2020, %r1954, %r2421, %p188;
	selp.b32 	%r2422, %r1047, 0, %p177;
	selp.b32 	%r2423, %r1231, %r2422, %p178;
	selp.b32 	%r2424, %r1415, %r2423, %p179;
	selp.b32 	%r2425, %r1599, %r2424, %p180;
	selp.b32 	%r2426, %r1783, %r2425, %p181;
	selp.b32 	%r2427, %r1967, %r2426, %p182;
	selp.b32 	%r2428, %r1069, %r2427, %p183;
	selp.b32 	%r2429, %r1253, %r2428, %p184;
	selp.b32 	%r2430, %r1437, %r2429, %p185;
	selp.b32 	%r2431, %r1621, %r2430, %p186;
	selp.b32 	%r2432, %r1805, %r2431, %p187;
	selp.b32 	%r2023, %r1989, %r2432, %p188;
	selp.b32 	%r2433, %r1058, 0, %p177;
	selp.b32 	%r2434, %r1242, %r2433, %p178;
	selp.b32 	%r2435, %r1426, %r2434, %p179;
	selp.b32 	%r2436, %r1610, %r2435, %p180;
	selp.b32 	%r2437, %r1794, %r2436, %p181;
	selp.b32 	%r2438, %r1978, %r2437, %p182;
	selp.b32 	%r2439, %r1080, %r2438, %p183;
	selp.b32 	%r2440, %r1264, %r2439, %p184;
	selp.b32 	%r2441, %r1448, %r2440, %p185;
	selp.b32 	%r2442, %r1632, %r2441, %p186;
	selp.b32 	%r2443, %r1816, %r2442, %p187;
	selp.b32 	%r2026, %r2000, %r2443, %p188;
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r222;
    mov.b32 {%r2im, %r2re}, %r2005;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2003, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r223;
    mov.b32 {%r2im, %r2re}, %r2008;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2006, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r222;
    mov.b32 {%r2im, %r2re}, %r2011;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2009, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r223;
    mov.b32 {%r2im, %r2re}, %r2014;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2012, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r222;
    mov.b32 {%r2im, %r2re}, %r2017;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2015, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r223;
    mov.b32 {%r2im, %r2re}, %r2020;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2018, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r222;
    mov.b32 {%r2im, %r2re}, %r2023;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2021, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r223;
    mov.b32 {%r2im, %r2re}, %r2026;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2024, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2087, %r2090}, {%r268, %r265}, {%r2003}, {%r752, %r752};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2096, %r2099}, {%r268, %r265}, {%r2006}, {%r752, %r752};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2105, %r2108}, {%r268, %r265}, {%r2009}, {%r752, %r752};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2114, %r2117}, {%r268, %r265}, {%r2012}, {%r752, %r752};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2123, %r2126}, {%r268, %r265}, {%r2015}, {%r752, %r752};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2132, %r2135}, {%r268, %r265}, {%r2018}, {%r752, %r752};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2141, %r2144}, {%r268, %r265}, {%r2021}, {%r752, %r752};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2150, %r2153}, {%r268, %r265}, {%r2024}, {%r752, %r752};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2083, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2085, %r2083, %r2087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2088, %r300, %r2090, %r2085;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2092, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2094, %r2092, %r2096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2097, %r300, %r2099, %r2094;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2101, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2103, %r2101, %r2105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2106, %r300, %r2108, %r2103;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2110, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2112, %r2110, %r2114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2115, %r300, %r2117, %r2112;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2119, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2121, %r2119, %r2123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2124, %r300, %r2126, %r2121;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2128, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2130, %r2128, %r2132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2133, %r300, %r2135, %r2130;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2137, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2139, %r2137, %r2141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2142, %r300, %r2144, %r2139;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2146, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2148, %r2146, %r2150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2151, %r300, %r2153, %r2148;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2155, %r303, %r2090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2158, %r300, %r2087, %r2155;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2162, %r303, %r2099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2165, %r300, %r2096, %r2162;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2169, %r303, %r2108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2172, %r300, %r2105, %r2169;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2176, %r303, %r2117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2179, %r300, %r2114, %r2176;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2183, %r303, %r2126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2186, %r300, %r2123, %r2183;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2190, %r303, %r2135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2193, %r300, %r2132, %r2190;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2197, %r303, %r2144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2200, %r300, %r2141, %r2197;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2204, %r303, %r2153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2207, %r300, %r2150, %r2204;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2211, %r2212}, {%r333, %r327, %r330, %r324}, {%r2158, %r2088}, {%r752, %r752};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2221, %r2222}, {%r333, %r327, %r330, %r324}, {%r2165, %r2097}, {%r752, %r752};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2231, %r2232}, {%r333, %r327, %r330, %r324}, {%r2172, %r2106}, {%r752, %r752};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2241, %r2242}, {%r333, %r327, %r330, %r324}, {%r2179, %r2115}, {%r752, %r752};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2251, %r2252}, {%r333, %r327, %r330, %r324}, {%r2186, %r2124}, {%r752, %r752};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2261, %r2262}, {%r333, %r327, %r330, %r324}, {%r2193, %r2133}, {%r752, %r752};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2271, %r2272}, {%r333, %r327, %r330, %r324}, {%r2200, %r2142}, {%r752, %r752};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2281, %r2282}, {%r333, %r327, %r330, %r324}, {%r2207, %r2151}, {%r752, %r752};
	// end inline asm
	@%p176 bra 	LBB0_150;
	bra.uni 	LBB0_149;
LBB0_150:                               // %L15583
                                        //   in Loop: Header=BB0_148 Depth=1
	// begin inline asm
	prmt.b32 %r2291, %r2211, %r2212, %r561;
	// end inline asm
	cvt.u32.u64 	%r2444, %rd47;
	setp.lt.u32 	%p189, %r2444, 16512;
	shl.b64 	%rd302, %rd46, 2;
	add.s64 	%rd303, %rd14, %rd302;
	st.global.u32 	[%rd303], %r2291;
	@%p189 bra 	LBB0_152;
	bra.uni 	LBB0_151;
LBB0_152:                               // %L15886
                                        //   in Loop: Header=BB0_148 Depth=1
	// begin inline asm
	prmt.b32 %r2295, %r2211, %r2212, %r565;
	// end inline asm
	cvt.u32.u64 	%r2445, %rd48;
	setp.lt.u32 	%p190, %r2445, 16512;
	shl.b64 	%rd304, %rd47, 2;
	add.s64 	%rd305, %rd14, %rd304;
	st.global.u32 	[%rd305], %r2295;
	@%p190 bra 	LBB0_154;
	bra.uni 	LBB0_153;
LBB0_154:                               // %L16184
                                        //   in Loop: Header=BB0_148 Depth=1
	// begin inline asm
	prmt.b32 %r2299, %r2221, %r2222, %r561;
	// end inline asm
	cvt.u32.u64 	%r2446, %rd49;
	setp.lt.u32 	%p191, %r2446, 16512;
	shl.b64 	%rd306, %rd48, 2;
	add.s64 	%rd307, %rd14, %rd306;
	st.global.u32 	[%rd307], %r2299;
	@%p191 bra 	LBB0_156;
	bra.uni 	LBB0_155;
LBB0_156:                               // %L16488
                                        //   in Loop: Header=BB0_148 Depth=1
	// begin inline asm
	prmt.b32 %r2303, %r2221, %r2222, %r565;
	// end inline asm
	cvt.u32.u64 	%r2447, %rd50;
	setp.lt.u32 	%p192, %r2447, 16512;
	shl.b64 	%rd308, %rd49, 2;
	add.s64 	%rd309, %rd14, %rd308;
	st.global.u32 	[%rd309], %r2303;
	@%p192 bra 	LBB0_158;
	bra.uni 	LBB0_157;
LBB0_158:                               // %L16786
                                        //   in Loop: Header=BB0_148 Depth=1
	// begin inline asm
	prmt.b32 %r2307, %r2231, %r2232, %r561;
	// end inline asm
	cvt.u32.u64 	%r2448, %rd51;
	setp.lt.u32 	%p193, %r2448, 16512;
	shl.b64 	%rd310, %rd50, 2;
	add.s64 	%rd311, %rd14, %rd310;
	st.global.u32 	[%rd311], %r2307;
	@%p193 bra 	LBB0_160;
	bra.uni 	LBB0_159;
LBB0_160:                               // %L17090
                                        //   in Loop: Header=BB0_148 Depth=1
	// begin inline asm
	prmt.b32 %r2311, %r2231, %r2232, %r565;
	// end inline asm
	cvt.u32.u64 	%r2449, %rd52;
	setp.lt.u32 	%p194, %r2449, 16512;
	shl.b64 	%rd312, %rd51, 2;
	add.s64 	%rd313, %rd14, %rd312;
	st.global.u32 	[%rd313], %r2311;
	@%p194 bra 	LBB0_162;
	bra.uni 	LBB0_161;
LBB0_162:                               // %L17389
                                        //   in Loop: Header=BB0_148 Depth=1
	// begin inline asm
	prmt.b32 %r2315, %r2241, %r2242, %r561;
	// end inline asm
	cvt.u32.u64 	%r2450, %rd53;
	setp.lt.u32 	%p195, %r2450, 16512;
	shl.b64 	%rd314, %rd52, 2;
	add.s64 	%rd315, %rd14, %rd314;
	st.global.u32 	[%rd315], %r2315;
	@%p195 bra 	LBB0_164;
	bra.uni 	LBB0_163;
LBB0_164:                               // %L17694
                                        //   in Loop: Header=BB0_148 Depth=1
	// begin inline asm
	prmt.b32 %r2319, %r2241, %r2242, %r565;
	// end inline asm
	cvt.u32.u64 	%r2451, %rd54;
	setp.lt.u32 	%p196, %r2451, 16512;
	shl.b64 	%rd316, %rd53, 2;
	add.s64 	%rd317, %rd14, %rd316;
	st.global.u32 	[%rd317], %r2319;
	@%p196 bra 	LBB0_166;
	bra.uni 	LBB0_165;
LBB0_166:                               // %L17992
                                        //   in Loop: Header=BB0_148 Depth=1
	// begin inline asm
	prmt.b32 %r2323, %r2251, %r2252, %r561;
	// end inline asm
	cvt.u32.u64 	%r2452, %rd55;
	setp.lt.u32 	%p197, %r2452, 16512;
	shl.b64 	%rd318, %rd54, 2;
	add.s64 	%rd319, %rd14, %rd318;
	st.global.u32 	[%rd319], %r2323;
	@%p197 bra 	LBB0_168;
	bra.uni 	LBB0_167;
LBB0_168:                               // %L18296
                                        //   in Loop: Header=BB0_148 Depth=1
	// begin inline asm
	prmt.b32 %r2327, %r2251, %r2252, %r565;
	// end inline asm
	cvt.u32.u64 	%r2453, %rd56;
	setp.lt.u32 	%p198, %r2453, 16512;
	shl.b64 	%rd320, %rd55, 2;
	add.s64 	%rd321, %rd14, %rd320;
	st.global.u32 	[%rd321], %r2327;
	@%p198 bra 	LBB0_170;
	bra.uni 	LBB0_169;
LBB0_170:                               // %L18595
                                        //   in Loop: Header=BB0_148 Depth=1
	// begin inline asm
	prmt.b32 %r2331, %r2261, %r2262, %r561;
	// end inline asm
	cvt.u32.u64 	%r2454, %rd57;
	setp.lt.u32 	%p199, %r2454, 16512;
	shl.b64 	%rd322, %rd56, 2;
	add.s64 	%rd323, %rd14, %rd322;
	st.global.u32 	[%rd323], %r2331;
	@%p199 bra 	LBB0_172;
	bra.uni 	LBB0_171;
LBB0_172:                               // %L18900
                                        //   in Loop: Header=BB0_148 Depth=1
	// begin inline asm
	prmt.b32 %r2335, %r2261, %r2262, %r565;
	// end inline asm
	cvt.u32.u64 	%r2455, %rd58;
	setp.lt.u32 	%p200, %r2455, 16512;
	shl.b64 	%rd324, %rd57, 2;
	add.s64 	%rd325, %rd14, %rd324;
	st.global.u32 	[%rd325], %r2335;
	@%p200 bra 	LBB0_174;
	bra.uni 	LBB0_173;
LBB0_174:                               // %L19198
                                        //   in Loop: Header=BB0_148 Depth=1
	// begin inline asm
	prmt.b32 %r2339, %r2271, %r2272, %r561;
	// end inline asm
	cvt.u32.u64 	%r2456, %rd59;
	setp.lt.u32 	%p201, %r2456, 16512;
	shl.b64 	%rd326, %rd58, 2;
	add.s64 	%rd327, %rd14, %rd326;
	st.global.u32 	[%rd327], %r2339;
	@%p201 bra 	LBB0_176;
	bra.uni 	LBB0_175;
LBB0_176:                               // %L19502
                                        //   in Loop: Header=BB0_148 Depth=1
	// begin inline asm
	prmt.b32 %r2343, %r2271, %r2272, %r565;
	// end inline asm
	cvt.u32.u64 	%r2457, %rd60;
	setp.lt.u32 	%p202, %r2457, 16512;
	shl.b64 	%rd328, %rd59, 2;
	add.s64 	%rd329, %rd14, %rd328;
	st.global.u32 	[%rd329], %r2343;
	@%p202 bra 	LBB0_178;
	bra.uni 	LBB0_177;
LBB0_178:                               // %L19801
                                        //   in Loop: Header=BB0_148 Depth=1
	// begin inline asm
	prmt.b32 %r2347, %r2281, %r2282, %r561;
	// end inline asm
	cvt.u32.u64 	%r2458, %rd61;
	setp.lt.u32 	%p203, %r2458, 16512;
	shl.b64 	%rd330, %rd60, 2;
	add.s64 	%rd331, %rd14, %rd330;
	st.global.u32 	[%rd331], %r2347;
	@%p203 bra 	LBB0_180;
	bra.uni 	LBB0_179;
LBB0_180:                               // %L20106
                                        //   in Loop: Header=BB0_148 Depth=1
	// begin inline asm
	prmt.b32 %r2351, %r2281, %r2282, %r565;
	// end inline asm
	shl.b64 	%rd333, %rd61, 2;
	add.s64 	%rd334, %rd14, %rd333;
	st.global.u32 	[%rd334], %r2351;
	bar.sync 	0;
	mov.u64 	%rd82, 0;
	mov.u64 	%rd78, %rd68;
	mov.u64 	%rd79, %rd66;
	mov.u64 	%rd80, %rd64;
	mov.u64 	%rd81, %rd62;
	bra.uni 	LBB0_181;
LBB0_191:                               // %L22111
                                        //   in Loop: Header=BB0_181 Depth=2
	// begin inline asm
	fma.rn.f16x2 %r2616, %r2582, %r2582, %r2459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2620, %r2583, %r2583, %r2616;
	// end inline asm
	cvt.u64.u32 	%rd348, %r179;
	add.s64 	%rd349, %rd97, %rd348;
	shl.b64 	%rd350, %rd349, 2;
	add.s64 	%rd351, %rd6, %rd350;
	st.global.u32 	[%rd351+4608], %r2620;
LBB0_192:                               // %L22119
                                        //   in Loop: Header=BB0_181 Depth=2
	add.s32 	%r180, %r180, 1;
	add.s64 	%rd82, %rd82, 256;
	add.s64 	%rd81, %rd81, 64;
	add.s64 	%rd80, %rd80, 64;
	add.s64 	%rd79, %rd79, 64;
	add.s64 	%rd78, %rd78, 64;
	cvt.u32.u64 	%r2633, %rd82;
	setp.ne.s32 	%p211, %r2633, 1024;
	@%p211 bra 	LBB0_181;
	bra.uni 	LBB0_193;
LBB0_181:                               // %L20133
                                        //   Parent Loop BB0_148 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.u32 	%p204, %r1, 24;
	mov.u32 	%r2459, 0;
	mov.u32 	%r2667, %r2459;
	mov.u32 	%r2668, %r2459;
	mov.u32 	%r2669, %r2459;
	mov.u32 	%r2670, %r2459;
	@%p204 bra 	LBB0_211;
	bra.uni 	LBB0_182;
LBB0_211:                               // %oksrem5675
                                        //   in Loop: Header=BB0_181 Depth=2
	add.s64 	%rd335, %rd69, %rd82;
	ld.global.u32 	%r2670, [%rd335];
	add.s64 	%rd336, %rd67, %rd82;
	ld.global.u32 	%r2669, [%rd336];
	add.s64 	%rd337, %rd65, %rd82;
	ld.global.u32 	%r2668, [%rd337];
	add.s64 	%rd338, %rd63, %rd82;
	ld.global.u32 	%r2667, [%rd338];
LBB0_182:                               // %L21450
                                        //   in Loop: Header=BB0_181 Depth=2
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2492, %r2495}, {%r339, %r336}, {%r2670}, {%r2459, %r2459};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2501, %r2504}, {%r339, %r336}, {%r2669}, {%r2459, %r2459};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2510, %r2513}, {%r339, %r336}, {%r2668}, {%r2459, %r2459};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2519, %r2522}, {%r339, %r336}, {%r2667}, {%r2459, %r2459};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2488, %r345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2490, %r2488, %r2492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2493, %r342, %r2495, %r2490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2497, %r345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2499, %r2497, %r2501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2502, %r342, %r2504, %r2499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2506, %r345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2508, %r2506, %r2510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2511, %r342, %r2513, %r2508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2515, %r345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2517, %r2515, %r2519;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2520, %r342, %r2522, %r2517;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2524, %r345, %r2495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2527, %r342, %r2492, %r2524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2531, %r345, %r2504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2534, %r342, %r2501, %r2531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2538, %r345, %r2513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2541, %r342, %r2510, %r2538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2545, %r345, %r2522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2548, %r342, %r2519, %r2545;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2552, %r2553}, {%r357, %r351, %r354, %r348}, {%r2527, %r2493}, {%r2459, %r2459};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2562, %r2563}, {%r357, %r351, %r354, %r348}, {%r2534, %r2502}, {%r2459, %r2459};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2572, %r2573}, {%r357, %r351, %r354, %r348}, {%r2541, %r2511}, {%r2459, %r2459};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2582, %r2583}, {%r357, %r351, %r354, %r348}, {%r2548, %r2520}, {%r2459, %r2459};
	// end inline asm
	@%p34 bra 	LBB0_192;
// %bb.183:                             // %L21698
                                        //   in Loop: Header=BB0_181 Depth=2
	setp.lt.u32 	%p206, %r180, 48;
	@%p206 bra 	LBB0_212;
	bra.uni 	LBB0_184;
LBB0_212:                               // %oksrem6096
                                        //   in Loop: Header=BB0_181 Depth=2
	cvt.u16.u32 	%rs398, %r180;
	and.b16  	%rs399, %rs398, 255;
	mul.lo.s16 	%rs400, %rs399, 171;
	shr.u16 	%rs401, %rs400, 13;
	mul.lo.s16 	%rs402, %rs401, 48;
	sub.s16 	%rs403, %rs398, %rs402;
	and.b16  	%rs404, %rs403, 255;
	mul.wide.u16 	%r259, %rs404, 2304;
	or.b32  	%r260, %r259, %r684;
	add.s32 	%r261, %r260, %r178;
	add.s32 	%r2625, %r261, 1;
	cvt.u64.u32 	%rd109, %r2625;
	setp.lt.s64 	%p207, %rd110, %rd109;
	@%p207 bra 	LBB0_213;
// %bb.185:                             // %L21795
                                        //   in Loop: Header=BB0_181 Depth=2
	// begin inline asm
	fma.rn.f16x2 %r2592, %r2552, %r2552, %r2459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2596, %r2553, %r2553, %r2592;
	// end inline asm
	mul.wide.u32 	%rd339, %r261, 4;
	add.s64 	%rd340, %rd339, %rd6;
	st.global.u32 	[%rd340], %r2596;
	add.s32 	%r207, %r260, %r179;
	add.s32 	%r2626, %r207, 1;
	cvt.u64.u32 	%rd95, %r2626;
	setp.ge.s64 	%p208, %rd110, %rd95;
	@%p208 bra 	LBB0_187;
	bra.uni 	LBB0_186;
LBB0_187:                               // %L21900
                                        //   in Loop: Header=BB0_181 Depth=2
	// begin inline asm
	fma.rn.f16x2 %r2600, %r2562, %r2562, %r2459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2604, %r2563, %r2563, %r2600;
	// end inline asm
	mul.wide.u32 	%rd341, %r207, 4;
	add.s64 	%rd342, %rd341, %rd6;
	st.global.u32 	[%rd342], %r2604;
	add.s32 	%r2628, %r259, 1152;
	or.b32  	%r208, %r2628, %r684;
	add.s32 	%r2629, %r208, %r178;
	add.s32 	%r2630, %r2629, 1;
	cvt.u64.u32 	%rd96, %r2630;
	setp.ge.s64 	%p209, %rd110, %rd96;
	@%p209 bra 	LBB0_189;
	bra.uni 	LBB0_188;
LBB0_189:                               // %L22005
                                        //   in Loop: Header=BB0_181 Depth=2
	// begin inline asm
	fma.rn.f16x2 %r2608, %r2572, %r2572, %r2459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2612, %r2573, %r2573, %r2608;
	// end inline asm
	cvt.u64.u32 	%rd343, %r178;
	cvt.u64.u32 	%rd344, %r259;
	add.s64 	%rd97, %rd344, %rd20;
	add.s64 	%rd345, %rd97, %rd343;
	shl.b64 	%rd346, %rd345, 2;
	add.s64 	%rd347, %rd6, %rd346;
	st.global.u32 	[%rd347+4608], %r2612;
	add.s32 	%r2631, %r208, %r179;
	add.s32 	%r2632, %r2631, 1;
	cvt.u64.u32 	%rd98, %r2632;
	setp.ge.s64 	%p210, %rd110, %rd98;
	@%p210 bra 	LBB0_191;
// %bb.190:                             // %L22108
	{ // callseq 154, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13325, 
	(
	param0
	);
	} // callseq 154
LBB0_194:                               // %oksrem6273
	mov.u32 	%r2634, 0;
	st.global.u32 	[%rd16+4], %r2634;
	ret;
LBB0_184:                               // %L21714
	{ // callseq 158, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia_unreachable_13299, 
	(
	param0
	);
	} // callseq 158
LBB0_213:                               // %L21792
	{ // callseq 157, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13325, 
	(
	param0
	);
	} // callseq 157
LBB0_186:                               // %L21897
	{ // callseq 156, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13325, 
	(
	param0
	);
	} // callseq 156
LBB0_188:                               // %L22002
	{ // callseq 155, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13325, 
	(
	param0
	);
	} // callseq 155
LBB0_149:                               // %L15580
	{ // callseq 174, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13322, 
	(
	param0
	);
	} // callseq 174
LBB0_151:                               // %L15883
	{ // callseq 173, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13322, 
	(
	param0
	);
	} // callseq 173
LBB0_153:                               // %L16181
	{ // callseq 172, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13322, 
	(
	param0
	);
	} // callseq 172
LBB0_155:                               // %L16485
	{ // callseq 171, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13322, 
	(
	param0
	);
	} // callseq 171
LBB0_157:                               // %L16783
	{ // callseq 170, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13322, 
	(
	param0
	);
	} // callseq 170
LBB0_159:                               // %L17087
	{ // callseq 169, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13322, 
	(
	param0
	);
	} // callseq 169
LBB0_161:                               // %L17386
	{ // callseq 168, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13322, 
	(
	param0
	);
	} // callseq 168
LBB0_163:                               // %L17691
	{ // callseq 167, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13322, 
	(
	param0
	);
	} // callseq 167
LBB0_165:                               // %L17989
	{ // callseq 166, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13322, 
	(
	param0
	);
	} // callseq 166
LBB0_167:                               // %L18293
	{ // callseq 165, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13322, 
	(
	param0
	);
	} // callseq 165
LBB0_169:                               // %L18592
	{ // callseq 164, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13322, 
	(
	param0
	);
	} // callseq 164
LBB0_171:                               // %L18897
	{ // callseq 163, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13322, 
	(
	param0
	);
	} // callseq 163
LBB0_173:                               // %L19195
	{ // callseq 162, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13322, 
	(
	param0
	);
	} // callseq 162
LBB0_175:                               // %L19499
	{ // callseq 161, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13322, 
	(
	param0
	);
	} // callseq 161
LBB0_177:                               // %L19798
	{ // callseq 160, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13322, 
	(
	param0
	);
	} // callseq 160
LBB0_179:                               // %L20103
	{ // callseq 159, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13322, 
	(
	param0
	);
	} // callseq 159
LBB0_1:                                 // %L22
	{ // callseq 123, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia_unreachable_13299, 
	(
	param0
	);
	} // callseq 123
LBB0_3:                                 // %L60
	{ // callseq 124, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13301, 
	(
	param0
	);
	} // callseq 124
LBB0_5:                                 // %L127
	{ // callseq 125, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13301, 
	(
	param0
	);
	} // callseq 125
LBB0_7:                                 // %L194
	{ // callseq 126, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13304, 
	(
	param0
	);
	} // callseq 126
LBB0_9:                                 // %L223
	{ // callseq 217, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia_unreachable_13299, 
	(
	param0
	);
	} // callseq 217
LBB0_10:                                // %L248
	{ // callseq 216, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia_unreachable_13299, 
	(
	param0
	);
	} // callseq 216
LBB0_197:                               // %L271
	{ // callseq 215, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13307, 
	(
	param0
	);
	} // callseq 215
LBB0_206:                               // %L1934
	{ // callseq 214, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 214
LBB0_23:                                // %L2116
	{ // callseq 213, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 213
LBB0_25:                                // %L2298
	{ // callseq 212, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 212
LBB0_27:                                // %L2482
	{ // callseq 211, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 211
LBB0_29:                                // %L2664
	{ // callseq 210, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 210
LBB0_31:                                // %L2848
	{ // callseq 209, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 209
LBB0_33:                                // %L3032
	{ // callseq 208, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 208
LBB0_35:                                // %L3218
	{ // callseq 207, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 207
LBB0_37:                                // %L3400
	{ // callseq 206, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 206
LBB0_39:                                // %L3584
	{ // callseq 205, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 205
LBB0_41:                                // %L3768
	{ // callseq 204, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 204
LBB0_43:                                // %L3954
	{ // callseq 203, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 203
LBB0_45:                                // %L4138
	{ // callseq 202, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 202
LBB0_47:                                // %L4324
	{ // callseq 201, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 201
LBB0_49:                                // %L4510
	{ // callseq 200, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 200
LBB0_51:                                // %L4698
	{ // callseq 199, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 199
LBB0_53:                                // %L7585
	{ // callseq 198, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 198
LBB0_55:                                // %L7656
	{ // callseq 197, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 197
LBB0_57:                                // %L7727
	{ // callseq 196, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 196
LBB0_59:                                // %L7798
	{ // callseq 195, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 195
LBB0_61:                                // %L7869
	{ // callseq 194, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 194
LBB0_63:                                // %L7940
	{ // callseq 193, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 193
LBB0_65:                                // %L8011
	{ // callseq 192, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 192
LBB0_67:                                // %L8082
	{ // callseq 191, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 191
LBB0_69:                                // %L8153
	{ // callseq 190, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 190
LBB0_71:                                // %L8224
	{ // callseq 189, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 189
LBB0_73:                                // %L8295
	{ // callseq 188, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 188
LBB0_75:                                // %L8366
	{ // callseq 187, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 187
LBB0_77:                                // %L8437
	{ // callseq 186, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 186
LBB0_79:                                // %L8508
	{ // callseq 185, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 185
LBB0_81:                                // %L8579
	{ // callseq 184, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 184
LBB0_83:                                // %L8650
	{ // callseq 183, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 183
LBB0_85:                                // %L8721
	{ // callseq 182, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 182
LBB0_87:                                // %L8792
	{ // callseq 181, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 181
LBB0_89:                                // %L8863
	{ // callseq 180, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 180
LBB0_91:                                // %L8934
	{ // callseq 179, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 179
LBB0_93:                                // %L9005
	{ // callseq 178, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 178
LBB0_95:                                // %L9106
	{ // callseq 177, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 177
LBB0_97:                                // %L9177
	{ // callseq 176, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 176
LBB0_99:                                // %L9248
	{ // callseq 175, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 175
LBB0_199:                               // %L745
	{ // callseq 127, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13310, 
	(
	param0
	);
	} // callseq 127
LBB0_203:                               // %L911
	{ // callseq 129, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13313, 
	(
	param0
	);
	} // callseq 129
LBB0_21:                                // %L1049
	{ // callseq 128, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13313, 
	(
	param0
	);
	} // callseq 128
LBB0_210:                               // %L9432
	{ // callseq 153, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 153
LBB0_101:                               // %L9589
	{ // callseq 152, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 152
LBB0_103:                               // %L9746
	{ // callseq 151, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 151
LBB0_105:                               // %L9903
	{ // callseq 150, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 150
LBB0_107:                               // %L10060
	{ // callseq 149, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 149
LBB0_109:                               // %L10217
	{ // callseq 148, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 148
LBB0_111:                               // %L10374
	{ // callseq 147, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 147
LBB0_113:                               // %L10531
	{ // callseq 146, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 146
LBB0_115:                               // %L10688
	{ // callseq 145, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 145
LBB0_117:                               // %L10845
	{ // callseq 144, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 144
LBB0_119:                               // %L11002
	{ // callseq 143, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 143
LBB0_121:                               // %L11159
	{ // callseq 142, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 142
LBB0_123:                               // %L11316
	{ // callseq 141, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 141
LBB0_125:                               // %L11473
	{ // callseq 140, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 140
LBB0_127:                               // %L11630
	{ // callseq 139, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 139
LBB0_129:                               // %L11787
	{ // callseq 138, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 138
LBB0_131:                               // %L11944
	{ // callseq 137, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 137
LBB0_133:                               // %L12101
	{ // callseq 136, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 136
LBB0_135:                               // %L12258
	{ // callseq 135, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 135
LBB0_137:                               // %L12415
	{ // callseq 134, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 134
LBB0_139:                               // %L12572
	{ // callseq 133, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 133
LBB0_141:                               // %L12729
	{ // callseq 132, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 132
LBB0_143:                               // %L12886
	{ // callseq 131, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 131
LBB0_145:                               // %L13043
	{ // callseq 130, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd111;
	call.uni 
	julia__throw_boundserror_13316, 
	(
	param0
	);
	} // callseq 130
                                        // -- End function
}
