CHORD FRB beamformer
Compiling kernel...
// PTX CompilerJob of kernel #frb(CuDeviceVector{Int32, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int32, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Float16x2, 1}) for sm_86, minthreads=768, blocks_per_sm=1

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE // -- Begin function _Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE
.extern .func julia_unreachable_13823
(
	.param .align 8 .b8 julia_unreachable_13823_param_0[8]
)
;
.extern .func julia__throw_boundserror_13825
(
	.param .align 8 .b8 julia__throw_boundserror_13825_param_0[8]
)
;
.extern .func julia__throw_boundserror_13828
(
	.param .align 8 .b8 julia__throw_boundserror_13828_param_0[8]
)
;
                                        // @_Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE
.visible .entry _Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE(
	.param .align 8 .b8 _Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_0[8],
	.param .align 8 .b8 _Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_8[32]
)
.reqntid 768, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<97>;
	.reg .b16 	%rs<563>;
	.reg .f32 	%f<202>;
	.reg .b32 	%r<2707>;
	.reg .b64 	%rd<498>;

// %bb.0:                               // %conversion
	ld.param.u64 	%rd36, [_Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_0];
	mov.u32 	%r1, %ctaid.x;
	setp.lt.u32 	%p1, %r1, 256;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L25
	ld.param.u64 	%rd7, [_Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_6+16];
	mul.wide.u32 	%rd13, %r1, 16448;
	or.b64  	%rd37, %rd13, 1;
	add.s64 	%rd38, %rd13, 16448;
	setp.gt.u64 	%p2, %rd37, %rd38;
	selp.b64 	%rd39, %rd13, %rd38, %p2;
	max.s64 	%rd40, %rd7, 0;
	setp.lt.u64 	%p3, %rd39, %rd37;
	setp.le.s64 	%p4, %rd37, %rd40;
	setp.ne.s64 	%p5, %rd39, 0;
	setp.le.s64 	%p6, %rd39, %rd40;
	and.pred  	%p7, %p5, %p6;
	and.pred  	%p8, %p4, %p7;
	or.pred  	%p9, %p3, %p8;
	@%p9 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L92
	ld.param.u64 	%rd9, [_Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_7+16];
	cvt.u64.u32 	%rd12, %r1;
	mul.lo.s64 	%rd14, %rd12, 19224;
	or.b64  	%rd41, %rd14, 1;
	add.s64 	%rd42, %rd14, 19224;
	setp.gt.u64 	%p10, %rd41, %rd42;
	selp.b64 	%rd43, %rd14, %rd42, %p10;
	max.s64 	%rd44, %rd9, 0;
	setp.lt.u64 	%p11, %rd43, %rd41;
	setp.le.s64 	%p12, %rd41, %rd44;
	setp.ne.s64 	%p13, %rd43, 0;
	setp.le.s64 	%p14, %rd43, %rd44;
	and.pred  	%p15, %p13, %p14;
	and.pred  	%p16, %p12, %p15;
	or.pred  	%p17, %p11, %p16;
	@%p17 bra 	LBB0_6;
	bra.uni 	LBB0_5;
LBB0_6:                                 // %L159
	ld.param.u64 	%rd11, [_Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_8+16];
	mul.lo.s64 	%rd15, %rd12, 16512;
	or.b64  	%rd45, %rd15, 1;
	add.s64 	%rd46, %rd15, 16512;
	setp.gt.u64 	%p18, %rd45, %rd46;
	selp.b64 	%rd47, %rd15, %rd46, %p18;
	max.s64 	%rd48, %rd11, 0;
	setp.lt.u64 	%p19, %rd47, %rd45;
	setp.le.s64 	%p20, %rd45, %rd48;
	setp.ne.s64 	%p21, %rd47, 0;
	setp.le.s64 	%p22, %rd47, %rd48;
	and.pred  	%p23, %p21, %p22;
	and.pred  	%p24, %p20, %p23;
	or.pred  	%p25, %p19, %p24;
	@%p25 bra 	LBB0_38;
	bra.uni 	LBB0_7;
LBB0_38:                                // %oksrem
	mov.u32 	%r174, %tid.x;
	setp.gt.u32 	%p26, %r174, 31;
	@%p26 bra 	LBB0_8;
// %bb.39:                              // %oksrem16
	mov.u32 	%r175, %tid.y;
	setp.gt.u32 	%p27, %r175, 23;
	@%p27 bra 	LBB0_9;
// %bb.40:                              // %oksrem27
	ld.param.u64 	%rd5, [_Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_5];
	mul.lo.s32 	%r233, %r1, 768;
	or.b32  	%r234, %r174, %r233;
	cvt.u16.u32 	%rs1, %r175;
	and.b16  	%rs2, %rs1, 255;
	mul.lo.s16 	%rs3, %rs2, 171;
	shr.u16 	%rs4, %rs3, 12;
	mul.lo.s16 	%rs5, %rs4, 24;
	sub.s16 	%rs6, %rs1, %rs5;
	and.b16  	%rs7, %rs6, 255;
	mul.wide.u16 	%r177, %rs7, 32;
	add.s32 	%r236, %r177, %r234;
	mul.wide.u32 	%rd49, %r236, 4;
	add.s64 	%rd35, %rd5, %rd49;
	mov.u32 	%r237, 1;
	st.global.u32 	[%rd35], %r237;
	and.b32  	%r178, %r174, 3;
	shr.u32 	%r179, %r174, 2;
	mul.lo.s32 	%r238, %r178, %r179;
	and.b32  	%r239, %r238, 7;
	cvt.rn.f32.u32 	%f18, %r239;
	mov.f32 	%f19, 0f40800000;
	div.approx.f32 	%f20, %f18, %f19;
	add.f32 	%f21, %f20, %f20;
	mov.b32 	%r240, %f21;
	and.b32  	%r241, %r240, -2147483648;
	or.b32  	%r242, %r241, 1056964608;
	mov.b32 	%f22, %r242;
	add.f32 	%f23, %f21, %f22;
	cvt.rzi.f32.f32 	%f24, %f23;
	abs.f32 	%f25, %f21;
	setp.gt.f32 	%p28, %f25, 0f4B000000;
	selp.f32 	%f26, %f21, %f24, %p28;
	cvt.rzi.f32.f32 	%f27, %f21;
	setp.lt.f32 	%p29, %f25, 0f3F000000;
	selp.f32 	%f28, %f27, %f26, %p29;
	cvt.rzi.s32.f32 	%r243, %f28;
	fma.rn.f32 	%f29, %f28, 0fBF000000, %f20;
	mul.f32 	%f30, %f29, 0f34222169;
	fma.rn.f32 	%f31, %f29, 0f40490FDA, %f30;
	mul.f32 	%f32, %f31, %f31;
	fma.rn.f32 	%f33, %f32, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f34, %f33, %f32, 0f3D2AAABB;
	fma.rn.f32 	%f35, %f34, %f32, 0fBEFFFFFF;
	fma.rn.f32 	%f36, %f35, %f32, 0f3F800000;
	fma.rn.f32 	%f37, %f32, %f31, 0f00000000;
	fma.rn.f32 	%f38, %f32, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f39, %f38, %f32, 0fBE2AAAA8;
	fma.rn.f32 	%f40, %f39, %f37, %f31;
	and.b32  	%r244, %r243, 1;
	setp.eq.b32 	%p30, %r244, 1;
	selp.f32 	%f41, %f36, %f40, %p30;
	selp.f32 	%f42, %f40, %f36, %p30;
	and.b32  	%r245, %r243, 2;
	setp.eq.s32 	%p31, %r245, 0;
	neg.f32 	%f43, %f41;
	selp.f32 	%f44, %f41, %f43, %p31;
	add.s32 	%r246, %r243, 1;
	and.b32  	%r247, %r246, 2;
	mov.f32 	%f200, 0f00000000;
	cvt.rzi.f32.f32 	%f47, %f20;
	setp.eq.f32 	%p33, %f47, %f20;
	mul.f32 	%f48, %f20, 0f00000000;
	shl.b32 	%r182, %r174, 1;
	and.b32  	%r183, %r182, 6;
	or.b32  	%r184, %r183, 1;
	setp.eq.s32 	%p35, %r183, 6;
	mov.f32 	%f192, 0f41C00000;
	mul.lo.s32 	%r2643, %r183, %r179;
	mov.f32 	%f194, %f200;
	mov.f32 	%f195, %f200;
	@%p35 bra 	LBB0_11;
// %bb.10:                              // %L388
	cvt.u16.u32 	%rs8, %r2643;
	and.b16  	%rs9, %rs8, 255;
	mul.lo.s16 	%rs10, %rs9, 171;
	shr.u16 	%rs11, %rs10, 13;
	mul.lo.s16 	%rs12, %rs11, 48;
	sub.s16 	%rs13, %rs8, %rs12;
	and.b16  	%rs14, %rs13, 255;
	cvt.rn.f32.u16 	%f53, %rs14;
	div.approx.f32 	%f55, %f53, %f192;
	add.f32 	%f56, %f55, %f55;
	mov.b32 	%r249, %f56;
	and.b32  	%r250, %r249, -2147483648;
	or.b32  	%r251, %r250, 1056964608;
	mov.b32 	%f57, %r251;
	add.f32 	%f58, %f56, %f57;
	cvt.rzi.f32.f32 	%f59, %f58;
	abs.f32 	%f60, %f56;
	setp.gt.f32 	%p36, %f60, 0f4B000000;
	selp.f32 	%f61, %f56, %f59, %p36;
	cvt.rzi.f32.f32 	%f62, %f56;
	setp.lt.f32 	%p37, %f60, 0f3F000000;
	selp.f32 	%f63, %f62, %f61, %p37;
	cvt.rzi.s32.f32 	%r252, %f63;
	fma.rn.f32 	%f64, %f63, 0fBF000000, %f55;
	mul.f32 	%f65, %f64, 0f34222169;
	fma.rn.f32 	%f66, %f64, 0f40490FDA, %f65;
	mul.f32 	%f67, %f66, %f66;
	fma.rn.f32 	%f68, %f67, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f69, %f68, %f67, 0f3D2AAABB;
	fma.rn.f32 	%f70, %f69, %f67, 0fBEFFFFFF;
	fma.rn.f32 	%f71, %f70, %f67, 0f3F800000;
	fma.rn.f32 	%f72, %f67, %f66, 0f00000000;
	fma.rn.f32 	%f73, %f67, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f74, %f73, %f67, 0fBE2AAAA8;
	fma.rn.f32 	%f75, %f74, %f72, %f66;
	and.b32  	%r253, %r252, 1;
	setp.eq.b32 	%p38, %r253, 1;
	selp.f32 	%f76, %f71, %f75, %p38;
	selp.f32 	%f77, %f75, %f71, %p38;
	and.b32  	%r254, %r252, 2;
	setp.eq.s32 	%p39, %r254, 0;
	neg.f32 	%f78, %f76;
	selp.f32 	%f79, %f76, %f78, %p39;
	add.s32 	%r255, %r252, 1;
	and.b32  	%r256, %r255, 2;
	setp.eq.s32 	%p40, %r256, 0;
	mov.f32 	%f80, 0f00000000;
	sub.f32 	%f81, %f80, %f77;
	selp.f32 	%f82, %f77, %f81, %p40;
	cvt.rzi.f32.f32 	%f83, %f55;
	setp.eq.f32 	%p41, %f83, %f55;
	mul.f32 	%f84, %f55, 0f00000000;
	selp.f32 	%f195, %f84, %f79, %p41;
	abs.f32 	%f85, %f55;
	setp.gt.f32 	%p42, %f85, 0f4B800000;
	add.f32 	%f86, %f195, 0f3F800000;
	selp.f32 	%f194, %f86, %f82, %p42;
LBB0_11:                                // %L403
	setp.eq.s32 	%p32, %r247, 0;
	sub.f32 	%f45, %f200, %f42;
	selp.f32 	%f49, %f48, %f44, %p33;
	abs.f32 	%f50, %f20;
	setp.gt.u32 	%p43, %r184, 5;
	mul.lo.s32 	%r2644, %r184, %r179;
	mov.f32 	%f196, %f200;
	mov.f32 	%f197, %f200;
	@%p43 bra 	LBB0_13;
// %bb.12:                              // %L407
	cvt.u16.u32 	%rs15, %r2644;
	and.b16  	%rs16, %rs15, 255;
	mul.lo.s16 	%rs17, %rs16, 171;
	shr.u16 	%rs18, %rs17, 13;
	mul.lo.s16 	%rs19, %rs18, 48;
	sub.s16 	%rs20, %rs15, %rs19;
	and.b16  	%rs21, %rs20, 255;
	cvt.rn.f32.u16 	%f88, %rs21;
	div.approx.f32 	%f90, %f88, %f192;
	add.f32 	%f91, %f90, %f90;
	mov.b32 	%r258, %f91;
	and.b32  	%r259, %r258, -2147483648;
	or.b32  	%r260, %r259, 1056964608;
	mov.b32 	%f92, %r260;
	add.f32 	%f93, %f91, %f92;
	cvt.rzi.f32.f32 	%f94, %f93;
	abs.f32 	%f95, %f91;
	setp.gt.f32 	%p44, %f95, 0f4B000000;
	selp.f32 	%f96, %f91, %f94, %p44;
	cvt.rzi.f32.f32 	%f97, %f91;
	setp.lt.f32 	%p45, %f95, 0f3F000000;
	selp.f32 	%f98, %f97, %f96, %p45;
	cvt.rzi.s32.f32 	%r261, %f98;
	fma.rn.f32 	%f99, %f98, 0fBF000000, %f90;
	mul.f32 	%f100, %f99, 0f34222169;
	fma.rn.f32 	%f101, %f99, 0f40490FDA, %f100;
	mul.f32 	%f102, %f101, %f101;
	fma.rn.f32 	%f103, %f102, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f104, %f103, %f102, 0f3D2AAABB;
	fma.rn.f32 	%f105, %f104, %f102, 0fBEFFFFFF;
	fma.rn.f32 	%f106, %f105, %f102, 0f3F800000;
	fma.rn.f32 	%f107, %f102, %f101, 0f00000000;
	fma.rn.f32 	%f108, %f102, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f109, %f108, %f102, 0fBE2AAAA8;
	fma.rn.f32 	%f110, %f109, %f107, %f101;
	and.b32  	%r262, %r261, 1;
	setp.eq.b32 	%p46, %r262, 1;
	selp.f32 	%f111, %f106, %f110, %p46;
	selp.f32 	%f112, %f110, %f106, %p46;
	and.b32  	%r263, %r261, 2;
	setp.eq.s32 	%p47, %r263, 0;
	neg.f32 	%f113, %f111;
	selp.f32 	%f114, %f111, %f113, %p47;
	add.s32 	%r264, %r261, 1;
	and.b32  	%r265, %r264, 2;
	setp.eq.s32 	%p48, %r265, 0;
	mov.f32 	%f115, 0f00000000;
	sub.f32 	%f116, %f115, %f112;
	selp.f32 	%f117, %f112, %f116, %p48;
	cvt.rzi.f32.f32 	%f118, %f90;
	setp.eq.f32 	%p49, %f118, %f90;
	mul.f32 	%f119, %f90, 0f00000000;
	selp.f32 	%f197, %f119, %f114, %p49;
	abs.f32 	%f120, %f90;
	setp.gt.f32 	%p50, %f120, 0f4B800000;
	add.f32 	%f121, %f197, 0f3F800000;
	selp.f32 	%f196, %f121, %f117, %p50;
LBB0_13:                                // %L422
	selp.f32 	%f46, %f42, %f45, %p32;
	setp.gt.f32 	%p34, %f50, 0f4B800000;
	add.f32 	%f51, %f49, 0f3F800000;
	setp.gt.u32 	%p52, %r174, 23;
	or.pred  	%p53, %p35, %p52;
	mov.f32 	%f193, 0f40400000;
	mov.f32 	%f198, %f200;
	mov.f32 	%f199, %f200;
	@%p53 bra 	LBB0_15;
// %bb.14:                              // %L465
	cvt.u16.u32 	%rs22, %r2643;
	and.b16  	%rs23, %rs22, 255;
	mul.lo.s16 	%rs24, %rs23, 171;
	shr.u16 	%rs25, %rs24, 10;
	mul.lo.s16 	%rs26, %rs25, 6;
	sub.s16 	%rs27, %rs22, %rs26;
	and.b16  	%rs28, %rs27, 255;
	cvt.rn.f32.u16 	%f123, %rs28;
	div.approx.f32 	%f125, %f123, %f193;
	add.f32 	%f126, %f125, %f125;
	mov.b32 	%r273, %f126;
	and.b32  	%r274, %r273, -2147483648;
	or.b32  	%r275, %r274, 1056964608;
	mov.b32 	%f127, %r275;
	add.f32 	%f128, %f126, %f127;
	cvt.rzi.f32.f32 	%f129, %f128;
	abs.f32 	%f130, %f126;
	setp.gt.f32 	%p54, %f130, 0f4B000000;
	selp.f32 	%f131, %f126, %f129, %p54;
	cvt.rzi.f32.f32 	%f132, %f126;
	setp.lt.f32 	%p55, %f130, 0f3F000000;
	selp.f32 	%f133, %f132, %f131, %p55;
	cvt.rzi.s32.f32 	%r276, %f133;
	fma.rn.f32 	%f134, %f133, 0fBF000000, %f125;
	mul.f32 	%f135, %f134, 0f34222169;
	fma.rn.f32 	%f136, %f134, 0f40490FDA, %f135;
	mul.f32 	%f137, %f136, %f136;
	fma.rn.f32 	%f138, %f137, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f139, %f138, %f137, 0f3D2AAABB;
	fma.rn.f32 	%f140, %f139, %f137, 0fBEFFFFFF;
	fma.rn.f32 	%f141, %f140, %f137, 0f3F800000;
	fma.rn.f32 	%f142, %f137, %f136, 0f00000000;
	fma.rn.f32 	%f143, %f137, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f144, %f143, %f137, 0fBE2AAAA8;
	fma.rn.f32 	%f145, %f144, %f142, %f136;
	and.b32  	%r277, %r276, 1;
	setp.eq.b32 	%p56, %r277, 1;
	selp.f32 	%f146, %f141, %f145, %p56;
	selp.f32 	%f147, %f145, %f141, %p56;
	and.b32  	%r278, %r276, 2;
	setp.eq.s32 	%p57, %r278, 0;
	neg.f32 	%f148, %f146;
	selp.f32 	%f149, %f146, %f148, %p57;
	add.s32 	%r279, %r276, 1;
	and.b32  	%r280, %r279, 2;
	setp.eq.s32 	%p58, %r280, 0;
	mov.f32 	%f150, 0f00000000;
	sub.f32 	%f151, %f150, %f147;
	selp.f32 	%f152, %f147, %f151, %p58;
	cvt.rzi.f32.f32 	%f153, %f125;
	setp.eq.f32 	%p59, %f153, %f125;
	mul.f32 	%f154, %f125, 0f00000000;
	selp.f32 	%f199, %f154, %f149, %p59;
	abs.f32 	%f155, %f125;
	setp.gt.f32 	%p60, %f155, 0f4B800000;
	add.f32 	%f156, %f199, 0f3F800000;
	selp.f32 	%f198, %f156, %f152, %p60;
LBB0_15:                                // %L480
	selp.f32 	%f52, %f51, %f46, %p34;
	cvt.u32.u16 	%r235, %rs6;
	or.pred  	%p63, %p43, %p52;
	mov.f32 	%f201, %f200;
	@%p63 bra 	LBB0_17;
// %bb.16:                              // %L488
	cvt.u16.u32 	%rs29, %r2644;
	and.b16  	%rs30, %rs29, 255;
	mul.lo.s16 	%rs31, %rs30, 171;
	shr.u16 	%rs32, %rs31, 10;
	mul.lo.s16 	%rs33, %rs32, 6;
	sub.s16 	%rs34, %rs29, %rs33;
	and.b16  	%rs35, %rs34, 255;
	cvt.rn.f32.u16 	%f158, %rs35;
	div.approx.f32 	%f160, %f158, %f193;
	add.f32 	%f161, %f160, %f160;
	mov.b32 	%r282, %f161;
	and.b32  	%r283, %r282, -2147483648;
	or.b32  	%r284, %r283, 1056964608;
	mov.b32 	%f162, %r284;
	add.f32 	%f163, %f161, %f162;
	cvt.rzi.f32.f32 	%f164, %f163;
	abs.f32 	%f165, %f161;
	setp.gt.f32 	%p64, %f165, 0f4B000000;
	selp.f32 	%f166, %f161, %f164, %p64;
	cvt.rzi.f32.f32 	%f167, %f161;
	setp.lt.f32 	%p65, %f165, 0f3F000000;
	selp.f32 	%f168, %f167, %f166, %p65;
	cvt.rzi.s32.f32 	%r285, %f168;
	fma.rn.f32 	%f169, %f168, 0fBF000000, %f160;
	mul.f32 	%f170, %f169, 0f34222169;
	fma.rn.f32 	%f171, %f169, 0f40490FDA, %f170;
	mul.f32 	%f172, %f171, %f171;
	fma.rn.f32 	%f173, %f172, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f174, %f173, %f172, 0f3D2AAABB;
	fma.rn.f32 	%f175, %f174, %f172, 0fBEFFFFFF;
	fma.rn.f32 	%f176, %f175, %f172, 0f3F800000;
	fma.rn.f32 	%f177, %f172, %f171, 0f00000000;
	fma.rn.f32 	%f178, %f172, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f179, %f178, %f172, 0fBE2AAAA8;
	fma.rn.f32 	%f180, %f179, %f177, %f171;
	and.b32  	%r286, %r285, 1;
	setp.eq.b32 	%p66, %r286, 1;
	selp.f32 	%f181, %f176, %f180, %p66;
	selp.f32 	%f182, %f180, %f176, %p66;
	and.b32  	%r287, %r285, 2;
	setp.eq.s32 	%p67, %r287, 0;
	neg.f32 	%f183, %f181;
	selp.f32 	%f184, %f181, %f183, %p67;
	add.s32 	%r288, %r285, 1;
	and.b32  	%r289, %r288, 2;
	setp.eq.s32 	%p68, %r289, 0;
	mov.f32 	%f185, 0f00000000;
	sub.f32 	%f186, %f185, %f182;
	selp.f32 	%f187, %f182, %f186, %p68;
	cvt.rzi.f32.f32 	%f188, %f160;
	setp.eq.f32 	%p69, %f188, %f160;
	mul.f32 	%f189, %f160, 0f00000000;
	selp.f32 	%f201, %f189, %f184, %p69;
	abs.f32 	%f190, %f160;
	setp.gt.f32 	%p70, %f190, 0f4B800000;
	add.f32 	%f191, %f201, 0f3F800000;
	selp.f32 	%f200, %f191, %f187, %p70;
LBB0_17:                                // %L503
	mov.b32 	%r229, %f52;
	mov.b32 	%r232, %f49;
	and.b32  	%r176, %r235, 255;
	mov.b32 	%r291, %f198;
	mov.b32 	%r292, %f200;
	mov.b32 	%r297, %f199;
	mov.b32 	%r298, %f201;
	mov.u32 	%r186, 999999999;
	cvt.u16.u32 	%rs562, %r174;
	@%p52 bra 	LBB0_19;
// %bb.18:                              // %oksrem126
	ld.param.u64 	%rd1, [_Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_1];
	and.b16  	%rs37, %rs562, 255;
	mul.lo.s16 	%rs38, %rs37, 171;
	shr.u16 	%rs39, %rs38, 12;
	mul.lo.s16 	%rs40, %rs39, 24;
	sub.s16 	%rs41, %rs562, %rs40;
	cvt.u32.u16 	%r303, %rs41;
	and.b32  	%r304, %r303, 255;
	mad.lo.s32 	%r305, %r304, 24, %r176;
	cvt.u16.u32 	%rs42, %r305;
	mul.hi.u16 	%rs43, %rs42, -7281;
	shr.u16 	%rs44, %rs43, 9;
	mul.lo.s16 	%rs45, %rs44, 576;
	sub.s16 	%rs46, %rs42, %rs45;
	cvt.u32.u16 	%r306, %rs46;
	mul.wide.u32 	%rd50, %r306, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.global.u32 	%r186, [%rd51];
LBB0_19:                                // %pass136
	xor.b32  	%r228, %r232, -2147483648;
	ld.param.u64 	%rd10, [_Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_8];
	mov.b32 	%r267, %f194;
	mov.b32 	%r268, %f196;
	mov.b32 	%r270, %f195;
	mov.b32 	%r271, %f197;
	xor.b32  	%r294, %r297, -2147483648;
	xor.b32  	%r295, %r298, -2147483648;
	setp.lt.u32 	%p72, %r174, 24;
	@%p72 bra 	LBB0_20;
// %bb.41:                              // %pass136.L982_crit_edge
	shr.u16 	%rs61, %rs3, 10;
	cvt.u32.u16 	%r2649, %rs61;
	cvt.u16.u32 	%rs62, %r179;
	mul.lo.s16 	%rs63, %rs62, 171;
	shr.u16 	%rs64, %rs63, 10;
	mul.lo.s16 	%rs65, %rs64, 6;
	sub.s16 	%rs66, %rs62, %rs65;
	cvt.u32.u16 	%r322, %rs66;
	and.b32  	%r2648, %r322, 255;
	mul.lo.s16 	%rs67, %rs61, 6;
	sub.s16 	%rs68, %rs1, %rs67;
	cvt.u32.u16 	%r323, %rs68;
	and.b32  	%r9, %r323, 255;
	mul.wide.u16 	%r8, %rs61, 6;
	mov.u32 	%r12, 0;
	mov.u32 	%r13, %r12;
	bra.uni 	LBB0_21;
LBB0_20:                                // %pass161
	ld.param.u64 	%rd2, [_Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_2];
	mul.lo.s32 	%r307, %r1, 576;
	shr.u16 	%rs50, %rs3, 10;
	mul.lo.s16 	%rs51, %rs50, -6;
	add.s16 	%rs52, %rs51, %rs1;
	cvt.u32.u16 	%r308, %rs52;
	and.b32  	%r9, %r308, 255;
	or.b32  	%r309, %r307, %r9;
	cvt.u16.u32 	%rs53, %r179;
	mul.lo.s16 	%rs54, %rs53, 171;
	shr.u16 	%rs55, %rs54, 10;
	mul.lo.s16 	%rs56, %rs55, 6;
	sub.s16 	%rs57, %rs53, %rs56;
	cvt.u32.u16 	%r310, %rs57;
	and.b32  	%r2648, %r310, 255;
	and.b16  	%rs58, %rs57, 255;
	mul.wide.u16 	%r311, %rs58, 24;
	add.s32 	%r312, %r309, %r311;
	cvt.u32.u16 	%r2649, %rs50;
	mul.wide.u16 	%r8, %rs50, 6;
	add.s32 	%r313, %r312, %r8;
	mul.lo.s32 	%r314, %r178, 144;
	add.s32 	%r315, %r313, %r314;
	mul.wide.u32 	%rd52, %r315, 4;
	add.s64 	%rd53, %rd2, %rd52;
	ld.global.u32 	%r12, [%rd53];
	add.s32 	%r316, %r307, 147456;
	or.b32  	%r317, %r316, %r9;
	add.s32 	%r318, %r317, %r311;
	add.s32 	%r319, %r318, %r8;
	add.s32 	%r320, %r319, %r314;
	mul.wide.u32 	%rd54, %r320, 4;
	add.s64 	%rd55, %rd2, %rd54;
	ld.global.u32 	%r13, [%rd55];
LBB0_21:                                // %L982
	ld.param.u64 	%rd3, [_Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_3];
	ld.param.u64 	%rd4, [_Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_4];
	ld.param.u64 	%rd6, [_Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_6];
	ld.param.u64 	%rd8, [_Z15julia_frb_1072513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_7];
	// begin inline asm
	cvt.rn.f16x2.f32 %r227, %r229, %r228;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r230, %r232, %r229;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r266, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r269, %r271, %r270;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r290, %r292, %r291;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r293, %r295, %r294;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r296, %r298, %r297;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r299, %r292, %r291;
	// end inline asm
	mov.u32 	%r2645, 0;
	shl.b32 	%r325, %r1, 7;
	and.b32  	%r14, %r325, 32640;
	shl.b32 	%r326, %r174, 2;
	and.b32  	%r15, %r326, 60;
	shl.b32 	%r327, %r174, 11;
	and.b32  	%r16, %r327, 32768;
	or.b32  	%r17, %r15, 64;
	shr.u32 	%r18, %r174, 4;
	and.b32  	%r328, %r182, 30;
	or.b32  	%r329, %r328, %r18;
	mul.lo.s32 	%r330, %r329, 257;
	add.s32 	%r19, %r330, 1;
	add.s32 	%r20, %r330, 129;
	add.s32 	%r21, %r330, 65;
	add.s32 	%r22, %r330, 193;
	or.b32  	%r331, %r329, 32;
	mul.lo.s32 	%r332, %r331, 257;
	add.s32 	%r23, %r332, 1;
	add.s32 	%r24, %r332, 129;
	add.s32 	%r25, %r332, 65;
	add.s32 	%r26, %r332, 193;
	add.s32 	%r27, %r330, 33;
	add.s32 	%r28, %r330, 161;
	add.s32 	%r29, %r330, 97;
	add.s32 	%r30, %r330, 225;
	add.s32 	%r31, %r332, 33;
	add.s32 	%r32, %r332, 161;
	add.s32 	%r33, %r332, 97;
	add.s32 	%r34, %r332, 225;
	and.b32  	%r333, %r177, 224;
	shr.u32 	%r334, %r176, 3;
	and.b16  	%rs70, %rs562, 255;
	mul.lo.s16 	%rs71, %rs70, 171;
	shr.u16 	%rs72, %rs71, 12;
	mul.lo.s16 	%rs73, %rs72, 24;
	sub.s16 	%rs74, %rs562, %rs73;
	cvt.u32.u16 	%r335, %rs74;
	and.b32  	%r35, %r335, 255;
	or.b32  	%r336, %r333, 1;
	mad.lo.s32 	%r36, %r334, 257, %r336;
	add.s32 	%r337, %r176, 24;
	shr.u32 	%r338, %r337, 3;
	mad.lo.s32 	%r37, %r338, 257, %r336;
	add.s32 	%r339, %r176, 48;
	shr.u32 	%r340, %r339, 3;
	mad.lo.s32 	%r38, %r340, 257, %r336;
	add.s32 	%r341, %r176, 72;
	shr.u32 	%r342, %r341, 3;
	mad.lo.s32 	%r39, %r342, 257, %r336;
	add.s32 	%r343, %r176, 120;
	shr.u32 	%r344, %r343, 3;
	mad.lo.s32 	%r40, %r344, 257, %r336;
	add.s32 	%r345, %r176, 144;
	shr.u32 	%r346, %r345, 3;
	mad.lo.s32 	%r41, %r346, 257, %r336;
	add.s32 	%r347, %r176, 168;
	shr.u32 	%r348, %r347, 3;
	mad.lo.s32 	%r42, %r348, 257, %r336;
	add.s32 	%r349, %r176, 216;
	shr.u32 	%r350, %r349, 3;
	mad.lo.s32 	%r43, %r350, 257, %r336;
	add.s32 	%r351, %r176, 240;
	shr.u32 	%r352, %r351, 3;
	mad.lo.s32 	%r44, %r352, 257, %r336;
	add.s32 	%r353, %r176, 264;
	shr.u32 	%r354, %r353, 3;
	mad.lo.s32 	%r45, %r354, 257, %r336;
	add.s32 	%r355, %r176, 312;
	shr.u32 	%r356, %r355, 3;
	mad.lo.s32 	%r46, %r356, 257, %r336;
	add.s32 	%r357, %r176, 336;
	shr.u32 	%r358, %r357, 3;
	mad.lo.s32 	%r47, %r358, 257, %r336;
	add.s32 	%r359, %r176, 360;
	shr.u32 	%r360, %r359, 3;
	mad.lo.s32 	%r48, %r360, 257, %r336;
	add.s32 	%r361, %r176, 408;
	shr.u32 	%r362, %r361, 3;
	mad.lo.s32 	%r49, %r362, 257, %r336;
	add.s32 	%r363, %r176, 432;
	shr.u32 	%r364, %r363, 3;
	mad.lo.s32 	%r50, %r364, 257, %r336;
	add.s32 	%r365, %r176, 456;
	shr.u32 	%r366, %r365, 3;
	mad.lo.s32 	%r51, %r366, 257, %r336;
	add.s32 	%r367, %r176, 504;
	bfe.u32 	%r368, %r367, 3, 6;
	mad.lo.s32 	%r52, %r368, 257, %r336;
	mul.lo.s32 	%r53, %r2649, 198;
	mul.lo.s32 	%r54, %r2648, 801;
	mul.lo.s32 	%r55, %r178, 4806;
	mul.lo.s32 	%r56, %r9, 33;
	bfe.u32 	%r369, %r174, 3, 1;
	mul.lo.s32 	%r57, %r369, 514;
	mul.lo.s32 	%r58, %r18, 257;
	add.s32 	%r370, %r58, %r57;
	and.b32  	%r371, %r179, 1;
	mul.lo.s32 	%r59, %r371, 1028;
	add.s32 	%r372, %r370, %r59;
	add.s32 	%r373, %r372, %r8;
	and.b32  	%r374, %r174, 1;
	mul.lo.s32 	%r60, %r374, 4112;
	add.s32 	%r375, %r373, %r60;
	bfe.u32 	%r376, %r174, 1, 1;
	mul.lo.s32 	%r61, %r376, 2056;
	add.s32 	%r377, %r375, %r61;
	add.s32 	%r378, %r377, %r9;
	cvt.u64.u32 	%rd56, %r378;
	add.s64 	%rd16, %rd15, %rd56;
	bfe.u32 	%r379, %r176, 3, 1;
	shr.u32 	%r380, %r176, 4;
	bfe.u32 	%r381, %r176, 2, 1;
	and.b32  	%r382, %r176, 1;
	bfe.u32 	%r383, %r176, 1, 1;
	mul.lo.s32 	%r62, %r1, 1152;
	cvt.u16.u32 	%rs75, %r176;
	shl.b16 	%rs76, %rs75, 1;
	and.b16  	%rs77, %rs76, 254;
	mul.lo.s16 	%rs78, %rs77, 171;
	shr.u16 	%rs79, %rs78, 13;
	mul.lo.s16 	%rs80, %rs79, 48;
	sub.s16 	%rs81, %rs76, %rs80;
	and.b16  	%rs82, %rs81, 254;
	mul.wide.u16 	%r63, %rs82, 24;
	or.b16  	%rs83, %rs76, 1;
	and.b16  	%rs84, %rs83, 255;
	mul.lo.s16 	%rs85, %rs84, 171;
	shr.u16 	%rs86, %rs85, 13;
	mul.lo.s16 	%rs87, %rs86, 48;
	sub.s16 	%rs88, %rs83, %rs87;
	and.b16  	%rs89, %rs88, 255;
	mul.wide.u16 	%r64, %rs89, 24;
	add.s32 	%r384, %r378, 64;
	cvt.u64.u32 	%rd57, %r384;
	add.s64 	%rd17, %rd15, %rd57;
	add.s32 	%r385, %r378, 8320;
	cvt.u64.u32 	%rd58, %r385;
	add.s64 	%rd18, %rd15, %rd58;
	add.s32 	%r386, %r378, 96;
	cvt.u64.u32 	%rd59, %r386;
	add.s64 	%rd19, %rd15, %rd59;
	add.s32 	%r387, %r378, 8352;
	cvt.u64.u32 	%rd60, %r387;
	add.s64 	%rd20, %rd15, %rd60;
	add.s32 	%r388, %r378, 128;
	cvt.u64.u32 	%rd61, %r388;
	add.s64 	%rd21, %rd15, %rd61;
	add.s32 	%r389, %r378, 8384;
	cvt.u64.u32 	%rd62, %r389;
	add.s64 	%rd22, %rd15, %rd62;
	add.s32 	%r390, %r378, 160;
	cvt.u64.u32 	%rd63, %r390;
	add.s64 	%rd23, %rd15, %rd63;
	add.s32 	%r391, %r378, 8416;
	cvt.u64.u32 	%rd64, %r391;
	add.s64 	%rd24, %rd15, %rd64;
	add.s32 	%r392, %r378, 192;
	cvt.u64.u32 	%rd65, %r392;
	add.s64 	%rd25, %rd15, %rd65;
	add.s32 	%r393, %r378, 8448;
	cvt.u64.u32 	%rd66, %r393;
	add.s64 	%rd26, %rd15, %rd66;
	add.s32 	%r394, %r378, 224;
	cvt.u64.u32 	%rd67, %r394;
	add.s64 	%rd27, %rd15, %rd67;
	add.s32 	%r395, %r378, 8480;
	cvt.u64.u32 	%rd68, %r395;
	add.s64 	%rd28, %rd15, %rd68;
	mul.lo.s64 	%rd69, %rd12, 66048;
	mad.lo.s32 	%r396, %r382, 4112, %r2648;
	mad.lo.s32 	%r397, %r383, 2056, %r396;
	mad.lo.s32 	%r398, %r381, 1028, %r397;
	mad.lo.s32 	%r399, %r379, 514, %r398;
	mad.lo.s32 	%r400, %r380, 257, %r399;
	mad.lo.s32 	%r401, %r178, 6, %r400;
	add.s32 	%r402, %r401, 8289;
	mul.wide.u32 	%rd70, %r402, 4;
	add.s64 	%rd71, %rd69, %rd70;
	add.s64 	%rd72, %rd71, %rd10;
	add.s64 	%rd29, %rd72, -4;
	add.s32 	%r403, %r401, 33;
	mul.wide.u32 	%rd73, %r403, 4;
	add.s64 	%rd74, %rd69, %rd73;
	add.s64 	%rd75, %rd74, %rd10;
	add.s64 	%rd30, %rd75, -4;
	add.s32 	%r404, %r401, 8257;
	mul.wide.u32 	%rd76, %r404, 4;
	add.s64 	%rd77, %rd69, %rd76;
	add.s64 	%rd78, %rd77, %rd10;
	add.s64 	%rd31, %rd78, -4;
	add.s32 	%r405, %r401, 1;
	mul.wide.u32 	%rd79, %r405, 4;
	add.s64 	%rd80, %rd69, %rd79;
	add.s64 	%rd81, %rd80, %rd10;
	add.s64 	%rd32, %rd81, -4;
	setp.gt.u32 	%p73, %r175, 7;
	setp.eq.s32 	%p74, %r18, 1;
	shl.b64 	%rd435, %rd16, 2;
	add.s64 	%rd436, %rd10, %rd435;
	shl.b64 	%rd453, %rd17, 2;
	add.s64 	%rd454, %rd10, %rd453;
	shl.b64 	%rd455, %rd18, 2;
	add.s64 	%rd456, %rd10, %rd455;
	shl.b64 	%rd457, %rd19, 2;
	add.s64 	%rd458, %rd10, %rd457;
	shl.b64 	%rd459, %rd20, 2;
	add.s64 	%rd460, %rd10, %rd459;
	shl.b64 	%rd461, %rd21, 2;
	add.s64 	%rd462, %rd10, %rd461;
	shl.b64 	%rd463, %rd22, 2;
	add.s64 	%rd464, %rd10, %rd463;
	shl.b64 	%rd465, %rd23, 2;
	add.s64 	%rd466, %rd10, %rd465;
	shl.b64 	%rd467, %rd24, 2;
	add.s64 	%rd468, %rd10, %rd467;
	shl.b64 	%rd469, %rd25, 2;
	add.s64 	%rd470, %rd10, %rd469;
	shl.b64 	%rd471, %rd26, 2;
	add.s64 	%rd472, %rd10, %rd471;
	shl.b64 	%rd473, %rd27, 2;
	add.s64 	%rd474, %rd10, %rd473;
	shl.b64 	%rd475, %rd28, 2;
	add.s64 	%rd476, %rd10, %rd475;
	mov.u32 	%r65, %r2645;
	mov.u32 	%r2690, %r2645;
	mov.u32 	%r153, %r2645;
	mov.u32 	%r2700, %r2645;
	mov.u32 	%r2701, %r2645;
	mov.u32 	%r2702, %r2645;
	mov.u32 	%r2703, %r2645;
	bra.uni 	LBB0_22;
LBB0_34:                                // %guard_pass9279
                                        //   in Loop: Header=BB0_22 Depth=1
	add.s32 	%r226, %r65, 48;
	setp.ne.s32 	%p94, %r65, 2016;
	mov.u32 	%r65, %r226;
	@%p94 bra 	LBB0_22;
	bra.uni 	LBB0_35;
LBB0_22:                                // %L985
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_24 Depth 2
                                        //       Child Loop BB0_25 Depth 3
	cvt.u16.u32 	%rs90, %r65;
	mul.hi.u16 	%rs91, %rs90, -21845;
	shr.u16 	%rs92, %rs91, 5;
	and.b16  	%rs93, %rs92, 255;
	mul.lo.s16 	%rs94, %rs93, 191;
	shr.u16 	%rs95, %rs94, 13;
	mul.lo.s16 	%rs96, %rs95, 43;
	sub.s16 	%rs97, %rs92, %rs96;
	and.b16  	%rs98, %rs97, 255;
	mul.wide.u16 	%r72, %rs98, 48;
	add.s32 	%r599, %r72, %r176;
	cvt.u16.u32 	%rs99, %r599;
	mul.hi.u16 	%rs100, %rs99, 16257;
	shr.u16 	%rs101, %rs100, 9;
	mul.lo.s16 	%rs102, %rs101, 2064;
	sub.s16 	%rs103, %rs99, %rs102;
	cvt.u32.u16 	%r600, %rs103;
	shl.b32 	%r601, %r600, 16;
	or.b32  	%r602, %r14, %r601;
	or.b32  	%r603, %r15, %r602;
	or.b32  	%r604, %r16, %r603;
	shl.b32 	%r605, %r604, 2;
	cvt.u64.u32 	%rd82, %r605;
	add.s64 	%rd83, %rd3, %rd82;
	ld.global.v4.u32 	{%r606, %r607, %r608, %r609}, [%rd83];
	or.b32  	%r610, %r17, %r602;
	or.b32  	%r611, %r16, %r610;
	shl.b32 	%r612, %r611, 2;
	cvt.u64.u32 	%rd84, %r612;
	add.s64 	%rd85, %rd3, %rd84;
	ld.global.v4.u32 	{%r613, %r614, %r615, %r616}, [%rd85];
	add.s16 	%rs104, %rs99, 24;
	mul.hi.u16 	%rs105, %rs104, 16257;
	shr.u16 	%rs106, %rs105, 9;
	mul.lo.s16 	%rs107, %rs106, 2064;
	sub.s16 	%rs108, %rs104, %rs107;
	cvt.u32.u16 	%r617, %rs108;
	shl.b32 	%r618, %r617, 16;
	or.b32  	%r619, %r14, %r618;
	or.b32  	%r620, %r15, %r619;
	or.b32  	%r621, %r16, %r620;
	shl.b32 	%r622, %r621, 2;
	cvt.u64.u32 	%rd86, %r622;
	add.s64 	%rd87, %rd3, %rd86;
	ld.global.v4.u32 	{%r623, %r624, %r625, %r626}, [%rd87];
	or.b32  	%r627, %r17, %r619;
	or.b32  	%r628, %r16, %r627;
	shl.b32 	%r629, %r628, 2;
	cvt.u64.u32 	%rd88, %r629;
	add.s64 	%rd89, %rd3, %rd88;
	ld.global.v4.u32 	{%r630, %r631, %r632, %r633}, [%rd89];
	selp.b32 	%r634, %r606, %r608, %p74;
	shfl.sync.bfly.b32	%r635, %r634, 16, 31, -1;
	selp.b32 	%r408, %r635, %r606, %p74;
	selp.b32 	%r413, %r608, %r635, %p74;
	selp.b32 	%r636, %r607, %r609, %p74;
	shfl.sync.bfly.b32	%r637, %r636, 16, 31, -1;
	selp.b32 	%r416, %r637, %r607, %p74;
	selp.b32 	%r421, %r609, %r637, %p74;
	selp.b32 	%r638, %r613, %r615, %p74;
	shfl.sync.bfly.b32	%r639, %r638, 16, 31, -1;
	selp.b32 	%r424, %r639, %r613, %p74;
	selp.b32 	%r429, %r615, %r639, %p74;
	selp.b32 	%r640, %r614, %r616, %p74;
	shfl.sync.bfly.b32	%r641, %r640, 16, 31, -1;
	selp.b32 	%r432, %r641, %r614, %p74;
	selp.b32 	%r437, %r616, %r641, %p74;
	selp.b32 	%r642, %r623, %r625, %p74;
	shfl.sync.bfly.b32	%r643, %r642, 16, 31, -1;
	selp.b32 	%r440, %r643, %r623, %p74;
	selp.b32 	%r445, %r625, %r643, %p74;
	selp.b32 	%r644, %r624, %r626, %p74;
	shfl.sync.bfly.b32	%r645, %r644, 16, 31, -1;
	selp.b32 	%r448, %r645, %r624, %p74;
	selp.b32 	%r453, %r626, %r645, %p74;
	selp.b32 	%r646, %r630, %r632, %p74;
	shfl.sync.bfly.b32	%r647, %r646, 16, 31, -1;
	selp.b32 	%r456, %r647, %r630, %p74;
	selp.b32 	%r461, %r632, %r647, %p74;
	selp.b32 	%r648, %r631, %r633, %p74;
	shfl.sync.bfly.b32	%r649, %r648, 16, 31, -1;
	selp.b32 	%r464, %r649, %r631, %p74;
	selp.b32 	%r469, %r633, %r649, %p74;
	shl.b32 	%r409, %r413, 4;
	mov.u32 	%r407, 252645135;
	// begin inline asm
	lop3.b32 %r471, %r407, %r408, %r409, 202;
	// end inline asm
	shr.u32 	%r412, %r408, 4;
	// begin inline asm
	lop3.b32 %r487, %r407, %r412, %r413, 202;
	// end inline asm
	shl.b32 	%r417, %r421, 4;
	// begin inline asm
	lop3.b32 %r479, %r407, %r416, %r417, 202;
	// end inline asm
	shr.u32 	%r420, %r416, 4;
	// begin inline asm
	lop3.b32 %r495, %r407, %r420, %r421, 202;
	// end inline asm
	shl.b32 	%r425, %r429, 4;
	// begin inline asm
	lop3.b32 %r503, %r407, %r424, %r425, 202;
	// end inline asm
	shr.u32 	%r428, %r424, 4;
	// begin inline asm
	lop3.b32 %r519, %r407, %r428, %r429, 202;
	// end inline asm
	shl.b32 	%r433, %r437, 4;
	// begin inline asm
	lop3.b32 %r511, %r407, %r432, %r433, 202;
	// end inline asm
	shr.u32 	%r436, %r432, 4;
	// begin inline asm
	lop3.b32 %r527, %r407, %r436, %r437, 202;
	// end inline asm
	shl.b32 	%r441, %r445, 4;
	// begin inline asm
	lop3.b32 %r472, %r407, %r440, %r441, 202;
	// end inline asm
	shr.u32 	%r444, %r440, 4;
	// begin inline asm
	lop3.b32 %r488, %r407, %r444, %r445, 202;
	// end inline asm
	shl.b32 	%r449, %r453, 4;
	// begin inline asm
	lop3.b32 %r480, %r407, %r448, %r449, 202;
	// end inline asm
	shr.u32 	%r452, %r448, 4;
	// begin inline asm
	lop3.b32 %r496, %r407, %r452, %r453, 202;
	// end inline asm
	shl.b32 	%r457, %r461, 4;
	// begin inline asm
	lop3.b32 %r504, %r407, %r456, %r457, 202;
	// end inline asm
	shr.u32 	%r460, %r456, 4;
	// begin inline asm
	lop3.b32 %r520, %r407, %r460, %r461, 202;
	// end inline asm
	shl.b32 	%r465, %r469, 4;
	// begin inline asm
	lop3.b32 %r512, %r407, %r464, %r465, 202;
	// end inline asm
	shr.u32 	%r468, %r464, 4;
	// begin inline asm
	lop3.b32 %r528, %r407, %r468, %r469, 202;
	// end inline asm
	mov.u32 	%r473, 25152;
	// begin inline asm
	prmt.b32 %r535, %r471, %r472, %r473;
	// end inline asm
	mov.u32 	%r477, 29521;
	// begin inline asm
	prmt.b32 %r567, %r471, %r472, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r543, %r479, %r480, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r575, %r479, %r480, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r536, %r487, %r488, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r568, %r487, %r488, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r544, %r495, %r496, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r576, %r495, %r496, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r551, %r503, %r504, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r583, %r503, %r504, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r559, %r511, %r512, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r591, %r511, %r512, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r552, %r519, %r520, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r584, %r519, %r520, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r560, %r527, %r528, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r592, %r527, %r528, %r477;
	// end inline asm
	mov.u32 	%r593, 21520;
	// begin inline asm
	prmt.b32 %r534, %r535, %r536, %r593;
	// end inline asm
	mov.u32 	%r597, 30258;
	// begin inline asm
	prmt.b32 %r538, %r535, %r536, %r597;
	// end inline asm
	// begin inline asm
	prmt.b32 %r542, %r543, %r544, %r593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r546, %r543, %r544, %r597;
	// end inline asm
	// begin inline asm
	prmt.b32 %r550, %r551, %r552, %r593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r554, %r551, %r552, %r597;
	// end inline asm
	// begin inline asm
	prmt.b32 %r558, %r559, %r560, %r593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r562, %r559, %r560, %r597;
	// end inline asm
	// begin inline asm
	prmt.b32 %r566, %r567, %r568, %r593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r570, %r567, %r568, %r597;
	// end inline asm
	// begin inline asm
	prmt.b32 %r574, %r575, %r576, %r593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r578, %r575, %r576, %r597;
	// end inline asm
	// begin inline asm
	prmt.b32 %r582, %r583, %r584, %r593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r586, %r583, %r584, %r597;
	// end inline asm
	// begin inline asm
	prmt.b32 %r590, %r591, %r592, %r593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r594, %r591, %r592, %r597;
	// end inline asm
	mul.hi.u16 	%rs109, %rs99, -21845;
	shr.u16 	%rs110, %rs109, 4;
	mul.lo.s16 	%rs111, %rs110, 24;
	sub.s16 	%rs112, %rs99, %rs111;
	cvt.u32.u16 	%r650, %rs112;
	add.s32 	%r651, %r19, %r650;
	cvt.u64.u32 	%rd90, %r651;
	add.s64 	%rd91, %rd13, %rd90;
	shl.b64 	%rd92, %rd91, 2;
	add.s64 	%rd93, %rd6, %rd92;
	st.global.u32 	[%rd93+-4], %r534;
	add.s32 	%r652, %r20, %r650;
	cvt.u64.u32 	%rd94, %r652;
	add.s64 	%rd95, %rd13, %rd94;
	shl.b64 	%rd96, %rd95, 2;
	add.s64 	%rd97, %rd6, %rd96;
	st.global.u32 	[%rd97+-4], %r542;
	add.s32 	%r653, %r21, %r650;
	cvt.u64.u32 	%rd98, %r653;
	add.s64 	%rd99, %rd13, %rd98;
	shl.b64 	%rd100, %rd99, 2;
	add.s64 	%rd101, %rd6, %rd100;
	st.global.u32 	[%rd101+-4], %r538;
	add.s32 	%r654, %r22, %r650;
	cvt.u64.u32 	%rd102, %r654;
	add.s64 	%rd103, %rd13, %rd102;
	shl.b64 	%rd104, %rd103, 2;
	add.s64 	%rd105, %rd6, %rd104;
	st.global.u32 	[%rd105+-4], %r546;
	add.s32 	%r655, %r23, %r650;
	cvt.u64.u32 	%rd106, %r655;
	add.s64 	%rd107, %rd13, %rd106;
	shl.b64 	%rd108, %rd107, 2;
	add.s64 	%rd109, %rd6, %rd108;
	st.global.u32 	[%rd109+-4], %r550;
	add.s32 	%r656, %r24, %r650;
	cvt.u64.u32 	%rd110, %r656;
	add.s64 	%rd111, %rd13, %rd110;
	shl.b64 	%rd112, %rd111, 2;
	add.s64 	%rd113, %rd6, %rd112;
	st.global.u32 	[%rd113+-4], %r558;
	add.s32 	%r657, %r25, %r650;
	cvt.u64.u32 	%rd114, %r657;
	add.s64 	%rd115, %rd13, %rd114;
	shl.b64 	%rd116, %rd115, 2;
	add.s64 	%rd117, %rd6, %rd116;
	st.global.u32 	[%rd117+-4], %r554;
	add.s32 	%r658, %r26, %r650;
	cvt.u64.u32 	%rd118, %r658;
	add.s64 	%rd119, %rd13, %rd118;
	shl.b64 	%rd120, %rd119, 2;
	add.s64 	%rd121, %rd6, %rd120;
	st.global.u32 	[%rd121+-4], %r562;
	add.s32 	%r659, %r27, %r650;
	cvt.u64.u32 	%rd122, %r659;
	add.s64 	%rd123, %rd13, %rd122;
	shl.b64 	%rd124, %rd123, 2;
	add.s64 	%rd125, %rd6, %rd124;
	st.global.u32 	[%rd125+-4], %r566;
	add.s32 	%r660, %r28, %r650;
	cvt.u64.u32 	%rd126, %r660;
	add.s64 	%rd127, %rd13, %rd126;
	shl.b64 	%rd128, %rd127, 2;
	add.s64 	%rd129, %rd6, %rd128;
	st.global.u32 	[%rd129+-4], %r574;
	add.s32 	%r661, %r29, %r650;
	cvt.u64.u32 	%rd130, %r661;
	add.s64 	%rd131, %rd13, %rd130;
	shl.b64 	%rd132, %rd131, 2;
	add.s64 	%rd133, %rd6, %rd132;
	st.global.u32 	[%rd133+-4], %r570;
	add.s32 	%r662, %r30, %r650;
	cvt.u64.u32 	%rd134, %r662;
	add.s64 	%rd135, %rd13, %rd134;
	shl.b64 	%rd136, %rd135, 2;
	add.s64 	%rd137, %rd6, %rd136;
	st.global.u32 	[%rd137+-4], %r578;
	add.s32 	%r663, %r31, %r650;
	cvt.u64.u32 	%rd138, %r663;
	add.s64 	%rd139, %rd13, %rd138;
	shl.b64 	%rd140, %rd139, 2;
	add.s64 	%rd141, %rd6, %rd140;
	st.global.u32 	[%rd141+-4], %r582;
	add.s32 	%r664, %r32, %r650;
	cvt.u64.u32 	%rd142, %r664;
	add.s64 	%rd143, %rd13, %rd142;
	shl.b64 	%rd144, %rd143, 2;
	add.s64 	%rd145, %rd6, %rd144;
	st.global.u32 	[%rd145+-4], %r590;
	add.s32 	%r665, %r33, %r650;
	cvt.u64.u32 	%rd146, %r665;
	add.s64 	%rd147, %rd13, %rd146;
	shl.b64 	%rd148, %rd147, 2;
	add.s64 	%rd149, %rd6, %rd148;
	st.global.u32 	[%rd149+-4], %r586;
	add.s32 	%r666, %r34, %r650;
	cvt.u64.u32 	%rd150, %r666;
	add.s64 	%rd151, %rd13, %rd150;
	shl.b64 	%rd152, %rd151, 2;
	add.s64 	%rd153, %rd6, %rd152;
	st.global.u32 	[%rd153+-4], %r594;
	bar.sync 	0;
	add.s32 	%r667, %r72, %r35;
	cvt.u16.u32 	%rs113, %r667;
	mul.hi.u16 	%rs114, %rs113, -21845;
	shr.u16 	%rs115, %rs114, 4;
	mul.lo.s16 	%rs116, %rs115, 24;
	sub.s16 	%rs117, %rs113, %rs116;
	cvt.u32.u16 	%r668, %rs117;
	add.s32 	%r669, %r36, %r668;
	cvt.u64.u32 	%rd154, %r669;
	add.s64 	%rd155, %rd13, %rd154;
	shl.b64 	%rd156, %rd155, 2;
	add.s64 	%rd157, %rd6, %rd156;
	ld.global.u32 	%r670, [%rd157+-4];
	add.s32 	%r671, %r37, %r668;
	cvt.u64.u32 	%rd158, %r671;
	add.s64 	%rd159, %rd13, %rd158;
	shl.b64 	%rd160, %rd159, 2;
	add.s64 	%rd161, %rd6, %rd160;
	ld.global.u32 	%r672, [%rd161+-4];
	add.s32 	%r673, %r38, %r668;
	cvt.u64.u32 	%rd162, %r673;
	add.s64 	%rd163, %rd13, %rd162;
	shl.b64 	%rd164, %rd163, 2;
	add.s64 	%rd165, %rd6, %rd164;
	ld.global.u32 	%r674, [%rd165+-4];
	add.s32 	%r675, %r39, %r668;
	cvt.u64.u32 	%rd166, %r675;
	add.s64 	%rd167, %rd13, %rd166;
	shl.b64 	%rd168, %rd167, 2;
	add.s64 	%rd169, %rd6, %rd168;
	ld.global.u32 	%r676, [%rd169+-4];
	add.s32 	%r677, %r669, 3084;
	cvt.u64.u32 	%rd170, %r677;
	add.s64 	%rd171, %rd13, %rd170;
	shl.b64 	%rd172, %rd171, 2;
	add.s64 	%rd173, %rd6, %rd172;
	ld.global.u32 	%r678, [%rd173+-4];
	add.s32 	%r679, %r40, %r668;
	cvt.u64.u32 	%rd174, %r679;
	add.s64 	%rd175, %rd13, %rd174;
	shl.b64 	%rd176, %rd175, 2;
	add.s64 	%rd177, %rd6, %rd176;
	ld.global.u32 	%r680, [%rd177+-4];
	add.s32 	%r681, %r41, %r668;
	cvt.u64.u32 	%rd178, %r681;
	add.s64 	%rd179, %rd13, %rd178;
	shl.b64 	%rd180, %rd179, 2;
	add.s64 	%rd181, %rd6, %rd180;
	ld.global.u32 	%r682, [%rd181+-4];
	add.s32 	%r683, %r42, %r668;
	cvt.u64.u32 	%rd182, %r683;
	add.s64 	%rd183, %rd13, %rd182;
	shl.b64 	%rd184, %rd183, 2;
	add.s64 	%rd185, %rd6, %rd184;
	ld.global.u32 	%r684, [%rd185+-4];
	add.s32 	%r685, %r669, 6168;
	cvt.u64.u32 	%rd186, %r685;
	add.s64 	%rd187, %rd13, %rd186;
	shl.b64 	%rd188, %rd187, 2;
	add.s64 	%rd189, %rd6, %rd188;
	ld.global.u32 	%r686, [%rd189+-4];
	add.s32 	%r687, %r43, %r668;
	cvt.u64.u32 	%rd190, %r687;
	add.s64 	%rd191, %rd13, %rd190;
	shl.b64 	%rd192, %rd191, 2;
	add.s64 	%rd193, %rd6, %rd192;
	ld.global.u32 	%r688, [%rd193+-4];
	add.s32 	%r689, %r44, %r668;
	cvt.u64.u32 	%rd194, %r689;
	add.s64 	%rd195, %rd13, %rd194;
	shl.b64 	%rd196, %rd195, 2;
	add.s64 	%rd197, %rd6, %rd196;
	ld.global.u32 	%r690, [%rd197+-4];
	add.s32 	%r691, %r45, %r668;
	cvt.u64.u32 	%rd198, %r691;
	add.s64 	%rd199, %rd13, %rd198;
	shl.b64 	%rd200, %rd199, 2;
	add.s64 	%rd201, %rd6, %rd200;
	ld.global.u32 	%r692, [%rd201+-4];
	add.s32 	%r693, %r669, 9252;
	cvt.u64.u32 	%rd202, %r693;
	add.s64 	%rd203, %rd13, %rd202;
	shl.b64 	%rd204, %rd203, 2;
	add.s64 	%rd205, %rd6, %rd204;
	ld.global.u32 	%r694, [%rd205+-4];
	add.s32 	%r695, %r46, %r668;
	cvt.u64.u32 	%rd206, %r695;
	add.s64 	%rd207, %rd13, %rd206;
	shl.b64 	%rd208, %rd207, 2;
	add.s64 	%rd209, %rd6, %rd208;
	ld.global.u32 	%r696, [%rd209+-4];
	add.s32 	%r697, %r47, %r668;
	cvt.u64.u32 	%rd210, %r697;
	add.s64 	%rd211, %rd13, %rd210;
	shl.b64 	%rd212, %rd211, 2;
	add.s64 	%rd213, %rd6, %rd212;
	ld.global.u32 	%r698, [%rd213+-4];
	add.s32 	%r699, %r48, %r668;
	cvt.u64.u32 	%rd214, %r699;
	add.s64 	%rd215, %rd13, %rd214;
	shl.b64 	%rd216, %rd215, 2;
	add.s64 	%rd217, %rd6, %rd216;
	ld.global.u32 	%r700, [%rd217+-4];
	add.s32 	%r701, %r669, 12336;
	cvt.u64.u32 	%rd218, %r701;
	add.s64 	%rd219, %rd13, %rd218;
	shl.b64 	%rd220, %rd219, 2;
	add.s64 	%rd221, %rd6, %rd220;
	ld.global.u32 	%r702, [%rd221+-4];
	add.s32 	%r703, %r49, %r668;
	cvt.u64.u32 	%rd222, %r703;
	add.s64 	%rd223, %rd13, %rd222;
	shl.b64 	%rd224, %rd223, 2;
	add.s64 	%rd225, %rd6, %rd224;
	ld.global.u32 	%r704, [%rd225+-4];
	add.s32 	%r705, %r50, %r668;
	cvt.u64.u32 	%rd226, %r705;
	add.s64 	%rd227, %rd13, %rd226;
	shl.b64 	%rd228, %rd227, 2;
	add.s64 	%rd229, %rd6, %rd228;
	ld.global.u32 	%r706, [%rd229+-4];
	add.s32 	%r707, %r51, %r668;
	cvt.u64.u32 	%rd230, %r707;
	add.s64 	%rd231, %rd13, %rd230;
	shl.b64 	%rd232, %rd231, 2;
	add.s64 	%rd233, %rd6, %rd232;
	ld.global.u32 	%r708, [%rd233+-4];
	add.s32 	%r709, %r669, 15420;
	cvt.u64.u32 	%rd234, %r709;
	add.s64 	%rd235, %rd13, %rd234;
	shl.b64 	%rd236, %rd235, 2;
	add.s64 	%rd237, %rd6, %rd236;
	ld.global.u32 	%r710, [%rd237+-4];
	add.s32 	%r711, %r52, %r668;
	cvt.u64.u32 	%rd238, %r711;
	add.s64 	%rd239, %rd13, %rd238;
	shl.b64 	%rd240, %rd239, 2;
	add.s64 	%rd241, %rd6, %rd240;
	ld.global.u32 	%r712, [%rd241+-4];
	bar.sync 	0;
	shfl.sync.idx.b32	%r713, %r186, 0, 31, -1;
	shfl.sync.idx.b32	%r714, %r186, 1, 31, -1;
	shfl.sync.idx.b32	%r715, %r186, 2, 31, -1;
	shfl.sync.idx.b32	%r716, %r186, 3, 31, -1;
	shfl.sync.idx.b32	%r717, %r186, 4, 31, -1;
	shfl.sync.idx.b32	%r718, %r186, 5, 31, -1;
	shfl.sync.idx.b32	%r719, %r186, 6, 31, -1;
	shfl.sync.idx.b32	%r720, %r186, 7, 31, -1;
	shfl.sync.idx.b32	%r721, %r186, 8, 31, -1;
	shfl.sync.idx.b32	%r722, %r186, 9, 31, -1;
	shfl.sync.idx.b32	%r723, %r186, 10, 31, -1;
	shfl.sync.idx.b32	%r724, %r186, 11, 31, -1;
	shfl.sync.idx.b32	%r725, %r186, 12, 31, -1;
	shfl.sync.idx.b32	%r726, %r186, 13, 31, -1;
	shfl.sync.idx.b32	%r727, %r186, 14, 31, -1;
	shfl.sync.idx.b32	%r728, %r186, 15, 31, -1;
	shfl.sync.idx.b32	%r729, %r186, 16, 31, -1;
	shfl.sync.idx.b32	%r730, %r186, 17, 31, -1;
	shfl.sync.idx.b32	%r731, %r186, 18, 31, -1;
	shfl.sync.idx.b32	%r732, %r186, 19, 31, -1;
	shfl.sync.idx.b32	%r733, %r186, 20, 31, -1;
	shfl.sync.idx.b32	%r734, %r186, 21, 31, -1;
	shfl.sync.idx.b32	%r735, %r186, 22, 31, -1;
	shfl.sync.idx.b32	%r736, %r186, 23, 31, -1;
	add.s32 	%r737, %r713, %r668;
	add.s32 	%r738, %r737, 1;
	cvt.s64.s32 	%rd242, %r738;
	add.s64 	%rd243, %rd14, %rd242;
	shl.b64 	%rd244, %rd243, 2;
	add.s64 	%rd245, %rd8, %rd244;
	st.global.u32 	[%rd245+-4], %r670;
	add.s32 	%r739, %r714, %r668;
	add.s32 	%r740, %r739, 1;
	cvt.s64.s32 	%rd246, %r740;
	add.s64 	%rd247, %rd14, %rd246;
	shl.b64 	%rd248, %rd247, 2;
	add.s64 	%rd249, %rd8, %rd248;
	st.global.u32 	[%rd249+-4], %r672;
	add.s32 	%r741, %r715, %r668;
	add.s32 	%r742, %r741, 1;
	cvt.s64.s32 	%rd250, %r742;
	add.s64 	%rd251, %rd14, %rd250;
	shl.b64 	%rd252, %rd251, 2;
	add.s64 	%rd253, %rd8, %rd252;
	st.global.u32 	[%rd253+-4], %r674;
	add.s32 	%r743, %r716, %r668;
	add.s32 	%r744, %r743, 1;
	cvt.s64.s32 	%rd254, %r744;
	add.s64 	%rd255, %rd14, %rd254;
	shl.b64 	%rd256, %rd255, 2;
	add.s64 	%rd257, %rd8, %rd256;
	st.global.u32 	[%rd257+-4], %r676;
	add.s32 	%r745, %r717, %r668;
	add.s32 	%r746, %r745, 1;
	cvt.s64.s32 	%rd258, %r746;
	add.s64 	%rd259, %rd14, %rd258;
	shl.b64 	%rd260, %rd259, 2;
	add.s64 	%rd261, %rd8, %rd260;
	st.global.u32 	[%rd261+-4], %r678;
	add.s32 	%r747, %r718, %r668;
	add.s32 	%r748, %r747, 1;
	cvt.s64.s32 	%rd262, %r748;
	add.s64 	%rd263, %rd14, %rd262;
	shl.b64 	%rd264, %rd263, 2;
	add.s64 	%rd265, %rd8, %rd264;
	st.global.u32 	[%rd265+-4], %r680;
	add.s32 	%r749, %r719, %r668;
	add.s32 	%r750, %r749, 1;
	cvt.s64.s32 	%rd266, %r750;
	add.s64 	%rd267, %rd14, %rd266;
	shl.b64 	%rd268, %rd267, 2;
	add.s64 	%rd269, %rd8, %rd268;
	st.global.u32 	[%rd269+-4], %r682;
	add.s32 	%r751, %r720, %r668;
	add.s32 	%r752, %r751, 1;
	cvt.s64.s32 	%rd270, %r752;
	add.s64 	%rd271, %rd14, %rd270;
	shl.b64 	%rd272, %rd271, 2;
	add.s64 	%rd273, %rd8, %rd272;
	st.global.u32 	[%rd273+-4], %r684;
	add.s32 	%r753, %r721, %r668;
	add.s32 	%r754, %r753, 1;
	cvt.s64.s32 	%rd274, %r754;
	add.s64 	%rd275, %rd14, %rd274;
	shl.b64 	%rd276, %rd275, 2;
	add.s64 	%rd277, %rd8, %rd276;
	st.global.u32 	[%rd277+-4], %r686;
	add.s32 	%r755, %r722, %r668;
	add.s32 	%r756, %r755, 1;
	cvt.s64.s32 	%rd278, %r756;
	add.s64 	%rd279, %rd14, %rd278;
	shl.b64 	%rd280, %rd279, 2;
	add.s64 	%rd281, %rd8, %rd280;
	st.global.u32 	[%rd281+-4], %r688;
	add.s32 	%r757, %r723, %r668;
	add.s32 	%r758, %r757, 1;
	cvt.s64.s32 	%rd282, %r758;
	add.s64 	%rd283, %rd14, %rd282;
	shl.b64 	%rd284, %rd283, 2;
	add.s64 	%rd285, %rd8, %rd284;
	st.global.u32 	[%rd285+-4], %r690;
	add.s32 	%r759, %r724, %r668;
	add.s32 	%r760, %r759, 1;
	cvt.s64.s32 	%rd286, %r760;
	add.s64 	%rd287, %rd14, %rd286;
	shl.b64 	%rd288, %rd287, 2;
	add.s64 	%rd289, %rd8, %rd288;
	st.global.u32 	[%rd289+-4], %r692;
	add.s32 	%r761, %r725, %r668;
	add.s32 	%r762, %r761, 1;
	cvt.s64.s32 	%rd290, %r762;
	add.s64 	%rd291, %rd14, %rd290;
	shl.b64 	%rd292, %rd291, 2;
	add.s64 	%rd293, %rd8, %rd292;
	st.global.u32 	[%rd293+-4], %r694;
	add.s32 	%r763, %r726, %r668;
	add.s32 	%r764, %r763, 1;
	cvt.s64.s32 	%rd294, %r764;
	add.s64 	%rd295, %rd14, %rd294;
	shl.b64 	%rd296, %rd295, 2;
	add.s64 	%rd297, %rd8, %rd296;
	st.global.u32 	[%rd297+-4], %r696;
	add.s32 	%r765, %r727, %r668;
	add.s32 	%r766, %r765, 1;
	cvt.s64.s32 	%rd298, %r766;
	add.s64 	%rd299, %rd14, %rd298;
	shl.b64 	%rd300, %rd299, 2;
	add.s64 	%rd301, %rd8, %rd300;
	st.global.u32 	[%rd301+-4], %r698;
	add.s32 	%r767, %r728, %r668;
	add.s32 	%r768, %r767, 1;
	cvt.s64.s32 	%rd302, %r768;
	add.s64 	%rd303, %rd14, %rd302;
	shl.b64 	%rd304, %rd303, 2;
	add.s64 	%rd305, %rd8, %rd304;
	st.global.u32 	[%rd305+-4], %r700;
	add.s32 	%r769, %r729, %r668;
	add.s32 	%r770, %r769, 1;
	cvt.s64.s32 	%rd306, %r770;
	add.s64 	%rd307, %rd14, %rd306;
	shl.b64 	%rd308, %rd307, 2;
	add.s64 	%rd309, %rd8, %rd308;
	st.global.u32 	[%rd309+-4], %r702;
	add.s32 	%r771, %r730, %r668;
	add.s32 	%r772, %r771, 1;
	cvt.s64.s32 	%rd310, %r772;
	add.s64 	%rd311, %rd14, %rd310;
	shl.b64 	%rd312, %rd311, 2;
	add.s64 	%rd313, %rd8, %rd312;
	st.global.u32 	[%rd313+-4], %r704;
	add.s32 	%r773, %r731, %r668;
	add.s32 	%r774, %r773, 1;
	cvt.s64.s32 	%rd314, %r774;
	add.s64 	%rd315, %rd14, %rd314;
	shl.b64 	%rd316, %rd315, 2;
	add.s64 	%rd317, %rd8, %rd316;
	st.global.u32 	[%rd317+-4], %r706;
	add.s32 	%r775, %r732, %r668;
	add.s32 	%r776, %r775, 1;
	cvt.s64.s32 	%rd318, %r776;
	add.s64 	%rd319, %rd14, %rd318;
	shl.b64 	%rd320, %rd319, 2;
	add.s64 	%rd321, %rd8, %rd320;
	st.global.u32 	[%rd321+-4], %r708;
	add.s32 	%r777, %r733, %r668;
	add.s32 	%r778, %r777, 1;
	cvt.s64.s32 	%rd322, %r778;
	add.s64 	%rd323, %rd14, %rd322;
	shl.b64 	%rd324, %rd323, 2;
	add.s64 	%rd325, %rd8, %rd324;
	st.global.u32 	[%rd325+-4], %r710;
	selp.b32 	%r779, 0, %r712, %p73;
	add.s32 	%r780, %r734, %r668;
	add.s32 	%r781, %r780, 1;
	cvt.s64.s32 	%rd326, %r781;
	add.s64 	%rd327, %rd14, %rd326;
	shl.b64 	%rd328, %rd327, 2;
	add.s64 	%rd329, %rd8, %rd328;
	st.global.u32 	[%rd329+-4], %r779;
	add.s32 	%r782, %r735, %r668;
	add.s32 	%r783, %r782, 1;
	cvt.s64.s32 	%rd330, %r783;
	add.s64 	%rd331, %rd14, %rd330;
	shl.b64 	%rd332, %rd331, 2;
	add.s64 	%rd333, %rd8, %rd332;
	st.global.u32 	[%rd333+-4], %r2645;
	add.s32 	%r784, %r736, %r668;
	add.s32 	%r785, %r784, 1;
	cvt.s64.s32 	%rd334, %r785;
	add.s64 	%rd335, %rd14, %rd334;
	shl.b64 	%rd336, %rd335, 2;
	add.s64 	%rd337, %rd8, %rd336;
	st.global.u32 	[%rd337+-4], %r2645;
	bar.sync 	0;
	mov.u32 	%r2659, %r2645;
	mov.u32 	%r2660, %r2645;
	mov.u32 	%r2661, %r2645;
	mov.u32 	%r2662, %r2645;
	mov.u32 	%r2663, %r2645;
	mov.u32 	%r2664, %r2645;
	mov.u32 	%r2665, %r2645;
	mov.u32 	%r2666, %r2645;
	mov.u32 	%r2667, %r2645;
	mov.u32 	%r2668, %r2645;
	mov.u32 	%r2669, %r2645;
	mov.u32 	%r2670, %r2645;
	mov.u32 	%r2671, %r2645;
	mov.u32 	%r2672, %r2645;
	mov.u32 	%r2673, %r2645;
	mov.u32 	%r2674, %r2645;
	mov.u32 	%r2675, %r2645;
	mov.u32 	%r2676, %r2645;
	mov.u32 	%r2677, %r2645;
	mov.u32 	%r2678, %r2645;
	mov.u32 	%r2679, %r2645;
	mov.u32 	%r2680, %r2645;
	mov.u32 	%r2681, %r2645;
	mov.u32 	%r2682, %r2645;
	@%p72 bra 	LBB0_42;
	bra.uni 	LBB0_23;
LBB0_42:                                // %pass3294
                                        //   in Loop: Header=BB0_22 Depth=1
	cvt.u16.u32 	%rs118, %r72;
	mul.hi.u16 	%rs119, %rs118, -21845;
	shr.u16 	%rs120, %rs119, 4;
	mul.lo.s16 	%rs121, %rs120, 24;
	sub.s16 	%rs122, %rs118, %rs121;
	add.s16 	%rs123, %rs122, 1;
	cvt.u32.u16 	%r786, %rs123;
	add.s32 	%r787, %r53, %r786;
	add.s32 	%r788, %r787, %r54;
	add.s32 	%r789, %r788, %r55;
	add.s32 	%r790, %r789, %r56;
	cvt.u64.u32 	%rd338, %r790;
	add.s64 	%rd339, %rd14, %rd338;
	shl.b64 	%rd340, %rd339, 2;
	add.s64 	%rd341, %rd8, %rd340;
	ld.global.u32 	%r2659, [%rd341+-4];
	or.b16  	%rs124, %rs118, 1;
	mul.hi.u16 	%rs125, %rs124, -21845;
	shr.u16 	%rs126, %rs125, 4;
	mul.lo.s16 	%rs127, %rs126, 24;
	sub.s16 	%rs128, %rs124, %rs127;
	add.s16 	%rs129, %rs128, 1;
	cvt.u32.u16 	%r791, %rs129;
	add.s32 	%r792, %r53, %r791;
	add.s32 	%r793, %r792, %r54;
	add.s32 	%r794, %r793, %r55;
	add.s32 	%r795, %r794, %r56;
	cvt.u64.u32 	%rd342, %r795;
	add.s64 	%rd343, %rd14, %rd342;
	shl.b64 	%rd344, %rd343, 2;
	add.s64 	%rd345, %rd8, %rd344;
	ld.global.u32 	%r2660, [%rd345+-4];
	or.b16  	%rs130, %rs118, 2;
	mul.hi.u16 	%rs131, %rs130, -21845;
	shr.u16 	%rs132, %rs131, 4;
	mul.lo.s16 	%rs133, %rs132, 24;
	sub.s16 	%rs134, %rs130, %rs133;
	add.s16 	%rs135, %rs134, 1;
	cvt.u32.u16 	%r796, %rs135;
	add.s32 	%r797, %r53, %r796;
	add.s32 	%r798, %r797, %r54;
	add.s32 	%r799, %r798, %r55;
	add.s32 	%r800, %r799, %r56;
	cvt.u64.u32 	%rd346, %r800;
	add.s64 	%rd347, %rd14, %rd346;
	shl.b64 	%rd348, %rd347, 2;
	add.s64 	%rd349, %rd8, %rd348;
	ld.global.u32 	%r2661, [%rd349+-4];
	or.b16  	%rs136, %rs118, 3;
	mul.hi.u16 	%rs137, %rs136, -21845;
	shr.u16 	%rs138, %rs137, 4;
	mul.lo.s16 	%rs139, %rs138, 24;
	sub.s16 	%rs140, %rs136, %rs139;
	add.s16 	%rs141, %rs140, 1;
	cvt.u32.u16 	%r801, %rs141;
	add.s32 	%r802, %r53, %r801;
	add.s32 	%r803, %r802, %r54;
	add.s32 	%r804, %r803, %r55;
	add.s32 	%r805, %r804, %r56;
	cvt.u64.u32 	%rd350, %r805;
	add.s64 	%rd351, %rd14, %rd350;
	shl.b64 	%rd352, %rd351, 2;
	add.s64 	%rd353, %rd8, %rd352;
	ld.global.u32 	%r2662, [%rd353+-4];
	or.b16  	%rs142, %rs118, 4;
	mul.hi.u16 	%rs143, %rs142, -21845;
	shr.u16 	%rs144, %rs143, 4;
	mul.lo.s16 	%rs145, %rs144, 24;
	sub.s16 	%rs146, %rs142, %rs145;
	add.s16 	%rs147, %rs146, 1;
	cvt.u32.u16 	%r806, %rs147;
	add.s32 	%r807, %r53, %r806;
	add.s32 	%r808, %r807, %r54;
	add.s32 	%r809, %r808, %r55;
	add.s32 	%r810, %r809, %r56;
	cvt.u64.u32 	%rd354, %r810;
	add.s64 	%rd355, %rd14, %rd354;
	shl.b64 	%rd356, %rd355, 2;
	add.s64 	%rd357, %rd8, %rd356;
	ld.global.u32 	%r2663, [%rd357+-4];
	or.b16  	%rs148, %rs118, 5;
	mul.hi.u16 	%rs149, %rs148, -21845;
	shr.u16 	%rs150, %rs149, 4;
	mul.lo.s16 	%rs151, %rs150, 24;
	sub.s16 	%rs152, %rs148, %rs151;
	add.s16 	%rs153, %rs152, 1;
	cvt.u32.u16 	%r811, %rs153;
	add.s32 	%r812, %r53, %r811;
	add.s32 	%r813, %r812, %r54;
	add.s32 	%r814, %r813, %r55;
	add.s32 	%r815, %r814, %r56;
	cvt.u64.u32 	%rd358, %r815;
	add.s64 	%rd359, %rd14, %rd358;
	shl.b64 	%rd360, %rd359, 2;
	add.s64 	%rd361, %rd8, %rd360;
	ld.global.u32 	%r2664, [%rd361+-4];
	or.b16  	%rs154, %rs118, 6;
	mul.hi.u16 	%rs155, %rs154, -21845;
	shr.u16 	%rs156, %rs155, 4;
	mul.lo.s16 	%rs157, %rs156, 24;
	sub.s16 	%rs158, %rs154, %rs157;
	add.s16 	%rs159, %rs158, 1;
	cvt.u32.u16 	%r816, %rs159;
	add.s32 	%r817, %r53, %r816;
	add.s32 	%r818, %r817, %r54;
	add.s32 	%r819, %r818, %r55;
	add.s32 	%r820, %r819, %r56;
	cvt.u64.u32 	%rd362, %r820;
	add.s64 	%rd363, %rd14, %rd362;
	shl.b64 	%rd364, %rd363, 2;
	add.s64 	%rd365, %rd8, %rd364;
	ld.global.u32 	%r2665, [%rd365+-4];
	or.b16  	%rs160, %rs118, 7;
	mul.hi.u16 	%rs161, %rs160, -21845;
	shr.u16 	%rs162, %rs161, 4;
	mul.lo.s16 	%rs163, %rs162, 24;
	sub.s16 	%rs164, %rs160, %rs163;
	add.s16 	%rs165, %rs164, 1;
	cvt.u32.u16 	%r821, %rs165;
	add.s32 	%r822, %r53, %r821;
	add.s32 	%r823, %r822, %r54;
	add.s32 	%r824, %r823, %r55;
	add.s32 	%r825, %r824, %r56;
	cvt.u64.u32 	%rd366, %r825;
	add.s64 	%rd367, %rd14, %rd366;
	shl.b64 	%rd368, %rd367, 2;
	add.s64 	%rd369, %rd8, %rd368;
	ld.global.u32 	%r2666, [%rd369+-4];
	or.b16  	%rs166, %rs118, 8;
	mul.hi.u16 	%rs167, %rs166, -21845;
	shr.u16 	%rs168, %rs167, 4;
	mul.lo.s16 	%rs169, %rs168, 24;
	sub.s16 	%rs170, %rs166, %rs169;
	add.s16 	%rs171, %rs170, 1;
	cvt.u32.u16 	%r826, %rs171;
	add.s32 	%r827, %r53, %r826;
	add.s32 	%r828, %r827, %r54;
	add.s32 	%r829, %r828, %r55;
	add.s32 	%r830, %r829, %r56;
	cvt.u64.u32 	%rd370, %r830;
	add.s64 	%rd371, %rd14, %rd370;
	shl.b64 	%rd372, %rd371, 2;
	add.s64 	%rd373, %rd8, %rd372;
	ld.global.u32 	%r2667, [%rd373+-4];
	or.b16  	%rs172, %rs118, 9;
	mul.hi.u16 	%rs173, %rs172, -21845;
	shr.u16 	%rs174, %rs173, 4;
	mul.lo.s16 	%rs175, %rs174, 24;
	sub.s16 	%rs176, %rs172, %rs175;
	add.s16 	%rs177, %rs176, 1;
	cvt.u32.u16 	%r831, %rs177;
	add.s32 	%r832, %r53, %r831;
	add.s32 	%r833, %r832, %r54;
	add.s32 	%r834, %r833, %r55;
	add.s32 	%r835, %r834, %r56;
	cvt.u64.u32 	%rd374, %r835;
	add.s64 	%rd375, %rd14, %rd374;
	shl.b64 	%rd376, %rd375, 2;
	add.s64 	%rd377, %rd8, %rd376;
	ld.global.u32 	%r2668, [%rd377+-4];
	or.b16  	%rs178, %rs118, 10;
	mul.hi.u16 	%rs179, %rs178, -21845;
	shr.u16 	%rs180, %rs179, 4;
	mul.lo.s16 	%rs181, %rs180, 24;
	sub.s16 	%rs182, %rs178, %rs181;
	add.s16 	%rs183, %rs182, 1;
	cvt.u32.u16 	%r836, %rs183;
	add.s32 	%r837, %r53, %r836;
	add.s32 	%r838, %r837, %r54;
	add.s32 	%r839, %r838, %r55;
	add.s32 	%r840, %r839, %r56;
	cvt.u64.u32 	%rd378, %r840;
	add.s64 	%rd379, %rd14, %rd378;
	shl.b64 	%rd380, %rd379, 2;
	add.s64 	%rd381, %rd8, %rd380;
	ld.global.u32 	%r2669, [%rd381+-4];
	or.b16  	%rs184, %rs118, 11;
	mul.hi.u16 	%rs185, %rs184, -21845;
	shr.u16 	%rs186, %rs185, 4;
	mul.lo.s16 	%rs187, %rs186, 24;
	sub.s16 	%rs188, %rs184, %rs187;
	add.s16 	%rs189, %rs188, 1;
	cvt.u32.u16 	%r841, %rs189;
	add.s32 	%r842, %r53, %r841;
	add.s32 	%r843, %r842, %r54;
	add.s32 	%r844, %r843, %r55;
	add.s32 	%r845, %r844, %r56;
	cvt.u64.u32 	%rd382, %r845;
	add.s64 	%rd383, %rd14, %rd382;
	shl.b64 	%rd384, %rd383, 2;
	add.s64 	%rd385, %rd8, %rd384;
	ld.global.u32 	%r2670, [%rd385+-4];
	or.b16  	%rs190, %rs118, 12;
	mul.hi.u16 	%rs191, %rs190, -21845;
	shr.u16 	%rs192, %rs191, 4;
	mul.lo.s16 	%rs193, %rs192, 24;
	sub.s16 	%rs194, %rs190, %rs193;
	add.s16 	%rs195, %rs194, 1;
	cvt.u32.u16 	%r846, %rs195;
	add.s32 	%r847, %r53, %r846;
	add.s32 	%r848, %r847, %r54;
	add.s32 	%r849, %r848, %r55;
	add.s32 	%r850, %r849, %r56;
	cvt.u64.u32 	%rd386, %r850;
	add.s64 	%rd387, %rd14, %rd386;
	shl.b64 	%rd388, %rd387, 2;
	add.s64 	%rd389, %rd8, %rd388;
	ld.global.u32 	%r2671, [%rd389+-4];
	or.b16  	%rs196, %rs118, 13;
	mul.hi.u16 	%rs197, %rs196, -21845;
	shr.u16 	%rs198, %rs197, 4;
	mul.lo.s16 	%rs199, %rs198, 24;
	sub.s16 	%rs200, %rs196, %rs199;
	add.s16 	%rs201, %rs200, 1;
	cvt.u32.u16 	%r851, %rs201;
	add.s32 	%r852, %r53, %r851;
	add.s32 	%r853, %r852, %r54;
	add.s32 	%r854, %r853, %r55;
	add.s32 	%r855, %r854, %r56;
	cvt.u64.u32 	%rd390, %r855;
	add.s64 	%rd391, %rd14, %rd390;
	shl.b64 	%rd392, %rd391, 2;
	add.s64 	%rd393, %rd8, %rd392;
	ld.global.u32 	%r2672, [%rd393+-4];
	or.b16  	%rs202, %rs118, 14;
	mul.hi.u16 	%rs203, %rs202, -21845;
	shr.u16 	%rs204, %rs203, 4;
	mul.lo.s16 	%rs205, %rs204, 24;
	sub.s16 	%rs206, %rs202, %rs205;
	add.s16 	%rs207, %rs206, 1;
	cvt.u32.u16 	%r856, %rs207;
	add.s32 	%r857, %r53, %r856;
	add.s32 	%r858, %r857, %r54;
	add.s32 	%r859, %r858, %r55;
	add.s32 	%r860, %r859, %r56;
	cvt.u64.u32 	%rd394, %r860;
	add.s64 	%rd395, %rd14, %rd394;
	shl.b64 	%rd396, %rd395, 2;
	add.s64 	%rd397, %rd8, %rd396;
	ld.global.u32 	%r2673, [%rd397+-4];
	or.b16  	%rs208, %rs118, 15;
	mul.hi.u16 	%rs209, %rs208, -21845;
	shr.u16 	%rs210, %rs209, 4;
	mul.lo.s16 	%rs211, %rs210, 24;
	sub.s16 	%rs212, %rs208, %rs211;
	add.s16 	%rs213, %rs212, 1;
	cvt.u32.u16 	%r861, %rs213;
	add.s32 	%r862, %r53, %r861;
	add.s32 	%r863, %r862, %r54;
	add.s32 	%r864, %r863, %r55;
	add.s32 	%r865, %r864, %r56;
	cvt.u64.u32 	%rd398, %r865;
	add.s64 	%rd399, %rd14, %rd398;
	shl.b64 	%rd400, %rd399, 2;
	add.s64 	%rd401, %rd8, %rd400;
	ld.global.u32 	%r2674, [%rd401+-4];
	add.s16 	%rs214, %rs118, 16;
	mul.hi.u16 	%rs215, %rs214, -21845;
	shr.u16 	%rs216, %rs215, 4;
	mul.lo.s16 	%rs217, %rs216, 24;
	sub.s16 	%rs218, %rs214, %rs217;
	add.s16 	%rs219, %rs218, 1;
	cvt.u32.u16 	%r866, %rs219;
	add.s32 	%r867, %r53, %r866;
	add.s32 	%r868, %r867, %r54;
	add.s32 	%r869, %r868, %r55;
	add.s32 	%r870, %r869, %r56;
	cvt.u64.u32 	%rd402, %r870;
	add.s64 	%rd403, %rd14, %rd402;
	shl.b64 	%rd404, %rd403, 2;
	add.s64 	%rd405, %rd8, %rd404;
	ld.global.u32 	%r2675, [%rd405+-4];
	add.s16 	%rs220, %rs118, 17;
	mul.hi.u16 	%rs221, %rs220, -21845;
	shr.u16 	%rs222, %rs221, 4;
	mul.lo.s16 	%rs223, %rs222, 24;
	sub.s16 	%rs224, %rs220, %rs223;
	add.s16 	%rs225, %rs224, 1;
	cvt.u32.u16 	%r871, %rs225;
	add.s32 	%r872, %r53, %r871;
	add.s32 	%r873, %r872, %r54;
	add.s32 	%r874, %r873, %r55;
	add.s32 	%r875, %r874, %r56;
	cvt.u64.u32 	%rd406, %r875;
	add.s64 	%rd407, %rd14, %rd406;
	shl.b64 	%rd408, %rd407, 2;
	add.s64 	%rd409, %rd8, %rd408;
	ld.global.u32 	%r2676, [%rd409+-4];
	add.s16 	%rs226, %rs118, 18;
	mul.hi.u16 	%rs227, %rs226, -21845;
	shr.u16 	%rs228, %rs227, 4;
	mul.lo.s16 	%rs229, %rs228, 24;
	sub.s16 	%rs230, %rs226, %rs229;
	add.s16 	%rs231, %rs230, 1;
	cvt.u32.u16 	%r876, %rs231;
	add.s32 	%r877, %r53, %r876;
	add.s32 	%r878, %r877, %r54;
	add.s32 	%r879, %r878, %r55;
	add.s32 	%r880, %r879, %r56;
	cvt.u64.u32 	%rd410, %r880;
	add.s64 	%rd411, %rd14, %rd410;
	shl.b64 	%rd412, %rd411, 2;
	add.s64 	%rd413, %rd8, %rd412;
	ld.global.u32 	%r2677, [%rd413+-4];
	add.s16 	%rs232, %rs118, 19;
	mul.hi.u16 	%rs233, %rs232, -21845;
	shr.u16 	%rs234, %rs233, 4;
	mul.lo.s16 	%rs235, %rs234, 24;
	sub.s16 	%rs236, %rs232, %rs235;
	add.s16 	%rs237, %rs236, 1;
	cvt.u32.u16 	%r881, %rs237;
	add.s32 	%r882, %r53, %r881;
	add.s32 	%r883, %r882, %r54;
	add.s32 	%r884, %r883, %r55;
	add.s32 	%r885, %r884, %r56;
	cvt.u64.u32 	%rd414, %r885;
	add.s64 	%rd415, %rd14, %rd414;
	shl.b64 	%rd416, %rd415, 2;
	add.s64 	%rd417, %rd8, %rd416;
	ld.global.u32 	%r2678, [%rd417+-4];
	add.s16 	%rs238, %rs118, 20;
	mul.hi.u16 	%rs239, %rs238, -21845;
	shr.u16 	%rs240, %rs239, 4;
	mul.lo.s16 	%rs241, %rs240, 24;
	sub.s16 	%rs242, %rs238, %rs241;
	add.s16 	%rs243, %rs242, 1;
	cvt.u32.u16 	%r886, %rs243;
	add.s32 	%r887, %r53, %r886;
	add.s32 	%r888, %r887, %r54;
	add.s32 	%r889, %r888, %r55;
	add.s32 	%r890, %r889, %r56;
	cvt.u64.u32 	%rd418, %r890;
	add.s64 	%rd419, %rd14, %rd418;
	shl.b64 	%rd420, %rd419, 2;
	add.s64 	%rd421, %rd8, %rd420;
	ld.global.u32 	%r2679, [%rd421+-4];
	add.s16 	%rs244, %rs118, 21;
	mul.hi.u16 	%rs245, %rs244, -21845;
	shr.u16 	%rs246, %rs245, 4;
	mul.lo.s16 	%rs247, %rs246, 24;
	sub.s16 	%rs248, %rs244, %rs247;
	add.s16 	%rs249, %rs248, 1;
	cvt.u32.u16 	%r891, %rs249;
	add.s32 	%r892, %r53, %r891;
	add.s32 	%r893, %r892, %r54;
	add.s32 	%r894, %r893, %r55;
	add.s32 	%r895, %r894, %r56;
	cvt.u64.u32 	%rd422, %r895;
	add.s64 	%rd423, %rd14, %rd422;
	shl.b64 	%rd424, %rd423, 2;
	add.s64 	%rd425, %rd8, %rd424;
	ld.global.u32 	%r2680, [%rd425+-4];
	add.s16 	%rs250, %rs118, 22;
	mul.hi.u16 	%rs251, %rs250, -21845;
	shr.u16 	%rs252, %rs251, 4;
	mul.lo.s16 	%rs253, %rs252, 24;
	sub.s16 	%rs254, %rs250, %rs253;
	add.s16 	%rs255, %rs254, 1;
	cvt.u32.u16 	%r896, %rs255;
	add.s32 	%r897, %r53, %r896;
	add.s32 	%r898, %r897, %r54;
	add.s32 	%r899, %r898, %r55;
	add.s32 	%r900, %r899, %r56;
	cvt.u64.u32 	%rd426, %r900;
	add.s64 	%rd427, %rd14, %rd426;
	shl.b64 	%rd428, %rd427, 2;
	add.s64 	%rd429, %rd8, %rd428;
	ld.global.u32 	%r2681, [%rd429+-4];
	add.s16 	%rs256, %rs118, 23;
	mul.hi.u16 	%rs257, %rs256, -21845;
	shr.u16 	%rs258, %rs257, 4;
	mul.lo.s16 	%rs259, %rs258, 24;
	sub.s16 	%rs260, %rs256, %rs259;
	add.s16 	%rs261, %rs260, 1;
	cvt.u32.u16 	%r901, %rs261;
	add.s32 	%r902, %r53, %r901;
	add.s32 	%r903, %r902, %r54;
	add.s32 	%r904, %r903, %r55;
	add.s32 	%r905, %r904, %r56;
	cvt.u64.u32 	%rd430, %r905;
	add.s64 	%rd431, %rd14, %rd430;
	shl.b64 	%rd432, %rd431, 2;
	add.s64 	%rd433, %rd8, %rd432;
	ld.global.u32 	%r2682, [%rd433+-4];
LBB0_23:                                // %L15161
                                        //   in Loop: Header=BB0_22 Depth=1
	bar.sync 	0;
	xor.b32  	%r97, %r2659, -2004318072;
	shr.u32 	%r98, %r97, 8;
	xor.b32  	%r99, %r2660, -2004318072;
	shr.u32 	%r100, %r99, 8;
	xor.b32  	%r101, %r2661, -2004318072;
	shr.u32 	%r102, %r101, 8;
	xor.b32  	%r103, %r2662, -2004318072;
	shr.u32 	%r104, %r103, 8;
	xor.b32  	%r105, %r2663, -2004318072;
	shr.u32 	%r106, %r105, 8;
	xor.b32  	%r107, %r2664, -2004318072;
	shr.u32 	%r108, %r107, 8;
	xor.b32  	%r109, %r2665, -2004318072;
	shr.u32 	%r110, %r109, 8;
	xor.b32  	%r111, %r2666, -2004318072;
	shr.u32 	%r112, %r111, 8;
	xor.b32  	%r113, %r2667, -2004318072;
	shr.u32 	%r114, %r113, 8;
	xor.b32  	%r115, %r2668, -2004318072;
	shr.u32 	%r116, %r115, 8;
	xor.b32  	%r117, %r2669, -2004318072;
	shr.u32 	%r118, %r117, 8;
	xor.b32  	%r119, %r2670, -2004318072;
	shr.u32 	%r120, %r119, 8;
	xor.b32  	%r121, %r2671, -2004318072;
	shr.u32 	%r122, %r121, 8;
	xor.b32  	%r123, %r2672, -2004318072;
	shr.u32 	%r124, %r123, 8;
	xor.b32  	%r125, %r2673, -2004318072;
	shr.u32 	%r126, %r125, 8;
	xor.b32  	%r127, %r2674, -2004318072;
	shr.u32 	%r128, %r127, 8;
	xor.b32  	%r129, %r2675, -2004318072;
	shr.u32 	%r130, %r129, 8;
	xor.b32  	%r131, %r2676, -2004318072;
	shr.u32 	%r132, %r131, 8;
	xor.b32  	%r133, %r2677, -2004318072;
	shr.u32 	%r134, %r133, 8;
	xor.b32  	%r135, %r2678, -2004318072;
	shr.u32 	%r136, %r135, 8;
	xor.b32  	%r137, %r2679, -2004318072;
	shr.u32 	%r138, %r137, 8;
	xor.b32  	%r139, %r2680, -2004318072;
	shr.u32 	%r140, %r139, 8;
	xor.b32  	%r141, %r2681, -2004318072;
	shr.u32 	%r142, %r141, 8;
	xor.b32  	%r143, %r2682, -2004318072;
	shr.u32 	%r144, %r143, 8;
	mov.u32 	%r151, %r2645;
	bra.uni 	LBB0_24;
LBB0_33:                                // %guard_pass9247
                                        //   in Loop: Header=BB0_24 Depth=2
	setp.ne.s32 	%p93, %r151, 44;
	bar.sync 	0;
	add.s32 	%r151, %r151, 4;
	@%p93 bra 	LBB0_24;
	bra.uni 	LBB0_34;
LBB0_24:                                // %L15187
                                        //   Parent Loop BB0_22 Depth=1
                                        // =>  This Loop Header: Depth=2
                                        //       Child Loop BB0_25 Depth 3
	mov.u16 	%rs262, 25600;
	// begin inline asm
	mov.b32 %r912, {%rs262, %rs262};
	// end inline asm
	mov.u16 	%rs264, 21504;
	// begin inline asm
	mov.b32 %r923, {%rs264, %rs264};
	// end inline asm
	mov.u32 	%r910, 983055;
	// begin inline asm
	lop3.b32 %r918, %r910, %r97, %r912, 202;
	// end inline asm
	mov.u16 	%rs266, 18432;
	// begin inline asm
	mov.b32 %r916, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r919, %r912, %r916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r917, %r918, %r919;
	// end inline asm
	mov.u32 	%r921, 15728880;
	// begin inline asm
	lop3.b32 %r929, %r921, %r97, %r923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r927, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r930, %r923, %r927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r928, %r929, %r930;
	// end inline asm
	// begin inline asm
	lop3.b32 %r940, %r910, %r98, %r912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r938, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r941, %r912, %r938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r939, %r940, %r941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r951, %r921, %r98, %r923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r949, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r952, %r923, %r949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r950, %r951, %r952;
	// end inline asm
	// begin inline asm
	mov.b32 %r958, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r969, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r964, %r910, %r99, %r958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r962, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r965, %r958, %r962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r963, %r964, %r965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r975, %r921, %r99, %r969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r973, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r976, %r969, %r973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r974, %r975, %r976;
	// end inline asm
	// begin inline asm
	lop3.b32 %r986, %r910, %r100, %r958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r984, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r987, %r958, %r984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r985, %r986, %r987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r997, %r921, %r100, %r969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r995, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r998, %r969, %r995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r996, %r997, %r998;
	// end inline asm
	// begin inline asm
	mov.b32 %r1004, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1015, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1010, %r910, %r101, %r1004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1008, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1011, %r1004, %r1008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1009, %r1010, %r1011;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1021, %r921, %r101, %r1015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1019, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1022, %r1015, %r1019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1020, %r1021, %r1022;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1032, %r910, %r102, %r1004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1030, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1033, %r1004, %r1030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1031, %r1032, %r1033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1043, %r921, %r102, %r1015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1041, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1044, %r1015, %r1041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1042, %r1043, %r1044;
	// end inline asm
	// begin inline asm
	mov.b32 %r1050, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1061, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1056, %r910, %r103, %r1050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1054, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1057, %r1050, %r1054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1055, %r1056, %r1057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1067, %r921, %r103, %r1061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1065, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1068, %r1061, %r1065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1066, %r1067, %r1068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1078, %r910, %r104, %r1050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1076, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1079, %r1050, %r1076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1077, %r1078, %r1079;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1089, %r921, %r104, %r1061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1087, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1090, %r1061, %r1087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1088, %r1089, %r1090;
	// end inline asm
	// begin inline asm
	mov.b32 %r1096, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1107, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1102, %r910, %r105, %r1096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1100, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1103, %r1096, %r1100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1101, %r1102, %r1103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1113, %r921, %r105, %r1107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1111, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1114, %r1107, %r1111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1112, %r1113, %r1114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1124, %r910, %r106, %r1096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1122, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1125, %r1096, %r1122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1123, %r1124, %r1125;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1135, %r921, %r106, %r1107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1133, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1136, %r1107, %r1133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1134, %r1135, %r1136;
	// end inline asm
	// begin inline asm
	mov.b32 %r1142, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1153, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1148, %r910, %r107, %r1142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1146, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1149, %r1142, %r1146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1147, %r1148, %r1149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1159, %r921, %r107, %r1153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1157, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1160, %r1153, %r1157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1158, %r1159, %r1160;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1170, %r910, %r108, %r1142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1168, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1171, %r1142, %r1168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1169, %r1170, %r1171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1181, %r921, %r108, %r1153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1179, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1182, %r1153, %r1179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1180, %r1181, %r1182;
	// end inline asm
	// begin inline asm
	mov.b32 %r1188, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1199, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1194, %r910, %r109, %r1188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1192, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1195, %r1188, %r1192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1193, %r1194, %r1195;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1205, %r921, %r109, %r1199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1203, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1206, %r1199, %r1203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1204, %r1205, %r1206;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1216, %r910, %r110, %r1188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1214, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1217, %r1188, %r1214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1215, %r1216, %r1217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1227, %r921, %r110, %r1199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1225, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1228, %r1199, %r1225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1226, %r1227, %r1228;
	// end inline asm
	// begin inline asm
	mov.b32 %r1234, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1245, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1240, %r910, %r111, %r1234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1238, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1241, %r1234, %r1238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1239, %r1240, %r1241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1251, %r921, %r111, %r1245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1249, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1252, %r1245, %r1249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1250, %r1251, %r1252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1262, %r910, %r112, %r1234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1260, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1263, %r1234, %r1260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1261, %r1262, %r1263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1273, %r921, %r112, %r1245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1271, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1274, %r1245, %r1271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1272, %r1273, %r1274;
	// end inline asm
	// begin inline asm
	mov.b32 %r1280, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1291, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1286, %r910, %r113, %r1280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1284, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1287, %r1280, %r1284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1285, %r1286, %r1287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1297, %r921, %r113, %r1291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1295, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1298, %r1291, %r1295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1296, %r1297, %r1298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1308, %r910, %r114, %r1280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1306, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1309, %r1280, %r1306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1307, %r1308, %r1309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1319, %r921, %r114, %r1291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1317, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1320, %r1291, %r1317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1318, %r1319, %r1320;
	// end inline asm
	// begin inline asm
	mov.b32 %r1326, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1337, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1332, %r910, %r115, %r1326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1330, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1333, %r1326, %r1330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1331, %r1332, %r1333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1343, %r921, %r115, %r1337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1341, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1344, %r1337, %r1341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1342, %r1343, %r1344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1354, %r910, %r116, %r1326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1352, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1355, %r1326, %r1352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1353, %r1354, %r1355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1365, %r921, %r116, %r1337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1363, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1366, %r1337, %r1363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1364, %r1365, %r1366;
	// end inline asm
	// begin inline asm
	mov.b32 %r1372, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1383, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1378, %r910, %r117, %r1372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1376, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1379, %r1372, %r1376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1377, %r1378, %r1379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1389, %r921, %r117, %r1383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1387, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1390, %r1383, %r1387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1388, %r1389, %r1390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1400, %r910, %r118, %r1372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1398, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1401, %r1372, %r1398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1399, %r1400, %r1401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1411, %r921, %r118, %r1383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1409, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1412, %r1383, %r1409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1410, %r1411, %r1412;
	// end inline asm
	// begin inline asm
	mov.b32 %r1418, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1429, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1424, %r910, %r119, %r1418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1422, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1425, %r1418, %r1422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1423, %r1424, %r1425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1435, %r921, %r119, %r1429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1433, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1436, %r1429, %r1433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1434, %r1435, %r1436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1446, %r910, %r120, %r1418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1444, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1447, %r1418, %r1444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1445, %r1446, %r1447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1457, %r921, %r120, %r1429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1455, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1458, %r1429, %r1455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1456, %r1457, %r1458;
	// end inline asm
	// begin inline asm
	mov.b32 %r1464, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1475, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1470, %r910, %r121, %r1464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1468, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1471, %r1464, %r1468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1469, %r1470, %r1471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1481, %r921, %r121, %r1475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1479, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1482, %r1475, %r1479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1480, %r1481, %r1482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1492, %r910, %r122, %r1464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1490, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1493, %r1464, %r1490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1491, %r1492, %r1493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1503, %r921, %r122, %r1475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1501, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1504, %r1475, %r1501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1502, %r1503, %r1504;
	// end inline asm
	// begin inline asm
	mov.b32 %r1510, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1521, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1516, %r910, %r123, %r1510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1514, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1517, %r1510, %r1514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1515, %r1516, %r1517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1527, %r921, %r123, %r1521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1525, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1528, %r1521, %r1525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1526, %r1527, %r1528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1538, %r910, %r124, %r1510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1536, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1539, %r1510, %r1536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1537, %r1538, %r1539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1549, %r921, %r124, %r1521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1547, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1550, %r1521, %r1547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1548, %r1549, %r1550;
	// end inline asm
	// begin inline asm
	mov.b32 %r1556, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1567, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1562, %r910, %r125, %r1556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1560, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1563, %r1556, %r1560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1561, %r1562, %r1563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1573, %r921, %r125, %r1567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1571, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1574, %r1567, %r1571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1572, %r1573, %r1574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1584, %r910, %r126, %r1556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1582, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1585, %r1556, %r1582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1583, %r1584, %r1585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1595, %r921, %r126, %r1567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1593, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1596, %r1567, %r1593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1594, %r1595, %r1596;
	// end inline asm
	// begin inline asm
	mov.b32 %r1602, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1613, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1608, %r910, %r127, %r1602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1606, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1609, %r1602, %r1606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1607, %r1608, %r1609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1619, %r921, %r127, %r1613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1617, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1620, %r1613, %r1617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1618, %r1619, %r1620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1630, %r910, %r128, %r1602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1628, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1631, %r1602, %r1628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1629, %r1630, %r1631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1641, %r921, %r128, %r1613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1639, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1642, %r1613, %r1639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1640, %r1641, %r1642;
	// end inline asm
	// begin inline asm
	mov.b32 %r1648, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1659, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1654, %r910, %r129, %r1648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1652, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1655, %r1648, %r1652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1653, %r1654, %r1655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1665, %r921, %r129, %r1659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1663, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1666, %r1659, %r1663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1664, %r1665, %r1666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1676, %r910, %r130, %r1648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1674, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1677, %r1648, %r1674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1675, %r1676, %r1677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1687, %r921, %r130, %r1659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1685, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1688, %r1659, %r1685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1686, %r1687, %r1688;
	// end inline asm
	// begin inline asm
	mov.b32 %r1694, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1705, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1700, %r910, %r131, %r1694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1698, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1701, %r1694, %r1698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1699, %r1700, %r1701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1711, %r921, %r131, %r1705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1709, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1712, %r1705, %r1709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1710, %r1711, %r1712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1722, %r910, %r132, %r1694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1720, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1723, %r1694, %r1720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1721, %r1722, %r1723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1733, %r921, %r132, %r1705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1731, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1734, %r1705, %r1731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1732, %r1733, %r1734;
	// end inline asm
	// begin inline asm
	mov.b32 %r1740, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1751, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1746, %r910, %r133, %r1740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1744, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1747, %r1740, %r1744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1745, %r1746, %r1747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1757, %r921, %r133, %r1751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1755, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1758, %r1751, %r1755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1756, %r1757, %r1758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1768, %r910, %r134, %r1740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1766, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1769, %r1740, %r1766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1767, %r1768, %r1769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1779, %r921, %r134, %r1751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1777, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1780, %r1751, %r1777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1778, %r1779, %r1780;
	// end inline asm
	// begin inline asm
	mov.b32 %r1786, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1797, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1792, %r910, %r135, %r1786, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1790, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1793, %r1786, %r1790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1791, %r1792, %r1793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1803, %r921, %r135, %r1797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1801, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1804, %r1797, %r1801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1802, %r1803, %r1804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1814, %r910, %r136, %r1786, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1812, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1815, %r1786, %r1812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1813, %r1814, %r1815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1825, %r921, %r136, %r1797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1823, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1826, %r1797, %r1823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1824, %r1825, %r1826;
	// end inline asm
	// begin inline asm
	mov.b32 %r1832, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1843, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1838, %r910, %r137, %r1832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1836, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1839, %r1832, %r1836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1837, %r1838, %r1839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1849, %r921, %r137, %r1843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1847, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1850, %r1843, %r1847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1848, %r1849, %r1850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1860, %r910, %r138, %r1832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1858, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1861, %r1832, %r1858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1859, %r1860, %r1861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1871, %r921, %r138, %r1843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1869, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1872, %r1843, %r1869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1870, %r1871, %r1872;
	// end inline asm
	// begin inline asm
	mov.b32 %r1878, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1889, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1884, %r910, %r139, %r1878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1882, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1885, %r1878, %r1882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1883, %r1884, %r1885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1895, %r921, %r139, %r1889, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1893, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1896, %r1889, %r1893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1894, %r1895, %r1896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1906, %r910, %r140, %r1878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1904, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1907, %r1878, %r1904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1905, %r1906, %r1907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1917, %r921, %r140, %r1889, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1915, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1918, %r1889, %r1915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1916, %r1917, %r1918;
	// end inline asm
	// begin inline asm
	mov.b32 %r1924, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1935, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1930, %r910, %r141, %r1924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1928, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1931, %r1924, %r1928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1929, %r1930, %r1931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1941, %r921, %r141, %r1935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1939, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1942, %r1935, %r1939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1940, %r1941, %r1942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1952, %r910, %r142, %r1924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1950, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1953, %r1924, %r1950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1951, %r1952, %r1953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1963, %r921, %r142, %r1935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1961, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1964, %r1935, %r1961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1962, %r1963, %r1964;
	// end inline asm
	// begin inline asm
	mov.b32 %r1970, {%rs262, %rs262};
	// end inline asm
	// begin inline asm
	mov.b32 %r1981, {%rs264, %rs264};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1976, %r910, %r143, %r1970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1974, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1977, %r1970, %r1974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1975, %r1976, %r1977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1987, %r921, %r143, %r1981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1985, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1988, %r1981, %r1985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1986, %r1987, %r1988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1998, %r910, %r144, %r1970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1996, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1999, %r1970, %r1996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1997, %r1998, %r1999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2009, %r921, %r144, %r1981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2007, {%rs266, %rs266};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2010, %r1981, %r2007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2008, %r2009, %r2010;
	// end inline asm
	setp.eq.s32 	%p76, %r151, 0;
	selp.b32 	%r2363, %r917, 0, %p76;
	setp.eq.s32 	%p77, %r151, 4;
	selp.b32 	%r2364, %r1101, %r2363, %p77;
	setp.eq.s32 	%p78, %r151, 8;
	selp.b32 	%r2365, %r1285, %r2364, %p78;
	setp.eq.s32 	%p79, %r151, 12;
	selp.b32 	%r2366, %r1469, %r2365, %p79;
	setp.eq.s32 	%p80, %r151, 16;
	selp.b32 	%r2367, %r1653, %r2366, %p80;
	setp.eq.s32 	%p81, %r151, 20;
	selp.b32 	%r2368, %r1837, %r2367, %p81;
	setp.eq.s32 	%p82, %r151, 24;
	selp.b32 	%r2369, %r939, %r2368, %p82;
	setp.eq.s32 	%p83, %r151, 28;
	selp.b32 	%r2370, %r1123, %r2369, %p83;
	setp.eq.s32 	%p84, %r151, 32;
	selp.b32 	%r2371, %r1307, %r2370, %p84;
	setp.eq.s32 	%p85, %r151, 36;
	selp.b32 	%r2372, %r1491, %r2371, %p85;
	setp.eq.s32 	%p86, %r151, 40;
	selp.b32 	%r2373, %r1675, %r2372, %p86;
	setp.eq.s32 	%p87, %r151, 44;
	selp.b32 	%r2013, %r1859, %r2373, %p87;
	selp.b32 	%r2374, %r928, 0, %p76;
	selp.b32 	%r2375, %r1112, %r2374, %p77;
	selp.b32 	%r2376, %r1296, %r2375, %p78;
	selp.b32 	%r2377, %r1480, %r2376, %p79;
	selp.b32 	%r2378, %r1664, %r2377, %p80;
	selp.b32 	%r2379, %r1848, %r2378, %p81;
	selp.b32 	%r2380, %r950, %r2379, %p82;
	selp.b32 	%r2381, %r1134, %r2380, %p83;
	selp.b32 	%r2382, %r1318, %r2381, %p84;
	selp.b32 	%r2383, %r1502, %r2382, %p85;
	selp.b32 	%r2384, %r1686, %r2383, %p86;
	selp.b32 	%r2016, %r1870, %r2384, %p87;
	selp.b32 	%r2385, %r963, 0, %p76;
	selp.b32 	%r2386, %r1147, %r2385, %p77;
	selp.b32 	%r2387, %r1331, %r2386, %p78;
	selp.b32 	%r2388, %r1515, %r2387, %p79;
	selp.b32 	%r2389, %r1699, %r2388, %p80;
	selp.b32 	%r2390, %r1883, %r2389, %p81;
	selp.b32 	%r2391, %r985, %r2390, %p82;
	selp.b32 	%r2392, %r1169, %r2391, %p83;
	selp.b32 	%r2393, %r1353, %r2392, %p84;
	selp.b32 	%r2394, %r1537, %r2393, %p85;
	selp.b32 	%r2395, %r1721, %r2394, %p86;
	selp.b32 	%r2019, %r1905, %r2395, %p87;
	selp.b32 	%r2396, %r974, 0, %p76;
	selp.b32 	%r2397, %r1158, %r2396, %p77;
	selp.b32 	%r2398, %r1342, %r2397, %p78;
	selp.b32 	%r2399, %r1526, %r2398, %p79;
	selp.b32 	%r2400, %r1710, %r2399, %p80;
	selp.b32 	%r2401, %r1894, %r2400, %p81;
	selp.b32 	%r2402, %r996, %r2401, %p82;
	selp.b32 	%r2403, %r1180, %r2402, %p83;
	selp.b32 	%r2404, %r1364, %r2403, %p84;
	selp.b32 	%r2405, %r1548, %r2404, %p85;
	selp.b32 	%r2406, %r1732, %r2405, %p86;
	selp.b32 	%r2022, %r1916, %r2406, %p87;
	selp.b32 	%r2407, %r1009, 0, %p76;
	selp.b32 	%r2408, %r1193, %r2407, %p77;
	selp.b32 	%r2409, %r1377, %r2408, %p78;
	selp.b32 	%r2410, %r1561, %r2409, %p79;
	selp.b32 	%r2411, %r1745, %r2410, %p80;
	selp.b32 	%r2412, %r1929, %r2411, %p81;
	selp.b32 	%r2413, %r1031, %r2412, %p82;
	selp.b32 	%r2414, %r1215, %r2413, %p83;
	selp.b32 	%r2415, %r1399, %r2414, %p84;
	selp.b32 	%r2416, %r1583, %r2415, %p85;
	selp.b32 	%r2417, %r1767, %r2416, %p86;
	selp.b32 	%r2025, %r1951, %r2417, %p87;
	selp.b32 	%r2418, %r1020, 0, %p76;
	selp.b32 	%r2419, %r1204, %r2418, %p77;
	selp.b32 	%r2420, %r1388, %r2419, %p78;
	selp.b32 	%r2421, %r1572, %r2420, %p79;
	selp.b32 	%r2422, %r1756, %r2421, %p80;
	selp.b32 	%r2423, %r1940, %r2422, %p81;
	selp.b32 	%r2424, %r1042, %r2423, %p82;
	selp.b32 	%r2425, %r1226, %r2424, %p83;
	selp.b32 	%r2426, %r1410, %r2425, %p84;
	selp.b32 	%r2427, %r1594, %r2426, %p85;
	selp.b32 	%r2428, %r1778, %r2427, %p86;
	selp.b32 	%r2028, %r1962, %r2428, %p87;
	selp.b32 	%r2429, %r1055, 0, %p76;
	selp.b32 	%r2430, %r1239, %r2429, %p77;
	selp.b32 	%r2431, %r1423, %r2430, %p78;
	selp.b32 	%r2432, %r1607, %r2431, %p79;
	selp.b32 	%r2433, %r1791, %r2432, %p80;
	selp.b32 	%r2434, %r1975, %r2433, %p81;
	selp.b32 	%r2435, %r1077, %r2434, %p82;
	selp.b32 	%r2436, %r1261, %r2435, %p83;
	selp.b32 	%r2437, %r1445, %r2436, %p84;
	selp.b32 	%r2438, %r1629, %r2437, %p85;
	selp.b32 	%r2439, %r1813, %r2438, %p86;
	selp.b32 	%r2031, %r1997, %r2439, %p87;
	selp.b32 	%r2440, %r1066, 0, %p76;
	selp.b32 	%r2441, %r1250, %r2440, %p77;
	selp.b32 	%r2442, %r1434, %r2441, %p78;
	selp.b32 	%r2443, %r1618, %r2442, %p79;
	selp.b32 	%r2444, %r1802, %r2443, %p80;
	selp.b32 	%r2445, %r1986, %r2444, %p81;
	selp.b32 	%r2446, %r1088, %r2445, %p82;
	selp.b32 	%r2447, %r1272, %r2446, %p83;
	selp.b32 	%r2448, %r1456, %r2447, %p84;
	selp.b32 	%r2449, %r1640, %r2448, %p85;
	selp.b32 	%r2450, %r1824, %r2449, %p86;
	selp.b32 	%r2034, %r2008, %r2450, %p87;
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r12;
    mov.b32 {%r2im, %r2re}, %r2013;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2039, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r13;
    mov.b32 {%r2im, %r2re}, %r2016;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2046, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r12;
    mov.b32 {%r2im, %r2re}, %r2019;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2053, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r13;
    mov.b32 {%r2im, %r2re}, %r2022;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2060, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r12;
    mov.b32 {%r2im, %r2re}, %r2025;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2067, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r13;
    mov.b32 {%r2im, %r2re}, %r2028;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2074, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r12;
    mov.b32 {%r2im, %r2re}, %r2031;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2081, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r13;
    mov.b32 {%r2im, %r2re}, %r2034;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2088, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2095, %r2098}, {%r230, %r227}, {%r2039}, {%r2645, %r2645};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2104, %r2107}, {%r230, %r227}, {%r2046}, {%r2645, %r2645};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2113, %r2116}, {%r230, %r227}, {%r2053}, {%r2645, %r2645};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2122, %r2125}, {%r230, %r227}, {%r2060}, {%r2645, %r2645};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2131, %r2134}, {%r230, %r227}, {%r2067}, {%r2645, %r2645};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2140, %r2143}, {%r230, %r227}, {%r2074}, {%r2645, %r2645};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2149, %r2152}, {%r230, %r227}, {%r2081}, {%r2645, %r2645};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2158, %r2161}, {%r230, %r227}, {%r2088}, {%r2645, %r2645};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2094, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2099, %r2094, %r2095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2226, %r266, %r2098, %r2099;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2103, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2108, %r2103, %r2104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2236, %r266, %r2107, %r2108;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2112, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2117, %r2112, %r2113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2246, %r266, %r2116, %r2117;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2121, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2126, %r2121, %r2122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2256, %r266, %r2125, %r2126;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2130, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2135, %r2130, %r2131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2266, %r266, %r2134, %r2135;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2139, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2144, %r2139, %r2140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2276, %r266, %r2143, %r2144;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2148, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2153, %r2148, %r2149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2286, %r266, %r2152, %r2153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2157, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2162, %r2157, %r2158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2296, %r266, %r2161, %r2162;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2169, %r269, %r2098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2225, %r266, %r2095, %r2169;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2176, %r269, %r2107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2235, %r266, %r2104, %r2176;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2183, %r269, %r2116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2245, %r266, %r2113, %r2183;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2190, %r269, %r2125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2255, %r266, %r2122, %r2190;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2197, %r269, %r2134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2265, %r266, %r2131, %r2197;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2204, %r269, %r2143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2275, %r266, %r2140, %r2204;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2211, %r269, %r2152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2285, %r266, %r2149, %r2211;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2218, %r269, %r2161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2295, %r266, %r2158, %r2218;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2300, %r2301}, {%r299, %r293, %r296, %r290}, {%r2225, %r2226}, {%r2645, %r2645};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2308, %r2309}, {%r299, %r293, %r296, %r290}, {%r2235, %r2236}, {%r2645, %r2645};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2316, %r2317}, {%r299, %r293, %r296, %r290}, {%r2245, %r2246}, {%r2645, %r2645};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2324, %r2325}, {%r299, %r293, %r296, %r290}, {%r2255, %r2256}, {%r2645, %r2645};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2332, %r2333}, {%r299, %r293, %r296, %r290}, {%r2265, %r2266}, {%r2645, %r2645};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2340, %r2341}, {%r299, %r293, %r296, %r290}, {%r2275, %r2276}, {%r2645, %r2645};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2348, %r2349}, {%r299, %r293, %r296, %r290}, {%r2285, %r2286}, {%r2645, %r2645};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2356, %r2357}, {%r299, %r293, %r296, %r290}, {%r2295, %r2296}, {%r2645, %r2645};
	// end inline asm
	// begin inline asm
	prmt.b32 %r2299, %r2300, %r2301, %r593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2303, %r2300, %r2301, %r597;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2307, %r2308, %r2309, %r593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2311, %r2308, %r2309, %r597;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2315, %r2316, %r2317, %r593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2319, %r2316, %r2317, %r597;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2323, %r2324, %r2325, %r593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2327, %r2324, %r2325, %r597;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2331, %r2332, %r2333, %r593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2335, %r2332, %r2333, %r597;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2339, %r2340, %r2341, %r593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2343, %r2340, %r2341, %r597;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2347, %r2348, %r2349, %r593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2351, %r2348, %r2349, %r597;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2355, %r2356, %r2357, %r593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2359, %r2356, %r2357, %r597;
	// end inline asm
	st.global.u32 	[%rd436], %r2299;
	cvt.u64.u32 	%rd437, %r9;
	cvt.u64.u32 	%rd438, %r61;
	cvt.u64.u32 	%rd439, %r60;
	cvt.u64.u32 	%rd440, %r8;
	cvt.u64.u32 	%rd441, %r59;
	cvt.u64.u32 	%rd442, %r58;
	cvt.u64.u32 	%rd443, %r57;
	add.s64 	%rd444, %rd443, %rd442;
	add.s64 	%rd445, %rd444, %rd441;
	add.s64 	%rd446, %rd445, %rd440;
	add.s64 	%rd447, %rd446, %rd439;
	add.s64 	%rd448, %rd447, %rd438;
	add.s64 	%rd449, %rd448, %rd437;
	add.s64 	%rd450, %rd15, %rd449;
	shl.b64 	%rd451, %rd450, 2;
	add.s64 	%rd452, %rd10, %rd451;
	st.global.u32 	[%rd452+33024], %r2303;
	st.global.u32 	[%rd452+128], %r2307;
	st.global.u32 	[%rd452+33152], %r2311;
	st.global.u32 	[%rd454], %r2315;
	st.global.u32 	[%rd456], %r2319;
	st.global.u32 	[%rd458], %r2323;
	st.global.u32 	[%rd460], %r2327;
	st.global.u32 	[%rd462], %r2331;
	st.global.u32 	[%rd464], %r2335;
	st.global.u32 	[%rd466], %r2339;
	st.global.u32 	[%rd468], %r2343;
	st.global.u32 	[%rd470], %r2347;
	st.global.u32 	[%rd472], %r2351;
	st.global.u32 	[%rd474], %r2355;
	st.global.u32 	[%rd476], %r2359;
	bar.sync 	0;
	mov.u64 	%rd33, 0;
	bra.uni 	LBB0_25;
LBB0_30:                                // %pass7755
                                        //   in Loop: Header=BB0_25 Depth=3
	cvt.u16.u32 	%rs550, %r153;
	and.b16  	%rs551, %rs550, 255;
	mul.lo.s16 	%rs552, %rs551, 79;
	shr.u16 	%rs553, %rs552, 12;
	mul.lo.s16 	%rs554, %rs553, 52;
	sub.s16 	%rs555, %rs550, %rs554;
	cvt.u32.u16 	%r2616, %rs555;
	and.b32  	%r2617, %r2616, 255;
	mad.lo.s32 	%r2618, %r2617, 589824, %r62;
	add.s32 	%r2619, %r2618, %r63;
	add.s32 	%r2620, %r2619, %r35;
	mul.wide.u32 	%rd481, %r2620, 4;
	add.s64 	%rd482, %rd4, %rd481;
	st.global.u32 	[%rd482], %r2703;
	add.s32 	%r2621, %r2618, %r64;
	add.s32 	%r2622, %r2621, %r35;
	mul.wide.u32 	%rd483, %r2622, 4;
	add.s64 	%rd484, %rd4, %rd483;
	st.global.u32 	[%rd484], %r2702;
	add.s32 	%r2623, %r2618, 294912;
	add.s32 	%r2624, %r2623, %r63;
	add.s32 	%r2625, %r2624, %r35;
	mul.wide.u32 	%rd485, %r2625, 4;
	add.s64 	%rd486, %rd4, %rd485;
	st.global.u32 	[%rd486], %r2701;
	add.s32 	%r2626, %r2623, %r64;
	add.s32 	%r2627, %r2626, %r35;
	mul.wide.u32 	%rd487, %r2627, 4;
	add.s64 	%rd488, %rd4, %rd487;
	st.global.u32 	[%rd488], %r2700;
LBB0_31:                                // %L24754
                                        //   in Loop: Header=BB0_25 Depth=3
	add.s32 	%r153, %r153, 1;
	mov.u32 	%r2700, 0;
	mov.u32 	%r2701, %r2700;
	mov.u32 	%r2702, %r2700;
	mov.u32 	%r2703, %r2700;
	mov.u32 	%r2690, %r2700;
LBB0_32:                                // %L24755
                                        //   in Loop: Header=BB0_25 Depth=3
	add.s64 	%rd33, %rd33, 256;
	cvt.u32.u64 	%r2629, %rd33;
	setp.eq.s32 	%p92, %r2629, 1024;
	@%p92 bra 	LBB0_33;
LBB0_25:                                // %L22565
                                        //   Parent Loop BB0_22 Depth=1
                                        //     Parent Loop BB0_24 Depth=2
                                        // =>    This Inner Loop Header: Depth=3
	mov.u32 	%r2451, 0;
	mov.u32 	%r2696, %r2451;
	mov.u32 	%r2697, %r2451;
	mov.u32 	%r2698, %r2451;
	mov.u32 	%r2699, %r2451;
	@%p72 bra 	LBB0_43;
	bra.uni 	LBB0_26;
LBB0_43:                                // %pass7258
                                        //   in Loop: Header=BB0_25 Depth=3
	add.s64 	%rd477, %rd32, %rd33;
	ld.global.u32 	%r2699, [%rd477];
	add.s64 	%rd478, %rd31, %rd33;
	ld.global.u32 	%r2698, [%rd478];
	add.s64 	%rd479, %rd30, %rd33;
	ld.global.u32 	%r2697, [%rd479];
	add.s64 	%rd480, %rd29, %rd33;
	ld.global.u32 	%r2696, [%rd480];
LBB0_26:                                // %L23975
                                        //   in Loop: Header=BB0_25 Depth=3
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2484, %r2487}, {%r230, %r227}, {%r2699}, {%r2451, %r2451};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2493, %r2496}, {%r230, %r227}, {%r2698}, {%r2451, %r2451};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2502, %r2505}, {%r230, %r227}, {%r2697}, {%r2451, %r2451};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2511, %r2514}, {%r230, %r227}, {%r2696}, {%r2451, %r2451};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2480, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2482, %r2480, %r2484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2485, %r266, %r2487, %r2482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2489, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2491, %r2489, %r2493;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2494, %r266, %r2496, %r2491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2498, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2500, %r2498, %r2502;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2503, %r266, %r2505, %r2500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2507, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2509, %r2507, %r2511;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2512, %r266, %r2514, %r2509;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2516, %r269, %r2487;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2519, %r266, %r2484, %r2516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2523, %r269, %r2496;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2526, %r266, %r2493, %r2523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2530, %r269, %r2505;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2533, %r266, %r2502, %r2530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2537, %r269, %r2514;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2540, %r266, %r2511, %r2537;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2585, %r2589}, {%r299, %r293, %r296, %r290}, {%r2519, %r2485}, {%r2451, %r2451};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2593, %r2597}, {%r299, %r293, %r296, %r290}, {%r2526, %r2494}, {%r2451, %r2451};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2601, %r2605}, {%r299, %r293, %r296, %r290}, {%r2533, %r2503}, {%r2451, %r2451};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2609, %r2613}, {%r299, %r293, %r296, %r290}, {%r2540, %r2512}, {%r2451, %r2451};
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2584, %r2585, %r2585, %r2703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2703, %r2589, %r2589, %r2584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2592, %r2593, %r2593, %r2702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2702, %r2597, %r2597, %r2592;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2600, %r2601, %r2601, %r2701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2701, %r2605, %r2605, %r2600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2608, %r2609, %r2609, %r2700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2700, %r2613, %r2613, %r2608;
	// end inline asm
	add.s32 	%r2690, %r2690, 1;
	setp.ne.s32 	%p89, %r2690, 40;
	@%p89 bra 	LBB0_32;
// %bb.27:                              // %L24206
                                        //   in Loop: Header=BB0_25 Depth=3
	@%p52 bra 	LBB0_31;
// %bb.28:                              // %L24225
                                        //   in Loop: Header=BB0_25 Depth=3
	setp.lt.u32 	%p91, %r153, 52;
	@%p91 bra 	LBB0_30;
// %bb.29:                              // %L24241
	{ // callseq 22, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd36;
	call.uni 
	julia_unreachable_13823, 
	(
	param0
	);
	} // callseq 22
LBB0_35:                                // %guard_pass9311
	@%p72 bra 	LBB0_36;
	bra.uni 	LBB0_45;
LBB0_36:                                // %L24897
	setp.lt.u32 	%p96, %r153, 52;
	@%p96 bra 	LBB0_44;
	bra.uni 	LBB0_37;
LBB0_44:                                // %pass7996
	cvt.u16.u32 	%rs556, %r153;
	and.b16  	%rs557, %rs556, 255;
	mul.lo.s16 	%rs558, %rs557, 79;
	shr.u16 	%rs559, %rs558, 12;
	mul.lo.s16 	%rs560, %rs559, 52;
	sub.s16 	%rs561, %rs556, %rs560;
	cvt.u32.u16 	%r2630, %rs561;
	and.b32  	%r2631, %r2630, 255;
	mad.lo.s32 	%r2632, %r2631, 589824, %r62;
	add.s32 	%r2633, %r2632, %r63;
	add.s32 	%r2634, %r2633, %r35;
	mul.wide.u32 	%rd489, %r2634, 4;
	add.s64 	%rd490, %rd4, %rd489;
	st.global.u32 	[%rd490], %r2703;
	add.s32 	%r2635, %r2632, %r64;
	add.s32 	%r2636, %r2635, %r35;
	mul.wide.u32 	%rd491, %r2636, 4;
	add.s64 	%rd492, %rd4, %rd491;
	st.global.u32 	[%rd492], %r2702;
	add.s32 	%r2637, %r2632, 294912;
	add.s32 	%r2638, %r2637, %r63;
	add.s32 	%r2639, %r2638, %r35;
	mul.wide.u32 	%rd493, %r2639, 4;
	add.s64 	%rd494, %rd4, %rd493;
	st.global.u32 	[%rd494], %r2701;
	add.s32 	%r2640, %r2637, %r64;
	add.s32 	%r2641, %r2640, %r35;
	mul.wide.u32 	%rd495, %r2641, 4;
	add.s64 	%rd496, %rd4, %rd495;
	st.global.u32 	[%rd496], %r2700;
LBB0_45:                                // %oksrem8184
	mov.u32 	%r2642, 0;
	st.global.u32 	[%rd35], %r2642;
	ret;
LBB0_1:                                 // %L22
	{ // callseq 25, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd36;
	call.uni 
	julia_unreachable_13823, 
	(
	param0
	);
	} // callseq 25
LBB0_3:                                 // %L60
	{ // callseq 18, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd36;
	call.uni 
	julia__throw_boundserror_13825, 
	(
	param0
	);
	} // callseq 18
LBB0_5:                                 // %L127
	{ // callseq 19, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd36;
	call.uni 
	julia__throw_boundserror_13825, 
	(
	param0
	);
	} // callseq 19
LBB0_7:                                 // %L194
	{ // callseq 20, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd36;
	call.uni 
	julia__throw_boundserror_13828, 
	(
	param0
	);
	} // callseq 20
LBB0_8:                                 // %L249
	{ // callseq 24, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd36;
	call.uni 
	julia_unreachable_13823, 
	(
	param0
	);
	} // callseq 24
LBB0_9:                                 // %L275
	{ // callseq 23, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd36;
	call.uni 
	julia_unreachable_13823, 
	(
	param0
	);
	} // callseq 23
LBB0_37:                                // %L24913
	{ // callseq 21, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd36;
	call.uni 
	julia_unreachable_13823, 
	(
	param0
	);
	} // callseq 21
                                        // -- End function
}
