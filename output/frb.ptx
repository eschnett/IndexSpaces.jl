// PTX CompilerJob of kernel #frb(CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int32, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int32, 1}) for sm_86, minthreads=768, blocks_per_sm=1, always_inline=false

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z14julia_frb_544213CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE // -- Begin function _Z14julia_frb_544213CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE
.extern .func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
;
.extern .func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[8]
)
;
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z14julia_frb_544213CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE
.visible .entry _Z14julia_frb_544213CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE(
	.param .align 8 .b8 _Z14julia_frb_544213CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_0[8],
	.param .align 8 .b8 _Z14julia_frb_544213CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z14julia_frb_544213CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z14julia_frb_544213CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z14julia_frb_544213CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z14julia_frb_544213CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_5[32]
)
.reqntid 768, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<22>;
	.reg .b16 	%rs<443>;
	.reg .b32 	%r<2417>;
	.reg .b64 	%rd<180>;

// %bb.0:                               // %conversion
	// begin inline asm
	mov.u32 %r191, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r191, 76895;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L11
	ld.param.u64 	%rd31, [_Z14julia_frb_544213CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_5];
	ld.param.u64 	%rd27, [_Z14julia_frb_544213CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_2];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	or.b32  	%r192, %r3, %r1;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r193, %r4, 768, %r192;
	mul.wide.u32 	%rd37, %r193, 4;
	add.s64 	%rd4, %rd31, %rd37;
	mov.u32 	%r194, 1;
	st.global.u32 	[%rd4], %r194;
	cvt.u16.u32 	%rs1, %r1;
	and.b16  	%rs2, %rs1, 255;
	mul.lo.s16 	%rs3, %rs2, 171;
	shr.u16 	%rs4, %rs3, 12;
	mul.lo.s16 	%rs5, %rs4, 24;
	sub.s16 	%rs6, %rs1, %rs5;
	cvt.u32.u16 	%r195, %rs6;
	and.b32  	%r5, %r195, 255;
	mad.lo.s32 	%r196, %r5, 24, %r2;
	and.b32  	%r197, %r196, 511;
	mul.wide.u32 	%rd38, %r197, 4;
	add.s64 	%rd39, %rd27, %rd38;
	setp.lt.u32 	%p2, %r1, 24;
	@%p2 bra 	LBB0_4;
// %bb.3:                               // %L11.L544_crit_edge
	cvt.u16.u32 	%rs19, %r2;
	and.b16  	%rs20, %rs19, 255;
	mul.lo.s16 	%rs21, %rs20, 171;
	shr.u16 	%rs22, %rs21, 10;
	mul.lo.s16 	%rs23, %rs22, -6;
	add.s16 	%rs24, %rs23, %rs19;
	cvt.u32.u16 	%r213, %rs24;
	and.b32  	%r2360, %r213, 255;
	and.b32  	%r2359, %r1, 3;
	shr.u32 	%r2358, %r1, 2;
	cvt.u16.u32 	%rs25, %r2358;
	mul.lo.s16 	%rs26, %rs25, 171;
	shr.u16 	%rs27, %rs26, 10;
	mul.lo.s16 	%rs28, %rs27, 6;
	sub.s16 	%rs29, %rs25, %rs28;
	cvt.u32.u16 	%r214, %rs29;
	and.b32  	%r2357, %r214, 255;
	cvt.u32.u16 	%r2356, %rs22;
	mul.wide.u16 	%r2355, %rs22, 6;
	mov.u32 	%r2361, 0;
	mov.u32 	%r2362, %r2361;
	bra.uni 	LBB0_5;
LBB0_4:                                 // %L224
	ld.param.u64 	%rd2, [_Z14julia_frb_544213CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_3];
	and.b32  	%r2359, %r1, 3;
	mul.lo.s32 	%r198, %r2359, 144;
	mad.lo.s32 	%r199, %r4, 576, %r198;
	cvt.u16.u32 	%rs7, %r2;
	and.b16  	%rs8, %rs7, 255;
	mul.lo.s16 	%rs9, %rs8, 171;
	shr.u16 	%rs10, %rs9, 10;
	mul.lo.s16 	%rs11, %rs10, -6;
	add.s16 	%rs12, %rs11, %rs7;
	cvt.u32.u16 	%r201, %rs12;
	and.b32  	%r2360, %r201, 255;
	or.b32  	%r202, %r199, %r2360;
	cvt.u32.u16 	%r2356, %rs10;
	mul.wide.u16 	%r2355, %rs10, 6;
	add.s32 	%r203, %r202, %r2355;
	shr.u32 	%r2358, %r1, 2;
	cvt.u16.u32 	%rs13, %r2358;
	mul.lo.s16 	%rs14, %rs13, 171;
	shr.u16 	%rs15, %rs14, 10;
	mul.lo.s16 	%rs16, %rs15, 6;
	sub.s16 	%rs17, %rs13, %rs16;
	cvt.u32.u16 	%r204, %rs17;
	and.b32  	%r2357, %r204, 255;
	and.b16  	%rs18, %rs17, 255;
	mul.wide.u16 	%r205, %rs18, 24;
	add.s32 	%r206, %r203, %r205;
	mul.wide.u32 	%rd40, %r206, 4;
	add.s64 	%rd41, %rd2, %rd40;
	ld.global.u32 	%r2361, [%rd41];
	add.s32 	%r207, %r199, 147456;
	or.b32  	%r208, %r207, %r2360;
	add.s32 	%r209, %r208, %r2355;
	add.s32 	%r210, %r209, %r205;
	mul.wide.u32 	%rd42, %r210, 4;
	add.s64 	%rd43, %rd2, %rd42;
	ld.global.u32 	%r2362, [%rd43];
LBB0_5:                                 // %L544
	ld.param.u64 	%rd1, [_Z14julia_frb_544213CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_1];
	ld.param.u64 	%rd3, [_Z14julia_frb_544213CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_4];
	ld.global.u32 	%r6, [%rd39];
	mov.u32 	%r2354, 0;
	shl.b32 	%r216, %r1, 2;
	shl.b32 	%r217, %r1, 11;
	or.b32  	%r218, %r217, %r216;
	and.b32  	%r219, %r217, 32768;
	and.b32  	%r220, %r218, 32828;
	shl.b32 	%r221, %r4, 7;
	or.b32  	%r29, %r220, %r221;
	or.b32  	%r222, %r219, %r216;
	or.b32  	%r223, %r221, %r222;
	or.b32  	%r30, %r223, 65;
	shr.u32 	%r31, %r1, 4;
	shl.b32 	%r224, %r1, 1;
	and.b32  	%r225, %r224, 30;
	or.b32  	%r226, %r225, %r31;
	mul.lo.s32 	%r32, %r226, 257;
	or.b32  	%r227, %r31, %r224;
	or.b32  	%r228, %r227, 32;
	mul.lo.s32 	%r33, %r228, 257;
	and.b32  	%r229, %r3, 224;
	shr.u32 	%r230, %r2, 3;
	add.s32 	%r233, %r2, 504;
	bfe.u32 	%r234, %r233, 3, 6;
	mad.lo.s32 	%r35, %r234, 257, %r229;
	mul.lo.s32 	%r36, %r2360, 33;
	mul.lo.s32 	%r37, %r2359, 4806;
	mul.lo.s32 	%r38, %r2357, 801;
	mul.lo.s32 	%r39, %r2356, 198;
	bfe.u32 	%r235, %r1, 1, 1;
	mul.lo.s32 	%r236, %r235, 2056;
	mul.lo.s32 	%r237, %r31, 257;
	add.s32 	%r238, %r237, %r236;
	bfe.u32 	%r239, %r1, 3, 1;
	mul.lo.s32 	%r240, %r239, 514;
	add.s32 	%r241, %r238, %r240;
	add.s32 	%r242, %r241, %r2360;
	and.b32  	%r243, %r1, 1;
	mul.lo.s32 	%r244, %r243, 4112;
	add.s32 	%r245, %r242, %r244;
	and.b32  	%r246, %r2358, 1;
	mul.lo.s32 	%r247, %r246, 1028;
	add.s32 	%r248, %r245, %r247;
	add.s32 	%r249, %r248, %r2355;
	mul.wide.u32 	%rd44, %r249, 4;
	mov.u64 	%rd45, shmem;
	add.s64 	%rd5, %rd45, %rd44;
	cvt.u64.u32 	%rd46, %r2355;
	cvt.u64.u32 	%rd47, %r247;
	cvt.u64.u32 	%rd48, %r244;
	cvt.u64.u32 	%rd49, %r2360;
	cvt.u64.u32 	%rd50, %r240;
	cvt.u64.u32 	%rd51, %r237;
	cvt.u64.u32 	%rd52, %r236;
	add.s64 	%rd53, %rd52, %rd51;
	add.s64 	%rd54, %rd53, %rd50;
	add.s64 	%rd55, %rd54, %rd49;
	add.s64 	%rd56, %rd55, %rd48;
	add.s64 	%rd57, %rd56, %rd47;
	add.s64 	%rd58, %rd57, %rd46;
	shl.b64 	%rd59, %rd58, 2;
	add.s64 	%rd6, %rd45, %rd59;
	bfe.u32 	%r250, %r2, 3, 1;
	and.b32  	%r251, %r2, 1;
	shr.u32 	%r252, %r2, 1;
	bfe.u32 	%r253, %r2, 1, 1;
	shr.u32 	%r254, %r2, 4;
	bfe.u32 	%r255, %r2, 2, 1;
	and.b32  	%r256, %r252, 4;
	shl.b32 	%r257, %r2, 3;
	and.b32  	%r258, %r257, 16;
	shl.b32 	%r259, %r2, 1;
	and.b32  	%r260, %r259, 8;
	cvt.u16.u32 	%rs30, %r2;
	shr.u16 	%rs31, %rs30, 8;
	shl.b16 	%rs32, %rs30, 8;
	or.b16  	%rs33, %rs32, %rs31;
	shl.b16 	%rs34, %rs33, 4;
	shl.b16 	%rs35, %rs30, 4;
	and.b16  	%rs36, %rs35, 3840;
	or.b16  	%rs37, %rs36, %rs34;
	and.b16  	%rs38, %rs37, 13107;
	shl.b16 	%rs39, %rs38, 2;
	and.b16  	%rs40, %rs37, -13108;
	shr.u16 	%rs41, %rs40, 2;
	or.b16  	%rs42, %rs41, %rs39;
	and.b16  	%rs43, %rs42, 21504;
	shl.b16 	%rs44, %rs43, 1;
	and.b16  	%rs45, %rs42, -22528;
	shr.u16 	%rs46, %rs45, 1;
	or.b16  	%rs47, %rs46, %rs44;
	shr.u16 	%rs48, %rs47, 10;
	mul.wide.u16 	%r40, %rs48, 32;
	shl.b32 	%r41, %r4, 11;
	or.b32  	%r261, %r3, %r256;
	or.b32  	%r262, %r258, %r261;
	or.b32  	%r263, %r262, %r230;
	and.b32  	%r264, %r263, 54;
	or.b32  	%r265, %r260, %r264;
	shl.b32 	%r42, %r265, 5;
	or.b32  	%r43, %r42, 32;
	cvt.u64.u32 	%rd60, %r39;
	cvt.u64.u32 	%rd61, %r38;
	cvt.u64.u32 	%rd62, %r36;
	cvt.u64.u32 	%rd63, %r37;
	add.s64 	%rd64, %rd63, %rd62;
	add.s64 	%rd65, %rd64, %rd61;
	add.s64 	%rd66, %rd65, %rd60;
	shl.b64 	%rd67, %rd66, 2;
	add.s64 	%rd7, %rd45, %rd67;
	add.s32 	%r266, %r249, 64;
	mul.wide.u32 	%rd68, %r266, 4;
	add.s64 	%rd8, %rd45, %rd68;
	add.s32 	%r267, %r249, 8320;
	mul.wide.u32 	%rd69, %r267, 4;
	add.s64 	%rd9, %rd45, %rd69;
	add.s32 	%r268, %r249, 96;
	mul.wide.u32 	%rd70, %r268, 4;
	add.s64 	%rd10, %rd45, %rd70;
	add.s32 	%r269, %r249, 8352;
	mul.wide.u32 	%rd71, %r269, 4;
	add.s64 	%rd11, %rd45, %rd71;
	add.s32 	%r270, %r249, 128;
	mul.wide.u32 	%rd72, %r270, 4;
	add.s64 	%rd12, %rd45, %rd72;
	add.s32 	%r271, %r249, 8384;
	mul.wide.u32 	%rd73, %r271, 4;
	add.s64 	%rd13, %rd45, %rd73;
	add.s32 	%r272, %r249, 160;
	mul.wide.u32 	%rd74, %r272, 4;
	add.s64 	%rd14, %rd45, %rd74;
	add.s32 	%r273, %r249, 8416;
	mul.wide.u32 	%rd75, %r273, 4;
	add.s64 	%rd15, %rd45, %rd75;
	add.s32 	%r274, %r249, 192;
	mul.wide.u32 	%rd76, %r274, 4;
	add.s64 	%rd16, %rd45, %rd76;
	add.s32 	%r275, %r249, 8448;
	mul.wide.u32 	%rd77, %r275, 4;
	add.s64 	%rd17, %rd45, %rd77;
	add.s32 	%r276, %r249, 224;
	mul.wide.u32 	%rd78, %r276, 4;
	add.s64 	%rd18, %rd45, %rd78;
	add.s32 	%r277, %r249, 8480;
	mul.wide.u32 	%rd79, %r277, 4;
	add.s64 	%rd19, %rd45, %rd79;
	mad.lo.s32 	%r278, %r254, 4112, %r2357;
	mad.lo.s32 	%r279, %r250, 2056, %r278;
	mad.lo.s32 	%r280, %r255, 1028, %r279;
	mad.lo.s32 	%r281, %r253, 514, %r280;
	mad.lo.s32 	%r282, %r251, 257, %r281;
	add.s32 	%r283, %r282, 32;
	mul.wide.u32 	%rd80, %r283, 4;
	add.s64 	%rd20, %rd45, %rd80;
	add.s32 	%r284, %r282, 8288;
	mul.wide.u32 	%rd81, %r284, 4;
	add.s64 	%rd21, %rd45, %rd81;
	add.s32 	%r285, %r282, 8256;
	mul.wide.u32 	%rd82, %r285, 4;
	add.s64 	%rd22, %rd45, %rd82;
	mul.wide.u32 	%rd83, %r282, 4;
	add.s64 	%rd23, %rd45, %rd83;
	setp.eq.s32 	%p3, %r31, 1;
	mov.u32 	%r2363, %r2354;
	mov.u32 	%r2401, %r2354;
	mov.u32 	%r2402, %r2354;
	mov.u32 	%r2403, %r2354;
	mov.u32 	%r2404, %r2354;
	mov.u32 	%r2405, %r2354;
	mov.u32 	%r2406, %r2354;
	bra.uni 	LBB0_6;
LBB0_14:                                // %L60223
                                        //   in Loop: Header=BB0_6 Depth=1
	add.s32 	%r162, %r2363, 48;
	setp.ne.s32 	%p21, %r2363, 2016;
	mov.u32 	%r2363, %r162;
	@%p21 bra 	LBB0_6;
	bra.uni 	LBB0_15;
LBB0_6:                                 // %L547
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_8 Depth 2
                                        //       Child Loop BB0_9 Depth 3
	mul.hi.u32 	%r479, %r2363, -1431655765;
	shr.u32 	%r480, %r479, 5;
	mul.lo.s32 	%r51, %r480, 48;
	add.s32 	%r481, %r2, %r51;
	cvt.u16.u32 	%rs49, %r481;
	mul.hi.s16 	%rs50, %rs49, 16257;
	shr.u16 	%rs51, %rs50, 15;
	shr.s16 	%rs52, %rs50, 9;
	add.s16 	%rs53, %rs52, %rs51;
	mul.lo.s16 	%rs54, %rs53, 2064;
	sub.s16 	%rs55, %rs49, %rs54;
	cvt.u32.u16 	%r482, %rs55;
	shl.b32 	%r483, %r482, 16;
	or.b32  	%r484, %r29, %r483;
	mul.wide.s32 	%rd84, %r484, 4;
	add.s64 	%rd85, %rd1, %rd84;
	ld.global.v4.u32 	{%r485, %r486, %r487, %r488}, [%rd85];
	or.b32  	%r489, %r30, %r483;
	add.s32 	%r490, %r489, -1;
	mul.wide.s32 	%rd86, %r490, 4;
	add.s64 	%rd87, %rd1, %rd86;
	ld.global.v4.u32 	{%r491, %r492, %r493, %r494}, [%rd87];
	add.s16 	%rs56, %rs49, 24;
	mul.hi.s16 	%rs57, %rs56, 16257;
	shr.u16 	%rs58, %rs57, 15;
	shr.s16 	%rs59, %rs57, 9;
	add.s16 	%rs60, %rs59, %rs58;
	mul.lo.s16 	%rs61, %rs60, 2064;
	sub.s16 	%rs62, %rs56, %rs61;
	cvt.u32.u16 	%r495, %rs62;
	shl.b32 	%r496, %r495, 16;
	or.b32  	%r497, %r29, %r496;
	mul.wide.s32 	%rd88, %r497, 4;
	add.s64 	%rd89, %rd1, %rd88;
	ld.global.v4.u32 	{%r498, %r499, %r500, %r501}, [%rd89];
	or.b32  	%r502, %r30, %r496;
	add.s32 	%r503, %r502, -1;
	mul.wide.s32 	%rd90, %r503, 4;
	add.s64 	%rd91, %rd1, %rd90;
	ld.global.v4.u32 	{%r504, %r505, %r506, %r507}, [%rd91];
	selp.b32 	%r508, %r485, %r487, %p3;
	shfl.sync.bfly.b32	%r509, %r508, 16, 31, -1;
	selp.b32 	%r288, %r509, %r485, %p3;
	selp.b32 	%r293, %r487, %r509, %p3;
	selp.b32 	%r510, %r486, %r488, %p3;
	shfl.sync.bfly.b32	%r511, %r510, 16, 31, -1;
	selp.b32 	%r296, %r511, %r486, %p3;
	selp.b32 	%r301, %r488, %r511, %p3;
	selp.b32 	%r512, %r491, %r493, %p3;
	shfl.sync.bfly.b32	%r513, %r512, 16, 31, -1;
	selp.b32 	%r304, %r513, %r491, %p3;
	selp.b32 	%r309, %r493, %r513, %p3;
	selp.b32 	%r514, %r492, %r494, %p3;
	shfl.sync.bfly.b32	%r515, %r514, 16, 31, -1;
	selp.b32 	%r312, %r515, %r492, %p3;
	selp.b32 	%r317, %r494, %r515, %p3;
	selp.b32 	%r516, %r498, %r500, %p3;
	shfl.sync.bfly.b32	%r517, %r516, 16, 31, -1;
	selp.b32 	%r320, %r517, %r498, %p3;
	selp.b32 	%r325, %r500, %r517, %p3;
	selp.b32 	%r518, %r499, %r501, %p3;
	shfl.sync.bfly.b32	%r519, %r518, 16, 31, -1;
	selp.b32 	%r328, %r519, %r499, %p3;
	selp.b32 	%r333, %r501, %r519, %p3;
	selp.b32 	%r520, %r504, %r506, %p3;
	shfl.sync.bfly.b32	%r521, %r520, 16, 31, -1;
	selp.b32 	%r336, %r521, %r504, %p3;
	selp.b32 	%r341, %r506, %r521, %p3;
	selp.b32 	%r522, %r505, %r507, %p3;
	shfl.sync.bfly.b32	%r523, %r522, 16, 31, -1;
	selp.b32 	%r344, %r523, %r505, %p3;
	selp.b32 	%r349, %r507, %r523, %p3;
	shl.b32 	%r289, %r293, 4;
	mov.u32 	%r287, 252645135;
	// begin inline asm
	lop3.b32 %r351, %r287, %r288, %r289, 202;
	// end inline asm
	shr.u32 	%r292, %r288, 4;
	// begin inline asm
	lop3.b32 %r367, %r287, %r292, %r293, 202;
	// end inline asm
	shl.b32 	%r297, %r301, 4;
	// begin inline asm
	lop3.b32 %r359, %r287, %r296, %r297, 202;
	// end inline asm
	shr.u32 	%r300, %r296, 4;
	// begin inline asm
	lop3.b32 %r375, %r287, %r300, %r301, 202;
	// end inline asm
	shl.b32 	%r305, %r309, 4;
	// begin inline asm
	lop3.b32 %r383, %r287, %r304, %r305, 202;
	// end inline asm
	shr.u32 	%r308, %r304, 4;
	// begin inline asm
	lop3.b32 %r399, %r287, %r308, %r309, 202;
	// end inline asm
	shl.b32 	%r313, %r317, 4;
	// begin inline asm
	lop3.b32 %r391, %r287, %r312, %r313, 202;
	// end inline asm
	shr.u32 	%r316, %r312, 4;
	// begin inline asm
	lop3.b32 %r407, %r287, %r316, %r317, 202;
	// end inline asm
	shl.b32 	%r321, %r325, 4;
	// begin inline asm
	lop3.b32 %r352, %r287, %r320, %r321, 202;
	// end inline asm
	shr.u32 	%r324, %r320, 4;
	// begin inline asm
	lop3.b32 %r368, %r287, %r324, %r325, 202;
	// end inline asm
	shl.b32 	%r329, %r333, 4;
	// begin inline asm
	lop3.b32 %r360, %r287, %r328, %r329, 202;
	// end inline asm
	shr.u32 	%r332, %r328, 4;
	// begin inline asm
	lop3.b32 %r376, %r287, %r332, %r333, 202;
	// end inline asm
	shl.b32 	%r337, %r341, 4;
	// begin inline asm
	lop3.b32 %r384, %r287, %r336, %r337, 202;
	// end inline asm
	shr.u32 	%r340, %r336, 4;
	// begin inline asm
	lop3.b32 %r400, %r287, %r340, %r341, 202;
	// end inline asm
	shl.b32 	%r345, %r349, 4;
	// begin inline asm
	lop3.b32 %r392, %r287, %r344, %r345, 202;
	// end inline asm
	shr.u32 	%r348, %r344, 4;
	// begin inline asm
	lop3.b32 %r408, %r287, %r348, %r349, 202;
	// end inline asm
	mov.u32 	%r353, 25152;
	// begin inline asm
	prmt.b32 %r415, %r351, %r352, %r353;
	// end inline asm
	mov.u32 	%r357, 29521;
	// begin inline asm
	prmt.b32 %r447, %r351, %r352, %r357;
	// end inline asm
	// begin inline asm
	prmt.b32 %r423, %r359, %r360, %r353;
	// end inline asm
	// begin inline asm
	prmt.b32 %r455, %r359, %r360, %r357;
	// end inline asm
	// begin inline asm
	prmt.b32 %r416, %r367, %r368, %r353;
	// end inline asm
	// begin inline asm
	prmt.b32 %r448, %r367, %r368, %r357;
	// end inline asm
	// begin inline asm
	prmt.b32 %r424, %r375, %r376, %r353;
	// end inline asm
	// begin inline asm
	prmt.b32 %r456, %r375, %r376, %r357;
	// end inline asm
	// begin inline asm
	prmt.b32 %r431, %r383, %r384, %r353;
	// end inline asm
	// begin inline asm
	prmt.b32 %r463, %r383, %r384, %r357;
	// end inline asm
	// begin inline asm
	prmt.b32 %r439, %r391, %r392, %r353;
	// end inline asm
	// begin inline asm
	prmt.b32 %r471, %r391, %r392, %r357;
	// end inline asm
	// begin inline asm
	prmt.b32 %r432, %r399, %r400, %r353;
	// end inline asm
	// begin inline asm
	prmt.b32 %r464, %r399, %r400, %r357;
	// end inline asm
	// begin inline asm
	prmt.b32 %r440, %r407, %r408, %r353;
	// end inline asm
	// begin inline asm
	prmt.b32 %r472, %r407, %r408, %r357;
	// end inline asm
	mov.u32 	%r473, 21520;
	// begin inline asm
	prmt.b32 %r414, %r415, %r416, %r473;
	// end inline asm
	mov.u32 	%r477, 30258;
	// begin inline asm
	prmt.b32 %r418, %r415, %r416, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r422, %r423, %r424, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r426, %r423, %r424, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r430, %r431, %r432, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r434, %r431, %r432, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r438, %r439, %r440, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r442, %r439, %r440, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r446, %r447, %r448, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r450, %r447, %r448, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r454, %r455, %r456, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r458, %r455, %r456, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r462, %r463, %r464, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r466, %r463, %r464, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r470, %r471, %r472, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r474, %r471, %r472, %r477;
	// end inline asm
	mul.hi.s16 	%rs63, %rs49, 10923;
	shr.u16 	%rs64, %rs63, 15;
	shr.s16 	%rs65, %rs63, 2;
	add.s16 	%rs66, %rs65, %rs64;
	mul.lo.s16 	%rs67, %rs66, 24;
	sub.s16 	%rs68, %rs49, %rs67;
	cvt.s32.s16 	%r524, %rs68;
	add.s32 	%r525, %r32, %r524;
	mul.wide.s32 	%rd92, %r525, 4;
	add.s64 	%rd94, %rd45, %rd92;
	st.shared.u32 	[%rd94], %r414;
	st.shared.u32 	[%rd94+512], %r422;
	st.shared.u32 	[%rd94+256], %r418;
	st.shared.u32 	[%rd94+768], %r426;
	add.s32 	%r526, %r33, %r524;
	mul.wide.s32 	%rd95, %r526, 4;
	add.s64 	%rd96, %rd45, %rd95;
	st.shared.u32 	[%rd96], %r430;
	st.shared.u32 	[%rd96+512], %r438;
	st.shared.u32 	[%rd96+256], %r434;
	st.shared.u32 	[%rd96+768], %r442;
	st.shared.u32 	[%rd94+128], %r446;
	st.shared.u32 	[%rd94+640], %r454;
	st.shared.u32 	[%rd94+384], %r450;
	st.shared.u32 	[%rd94+896], %r458;
	st.shared.u32 	[%rd96+128], %r462;
	st.shared.u32 	[%rd96+640], %r470;
	st.shared.u32 	[%rd96+384], %r466;
	st.shared.u32 	[%rd96+896], %r474;
	bar.sync 	0;
	add.s32 	%r527, %r51, %r5;
	cvt.u16.u32 	%rs69, %r527;
	mul.hi.s16 	%rs70, %rs69, 10923;
	shr.u16 	%rs71, %rs70, 15;
	shr.s16 	%rs72, %rs70, 2;
	add.s16 	%rs73, %rs72, %rs71;
	mul.lo.s16 	%rs74, %rs73, 24;
	sub.s16 	%rs75, %rs69, %rs74;
	cvt.s32.s16 	%r528, %rs75;
	add.s32 	%r529, %r35, %r528;
	mul.wide.s32 	%rd97, %r529, 4;
	add.s64 	%rd98, %rd45, %rd97;
	ld.shared.u32 	%r530, [%rd98];
	bar.sync 	0;
	shfl.sync.idx.b32	%r531, %r6, 0, 31, -1;
	shfl.sync.idx.b32	%r532, %r6, 1, 31, -1;
	shfl.sync.idx.b32	%r533, %r6, 2, 31, -1;
	shfl.sync.idx.b32	%r534, %r6, 3, 31, -1;
	shfl.sync.idx.b32	%r535, %r6, 4, 31, -1;
	shfl.sync.idx.b32	%r536, %r6, 5, 31, -1;
	shfl.sync.idx.b32	%r537, %r6, 6, 31, -1;
	shfl.sync.idx.b32	%r538, %r6, 7, 31, -1;
	shfl.sync.idx.b32	%r539, %r6, 8, 31, -1;
	shfl.sync.idx.b32	%r540, %r6, 9, 31, -1;
	shfl.sync.idx.b32	%r541, %r6, 10, 31, -1;
	shfl.sync.idx.b32	%r542, %r6, 11, 31, -1;
	shfl.sync.idx.b32	%r543, %r6, 12, 31, -1;
	shfl.sync.idx.b32	%r544, %r6, 13, 31, -1;
	shfl.sync.idx.b32	%r545, %r6, 14, 31, -1;
	shfl.sync.idx.b32	%r546, %r6, 15, 31, -1;
	shfl.sync.idx.b32	%r547, %r6, 16, 31, -1;
	shfl.sync.idx.b32	%r548, %r6, 17, 31, -1;
	shfl.sync.idx.b32	%r549, %r6, 18, 31, -1;
	shfl.sync.idx.b32	%r550, %r6, 19, 31, -1;
	shfl.sync.idx.b32	%r551, %r6, 20, 31, -1;
	shfl.sync.idx.b32	%r552, %r6, 21, 31, -1;
	shfl.sync.idx.b32	%r553, %r6, 22, 31, -1;
	shfl.sync.idx.b32	%r554, %r6, 23, 31, -1;
	add.s32 	%r555, %r531, %r528;
	mul.wide.s32 	%rd99, %r555, 4;
	add.s64 	%rd100, %rd45, %rd99;
	st.shared.u32 	[%rd100], %r530;
	add.s32 	%r556, %r532, %r528;
	mul.wide.s32 	%rd101, %r556, 4;
	add.s64 	%rd102, %rd45, %rd101;
	st.shared.u32 	[%rd102], %r530;
	add.s32 	%r557, %r533, %r528;
	mul.wide.s32 	%rd103, %r557, 4;
	add.s64 	%rd104, %rd45, %rd103;
	st.shared.u32 	[%rd104], %r530;
	add.s32 	%r558, %r534, %r528;
	mul.wide.s32 	%rd105, %r558, 4;
	add.s64 	%rd106, %rd45, %rd105;
	st.shared.u32 	[%rd106], %r530;
	add.s32 	%r559, %r535, %r528;
	mul.wide.s32 	%rd107, %r559, 4;
	add.s64 	%rd108, %rd45, %rd107;
	st.shared.u32 	[%rd108], %r530;
	add.s32 	%r560, %r536, %r528;
	mul.wide.s32 	%rd109, %r560, 4;
	add.s64 	%rd110, %rd45, %rd109;
	st.shared.u32 	[%rd110], %r530;
	add.s32 	%r561, %r537, %r528;
	mul.wide.s32 	%rd111, %r561, 4;
	add.s64 	%rd112, %rd45, %rd111;
	st.shared.u32 	[%rd112], %r530;
	add.s32 	%r562, %r538, %r528;
	mul.wide.s32 	%rd113, %r562, 4;
	add.s64 	%rd114, %rd45, %rd113;
	st.shared.u32 	[%rd114], %r530;
	add.s32 	%r563, %r539, %r528;
	mul.wide.s32 	%rd115, %r563, 4;
	add.s64 	%rd116, %rd45, %rd115;
	st.shared.u32 	[%rd116], %r530;
	add.s32 	%r564, %r540, %r528;
	mul.wide.s32 	%rd117, %r564, 4;
	add.s64 	%rd118, %rd45, %rd117;
	st.shared.u32 	[%rd118], %r530;
	add.s32 	%r565, %r541, %r528;
	mul.wide.s32 	%rd119, %r565, 4;
	add.s64 	%rd120, %rd45, %rd119;
	st.shared.u32 	[%rd120], %r530;
	add.s32 	%r566, %r542, %r528;
	mul.wide.s32 	%rd121, %r566, 4;
	add.s64 	%rd122, %rd45, %rd121;
	st.shared.u32 	[%rd122], %r530;
	add.s32 	%r567, %r543, %r528;
	mul.wide.s32 	%rd123, %r567, 4;
	add.s64 	%rd124, %rd45, %rd123;
	st.shared.u32 	[%rd124], %r530;
	add.s32 	%r568, %r544, %r528;
	mul.wide.s32 	%rd125, %r568, 4;
	add.s64 	%rd126, %rd45, %rd125;
	st.shared.u32 	[%rd126], %r530;
	add.s32 	%r569, %r545, %r528;
	mul.wide.s32 	%rd127, %r569, 4;
	add.s64 	%rd128, %rd45, %rd127;
	st.shared.u32 	[%rd128], %r530;
	add.s32 	%r570, %r546, %r528;
	mul.wide.s32 	%rd129, %r570, 4;
	add.s64 	%rd130, %rd45, %rd129;
	st.shared.u32 	[%rd130], %r530;
	add.s32 	%r571, %r547, %r528;
	mul.wide.s32 	%rd131, %r571, 4;
	add.s64 	%rd132, %rd45, %rd131;
	st.shared.u32 	[%rd132], %r530;
	add.s32 	%r572, %r548, %r528;
	mul.wide.s32 	%rd133, %r572, 4;
	add.s64 	%rd134, %rd45, %rd133;
	st.shared.u32 	[%rd134], %r530;
	add.s32 	%r573, %r549, %r528;
	mul.wide.s32 	%rd135, %r573, 4;
	add.s64 	%rd136, %rd45, %rd135;
	st.shared.u32 	[%rd136], %r530;
	add.s32 	%r574, %r550, %r528;
	mul.wide.s32 	%rd137, %r574, 4;
	add.s64 	%rd138, %rd45, %rd137;
	st.shared.u32 	[%rd138], %r530;
	add.s32 	%r575, %r551, %r528;
	mul.wide.s32 	%rd139, %r575, 4;
	add.s64 	%rd140, %rd45, %rd139;
	st.shared.u32 	[%rd140], %r530;
	add.s32 	%r576, %r552, %r528;
	mul.wide.s32 	%rd141, %r576, 4;
	add.s64 	%rd142, %rd45, %rd141;
	st.shared.u32 	[%rd142], %r530;
	add.s32 	%r577, %r553, %r528;
	mul.wide.s32 	%rd143, %r577, 4;
	add.s64 	%rd144, %rd45, %rd143;
	st.shared.u32 	[%rd144], %r2354;
	add.s32 	%r578, %r554, %r528;
	mul.wide.s32 	%rd145, %r578, 4;
	add.s64 	%rd146, %rd45, %rd145;
	st.shared.u32 	[%rd146], %r2354;
	bar.sync 	0;
	mov.u32 	%r2370, %r2354;
	mov.u32 	%r2371, %r2354;
	mov.u32 	%r2372, %r2354;
	mov.u32 	%r2373, %r2354;
	mov.u32 	%r2374, %r2354;
	mov.u32 	%r2375, %r2354;
	mov.u32 	%r2376, %r2354;
	mov.u32 	%r2377, %r2354;
	mov.u32 	%r2378, %r2354;
	mov.u32 	%r2379, %r2354;
	mov.u32 	%r2380, %r2354;
	mov.u32 	%r2381, %r2354;
	mov.u32 	%r2382, %r2354;
	mov.u32 	%r2383, %r2354;
	mov.u32 	%r2384, %r2354;
	mov.u32 	%r2385, %r2354;
	mov.u32 	%r2386, %r2354;
	mov.u32 	%r2387, %r2354;
	mov.u32 	%r2388, %r2354;
	mov.u32 	%r2389, %r2354;
	mov.u32 	%r2390, %r2354;
	mov.u32 	%r2391, %r2354;
	mov.u32 	%r2392, %r2354;
	mov.u32 	%r2393, %r2354;
	@%p2 bra 	LBB0_16;
	bra.uni 	LBB0_7;
LBB0_16:                                // %oksrem15813
                                        //   in Loop: Header=BB0_6 Depth=1
	cvt.u16.u32 	%rs76, %r51;
	mul.hi.s16 	%rs77, %rs76, 10923;
	shr.u16 	%rs78, %rs77, 15;
	shr.s16 	%rs79, %rs77, 2;
	add.s16 	%rs80, %rs79, %rs78;
	mul.lo.s16 	%rs81, %rs80, 24;
	sub.s16 	%rs82, %rs76, %rs81;
	cvt.s32.s16 	%r579, %rs82;
	add.s32 	%r580, %r37, %r579;
	add.s32 	%r581, %r580, %r36;
	add.s32 	%r582, %r581, %r38;
	add.s32 	%r583, %r582, %r39;
	mul.wide.s32 	%rd147, %r583, 4;
	add.s64 	%rd149, %rd45, %rd147;
	ld.shared.u32 	%r2370, [%rd149];
	ld.shared.u32 	%r2371, [%rd7+4];
	ld.shared.u32 	%r2372, [%rd7+8];
	ld.shared.u32 	%r2373, [%rd7+12];
	ld.shared.u32 	%r2374, [%rd7+16];
	ld.shared.u32 	%r2375, [%rd7+20];
	ld.shared.u32 	%r2376, [%rd7+24];
	ld.shared.u32 	%r2377, [%rd7+28];
	ld.shared.u32 	%r2378, [%rd7+32];
	ld.shared.u32 	%r2379, [%rd7+36];
	ld.shared.u32 	%r2380, [%rd7+40];
	ld.shared.u32 	%r2381, [%rd7+44];
	ld.shared.u32 	%r2382, [%rd7+48];
	ld.shared.u32 	%r2383, [%rd7+52];
	ld.shared.u32 	%r2384, [%rd7+56];
	ld.shared.u32 	%r2385, [%rd7+60];
	add.s16 	%rs83, %rs76, 16;
	mul.hi.s16 	%rs84, %rs83, 10923;
	shr.u16 	%rs85, %rs84, 15;
	shr.s16 	%rs86, %rs84, 2;
	add.s16 	%rs87, %rs86, %rs85;
	mul.lo.s16 	%rs88, %rs87, 24;
	sub.s16 	%rs89, %rs83, %rs88;
	cvt.s32.s16 	%r584, %rs89;
	add.s32 	%r585, %r37, %r584;
	add.s32 	%r586, %r585, %r36;
	add.s32 	%r587, %r586, %r38;
	add.s32 	%r588, %r587, %r39;
	mul.wide.s32 	%rd150, %r588, 4;
	add.s64 	%rd151, %rd45, %rd150;
	ld.shared.u32 	%r2386, [%rd151];
	add.s16 	%rs90, %rs76, 17;
	mul.hi.s16 	%rs91, %rs90, 10923;
	shr.u16 	%rs92, %rs91, 15;
	shr.s16 	%rs93, %rs91, 2;
	add.s16 	%rs94, %rs93, %rs92;
	mul.lo.s16 	%rs95, %rs94, 24;
	sub.s16 	%rs96, %rs90, %rs95;
	cvt.s32.s16 	%r589, %rs96;
	add.s32 	%r590, %r37, %r589;
	add.s32 	%r591, %r590, %r36;
	add.s32 	%r592, %r591, %r38;
	add.s32 	%r593, %r592, %r39;
	mul.wide.s32 	%rd152, %r593, 4;
	add.s64 	%rd153, %rd45, %rd152;
	ld.shared.u32 	%r2387, [%rd153];
	add.s16 	%rs97, %rs76, 18;
	mul.hi.s16 	%rs98, %rs97, 10923;
	shr.u16 	%rs99, %rs98, 15;
	shr.s16 	%rs100, %rs98, 2;
	add.s16 	%rs101, %rs100, %rs99;
	mul.lo.s16 	%rs102, %rs101, 24;
	sub.s16 	%rs103, %rs97, %rs102;
	cvt.s32.s16 	%r594, %rs103;
	add.s32 	%r595, %r37, %r594;
	add.s32 	%r596, %r595, %r36;
	add.s32 	%r597, %r596, %r38;
	add.s32 	%r598, %r597, %r39;
	mul.wide.s32 	%rd154, %r598, 4;
	add.s64 	%rd155, %rd45, %rd154;
	ld.shared.u32 	%r2388, [%rd155];
	add.s16 	%rs104, %rs76, 19;
	mul.hi.s16 	%rs105, %rs104, 10923;
	shr.u16 	%rs106, %rs105, 15;
	shr.s16 	%rs107, %rs105, 2;
	add.s16 	%rs108, %rs107, %rs106;
	mul.lo.s16 	%rs109, %rs108, 24;
	sub.s16 	%rs110, %rs104, %rs109;
	cvt.s32.s16 	%r599, %rs110;
	add.s32 	%r600, %r37, %r599;
	add.s32 	%r601, %r600, %r36;
	add.s32 	%r602, %r601, %r38;
	add.s32 	%r603, %r602, %r39;
	mul.wide.s32 	%rd156, %r603, 4;
	add.s64 	%rd157, %rd45, %rd156;
	ld.shared.u32 	%r2389, [%rd157];
	add.s16 	%rs111, %rs76, 20;
	mul.hi.s16 	%rs112, %rs111, 10923;
	shr.u16 	%rs113, %rs112, 15;
	shr.s16 	%rs114, %rs112, 2;
	add.s16 	%rs115, %rs114, %rs113;
	mul.lo.s16 	%rs116, %rs115, 24;
	sub.s16 	%rs117, %rs111, %rs116;
	cvt.s32.s16 	%r604, %rs117;
	add.s32 	%r605, %r37, %r604;
	add.s32 	%r606, %r605, %r36;
	add.s32 	%r607, %r606, %r38;
	add.s32 	%r608, %r607, %r39;
	mul.wide.s32 	%rd158, %r608, 4;
	add.s64 	%rd159, %rd45, %rd158;
	ld.shared.u32 	%r2390, [%rd159];
	add.s16 	%rs118, %rs76, 21;
	mul.hi.s16 	%rs119, %rs118, 10923;
	shr.u16 	%rs120, %rs119, 15;
	shr.s16 	%rs121, %rs119, 2;
	add.s16 	%rs122, %rs121, %rs120;
	mul.lo.s16 	%rs123, %rs122, 24;
	sub.s16 	%rs124, %rs118, %rs123;
	cvt.s32.s16 	%r609, %rs124;
	add.s32 	%r610, %r37, %r609;
	add.s32 	%r611, %r610, %r36;
	add.s32 	%r612, %r611, %r38;
	add.s32 	%r613, %r612, %r39;
	mul.wide.s32 	%rd160, %r613, 4;
	add.s64 	%rd161, %rd45, %rd160;
	ld.shared.u32 	%r2391, [%rd161];
	add.s16 	%rs125, %rs76, 22;
	mul.hi.s16 	%rs126, %rs125, 10923;
	shr.u16 	%rs127, %rs126, 15;
	shr.s16 	%rs128, %rs126, 2;
	add.s16 	%rs129, %rs128, %rs127;
	mul.lo.s16 	%rs130, %rs129, 24;
	sub.s16 	%rs131, %rs125, %rs130;
	cvt.s32.s16 	%r614, %rs131;
	add.s32 	%r615, %r37, %r614;
	add.s32 	%r616, %r615, %r36;
	add.s32 	%r617, %r616, %r38;
	add.s32 	%r618, %r617, %r39;
	mul.wide.s32 	%rd162, %r618, 4;
	add.s64 	%rd163, %rd45, %rd162;
	ld.shared.u32 	%r2392, [%rd163];
	add.s16 	%rs132, %rs76, 23;
	mul.hi.s16 	%rs133, %rs132, 10923;
	shr.u16 	%rs134, %rs133, 15;
	shr.s16 	%rs135, %rs133, 2;
	add.s16 	%rs136, %rs135, %rs134;
	mul.lo.s16 	%rs137, %rs136, 24;
	sub.s16 	%rs138, %rs132, %rs137;
	cvt.s32.s16 	%r619, %rs138;
	add.s32 	%r620, %r37, %r619;
	add.s32 	%r621, %r620, %r36;
	add.s32 	%r622, %r621, %r38;
	add.s32 	%r623, %r622, %r39;
	mul.wide.s32 	%rd164, %r623, 4;
	add.s64 	%rd165, %rd45, %rd164;
	ld.shared.u32 	%r2393, [%rd165];
LBB0_7:                                 // %L48336
                                        //   in Loop: Header=BB0_6 Depth=1
	bar.sync 	0;
	xor.b32  	%r76, %r2370, -2004318072;
	shr.u32 	%r77, %r76, 8;
	xor.b32  	%r78, %r2371, -2004318072;
	shr.u32 	%r79, %r78, 8;
	xor.b32  	%r80, %r2372, -2004318072;
	shr.u32 	%r81, %r80, 8;
	xor.b32  	%r82, %r2373, -2004318072;
	shr.u32 	%r83, %r82, 8;
	xor.b32  	%r84, %r2374, -2004318072;
	shr.u32 	%r85, %r84, 8;
	xor.b32  	%r86, %r2375, -2004318072;
	shr.u32 	%r87, %r86, 8;
	xor.b32  	%r88, %r2376, -2004318072;
	shr.u32 	%r89, %r88, 8;
	xor.b32  	%r90, %r2377, -2004318072;
	shr.u32 	%r91, %r90, 8;
	xor.b32  	%r92, %r2378, -2004318072;
	shr.u32 	%r93, %r92, 8;
	xor.b32  	%r94, %r2379, -2004318072;
	shr.u32 	%r95, %r94, 8;
	xor.b32  	%r96, %r2380, -2004318072;
	shr.u32 	%r97, %r96, 8;
	xor.b32  	%r98, %r2381, -2004318072;
	shr.u32 	%r99, %r98, 8;
	xor.b32  	%r100, %r2382, -2004318072;
	shr.u32 	%r101, %r100, 8;
	xor.b32  	%r102, %r2383, -2004318072;
	shr.u32 	%r103, %r102, 8;
	xor.b32  	%r104, %r2384, -2004318072;
	shr.u32 	%r105, %r104, 8;
	xor.b32  	%r106, %r2385, -2004318072;
	shr.u32 	%r107, %r106, 8;
	xor.b32  	%r108, %r2386, -2004318072;
	shr.u32 	%r109, %r108, 8;
	xor.b32  	%r110, %r2387, -2004318072;
	shr.u32 	%r111, %r110, 8;
	xor.b32  	%r112, %r2388, -2004318072;
	shr.u32 	%r113, %r112, 8;
	xor.b32  	%r114, %r2389, -2004318072;
	shr.u32 	%r115, %r114, 8;
	xor.b32  	%r116, %r2390, -2004318072;
	shr.u32 	%r117, %r116, 8;
	xor.b32  	%r118, %r2391, -2004318072;
	shr.u32 	%r119, %r118, 8;
	xor.b32  	%r120, %r2392, -2004318072;
	shr.u32 	%r121, %r120, 8;
	xor.b32  	%r122, %r2393, -2004318072;
	shr.u32 	%r123, %r122, 8;
	mov.u32 	%r2400, %r2354;
	bra.uni 	LBB0_8;
LBB0_13:                                // %L60203
                                        //   in Loop: Header=BB0_8 Depth=2
	setp.ne.s32 	%p20, %r2400, 44;
	bar.sync 	0;
	add.s32 	%r2400, %r2400, 4;
	@%p20 bra 	LBB0_8;
	bra.uni 	LBB0_14;
LBB0_8:                                 // %L48362
                                        //   Parent Loop BB0_6 Depth=1
                                        // =>  This Loop Header: Depth=2
                                        //       Child Loop BB0_9 Depth 3
	mov.u16 	%rs139, 25600;
	// begin inline asm
	mov.b32 %r630, {%rs139, %rs139};
	// end inline asm
	mov.u16 	%rs141, 21504;
	// begin inline asm
	mov.b32 %r641, {%rs141, %rs141};
	// end inline asm
	mov.u32 	%r628, 983055;
	// begin inline asm
	lop3.b32 %r636, %r628, %r76, %r630, 202;
	// end inline asm
	mov.u16 	%rs143, 18432;
	// begin inline asm
	mov.b32 %r634, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r637, %r630, %r634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r635, %r636, %r637;
	// end inline asm
	mov.u32 	%r639, 15728880;
	// begin inline asm
	lop3.b32 %r647, %r639, %r76, %r641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r645, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r648, %r641, %r645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r646, %r647, %r648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r658, %r628, %r77, %r630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r656, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r659, %r630, %r656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r657, %r658, %r659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r669, %r639, %r77, %r641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r667, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r670, %r641, %r667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r668, %r669, %r670;
	// end inline asm
	// begin inline asm
	mov.b32 %r676, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r687, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r682, %r628, %r78, %r676, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r680, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r683, %r676, %r680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r681, %r682, %r683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r693, %r639, %r78, %r687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r691, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r694, %r687, %r691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r692, %r693, %r694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r704, %r628, %r79, %r676, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r702, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r705, %r676, %r702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r703, %r704, %r705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r715, %r639, %r79, %r687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r713, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r716, %r687, %r713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r714, %r715, %r716;
	// end inline asm
	// begin inline asm
	mov.b32 %r722, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r733, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r728, %r628, %r80, %r722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r726, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r729, %r722, %r726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r727, %r728, %r729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r739, %r639, %r80, %r733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r737, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r740, %r733, %r737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r738, %r739, %r740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r750, %r628, %r81, %r722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r748, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r751, %r722, %r748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r749, %r750, %r751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r761, %r639, %r81, %r733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r759, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r762, %r733, %r759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r760, %r761, %r762;
	// end inline asm
	// begin inline asm
	mov.b32 %r768, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r779, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r774, %r628, %r82, %r768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r772, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r775, %r768, %r772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r773, %r774, %r775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r785, %r639, %r82, %r779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r783, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r786, %r779, %r783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r784, %r785, %r786;
	// end inline asm
	// begin inline asm
	lop3.b32 %r796, %r628, %r83, %r768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r794, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r797, %r768, %r794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r795, %r796, %r797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r807, %r639, %r83, %r779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r805, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r808, %r779, %r805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r806, %r807, %r808;
	// end inline asm
	// begin inline asm
	mov.b32 %r814, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r825, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r820, %r628, %r84, %r814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r818, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r821, %r814, %r818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r819, %r820, %r821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r831, %r639, %r84, %r825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r829, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r832, %r825, %r829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r830, %r831, %r832;
	// end inline asm
	// begin inline asm
	lop3.b32 %r842, %r628, %r85, %r814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r840, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r843, %r814, %r840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r841, %r842, %r843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r853, %r639, %r85, %r825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r851, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r854, %r825, %r851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r852, %r853, %r854;
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r871, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r866, %r628, %r86, %r860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r864, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r867, %r860, %r864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r865, %r866, %r867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r877, %r639, %r86, %r871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r875, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r878, %r871, %r875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r876, %r877, %r878;
	// end inline asm
	// begin inline asm
	lop3.b32 %r888, %r628, %r87, %r860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r886, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r889, %r860, %r886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r887, %r888, %r889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r899, %r639, %r87, %r871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r897, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r900, %r871, %r897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r898, %r899, %r900;
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r917, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r912, %r628, %r88, %r906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r913, %r906, %r910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r911, %r912, %r913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r923, %r639, %r88, %r917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r921, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r924, %r917, %r921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r922, %r923, %r924;
	// end inline asm
	// begin inline asm
	lop3.b32 %r934, %r628, %r89, %r906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r932, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r935, %r906, %r932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r933, %r934, %r935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r945, %r639, %r89, %r917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r943, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r946, %r917, %r943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r944, %r945, %r946;
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r963, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r958, %r628, %r90, %r952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r959, %r952, %r956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r957, %r958, %r959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r969, %r639, %r90, %r963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r967, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r970, %r963, %r967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r968, %r969, %r970;
	// end inline asm
	// begin inline asm
	lop3.b32 %r980, %r628, %r91, %r952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r978, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r981, %r952, %r978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r979, %r980, %r981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r991, %r639, %r91, %r963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r989, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r992, %r963, %r989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r990, %r991, %r992;
	// end inline asm
	// begin inline asm
	mov.b32 %r998, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r1009, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1004, %r628, %r92, %r998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1002, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1005, %r998, %r1002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1003, %r1004, %r1005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1015, %r639, %r92, %r1009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1013, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1016, %r1009, %r1013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1014, %r1015, %r1016;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1026, %r628, %r93, %r998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1024, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1027, %r998, %r1024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1025, %r1026, %r1027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1037, %r639, %r93, %r1009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1035, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1038, %r1009, %r1035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1036, %r1037, %r1038;
	// end inline asm
	// begin inline asm
	mov.b32 %r1044, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r1055, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1050, %r628, %r94, %r1044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1048, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1051, %r1044, %r1048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1049, %r1050, %r1051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1061, %r639, %r94, %r1055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1059, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1062, %r1055, %r1059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1060, %r1061, %r1062;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1072, %r628, %r95, %r1044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1070, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1073, %r1044, %r1070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1071, %r1072, %r1073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1083, %r639, %r95, %r1055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1081, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1084, %r1055, %r1081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1082, %r1083, %r1084;
	// end inline asm
	// begin inline asm
	mov.b32 %r1090, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r1101, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1096, %r628, %r96, %r1090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1094, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1097, %r1090, %r1094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1095, %r1096, %r1097;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1107, %r639, %r96, %r1101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1105, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1108, %r1101, %r1105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1106, %r1107, %r1108;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1118, %r628, %r97, %r1090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1116, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1119, %r1090, %r1116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1117, %r1118, %r1119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1129, %r639, %r97, %r1101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1127, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1130, %r1101, %r1127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1128, %r1129, %r1130;
	// end inline asm
	// begin inline asm
	mov.b32 %r1136, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r1147, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1142, %r628, %r98, %r1136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1140, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1143, %r1136, %r1140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1141, %r1142, %r1143;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1153, %r639, %r98, %r1147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1151, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1154, %r1147, %r1151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1152, %r1153, %r1154;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1164, %r628, %r99, %r1136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1162, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1165, %r1136, %r1162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1163, %r1164, %r1165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1175, %r639, %r99, %r1147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1173, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1176, %r1147, %r1173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1174, %r1175, %r1176;
	// end inline asm
	// begin inline asm
	mov.b32 %r1182, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r1193, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1188, %r628, %r100, %r1182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1186, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1189, %r1182, %r1186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1187, %r1188, %r1189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1199, %r639, %r100, %r1193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1197, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1200, %r1193, %r1197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1198, %r1199, %r1200;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1210, %r628, %r101, %r1182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1208, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1211, %r1182, %r1208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1209, %r1210, %r1211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1221, %r639, %r101, %r1193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1219, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1222, %r1193, %r1219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1220, %r1221, %r1222;
	// end inline asm
	// begin inline asm
	mov.b32 %r1228, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r1239, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1234, %r628, %r102, %r1228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1232, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1235, %r1228, %r1232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1233, %r1234, %r1235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1245, %r639, %r102, %r1239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1243, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1246, %r1239, %r1243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1244, %r1245, %r1246;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1256, %r628, %r103, %r1228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1254, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1257, %r1228, %r1254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1255, %r1256, %r1257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1267, %r639, %r103, %r1239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1265, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1268, %r1239, %r1265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1266, %r1267, %r1268;
	// end inline asm
	// begin inline asm
	mov.b32 %r1274, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r1285, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1280, %r628, %r104, %r1274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1278, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1281, %r1274, %r1278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1279, %r1280, %r1281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1291, %r639, %r104, %r1285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1289, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1292, %r1285, %r1289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1290, %r1291, %r1292;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1302, %r628, %r105, %r1274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1300, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1303, %r1274, %r1300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1301, %r1302, %r1303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1313, %r639, %r105, %r1285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1311, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1314, %r1285, %r1311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1312, %r1313, %r1314;
	// end inline asm
	// begin inline asm
	mov.b32 %r1320, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r1331, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1326, %r628, %r106, %r1320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1324, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1327, %r1320, %r1324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1325, %r1326, %r1327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1337, %r639, %r106, %r1331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1335, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1338, %r1331, %r1335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1336, %r1337, %r1338;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1348, %r628, %r107, %r1320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1346, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1349, %r1320, %r1346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1347, %r1348, %r1349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1359, %r639, %r107, %r1331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1357, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1360, %r1331, %r1357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1358, %r1359, %r1360;
	// end inline asm
	// begin inline asm
	mov.b32 %r1366, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r1377, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1372, %r628, %r108, %r1366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1370, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1373, %r1366, %r1370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1371, %r1372, %r1373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1383, %r639, %r108, %r1377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1381, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1384, %r1377, %r1381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1382, %r1383, %r1384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1394, %r628, %r109, %r1366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1392, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1395, %r1366, %r1392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1393, %r1394, %r1395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1405, %r639, %r109, %r1377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1403, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1406, %r1377, %r1403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1404, %r1405, %r1406;
	// end inline asm
	// begin inline asm
	mov.b32 %r1412, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r1423, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1418, %r628, %r110, %r1412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1416, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1419, %r1412, %r1416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1417, %r1418, %r1419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1429, %r639, %r110, %r1423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1427, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1430, %r1423, %r1427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1428, %r1429, %r1430;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1440, %r628, %r111, %r1412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1441, %r1412, %r1438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1439, %r1440, %r1441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1451, %r639, %r111, %r1423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1449, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1452, %r1423, %r1449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1450, %r1451, %r1452;
	// end inline asm
	// begin inline asm
	mov.b32 %r1458, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r1469, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1464, %r628, %r112, %r1458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1462, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1465, %r1458, %r1462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1463, %r1464, %r1465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1475, %r639, %r112, %r1469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1473, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1476, %r1469, %r1473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1474, %r1475, %r1476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1486, %r628, %r113, %r1458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1484, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1487, %r1458, %r1484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1485, %r1486, %r1487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1497, %r639, %r113, %r1469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1495, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1498, %r1469, %r1495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1496, %r1497, %r1498;
	// end inline asm
	// begin inline asm
	mov.b32 %r1504, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r1515, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1510, %r628, %r114, %r1504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1508, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1511, %r1504, %r1508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1509, %r1510, %r1511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1521, %r639, %r114, %r1515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1519, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1522, %r1515, %r1519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1520, %r1521, %r1522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1532, %r628, %r115, %r1504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1530, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1533, %r1504, %r1530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1531, %r1532, %r1533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1543, %r639, %r115, %r1515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1541, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1544, %r1515, %r1541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1542, %r1543, %r1544;
	// end inline asm
	// begin inline asm
	mov.b32 %r1550, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r1561, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1556, %r628, %r116, %r1550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1554, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1557, %r1550, %r1554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1555, %r1556, %r1557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1567, %r639, %r116, %r1561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1565, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1568, %r1561, %r1565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1566, %r1567, %r1568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1578, %r628, %r117, %r1550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1576, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1579, %r1550, %r1576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1577, %r1578, %r1579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1589, %r639, %r117, %r1561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1587, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1590, %r1561, %r1587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1588, %r1589, %r1590;
	// end inline asm
	// begin inline asm
	mov.b32 %r1596, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r1607, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1602, %r628, %r118, %r1596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1600, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1603, %r1596, %r1600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1601, %r1602, %r1603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1613, %r639, %r118, %r1607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1611, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1614, %r1607, %r1611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1612, %r1613, %r1614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1624, %r628, %r119, %r1596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1622, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1625, %r1596, %r1622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1623, %r1624, %r1625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1635, %r639, %r119, %r1607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1633, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1636, %r1607, %r1633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1634, %r1635, %r1636;
	// end inline asm
	// begin inline asm
	mov.b32 %r1642, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r1653, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1648, %r628, %r120, %r1642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1646, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1649, %r1642, %r1646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1647, %r1648, %r1649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1659, %r639, %r120, %r1653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1657, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1660, %r1653, %r1657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1658, %r1659, %r1660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1670, %r628, %r121, %r1642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1668, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1671, %r1642, %r1668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1669, %r1670, %r1671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1681, %r639, %r121, %r1653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1679, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1682, %r1653, %r1679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1680, %r1681, %r1682;
	// end inline asm
	// begin inline asm
	mov.b32 %r1688, {%rs139, %rs139};
	// end inline asm
	// begin inline asm
	mov.b32 %r1699, {%rs141, %rs141};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1694, %r628, %r122, %r1688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1692, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1695, %r1688, %r1692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1693, %r1694, %r1695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1705, %r639, %r122, %r1699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1703, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1706, %r1699, %r1703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1704, %r1705, %r1706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1716, %r628, %r123, %r1688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1714, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1717, %r1688, %r1714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1715, %r1716, %r1717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1727, %r639, %r123, %r1699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1725, {%rs143, %rs143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1728, %r1699, %r1725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1726, %r1727, %r1728;
	// end inline asm
	setp.eq.s32 	%p5, %r2400, 0;
	selp.b32 	%r2089, %r635, 0, %p5;
	setp.eq.s32 	%p6, %r2400, 4;
	selp.b32 	%r2090, %r819, %r2089, %p6;
	setp.eq.s32 	%p7, %r2400, 8;
	selp.b32 	%r2091, %r1003, %r2090, %p7;
	setp.eq.s32 	%p8, %r2400, 12;
	selp.b32 	%r2092, %r1187, %r2091, %p8;
	setp.eq.s32 	%p9, %r2400, 16;
	selp.b32 	%r2093, %r1371, %r2092, %p9;
	setp.eq.s32 	%p10, %r2400, 20;
	selp.b32 	%r2094, %r1555, %r2093, %p10;
	setp.eq.s32 	%p11, %r2400, 24;
	selp.b32 	%r2095, %r657, %r2094, %p11;
	setp.eq.s32 	%p12, %r2400, 28;
	selp.b32 	%r2096, %r841, %r2095, %p12;
	setp.eq.s32 	%p13, %r2400, 32;
	selp.b32 	%r2097, %r1025, %r2096, %p13;
	setp.eq.s32 	%p14, %r2400, 36;
	selp.b32 	%r2098, %r1209, %r2097, %p14;
	setp.eq.s32 	%p15, %r2400, 40;
	selp.b32 	%r2099, %r1393, %r2098, %p15;
	setp.eq.s32 	%p16, %r2400, 44;
	selp.b32 	%r1731, %r1577, %r2099, %p16;
	selp.b32 	%r2100, %r646, 0, %p5;
	selp.b32 	%r2101, %r830, %r2100, %p6;
	selp.b32 	%r2102, %r1014, %r2101, %p7;
	selp.b32 	%r2103, %r1198, %r2102, %p8;
	selp.b32 	%r2104, %r1382, %r2103, %p9;
	selp.b32 	%r2105, %r1566, %r2104, %p10;
	selp.b32 	%r2106, %r668, %r2105, %p11;
	selp.b32 	%r2107, %r852, %r2106, %p12;
	selp.b32 	%r2108, %r1036, %r2107, %p13;
	selp.b32 	%r2109, %r1220, %r2108, %p14;
	selp.b32 	%r2110, %r1404, %r2109, %p15;
	selp.b32 	%r1734, %r1588, %r2110, %p16;
	selp.b32 	%r2111, %r681, 0, %p5;
	selp.b32 	%r2112, %r865, %r2111, %p6;
	selp.b32 	%r2113, %r1049, %r2112, %p7;
	selp.b32 	%r2114, %r1233, %r2113, %p8;
	selp.b32 	%r2115, %r1417, %r2114, %p9;
	selp.b32 	%r2116, %r1601, %r2115, %p10;
	selp.b32 	%r2117, %r703, %r2116, %p11;
	selp.b32 	%r2118, %r887, %r2117, %p12;
	selp.b32 	%r2119, %r1071, %r2118, %p13;
	selp.b32 	%r2120, %r1255, %r2119, %p14;
	selp.b32 	%r2121, %r1439, %r2120, %p15;
	selp.b32 	%r1737, %r1623, %r2121, %p16;
	selp.b32 	%r2122, %r692, 0, %p5;
	selp.b32 	%r2123, %r876, %r2122, %p6;
	selp.b32 	%r2124, %r1060, %r2123, %p7;
	selp.b32 	%r2125, %r1244, %r2124, %p8;
	selp.b32 	%r2126, %r1428, %r2125, %p9;
	selp.b32 	%r2127, %r1612, %r2126, %p10;
	selp.b32 	%r2128, %r714, %r2127, %p11;
	selp.b32 	%r2129, %r898, %r2128, %p12;
	selp.b32 	%r2130, %r1082, %r2129, %p13;
	selp.b32 	%r2131, %r1266, %r2130, %p14;
	selp.b32 	%r2132, %r1450, %r2131, %p15;
	selp.b32 	%r1740, %r1634, %r2132, %p16;
	selp.b32 	%r2133, %r727, 0, %p5;
	selp.b32 	%r2134, %r911, %r2133, %p6;
	selp.b32 	%r2135, %r1095, %r2134, %p7;
	selp.b32 	%r2136, %r1279, %r2135, %p8;
	selp.b32 	%r2137, %r1463, %r2136, %p9;
	selp.b32 	%r2138, %r1647, %r2137, %p10;
	selp.b32 	%r2139, %r749, %r2138, %p11;
	selp.b32 	%r2140, %r933, %r2139, %p12;
	selp.b32 	%r2141, %r1117, %r2140, %p13;
	selp.b32 	%r2142, %r1301, %r2141, %p14;
	selp.b32 	%r2143, %r1485, %r2142, %p15;
	selp.b32 	%r1743, %r1669, %r2143, %p16;
	selp.b32 	%r2144, %r738, 0, %p5;
	selp.b32 	%r2145, %r922, %r2144, %p6;
	selp.b32 	%r2146, %r1106, %r2145, %p7;
	selp.b32 	%r2147, %r1290, %r2146, %p8;
	selp.b32 	%r2148, %r1474, %r2147, %p9;
	selp.b32 	%r2149, %r1658, %r2148, %p10;
	selp.b32 	%r2150, %r760, %r2149, %p11;
	selp.b32 	%r2151, %r944, %r2150, %p12;
	selp.b32 	%r2152, %r1128, %r2151, %p13;
	selp.b32 	%r2153, %r1312, %r2152, %p14;
	selp.b32 	%r2154, %r1496, %r2153, %p15;
	selp.b32 	%r1746, %r1680, %r2154, %p16;
	selp.b32 	%r2155, %r773, 0, %p5;
	selp.b32 	%r2156, %r957, %r2155, %p6;
	selp.b32 	%r2157, %r1141, %r2156, %p7;
	selp.b32 	%r2158, %r1325, %r2157, %p8;
	selp.b32 	%r2159, %r1509, %r2158, %p9;
	selp.b32 	%r2160, %r1693, %r2159, %p10;
	selp.b32 	%r2161, %r795, %r2160, %p11;
	selp.b32 	%r2162, %r979, %r2161, %p12;
	selp.b32 	%r2163, %r1163, %r2162, %p13;
	selp.b32 	%r2164, %r1347, %r2163, %p14;
	selp.b32 	%r2165, %r1531, %r2164, %p15;
	selp.b32 	%r1749, %r1715, %r2165, %p16;
	selp.b32 	%r2166, %r784, 0, %p5;
	selp.b32 	%r2167, %r968, %r2166, %p6;
	selp.b32 	%r2168, %r1152, %r2167, %p7;
	selp.b32 	%r2169, %r1336, %r2168, %p8;
	selp.b32 	%r2170, %r1520, %r2169, %p9;
	selp.b32 	%r2171, %r1704, %r2170, %p10;
	selp.b32 	%r2172, %r806, %r2171, %p11;
	selp.b32 	%r2173, %r990, %r2172, %p12;
	selp.b32 	%r2174, %r1174, %r2173, %p13;
	selp.b32 	%r2175, %r1358, %r2174, %p14;
	selp.b32 	%r2176, %r1542, %r2175, %p15;
	selp.b32 	%r1752, %r1726, %r2176, %p16;
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r2361;
    mov.b32 {%r2re, %r2im}, %r1731;
    mul.f16 %retmp, %r1re, %r2re;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    mul.f16 %imtmp, %r1re, %r2im;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1765, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r2362;
    mov.b32 {%r2re, %r2im}, %r1734;
    mul.f16 %retmp, %r1re, %r2re;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    mul.f16 %imtmp, %r1re, %r2im;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1772, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r2361;
    mov.b32 {%r2re, %r2im}, %r1737;
    mul.f16 %retmp, %r1re, %r2re;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    mul.f16 %imtmp, %r1re, %r2im;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1779, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r2362;
    mov.b32 {%r2re, %r2im}, %r1740;
    mul.f16 %retmp, %r1re, %r2re;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    mul.f16 %imtmp, %r1re, %r2im;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1786, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r2361;
    mov.b32 {%r2re, %r2im}, %r1743;
    mul.f16 %retmp, %r1re, %r2re;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    mul.f16 %imtmp, %r1re, %r2im;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1793, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r2362;
    mov.b32 {%r2re, %r2im}, %r1746;
    mul.f16 %retmp, %r1re, %r2re;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    mul.f16 %imtmp, %r1re, %r2im;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1800, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r2361;
    mov.b32 {%r2re, %r2im}, %r1749;
    mul.f16 %retmp, %r1re, %r2re;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    mul.f16 %imtmp, %r1re, %r2im;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1807, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r2362;
    mov.b32 {%r2re, %r2im}, %r1752;
    mul.f16 %retmp, %r1re, %r2re;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    mul.f16 %imtmp, %r1re, %r2im;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1814, {%r0re, %r0im};
}

	// end inline asm
	mov.u16 	%rs427, 15360;
	mov.u16 	%rs428, 16384;
	// begin inline asm
	mov.b32 %r131, {%rs427, %rs428};
	// end inline asm
	// begin inline asm
	mov.b32 %r132, {%rs427, %rs428};
	// end inline asm
	mov.u16 	%rs431, 16896;
	mov.u16 	%rs432, 17408;
	// begin inline asm
	mov.b32 %r133, {%rs431, %rs432};
	// end inline asm
	// begin inline asm
	mov.b32 %r134, {%rs431, %rs432};
	// end inline asm
	// begin inline asm
	mov.b32 %r135, {%rs431, %rs432};
	// end inline asm
	// begin inline asm
	mov.b32 %r136, {%rs431, %rs432};
	// end inline asm
	// begin inline asm
	mov.b32 %r137, {%rs431, %rs432};
	// end inline asm
	// begin inline asm
	mov.b32 %r138, {%rs431, %rs432};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1821, %r1824}, {%r131, %r132}, {%r1765}, {%r2354, %r2354};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1830, %r1833}, {%r131, %r132}, {%r1772}, {%r2354, %r2354};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1839, %r1842}, {%r131, %r132}, {%r1779}, {%r2354, %r2354};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1848, %r1851}, {%r131, %r132}, {%r1786}, {%r2354, %r2354};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1857, %r1860}, {%r131, %r132}, {%r1793}, {%r2354, %r2354};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1866, %r1869}, {%r131, %r132}, {%r1800}, {%r2354, %r2354};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1875, %r1878}, {%r131, %r132}, {%r1807}, {%r2354, %r2354};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1884, %r1887}, {%r131, %r132}, {%r1814}, {%r2354, %r2354};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1820, %r133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1825, %r1820, %r1821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1952, %r134, %r1824, %r1825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1829, %r133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1834, %r1829, %r1830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1962, %r134, %r1833, %r1834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1838, %r133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1843, %r1838, %r1839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1972, %r134, %r1842, %r1843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1847, %r133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1852, %r1847, %r1848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1982, %r134, %r1851, %r1852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1856, %r133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1861, %r1856, %r1857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1992, %r134, %r1860, %r1861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1865, %r133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1870, %r1865, %r1866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2002, %r134, %r1869, %r1870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1874, %r133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1879, %r1874, %r1875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2012, %r134, %r1878, %r1879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1883, %r133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1888, %r1883, %r1884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2022, %r134, %r1887, %r1888;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1895, %r133, %r1824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1951, %r134, %r1821, %r1895;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1902, %r133, %r1833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1961, %r134, %r1830, %r1902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1909, %r133, %r1842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1971, %r134, %r1839, %r1909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1916, %r133, %r1851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1981, %r134, %r1848, %r1916;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1923, %r133, %r1860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1991, %r134, %r1857, %r1923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1930, %r133, %r1869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2001, %r134, %r1866, %r1930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1937, %r133, %r1878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2011, %r134, %r1875, %r1937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1944, %r133, %r1887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2021, %r134, %r1884, %r1944;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2026, %r2027}, {%r135, %r136, %r137, %r138}, {%r1951, %r1952}, {%r2354, %r2354};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2034, %r2035}, {%r135, %r136, %r137, %r138}, {%r1961, %r1962}, {%r2354, %r2354};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2042, %r2043}, {%r135, %r136, %r137, %r138}, {%r1971, %r1972}, {%r2354, %r2354};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2050, %r2051}, {%r135, %r136, %r137, %r138}, {%r1981, %r1982}, {%r2354, %r2354};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2058, %r2059}, {%r135, %r136, %r137, %r138}, {%r1991, %r1992}, {%r2354, %r2354};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2066, %r2067}, {%r135, %r136, %r137, %r138}, {%r2001, %r2002}, {%r2354, %r2354};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2074, %r2075}, {%r135, %r136, %r137, %r138}, {%r2011, %r2012}, {%r2354, %r2354};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2082, %r2083}, {%r135, %r136, %r137, %r138}, {%r2021, %r2022}, {%r2354, %r2354};
	// end inline asm
	// begin inline asm
	prmt.b32 %r2025, %r2026, %r2027, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2029, %r2026, %r2027, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2033, %r2034, %r2035, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2037, %r2034, %r2035, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2041, %r2042, %r2043, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2045, %r2042, %r2043, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2049, %r2050, %r2051, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2053, %r2050, %r2051, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2057, %r2058, %r2059, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2061, %r2058, %r2059, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2065, %r2066, %r2067, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2069, %r2066, %r2067, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2073, %r2074, %r2075, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2077, %r2074, %r2075, %r477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2081, %r2082, %r2083, %r473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2085, %r2082, %r2083, %r477;
	// end inline asm
	st.shared.u32 	[%rd5], %r2025;
	st.shared.u32 	[%rd6+33024], %r2029;
	st.shared.u32 	[%rd6+128], %r2033;
	st.shared.u32 	[%rd6+33152], %r2037;
	st.shared.u32 	[%rd8], %r2041;
	st.shared.u32 	[%rd9], %r2045;
	st.shared.u32 	[%rd10], %r2049;
	st.shared.u32 	[%rd11], %r2053;
	st.shared.u32 	[%rd12], %r2057;
	st.shared.u32 	[%rd13], %r2061;
	st.shared.u32 	[%rd14], %r2065;
	st.shared.u32 	[%rd15], %r2069;
	st.shared.u32 	[%rd16], %r2073;
	st.shared.u32 	[%rd17], %r2077;
	st.shared.u32 	[%rd18], %r2081;
	st.shared.u32 	[%rd19], %r2085;
	bar.sync 	0;
	mov.u64 	%rd179, 0;
	bra.uni 	LBB0_9;
LBB0_10:                                // %L59071
                                        //   in Loop: Header=BB0_9 Depth=3
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2210, %r2213}, {%r131, %r132}, {%r2410}, {%r2177, %r2177};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2219, %r2222}, {%r131, %r132}, {%r2409}, {%r2177, %r2177};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2228, %r2231}, {%r131, %r132}, {%r2408}, {%r2177, %r2177};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2237, %r2240}, {%r131, %r132}, {%r2407}, {%r2177, %r2177};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2206, %r133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2208, %r2206, %r2210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2211, %r134, %r2213, %r2208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2215, %r133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2217, %r2215, %r2219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2220, %r134, %r2222, %r2217;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2224, %r133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2226, %r2224, %r2228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2229, %r134, %r2231, %r2226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2233, %r133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2235, %r2233, %r2237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2238, %r134, %r2240, %r2235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2242, %r133, %r2213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2245, %r134, %r2210, %r2242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2249, %r133, %r2222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2252, %r134, %r2219, %r2249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2256, %r133, %r2231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2259, %r134, %r2228, %r2256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2263, %r133, %r2240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2266, %r134, %r2237, %r2263;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2311, %r2315}, {%r135, %r136, %r137, %r138}, {%r2245, %r2211}, {%r2177, %r2177};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2319, %r2323}, {%r135, %r136, %r137, %r138}, {%r2252, %r2220}, {%r2177, %r2177};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2327, %r2331}, {%r135, %r136, %r137, %r138}, {%r2259, %r2229}, {%r2177, %r2177};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2335, %r2339}, {%r135, %r136, %r137, %r138}, {%r2266, %r2238}, {%r2177, %r2177};
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2310, %r2311, %r2311, %r2406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2406, %r2315, %r2315, %r2310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2318, %r2319, %r2319, %r2405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2405, %r2323, %r2323, %r2318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2326, %r2327, %r2327, %r2404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2404, %r2331, %r2331, %r2326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2334, %r2335, %r2335, %r2403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2403, %r2339, %r2339, %r2334;
	// end inline asm
	add.s32 	%r2401, %r2401, 1;
	setp.ne.s32 	%p18, %r2401, 40;
	@%p18 bra 	LBB0_12;
	bra.uni 	LBB0_11;
LBB0_12:                                // %L60184
                                        //   in Loop: Header=BB0_9 Depth=3
	add.s64 	%rd179, %rd179, 256;
	cvt.u32.u64 	%r2352, %rd179;
	setp.ne.s32 	%p19, %r2352, 1024;
	@%p19 bra 	LBB0_9;
	bra.uni 	LBB0_13;
LBB0_9:                                 // %L55296
                                        //   Parent Loop BB0_6 Depth=1
                                        //     Parent Loop BB0_8 Depth=2
                                        // =>    This Inner Loop Header: Depth=3
	mov.u32 	%r2177, 0;
	mov.u32 	%r2407, %r2177;
	mov.u32 	%r2408, %r2177;
	mov.u32 	%r2409, %r2177;
	mov.u32 	%r2410, %r2177;
	@%p2 bra 	LBB0_17;
	bra.uni 	LBB0_10;
LBB0_17:                                // %oksrem19734
                                        //   in Loop: Header=BB0_9 Depth=3
	add.s64 	%rd167, %rd23, %rd179;
	ld.shared.u32 	%r2410, [%rd167];
	add.s64 	%rd168, %rd22, %rd179;
	ld.shared.u32 	%r2409, [%rd168];
	add.s64 	%rd169, %rd20, %rd179;
	ld.shared.u32 	%r2408, [%rd169];
	add.s64 	%rd170, %rd21, %rd179;
	ld.shared.u32 	%r2407, [%rd170];
	bra.uni 	LBB0_10;
LBB0_11:                                // %L59255
                                        //   in Loop: Header=BB0_9 Depth=3
	shl.b32 	%r2343, %r2402, 20;
	or.b32  	%r2344, %r1, %r2343;
	or.b32  	%r2345, %r40, %r2344;
	or.b32  	%r2346, %r2345, %r41;
	mul.wide.u32 	%rd171, %r2346, 4;
	add.s64 	%rd172, %rd3, %rd171;
	st.global.u32 	[%rd172], %r2406;
	or.b32  	%r2347, %r41, %r2344;
	or.b32  	%r2348, %r2347, %r43;
	mul.wide.u32 	%rd173, %r2348, 4;
	add.s64 	%rd174, %rd3, %rd173;
	st.global.u32 	[%rd174], %r2405;
	or.b32  	%r2349, %r2346, 524288;
	mul.wide.u32 	%rd175, %r2349, 4;
	add.s64 	%rd176, %rd3, %rd175;
	st.global.u32 	[%rd176], %r2404;
	or.b32  	%r2350, %r2347, %r42;
	or.b32  	%r2351, %r2350, 524320;
	mul.wide.u32 	%rd177, %r2351, 4;
	add.s64 	%rd178, %rd3, %rd177;
	st.global.u32 	[%rd178], %r2403;
	add.s32 	%r2402, %r2402, 1;
	mov.u32 	%r2401, 0;
	mov.u32 	%r2403, %r2401;
	mov.u32 	%r2404, %r2401;
	mov.u32 	%r2405, %r2401;
	mov.u32 	%r2406, %r2401;
	bra.uni 	LBB0_12;
LBB0_15:                                // %L60242
	mov.u32 	%r2353, 0;
	st.global.u32 	[%rd4], %r2353;
	ret;
LBB0_1:                                 // %L9
	ld.param.u64 	%rd26, [_Z14julia_frb_544213CuDeviceArrayI6Int4x8Li1ELi1EES_I5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_0];
	mov.u64 	%rd35, exception1;
	cvta.global.u64 	%rd36, %rd35;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd36;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd26;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
