CHORD FRB beamformer
Compiling kernel...
// PTX CompilerJob of kernel #frb(CuDeviceVector{Int32, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int32, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Float16x2, 1}) for sm_86, minthreads=768, blocks_per_sm=1

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE // -- Begin function _Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE
.extern .func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
;
.extern .func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[8]
)
;
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE
.visible .entry _Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE(
	.param .align 8 .b8 _Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_0[8],
	.param .align 8 .b8 _Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_8[32]
)
.reqntid 768, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<77>;
	.reg .b16 	%rs<458>;
	.reg .f32 	%f<202>;
	.reg .b32 	%r<3301>;
	.reg .b64 	%rd<330>;

// %bb.0:                               // %conversion
	// begin inline asm
	mov.u32 %r283, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r283, 76895;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L11
	ld.param.u64 	%rd12, [_Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_5];
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r290, %r2, 5;
	mad.lo.s32 	%r291, %r1, 768, %r290;
	mov.u32 	%r3, %tid.x;
	or.b32  	%r292, %r291, %r3;
	mul.wide.u32 	%rd18, %r292, 4;
	add.s64 	%rd5, %rd12, %rd18;
	mov.u32 	%r293, 1;
	st.global.u32 	[%rd5], %r293;
	and.b32  	%r4, %r3, 3;
	shr.u32 	%r5, %r3, 2;
	mul.lo.s32 	%r294, %r4, %r5;
	and.b32  	%r295, %r294, 7;
	cvt.rn.f32.u32 	%f18, %r295;
	mov.f32 	%f19, 0f40800000;
	div.approx.f32 	%f20, %f18, %f19;
	add.f32 	%f21, %f20, %f20;
	mov.b32 	%r296, %f21;
	and.b32  	%r297, %r296, -2147483648;
	or.b32  	%r298, %r297, 1056964608;
	mov.b32 	%f22, %r298;
	add.f32 	%f23, %f21, %f22;
	cvt.rzi.f32.f32 	%f24, %f23;
	abs.f32 	%f25, %f21;
	setp.gt.f32 	%p2, %f25, 0f4B000000;
	selp.f32 	%f26, %f21, %f24, %p2;
	cvt.rzi.f32.f32 	%f27, %f21;
	setp.lt.f32 	%p3, %f25, 0f3F000000;
	selp.f32 	%f28, %f27, %f26, %p3;
	cvt.rzi.s32.f32 	%r299, %f28;
	fma.rn.f32 	%f29, %f28, 0fBF000000, %f20;
	mul.f32 	%f30, %f29, 0f34222169;
	fma.rn.f32 	%f31, %f29, 0f40490FDA, %f30;
	mul.f32 	%f32, %f31, %f31;
	fma.rn.f32 	%f33, %f32, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f34, %f33, %f32, 0f3D2AAABB;
	fma.rn.f32 	%f35, %f34, %f32, 0fBEFFFFFF;
	fma.rn.f32 	%f36, %f35, %f32, 0f3F800000;
	fma.rn.f32 	%f37, %f32, %f31, 0f00000000;
	fma.rn.f32 	%f38, %f32, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f39, %f38, %f32, 0fBE2AAAA8;
	fma.rn.f32 	%f40, %f39, %f37, %f31;
	and.b32  	%r300, %r299, 1;
	setp.eq.b32 	%p4, %r300, 1;
	selp.f32 	%f41, %f36, %f40, %p4;
	selp.f32 	%f42, %f40, %f36, %p4;
	and.b32  	%r301, %r299, 2;
	setp.eq.s32 	%p5, %r301, 0;
	neg.f32 	%f43, %f41;
	selp.f32 	%f44, %f41, %f43, %p5;
	add.s32 	%r302, %r299, 1;
	and.b32  	%r303, %r302, 2;
	mov.f32 	%f200, 0f00000000;
	cvt.rzi.f32.f32 	%f47, %f20;
	setp.eq.f32 	%p7, %f47, %f20;
	mul.f32 	%f48, %f20, 0f00000000;
	shl.b32 	%r8, %r3, 1;
	and.b32  	%r9, %r8, 6;
	or.b32  	%r10, %r9, 1;
	setp.eq.s32 	%p9, %r9, 6;
	mov.f32 	%f192, 0f41C00000;
	mul.lo.s32 	%r3212, %r9, %r5;
	mov.f32 	%f194, %f200;
	mov.f32 	%f195, %f200;
	@%p9 bra 	LBB0_4;
// %bb.3:                               // %L206
	cvt.u16.u32 	%rs2, %r3212;
	and.b16  	%rs3, %rs2, 255;
	mul.lo.s16 	%rs4, %rs3, 171;
	shr.u16 	%rs5, %rs4, 13;
	mul.lo.s16 	%rs6, %rs5, 48;
	sub.s16 	%rs7, %rs2, %rs6;
	and.b16  	%rs8, %rs7, 255;
	cvt.rn.f32.u16 	%f53, %rs8;
	div.approx.f32 	%f55, %f53, %f192;
	add.f32 	%f56, %f55, %f55;
	mov.b32 	%r305, %f56;
	and.b32  	%r306, %r305, -2147483648;
	or.b32  	%r307, %r306, 1056964608;
	mov.b32 	%f57, %r307;
	add.f32 	%f58, %f56, %f57;
	cvt.rzi.f32.f32 	%f59, %f58;
	abs.f32 	%f60, %f56;
	setp.gt.f32 	%p10, %f60, 0f4B000000;
	selp.f32 	%f61, %f56, %f59, %p10;
	cvt.rzi.f32.f32 	%f62, %f56;
	setp.lt.f32 	%p11, %f60, 0f3F000000;
	selp.f32 	%f63, %f62, %f61, %p11;
	cvt.rzi.s32.f32 	%r308, %f63;
	fma.rn.f32 	%f64, %f63, 0fBF000000, %f55;
	mul.f32 	%f65, %f64, 0f34222169;
	fma.rn.f32 	%f66, %f64, 0f40490FDA, %f65;
	mul.f32 	%f67, %f66, %f66;
	fma.rn.f32 	%f68, %f67, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f69, %f68, %f67, 0f3D2AAABB;
	fma.rn.f32 	%f70, %f69, %f67, 0fBEFFFFFF;
	fma.rn.f32 	%f71, %f70, %f67, 0f3F800000;
	fma.rn.f32 	%f72, %f67, %f66, 0f00000000;
	fma.rn.f32 	%f73, %f67, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f74, %f73, %f67, 0fBE2AAAA8;
	fma.rn.f32 	%f75, %f74, %f72, %f66;
	and.b32  	%r309, %r308, 1;
	setp.eq.b32 	%p12, %r309, 1;
	selp.f32 	%f76, %f71, %f75, %p12;
	selp.f32 	%f77, %f75, %f71, %p12;
	and.b32  	%r310, %r308, 2;
	setp.eq.s32 	%p13, %r310, 0;
	neg.f32 	%f78, %f76;
	selp.f32 	%f79, %f76, %f78, %p13;
	add.s32 	%r311, %r308, 1;
	and.b32  	%r312, %r311, 2;
	setp.eq.s32 	%p14, %r312, 0;
	mov.f32 	%f80, 0f00000000;
	sub.f32 	%f81, %f80, %f77;
	selp.f32 	%f82, %f77, %f81, %p14;
	cvt.rzi.f32.f32 	%f83, %f55;
	setp.eq.f32 	%p15, %f83, %f55;
	mul.f32 	%f84, %f55, 0f00000000;
	selp.f32 	%f195, %f84, %f79, %p15;
	abs.f32 	%f85, %f55;
	setp.gt.f32 	%p16, %f85, 0f4B800000;
	add.f32 	%f86, %f195, 0f3F800000;
	selp.f32 	%f194, %f86, %f82, %p16;
LBB0_4:                                 // %L221
	setp.eq.s32 	%p6, %r303, 0;
	sub.f32 	%f45, %f200, %f42;
	selp.f32 	%f49, %f48, %f44, %p7;
	abs.f32 	%f50, %f20;
	setp.gt.u32 	%p17, %r10, 5;
	mul.lo.s32 	%r3213, %r10, %r5;
	mov.f32 	%f196, %f200;
	mov.f32 	%f197, %f200;
	@%p17 bra 	LBB0_6;
// %bb.5:                               // %L225
	cvt.u16.u32 	%rs9, %r3213;
	and.b16  	%rs10, %rs9, 255;
	mul.lo.s16 	%rs11, %rs10, 171;
	shr.u16 	%rs12, %rs11, 13;
	mul.lo.s16 	%rs13, %rs12, 48;
	sub.s16 	%rs14, %rs9, %rs13;
	and.b16  	%rs15, %rs14, 255;
	cvt.rn.f32.u16 	%f88, %rs15;
	div.approx.f32 	%f90, %f88, %f192;
	add.f32 	%f91, %f90, %f90;
	mov.b32 	%r314, %f91;
	and.b32  	%r315, %r314, -2147483648;
	or.b32  	%r316, %r315, 1056964608;
	mov.b32 	%f92, %r316;
	add.f32 	%f93, %f91, %f92;
	cvt.rzi.f32.f32 	%f94, %f93;
	abs.f32 	%f95, %f91;
	setp.gt.f32 	%p18, %f95, 0f4B000000;
	selp.f32 	%f96, %f91, %f94, %p18;
	cvt.rzi.f32.f32 	%f97, %f91;
	setp.lt.f32 	%p19, %f95, 0f3F000000;
	selp.f32 	%f98, %f97, %f96, %p19;
	cvt.rzi.s32.f32 	%r317, %f98;
	fma.rn.f32 	%f99, %f98, 0fBF000000, %f90;
	mul.f32 	%f100, %f99, 0f34222169;
	fma.rn.f32 	%f101, %f99, 0f40490FDA, %f100;
	mul.f32 	%f102, %f101, %f101;
	fma.rn.f32 	%f103, %f102, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f104, %f103, %f102, 0f3D2AAABB;
	fma.rn.f32 	%f105, %f104, %f102, 0fBEFFFFFF;
	fma.rn.f32 	%f106, %f105, %f102, 0f3F800000;
	fma.rn.f32 	%f107, %f102, %f101, 0f00000000;
	fma.rn.f32 	%f108, %f102, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f109, %f108, %f102, 0fBE2AAAA8;
	fma.rn.f32 	%f110, %f109, %f107, %f101;
	and.b32  	%r318, %r317, 1;
	setp.eq.b32 	%p20, %r318, 1;
	selp.f32 	%f111, %f106, %f110, %p20;
	selp.f32 	%f112, %f110, %f106, %p20;
	and.b32  	%r319, %r317, 2;
	setp.eq.s32 	%p21, %r319, 0;
	neg.f32 	%f113, %f111;
	selp.f32 	%f114, %f111, %f113, %p21;
	add.s32 	%r320, %r317, 1;
	and.b32  	%r321, %r320, 2;
	setp.eq.s32 	%p22, %r321, 0;
	mov.f32 	%f115, 0f00000000;
	sub.f32 	%f116, %f115, %f112;
	selp.f32 	%f117, %f112, %f116, %p22;
	cvt.rzi.f32.f32 	%f118, %f90;
	setp.eq.f32 	%p23, %f118, %f90;
	mul.f32 	%f119, %f90, 0f00000000;
	selp.f32 	%f197, %f119, %f114, %p23;
	abs.f32 	%f120, %f90;
	setp.gt.f32 	%p24, %f120, 0f4B800000;
	add.f32 	%f121, %f197, 0f3F800000;
	selp.f32 	%f196, %f121, %f117, %p24;
LBB0_6:                                 // %L240
	selp.f32 	%f46, %f42, %f45, %p6;
	setp.gt.f32 	%p8, %f50, 0f4B800000;
	add.f32 	%f51, %f49, 0f3F800000;
	setp.gt.u32 	%p26, %r3, 23;
	or.pred  	%p27, %p9, %p26;
	mov.f32 	%f193, 0f40400000;
	mov.f32 	%f198, %f200;
	mov.f32 	%f199, %f200;
	@%p27 bra 	LBB0_8;
// %bb.7:                               // %L282
	cvt.u16.u32 	%rs16, %r3212;
	and.b16  	%rs17, %rs16, 255;
	mul.lo.s16 	%rs18, %rs17, 171;
	shr.u16 	%rs19, %rs18, 10;
	mul.lo.s16 	%rs20, %rs19, 6;
	sub.s16 	%rs21, %rs16, %rs20;
	and.b16  	%rs22, %rs21, 255;
	cvt.rn.f32.u16 	%f123, %rs22;
	div.approx.f32 	%f125, %f123, %f193;
	add.f32 	%f126, %f125, %f125;
	mov.b32 	%r329, %f126;
	and.b32  	%r330, %r329, -2147483648;
	or.b32  	%r331, %r330, 1056964608;
	mov.b32 	%f127, %r331;
	add.f32 	%f128, %f126, %f127;
	cvt.rzi.f32.f32 	%f129, %f128;
	abs.f32 	%f130, %f126;
	setp.gt.f32 	%p28, %f130, 0f4B000000;
	selp.f32 	%f131, %f126, %f129, %p28;
	cvt.rzi.f32.f32 	%f132, %f126;
	setp.lt.f32 	%p29, %f130, 0f3F000000;
	selp.f32 	%f133, %f132, %f131, %p29;
	cvt.rzi.s32.f32 	%r332, %f133;
	fma.rn.f32 	%f134, %f133, 0fBF000000, %f125;
	mul.f32 	%f135, %f134, 0f34222169;
	fma.rn.f32 	%f136, %f134, 0f40490FDA, %f135;
	mul.f32 	%f137, %f136, %f136;
	fma.rn.f32 	%f138, %f137, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f139, %f138, %f137, 0f3D2AAABB;
	fma.rn.f32 	%f140, %f139, %f137, 0fBEFFFFFF;
	fma.rn.f32 	%f141, %f140, %f137, 0f3F800000;
	fma.rn.f32 	%f142, %f137, %f136, 0f00000000;
	fma.rn.f32 	%f143, %f137, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f144, %f143, %f137, 0fBE2AAAA8;
	fma.rn.f32 	%f145, %f144, %f142, %f136;
	and.b32  	%r333, %r332, 1;
	setp.eq.b32 	%p30, %r333, 1;
	selp.f32 	%f146, %f141, %f145, %p30;
	selp.f32 	%f147, %f145, %f141, %p30;
	and.b32  	%r334, %r332, 2;
	setp.eq.s32 	%p31, %r334, 0;
	neg.f32 	%f148, %f146;
	selp.f32 	%f149, %f146, %f148, %p31;
	add.s32 	%r335, %r332, 1;
	and.b32  	%r336, %r335, 2;
	setp.eq.s32 	%p32, %r336, 0;
	mov.f32 	%f150, 0f00000000;
	sub.f32 	%f151, %f150, %f147;
	selp.f32 	%f152, %f147, %f151, %p32;
	cvt.rzi.f32.f32 	%f153, %f125;
	setp.eq.f32 	%p33, %f153, %f125;
	mul.f32 	%f154, %f125, 0f00000000;
	selp.f32 	%f199, %f154, %f149, %p33;
	abs.f32 	%f155, %f125;
	setp.gt.f32 	%p34, %f155, 0f4B800000;
	add.f32 	%f156, %f199, 0f3F800000;
	selp.f32 	%f198, %f156, %f152, %p34;
LBB0_8:                                 // %L297
	selp.f32 	%f52, %f51, %f46, %p8;
	or.pred  	%p37, %p17, %p26;
	mov.f32 	%f201, %f200;
	@%p37 bra 	LBB0_10;
// %bb.9:                               // %L305
	cvt.u16.u32 	%rs23, %r3213;
	and.b16  	%rs24, %rs23, 255;
	mul.lo.s16 	%rs25, %rs24, 171;
	shr.u16 	%rs26, %rs25, 10;
	mul.lo.s16 	%rs27, %rs26, 6;
	sub.s16 	%rs28, %rs23, %rs27;
	and.b16  	%rs29, %rs28, 255;
	cvt.rn.f32.u16 	%f158, %rs29;
	div.approx.f32 	%f160, %f158, %f193;
	add.f32 	%f161, %f160, %f160;
	mov.b32 	%r338, %f161;
	and.b32  	%r339, %r338, -2147483648;
	or.b32  	%r340, %r339, 1056964608;
	mov.b32 	%f162, %r340;
	add.f32 	%f163, %f161, %f162;
	cvt.rzi.f32.f32 	%f164, %f163;
	abs.f32 	%f165, %f161;
	setp.gt.f32 	%p38, %f165, 0f4B000000;
	selp.f32 	%f166, %f161, %f164, %p38;
	cvt.rzi.f32.f32 	%f167, %f161;
	setp.lt.f32 	%p39, %f165, 0f3F000000;
	selp.f32 	%f168, %f167, %f166, %p39;
	cvt.rzi.s32.f32 	%r341, %f168;
	fma.rn.f32 	%f169, %f168, 0fBF000000, %f160;
	mul.f32 	%f170, %f169, 0f34222169;
	fma.rn.f32 	%f171, %f169, 0f40490FDA, %f170;
	mul.f32 	%f172, %f171, %f171;
	fma.rn.f32 	%f173, %f172, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f174, %f173, %f172, 0f3D2AAABB;
	fma.rn.f32 	%f175, %f174, %f172, 0fBEFFFFFF;
	fma.rn.f32 	%f176, %f175, %f172, 0f3F800000;
	fma.rn.f32 	%f177, %f172, %f171, 0f00000000;
	fma.rn.f32 	%f178, %f172, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f179, %f178, %f172, 0fBE2AAAA8;
	fma.rn.f32 	%f180, %f179, %f177, %f171;
	and.b32  	%r342, %r341, 1;
	setp.eq.b32 	%p40, %r342, 1;
	selp.f32 	%f181, %f176, %f180, %p40;
	selp.f32 	%f182, %f180, %f176, %p40;
	and.b32  	%r343, %r341, 2;
	setp.eq.s32 	%p41, %r343, 0;
	neg.f32 	%f183, %f181;
	selp.f32 	%f184, %f181, %f183, %p41;
	add.s32 	%r344, %r341, 1;
	and.b32  	%r345, %r344, 2;
	setp.eq.s32 	%p42, %r345, 0;
	mov.f32 	%f185, 0f00000000;
	sub.f32 	%f186, %f185, %f182;
	selp.f32 	%f187, %f182, %f186, %p42;
	cvt.rzi.f32.f32 	%f188, %f160;
	setp.eq.f32 	%p43, %f188, %f160;
	mul.f32 	%f189, %f160, 0f00000000;
	selp.f32 	%f201, %f189, %f184, %p43;
	abs.f32 	%f190, %f160;
	setp.gt.f32 	%p44, %f190, 0f4B800000;
	add.f32 	%f191, %f201, 0f3F800000;
	selp.f32 	%f200, %f191, %f187, %p44;
LBB0_10:                                // %L320
	mov.b32 	%r286, %f52;
	mov.b32 	%r289, %f49;
	mov.b32 	%r347, %f198;
	mov.b32 	%r348, %f200;
	mov.b32 	%r353, %f199;
	mov.b32 	%r354, %f201;
	mov.u32 	%r3217, 999999999;
	cvt.u16.u32 	%rs457, %r3;
	@%p26 bra 	LBB0_12;
// %bb.11:                              // %L363
	ld.param.u64 	%rd1, [_Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_1];
	and.b16  	%rs31, %rs457, 255;
	mul.lo.s16 	%rs32, %rs31, 171;
	shr.u16 	%rs33, %rs32, 12;
	mul.lo.s16 	%rs34, %rs33, 24;
	sub.s16 	%rs35, %rs457, %rs34;
	cvt.u32.u16 	%r359, %rs35;
	and.b32  	%r360, %r359, 255;
	mad.lo.s32 	%r361, %r360, 24, %r2;
	cvt.u16.u32 	%rs36, %r361;
	mul.hi.u16 	%rs37, %rs36, -7281;
	shr.u16 	%rs38, %rs37, 9;
	mul.lo.s16 	%rs39, %rs38, 576;
	sub.s16 	%rs40, %rs36, %rs39;
	cvt.u32.u16 	%r362, %rs40;
	mul.wide.u32 	%rd19, %r362, 4;
	add.s64 	%rd20, %rd1, %rd19;
	ld.global.u32 	%r3217, [%rd20];
LBB0_12:                                // %L440
	xor.b32  	%r285, %r289, -2147483648;
	mov.b32 	%r323, %f194;
	mov.b32 	%r324, %f196;
	mov.b32 	%r326, %f195;
	mov.b32 	%r327, %f197;
	xor.b32  	%r350, %r353, -2147483648;
	xor.b32  	%r351, %r354, -2147483648;
	and.b32  	%r19, %r3, 24;
	setp.ne.s32 	%p46, %r19, 24;
	cvt.u16.u32 	%rs41, %r2;
	and.b16  	%rs42, %rs41, 255;
	mul.lo.s16 	%rs43, %rs42, 171;
	shr.u16 	%rs1, %rs43, 10;
	mul.lo.s16 	%rs44, %rs1, -6;
	add.s16 	%rs45, %rs44, %rs41;
	cvt.u32.u16 	%r363, %rs45;
	and.b32  	%r21, %r363, 255;
	cvt.u16.u32 	%rs46, %r5;
	mul.lo.s16 	%rs47, %rs46, 171;
	shr.u16 	%rs48, %rs47, 10;
	mul.lo.s16 	%rs49, %rs48, 6;
	sub.s16 	%rs50, %rs46, %rs49;
	cvt.u32.u16 	%r364, %rs50;
	and.b32  	%r22, %r364, 255;
	cvt.u64.u32 	%rd329, %r21;
	cvt.u32.u16 	%r3219, %rs1;
	mul.wide.u16 	%r3218, %rs1, 6;
	@%p46 bra 	LBB0_14;
// %bb.13:                              // %L440.L785_crit_edge
	mov.u32 	%r3220, 0;
	mov.u32 	%r3221, %r3220;
	bra.uni 	LBB0_15;
LBB0_14:                                // %L469
	ld.param.u64 	%rd2, [_Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_2];
	mul.lo.s32 	%r365, %r22, 24;
	mul.lo.s32 	%r366, %r4, 144;
	mul.lo.s32 	%r367, %r1, 576;
	or.b32  	%r368, %r366, %r21;
	add.s32 	%r369, %r368, %r365;
	add.s32 	%r370, %r369, %r367;
	add.s32 	%r371, %r370, %r3218;
	mul.wide.u32 	%rd21, %r371, 4;
	add.s64 	%rd22, %rd2, %rd21;
	ld.global.u32 	%r3220, [%rd22];
	cvt.u64.u32 	%rd23, %r3218;
	cvt.u64.u32 	%rd24, %r367;
	cvt.u64.u32 	%rd25, %r365;
	cvt.u64.u32 	%rd26, %r366;
	add.s64 	%rd28, %rd329, %rd26;
	add.s64 	%rd29, %rd28, %rd25;
	add.s64 	%rd30, %rd29, %rd24;
	add.s64 	%rd31, %rd30, %rd23;
	shl.b64 	%rd32, %rd31, 2;
	add.s64 	%rd33, %rd2, %rd32;
	ld.global.u32 	%r3221, [%rd33+193536];
LBB0_15:                                // %L785
	ld.param.u64 	%rd3, [_Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_3];
	ld.param.u64 	%rd4, [_Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_4];
	// begin inline asm
	cvt.rn.f16x2.f32 %r284, %r286, %r285;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r287, %r289, %r286;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r322, %r324, %r323;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r325, %r327, %r326;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r346, %r348, %r347;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r349, %r351, %r350;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r352, %r354, %r353;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r355, %r348, %r347;
	// end inline asm
	mov.u32 	%r3216, 0;
	shl.b32 	%r374, %r1, 7;
	shl.b32 	%r375, %r3, 2;
	and.b32  	%r376, %r375, 60;
	or.b32  	%r377, %r376, %r374;
	shr.u32 	%r33, %r3, 4;
	mul.lo.s32 	%r378, %r33, 10752;
	add.s32 	%r34, %r377, %r378;
	or.b32  	%r379, %r374, %r375;
	or.b32  	%r380, %r379, 64;
	add.s32 	%r35, %r378, %r380;
	and.b32  	%r381, %r8, 30;
	or.b32  	%r382, %r381, %r33;
	mul.lo.s32 	%r36, %r382, 257;
	or.b32  	%r383, %r33, %r8;
	or.b32  	%r384, %r383, 32;
	mul.lo.s32 	%r37, %r384, 257;
	and.b16  	%rs52, %rs457, 255;
	mul.lo.s16 	%rs53, %rs52, 171;
	shr.u16 	%rs54, %rs53, 12;
	mul.lo.s16 	%rs55, %rs54, 24;
	sub.s16 	%rs56, %rs457, %rs55;
	cvt.u32.u16 	%r385, %rs56;
	and.b32  	%r38, %r385, 255;
	shr.u32 	%r386, %r2, 3;
	mul.lo.s32 	%r39, %r386, 257;
	and.b32  	%r40, %r290, 224;
	add.s32 	%r388, %r2, 24;
	shr.u32 	%r389, %r388, 3;
	mul.lo.s32 	%r41, %r389, 257;
	add.s32 	%r390, %r2, 48;
	shr.u32 	%r391, %r390, 3;
	mul.lo.s32 	%r42, %r391, 257;
	add.s32 	%r392, %r2, 72;
	shr.u32 	%r393, %r392, 3;
	mul.lo.s32 	%r43, %r393, 257;
	or.b32  	%r394, %r386, 12;
	mul.lo.s32 	%r44, %r394, 257;
	add.s32 	%r395, %r2, 120;
	shr.u32 	%r396, %r395, 3;
	mul.lo.s32 	%r45, %r396, 257;
	add.s32 	%r397, %r2, 144;
	shr.u32 	%r398, %r397, 3;
	mul.lo.s32 	%r46, %r398, 257;
	add.s32 	%r399, %r2, 168;
	shr.u32 	%r400, %r399, 3;
	mul.lo.s32 	%r47, %r400, 257;
	or.b32  	%r401, %r386, 24;
	mul.lo.s32 	%r48, %r401, 257;
	add.s32 	%r402, %r2, 216;
	shr.u32 	%r403, %r402, 3;
	mul.lo.s32 	%r49, %r403, 257;
	add.s32 	%r404, %r2, 240;
	shr.u32 	%r405, %r404, 3;
	mul.lo.s32 	%r50, %r405, 257;
	add.s32 	%r406, %r2, 264;
	shr.u32 	%r407, %r406, 3;
	mul.lo.s32 	%r51, %r407, 257;
	or.b32  	%r408, %r386, 36;
	mul.lo.s32 	%r52, %r408, 257;
	add.s32 	%r409, %r2, 312;
	shr.u32 	%r410, %r409, 3;
	mul.lo.s32 	%r53, %r410, 257;
	add.s32 	%r411, %r2, 336;
	shr.u32 	%r412, %r411, 3;
	mul.lo.s32 	%r54, %r412, 257;
	add.s32 	%r413, %r2, 360;
	shr.u32 	%r414, %r413, 3;
	mul.lo.s32 	%r55, %r414, 257;
	or.b32  	%r415, %r386, 48;
	mul.lo.s32 	%r56, %r415, 257;
	add.s32 	%r416, %r2, 408;
	shr.u32 	%r417, %r416, 3;
	mul.lo.s32 	%r57, %r417, 257;
	add.s32 	%r418, %r2, 432;
	shr.u32 	%r419, %r418, 3;
	mul.lo.s32 	%r58, %r419, 257;
	add.s32 	%r420, %r2, 456;
	shr.u32 	%r421, %r420, 3;
	mul.lo.s32 	%r59, %r421, 257;
	or.b32  	%r422, %r386, 60;
	mul.lo.s32 	%r60, %r422, 257;
	add.s32 	%r423, %r2, 504;
	bfe.u32 	%r424, %r423, 3, 6;
	mul.lo.s32 	%r61, %r424, 257;
	mul.lo.s32 	%r62, %r21, 33;
	mul.lo.s32 	%r63, %r22, 801;
	mul.lo.s32 	%r64, %r4, 4806;
	mul.lo.s32 	%r65, %r3219, 198;
	bfe.u32 	%r425, %r3, 3, 1;
	mul.lo.s32 	%r426, %r425, 514;
	add.s32 	%r427, %r426, %r21;
	add.s32 	%r428, %r427, %r3218;
	mul.lo.s32 	%r429, %r33, 257;
	add.s32 	%r430, %r428, %r429;
	and.b32  	%r431, %r5, 1;
	mul.lo.s32 	%r432, %r431, 1028;
	add.s32 	%r433, %r430, %r432;
	and.b32  	%r434, %r3, 1;
	mul.lo.s32 	%r435, %r434, 4112;
	add.s32 	%r436, %r433, %r435;
	bfe.u32 	%r437, %r3, 1, 1;
	mul.lo.s32 	%r438, %r437, 2056;
	add.s32 	%r66, %r436, %r438;
	mul.wide.u32 	%rd34, %r66, 4;
	mov.u64 	%rd35, shmem;
	add.s64 	%rd6, %rd35, %rd34;
	cvt.u64.u32 	%rd36, %r438;
	cvt.u64.u32 	%rd37, %r435;
	cvt.u64.u32 	%rd38, %r432;
	cvt.u64.u32 	%rd39, %r429;
	cvt.u64.u32 	%rd40, %r3218;
	cvt.u64.u32 	%rd41, %r426;
	add.s64 	%rd43, %rd329, %rd41;
	add.s64 	%rd44, %rd43, %rd40;
	add.s64 	%rd45, %rd44, %rd39;
	add.s64 	%rd46, %rd45, %rd38;
	add.s64 	%rd47, %rd46, %rd37;
	add.s64 	%rd48, %rd47, %rd36;
	shl.b64 	%rd49, %rd48, 2;
	add.s64 	%rd7, %rd35, %rd49;
	bfe.u32 	%r439, %r2, 3, 1;
	mul.lo.s32 	%r67, %r439, 514;
	add.s32 	%r440, %r67, %r22;
	mul.lo.s32 	%r68, %r4, 6;
	add.s32 	%r441, %r440, %r68;
	shr.u32 	%r442, %r2, 4;
	mul.lo.s32 	%r69, %r442, 257;
	add.s32 	%r443, %r441, %r69;
	bfe.u32 	%r444, %r2, 2, 1;
	mul.lo.s32 	%r70, %r444, 1028;
	add.s32 	%r445, %r443, %r70;
	and.b32  	%r446, %r2, 1;
	mul.lo.s32 	%r71, %r446, 4112;
	add.s32 	%r447, %r445, %r71;
	bfe.u32 	%r448, %r2, 1, 1;
	mul.lo.s32 	%r72, %r448, 2056;
	add.s32 	%r449, %r447, %r72;
	mul.wide.u32 	%rd50, %r449, 4;
	add.s64 	%rd8, %rd35, %rd50;
	cvt.u64.u32 	%rd51, %r72;
	cvt.u64.u32 	%rd52, %r71;
	cvt.u64.u32 	%rd53, %r70;
	cvt.u64.u32 	%rd54, %r69;
	cvt.u64.u32 	%rd55, %r68;
	cvt.u64.u32 	%rd56, %r67;
	cvt.u64.u32 	%rd57, %r22;
	add.s64 	%rd58, %rd57, %rd56;
	add.s64 	%rd59, %rd58, %rd55;
	add.s64 	%rd60, %rd59, %rd54;
	add.s64 	%rd61, %rd60, %rd53;
	add.s64 	%rd62, %rd61, %rd52;
	add.s64 	%rd63, %rd62, %rd51;
	shl.b64 	%rd64, %rd63, 2;
	add.s64 	%rd9, %rd35, %rd64;
	shl.b16 	%rs58, %rs41, 1;
	and.b16  	%rs59, %rs58, 254;
	mul.lo.s16 	%rs60, %rs59, 171;
	shr.u16 	%rs61, %rs60, 13;
	mul.lo.s16 	%rs62, %rs61, 48;
	sub.s16 	%rs63, %rs58, %rs62;
	and.b16  	%rs64, %rs63, 254;
	mul.wide.u16 	%r73, %rs64, 24;
	mul.lo.s32 	%r74, %r1, 1152;
	or.b16  	%rs65, %rs58, 1;
	and.b16  	%rs66, %rs65, 255;
	mul.lo.s16 	%rs67, %rs66, 171;
	shr.u16 	%rs68, %rs67, 13;
	mul.lo.s16 	%rs69, %rs68, 48;
	sub.s16 	%rs70, %rs65, %rs69;
	and.b16  	%rs71, %rs70, 255;
	mul.wide.u16 	%r75, %rs71, 24;
	cvt.u64.u32 	%rd65, %r65;
	cvt.u64.u32 	%rd66, %r64;
	cvt.u64.u32 	%rd67, %r63;
	cvt.u64.u32 	%rd68, %r62;
	add.s64 	%rd69, %rd68, %rd67;
	add.s64 	%rd70, %rd69, %rd66;
	add.s64 	%rd71, %rd70, %rd65;
	shl.b64 	%rd72, %rd71, 2;
	add.s64 	%rd10, %rd35, %rd72;
	setp.gt.u32 	%p47, %r2, 7;
	setp.eq.s32 	%p48, %r33, 1;
	setp.lt.u32 	%p50, %r3, 24;
	mov.u32 	%r3222, %r3216;
	mov.u32 	%r3255, %r3216;
	mov.u32 	%r3256, %r3216;
	mov.u32 	%r3257, %r3216;
	mov.u32 	%r3258, %r3216;
	mov.u32 	%r3259, %r3216;
	mov.u32 	%r3260, %r3216;
	bra.uni 	LBB0_16;
LBB0_39:                                // %guard_pass10729
                                        //   in Loop: Header=BB0_16 Depth=1
	add.s32 	%r282, %r3222, 48;
	setp.ne.s32 	%p75, %r3222, 2016;
	mov.u32 	%r3222, %r282;
	@%p75 bra 	LBB0_16;
	bra.uni 	LBB0_40;
LBB0_16:                                // %L788
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_18 Depth 2
	mul.hi.u32 	%r643, %r3222, -1431655765;
	shr.u32 	%r644, %r643, 5;
	mul.lo.s32 	%r83, %r644, 48;
	add.s32 	%r645, %r2, %r83;
	cvt.u16.u32 	%rs72, %r645;
	mul.hi.s16 	%rs73, %rs72, 16257;
	shr.u16 	%rs74, %rs73, 15;
	shr.s16 	%rs75, %rs73, 9;
	add.s16 	%rs76, %rs75, %rs74;
	mul.lo.s16 	%rs77, %rs76, 2064;
	sub.s16 	%rs78, %rs72, %rs77;
	mul.wide.s16 	%r646, %rs78, 21504;
	add.s32 	%r647, %r34, %r646;
	mul.wide.s32 	%rd73, %r647, 4;
	add.s64 	%rd74, %rd3, %rd73;
	ld.global.v4.u32 	{%r648, %r649, %r650, %r651}, [%rd74];
	add.s32 	%r652, %r35, %r646;
	mul.wide.s32 	%rd75, %r652, 4;
	add.s64 	%rd76, %rd3, %rd75;
	ld.global.v4.u32 	{%r653, %r654, %r655, %r656}, [%rd76];
	add.s16 	%rs79, %rs72, 24;
	mul.hi.s16 	%rs80, %rs79, 16257;
	shr.u16 	%rs81, %rs80, 15;
	shr.s16 	%rs82, %rs80, 9;
	add.s16 	%rs83, %rs82, %rs81;
	mul.lo.s16 	%rs84, %rs83, 2064;
	sub.s16 	%rs85, %rs79, %rs84;
	mul.wide.s16 	%r657, %rs85, 21504;
	add.s32 	%r658, %r34, %r657;
	mul.wide.s32 	%rd77, %r658, 4;
	add.s64 	%rd78, %rd3, %rd77;
	ld.global.v4.u32 	{%r659, %r660, %r661, %r662}, [%rd78];
	add.s32 	%r663, %r35, %r657;
	mul.wide.s32 	%rd79, %r663, 4;
	add.s64 	%rd80, %rd3, %rd79;
	ld.global.v4.u32 	{%r664, %r665, %r666, %r667}, [%rd80];
	selp.b32 	%r668, %r648, %r650, %p48;
	shfl.sync.bfly.b32	%r669, %r668, 16, 31, -1;
	selp.b32 	%r452, %r669, %r648, %p48;
	selp.b32 	%r457, %r650, %r669, %p48;
	selp.b32 	%r670, %r649, %r651, %p48;
	shfl.sync.bfly.b32	%r671, %r670, 16, 31, -1;
	selp.b32 	%r460, %r671, %r649, %p48;
	selp.b32 	%r465, %r651, %r671, %p48;
	selp.b32 	%r672, %r653, %r655, %p48;
	shfl.sync.bfly.b32	%r673, %r672, 16, 31, -1;
	selp.b32 	%r468, %r673, %r653, %p48;
	selp.b32 	%r473, %r655, %r673, %p48;
	selp.b32 	%r674, %r654, %r656, %p48;
	shfl.sync.bfly.b32	%r675, %r674, 16, 31, -1;
	selp.b32 	%r476, %r675, %r654, %p48;
	selp.b32 	%r481, %r656, %r675, %p48;
	selp.b32 	%r676, %r659, %r661, %p48;
	shfl.sync.bfly.b32	%r677, %r676, 16, 31, -1;
	selp.b32 	%r484, %r677, %r659, %p48;
	selp.b32 	%r489, %r661, %r677, %p48;
	selp.b32 	%r678, %r660, %r662, %p48;
	shfl.sync.bfly.b32	%r679, %r678, 16, 31, -1;
	selp.b32 	%r492, %r679, %r660, %p48;
	selp.b32 	%r497, %r662, %r679, %p48;
	selp.b32 	%r680, %r664, %r666, %p48;
	shfl.sync.bfly.b32	%r681, %r680, 16, 31, -1;
	selp.b32 	%r500, %r681, %r664, %p48;
	selp.b32 	%r505, %r666, %r681, %p48;
	selp.b32 	%r682, %r665, %r667, %p48;
	shfl.sync.bfly.b32	%r683, %r682, 16, 31, -1;
	selp.b32 	%r508, %r683, %r665, %p48;
	selp.b32 	%r513, %r667, %r683, %p48;
	shl.b32 	%r453, %r457, 4;
	mov.u32 	%r451, 252645135;
	// begin inline asm
	lop3.b32 %r515, %r451, %r452, %r453, 202;
	// end inline asm
	shr.u32 	%r456, %r452, 4;
	// begin inline asm
	lop3.b32 %r531, %r451, %r456, %r457, 202;
	// end inline asm
	shl.b32 	%r461, %r465, 4;
	// begin inline asm
	lop3.b32 %r523, %r451, %r460, %r461, 202;
	// end inline asm
	shr.u32 	%r464, %r460, 4;
	// begin inline asm
	lop3.b32 %r539, %r451, %r464, %r465, 202;
	// end inline asm
	shl.b32 	%r469, %r473, 4;
	// begin inline asm
	lop3.b32 %r547, %r451, %r468, %r469, 202;
	// end inline asm
	shr.u32 	%r472, %r468, 4;
	// begin inline asm
	lop3.b32 %r563, %r451, %r472, %r473, 202;
	// end inline asm
	shl.b32 	%r477, %r481, 4;
	// begin inline asm
	lop3.b32 %r555, %r451, %r476, %r477, 202;
	// end inline asm
	shr.u32 	%r480, %r476, 4;
	// begin inline asm
	lop3.b32 %r571, %r451, %r480, %r481, 202;
	// end inline asm
	shl.b32 	%r485, %r489, 4;
	// begin inline asm
	lop3.b32 %r516, %r451, %r484, %r485, 202;
	// end inline asm
	shr.u32 	%r488, %r484, 4;
	// begin inline asm
	lop3.b32 %r532, %r451, %r488, %r489, 202;
	// end inline asm
	shl.b32 	%r493, %r497, 4;
	// begin inline asm
	lop3.b32 %r524, %r451, %r492, %r493, 202;
	// end inline asm
	shr.u32 	%r496, %r492, 4;
	// begin inline asm
	lop3.b32 %r540, %r451, %r496, %r497, 202;
	// end inline asm
	shl.b32 	%r501, %r505, 4;
	// begin inline asm
	lop3.b32 %r548, %r451, %r500, %r501, 202;
	// end inline asm
	shr.u32 	%r504, %r500, 4;
	// begin inline asm
	lop3.b32 %r564, %r451, %r504, %r505, 202;
	// end inline asm
	shl.b32 	%r509, %r513, 4;
	// begin inline asm
	lop3.b32 %r556, %r451, %r508, %r509, 202;
	// end inline asm
	shr.u32 	%r512, %r508, 4;
	// begin inline asm
	lop3.b32 %r572, %r451, %r512, %r513, 202;
	// end inline asm
	mov.u32 	%r517, 25152;
	// begin inline asm
	prmt.b32 %r579, %r515, %r516, %r517;
	// end inline asm
	mov.u32 	%r521, 29521;
	// begin inline asm
	prmt.b32 %r611, %r515, %r516, %r521;
	// end inline asm
	// begin inline asm
	prmt.b32 %r587, %r523, %r524, %r517;
	// end inline asm
	// begin inline asm
	prmt.b32 %r619, %r523, %r524, %r521;
	// end inline asm
	// begin inline asm
	prmt.b32 %r580, %r531, %r532, %r517;
	// end inline asm
	// begin inline asm
	prmt.b32 %r612, %r531, %r532, %r521;
	// end inline asm
	// begin inline asm
	prmt.b32 %r588, %r539, %r540, %r517;
	// end inline asm
	// begin inline asm
	prmt.b32 %r620, %r539, %r540, %r521;
	// end inline asm
	// begin inline asm
	prmt.b32 %r595, %r547, %r548, %r517;
	// end inline asm
	// begin inline asm
	prmt.b32 %r627, %r547, %r548, %r521;
	// end inline asm
	// begin inline asm
	prmt.b32 %r603, %r555, %r556, %r517;
	// end inline asm
	// begin inline asm
	prmt.b32 %r635, %r555, %r556, %r521;
	// end inline asm
	// begin inline asm
	prmt.b32 %r596, %r563, %r564, %r517;
	// end inline asm
	// begin inline asm
	prmt.b32 %r628, %r563, %r564, %r521;
	// end inline asm
	// begin inline asm
	prmt.b32 %r604, %r571, %r572, %r517;
	// end inline asm
	// begin inline asm
	prmt.b32 %r636, %r571, %r572, %r521;
	// end inline asm
	mov.u32 	%r637, 21520;
	// begin inline asm
	prmt.b32 %r578, %r579, %r580, %r637;
	// end inline asm
	mov.u32 	%r641, 30258;
	// begin inline asm
	prmt.b32 %r582, %r579, %r580, %r641;
	// end inline asm
	// begin inline asm
	prmt.b32 %r586, %r587, %r588, %r637;
	// end inline asm
	// begin inline asm
	prmt.b32 %r590, %r587, %r588, %r641;
	// end inline asm
	// begin inline asm
	prmt.b32 %r594, %r595, %r596, %r637;
	// end inline asm
	// begin inline asm
	prmt.b32 %r598, %r595, %r596, %r641;
	// end inline asm
	// begin inline asm
	prmt.b32 %r602, %r603, %r604, %r637;
	// end inline asm
	// begin inline asm
	prmt.b32 %r606, %r603, %r604, %r641;
	// end inline asm
	// begin inline asm
	prmt.b32 %r610, %r611, %r612, %r637;
	// end inline asm
	// begin inline asm
	prmt.b32 %r614, %r611, %r612, %r641;
	// end inline asm
	// begin inline asm
	prmt.b32 %r618, %r619, %r620, %r637;
	// end inline asm
	// begin inline asm
	prmt.b32 %r622, %r619, %r620, %r641;
	// end inline asm
	// begin inline asm
	prmt.b32 %r626, %r627, %r628, %r637;
	// end inline asm
	// begin inline asm
	prmt.b32 %r630, %r627, %r628, %r641;
	// end inline asm
	// begin inline asm
	prmt.b32 %r634, %r635, %r636, %r637;
	// end inline asm
	// begin inline asm
	prmt.b32 %r638, %r635, %r636, %r641;
	// end inline asm
	mul.hi.s16 	%rs86, %rs72, 10923;
	shr.u16 	%rs87, %rs86, 15;
	shr.s16 	%rs88, %rs86, 2;
	add.s16 	%rs89, %rs88, %rs87;
	mul.lo.s16 	%rs90, %rs89, 24;
	sub.s16 	%rs91, %rs72, %rs90;
	cvt.s32.s16 	%r684, %rs91;
	add.s32 	%r685, %r36, %r684;
	mul.wide.s32 	%rd81, %r685, 4;
	add.s64 	%rd83, %rd35, %rd81;
	st.shared.u32 	[%rd83], %r578;
	st.shared.u32 	[%rd83+512], %r586;
	st.shared.u32 	[%rd83+256], %r582;
	st.shared.u32 	[%rd83+768], %r590;
	add.s32 	%r686, %r37, %r684;
	mul.wide.s32 	%rd84, %r686, 4;
	add.s64 	%rd85, %rd35, %rd84;
	st.shared.u32 	[%rd85], %r594;
	st.shared.u32 	[%rd85+512], %r602;
	st.shared.u32 	[%rd85+256], %r598;
	st.shared.u32 	[%rd85+768], %r606;
	st.shared.u32 	[%rd83+128], %r610;
	st.shared.u32 	[%rd83+640], %r618;
	st.shared.u32 	[%rd83+384], %r614;
	st.shared.u32 	[%rd83+896], %r622;
	st.shared.u32 	[%rd85+128], %r626;
	st.shared.u32 	[%rd85+640], %r634;
	st.shared.u32 	[%rd85+384], %r630;
	st.shared.u32 	[%rd85+896], %r638;
	bar.sync 	0;
	add.s32 	%r687, %r83, %r38;
	cvt.u16.u32 	%rs92, %r687;
	mul.hi.s16 	%rs93, %rs92, 10923;
	shr.u16 	%rs94, %rs93, 15;
	shr.s16 	%rs95, %rs93, 2;
	add.s16 	%rs96, %rs95, %rs94;
	mul.lo.s16 	%rs97, %rs96, 24;
	sub.s16 	%rs98, %rs92, %rs97;
	cvt.s32.s16 	%r688, %rs98;
	add.s32 	%r689, %r39, %r688;
	add.s32 	%r690, %r689, %r40;
	mul.wide.s32 	%rd86, %r690, 4;
	add.s64 	%rd87, %rd35, %rd86;
	ld.shared.u32 	%r691, [%rd87];
	add.s32 	%r692, %r41, %r688;
	add.s32 	%r693, %r692, %r40;
	mul.wide.u32 	%rd88, %r693, 4;
	add.s64 	%rd89, %rd35, %rd88;
	ld.shared.u32 	%r694, [%rd89];
	add.s32 	%r695, %r42, %r688;
	add.s32 	%r696, %r695, %r40;
	mul.wide.u32 	%rd90, %r696, 4;
	add.s64 	%rd91, %rd35, %rd90;
	ld.shared.u32 	%r697, [%rd91];
	add.s32 	%r698, %r43, %r688;
	add.s32 	%r699, %r698, %r40;
	mul.wide.u32 	%rd92, %r699, 4;
	add.s64 	%rd93, %rd35, %rd92;
	ld.shared.u32 	%r700, [%rd93];
	add.s32 	%r701, %r44, %r688;
	add.s32 	%r702, %r701, %r40;
	mul.wide.s32 	%rd94, %r702, 4;
	add.s64 	%rd95, %rd35, %rd94;
	ld.shared.u32 	%r703, [%rd95];
	add.s32 	%r704, %r45, %r688;
	add.s32 	%r705, %r704, %r40;
	mul.wide.u32 	%rd96, %r705, 4;
	add.s64 	%rd97, %rd35, %rd96;
	ld.shared.u32 	%r706, [%rd97];
	add.s32 	%r707, %r46, %r688;
	add.s32 	%r708, %r707, %r40;
	mul.wide.u32 	%rd98, %r708, 4;
	add.s64 	%rd99, %rd35, %rd98;
	ld.shared.u32 	%r709, [%rd99];
	add.s32 	%r710, %r47, %r688;
	add.s32 	%r711, %r710, %r40;
	mul.wide.u32 	%rd100, %r711, 4;
	add.s64 	%rd101, %rd35, %rd100;
	ld.shared.u32 	%r712, [%rd101];
	add.s32 	%r713, %r48, %r688;
	add.s32 	%r714, %r713, %r40;
	mul.wide.s32 	%rd102, %r714, 4;
	add.s64 	%rd103, %rd35, %rd102;
	ld.shared.u32 	%r715, [%rd103];
	add.s32 	%r716, %r49, %r688;
	add.s32 	%r717, %r716, %r40;
	mul.wide.u32 	%rd104, %r717, 4;
	add.s64 	%rd105, %rd35, %rd104;
	ld.shared.u32 	%r718, [%rd105];
	add.s32 	%r719, %r50, %r688;
	add.s32 	%r720, %r719, %r40;
	mul.wide.u32 	%rd106, %r720, 4;
	add.s64 	%rd107, %rd35, %rd106;
	ld.shared.u32 	%r721, [%rd107];
	add.s32 	%r722, %r51, %r688;
	add.s32 	%r723, %r722, %r40;
	mul.wide.u32 	%rd108, %r723, 4;
	add.s64 	%rd109, %rd35, %rd108;
	ld.shared.u32 	%r724, [%rd109];
	add.s32 	%r725, %r52, %r688;
	add.s32 	%r726, %r725, %r40;
	mul.wide.s32 	%rd110, %r726, 4;
	add.s64 	%rd111, %rd35, %rd110;
	ld.shared.u32 	%r727, [%rd111];
	add.s32 	%r728, %r53, %r688;
	add.s32 	%r729, %r728, %r40;
	mul.wide.u32 	%rd112, %r729, 4;
	add.s64 	%rd113, %rd35, %rd112;
	ld.shared.u32 	%r730, [%rd113];
	add.s32 	%r731, %r54, %r688;
	add.s32 	%r732, %r731, %r40;
	mul.wide.u32 	%rd114, %r732, 4;
	add.s64 	%rd115, %rd35, %rd114;
	ld.shared.u32 	%r733, [%rd115];
	add.s32 	%r734, %r55, %r688;
	add.s32 	%r735, %r734, %r40;
	mul.wide.u32 	%rd116, %r735, 4;
	add.s64 	%rd117, %rd35, %rd116;
	ld.shared.u32 	%r736, [%rd117];
	add.s32 	%r737, %r56, %r688;
	add.s32 	%r738, %r737, %r40;
	mul.wide.s32 	%rd118, %r738, 4;
	add.s64 	%rd119, %rd35, %rd118;
	ld.shared.u32 	%r739, [%rd119];
	add.s32 	%r740, %r57, %r688;
	add.s32 	%r741, %r740, %r40;
	mul.wide.u32 	%rd120, %r741, 4;
	add.s64 	%rd121, %rd35, %rd120;
	ld.shared.u32 	%r742, [%rd121];
	add.s32 	%r743, %r58, %r688;
	add.s32 	%r744, %r743, %r40;
	mul.wide.u32 	%rd122, %r744, 4;
	add.s64 	%rd123, %rd35, %rd122;
	ld.shared.u32 	%r745, [%rd123];
	add.s32 	%r746, %r59, %r688;
	add.s32 	%r747, %r746, %r40;
	mul.wide.u32 	%rd124, %r747, 4;
	add.s64 	%rd125, %rd35, %rd124;
	ld.shared.u32 	%r748, [%rd125];
	add.s32 	%r749, %r60, %r688;
	add.s32 	%r750, %r749, %r40;
	mul.wide.s32 	%rd126, %r750, 4;
	add.s64 	%rd127, %rd35, %rd126;
	ld.shared.u32 	%r751, [%rd127];
	add.s32 	%r752, %r61, %r688;
	add.s32 	%r753, %r752, %r40;
	mul.wide.s32 	%rd128, %r753, 4;
	add.s64 	%rd129, %rd35, %rd128;
	ld.shared.u32 	%r754, [%rd129];
	bar.sync 	0;
	shfl.sync.idx.b32	%r755, %r3217, 0, 31, -1;
	shfl.sync.idx.b32	%r756, %r3217, 1, 31, -1;
	shfl.sync.idx.b32	%r757, %r3217, 2, 31, -1;
	shfl.sync.idx.b32	%r758, %r3217, 3, 31, -1;
	shfl.sync.idx.b32	%r759, %r3217, 4, 31, -1;
	shfl.sync.idx.b32	%r760, %r3217, 5, 31, -1;
	shfl.sync.idx.b32	%r761, %r3217, 6, 31, -1;
	shfl.sync.idx.b32	%r762, %r3217, 7, 31, -1;
	shfl.sync.idx.b32	%r763, %r3217, 8, 31, -1;
	shfl.sync.idx.b32	%r764, %r3217, 9, 31, -1;
	shfl.sync.idx.b32	%r765, %r3217, 10, 31, -1;
	shfl.sync.idx.b32	%r766, %r3217, 11, 31, -1;
	shfl.sync.idx.b32	%r767, %r3217, 12, 31, -1;
	shfl.sync.idx.b32	%r768, %r3217, 13, 31, -1;
	shfl.sync.idx.b32	%r769, %r3217, 14, 31, -1;
	shfl.sync.idx.b32	%r770, %r3217, 15, 31, -1;
	shfl.sync.idx.b32	%r771, %r3217, 16, 31, -1;
	shfl.sync.idx.b32	%r772, %r3217, 17, 31, -1;
	shfl.sync.idx.b32	%r773, %r3217, 18, 31, -1;
	shfl.sync.idx.b32	%r774, %r3217, 19, 31, -1;
	shfl.sync.idx.b32	%r775, %r3217, 20, 31, -1;
	shfl.sync.idx.b32	%r776, %r3217, 21, 31, -1;
	shfl.sync.idx.b32	%r777, %r3217, 22, 31, -1;
	shfl.sync.idx.b32	%r778, %r3217, 23, 31, -1;
	add.s32 	%r779, %r755, %r688;
	mul.wide.s32 	%rd130, %r779, 4;
	add.s64 	%rd131, %rd35, %rd130;
	st.shared.u32 	[%rd131], %r691;
	add.s32 	%r780, %r756, %r688;
	mul.wide.s32 	%rd132, %r780, 4;
	add.s64 	%rd133, %rd35, %rd132;
	st.shared.u32 	[%rd133], %r694;
	add.s32 	%r781, %r757, %r688;
	mul.wide.s32 	%rd134, %r781, 4;
	add.s64 	%rd135, %rd35, %rd134;
	st.shared.u32 	[%rd135], %r697;
	add.s32 	%r782, %r758, %r688;
	mul.wide.s32 	%rd136, %r782, 4;
	add.s64 	%rd137, %rd35, %rd136;
	st.shared.u32 	[%rd137], %r700;
	add.s32 	%r783, %r759, %r688;
	mul.wide.s32 	%rd138, %r783, 4;
	add.s64 	%rd139, %rd35, %rd138;
	st.shared.u32 	[%rd139], %r703;
	add.s32 	%r784, %r760, %r688;
	mul.wide.s32 	%rd140, %r784, 4;
	add.s64 	%rd141, %rd35, %rd140;
	st.shared.u32 	[%rd141], %r706;
	add.s32 	%r785, %r761, %r688;
	mul.wide.s32 	%rd142, %r785, 4;
	add.s64 	%rd143, %rd35, %rd142;
	st.shared.u32 	[%rd143], %r709;
	add.s32 	%r786, %r762, %r688;
	mul.wide.s32 	%rd144, %r786, 4;
	add.s64 	%rd145, %rd35, %rd144;
	st.shared.u32 	[%rd145], %r712;
	add.s32 	%r787, %r763, %r688;
	mul.wide.s32 	%rd146, %r787, 4;
	add.s64 	%rd147, %rd35, %rd146;
	st.shared.u32 	[%rd147], %r715;
	add.s32 	%r788, %r764, %r688;
	mul.wide.s32 	%rd148, %r788, 4;
	add.s64 	%rd149, %rd35, %rd148;
	st.shared.u32 	[%rd149], %r718;
	add.s32 	%r789, %r765, %r688;
	mul.wide.s32 	%rd150, %r789, 4;
	add.s64 	%rd151, %rd35, %rd150;
	st.shared.u32 	[%rd151], %r721;
	add.s32 	%r790, %r766, %r688;
	mul.wide.s32 	%rd152, %r790, 4;
	add.s64 	%rd153, %rd35, %rd152;
	st.shared.u32 	[%rd153], %r724;
	add.s32 	%r791, %r767, %r688;
	mul.wide.s32 	%rd154, %r791, 4;
	add.s64 	%rd155, %rd35, %rd154;
	st.shared.u32 	[%rd155], %r727;
	add.s32 	%r792, %r768, %r688;
	mul.wide.s32 	%rd156, %r792, 4;
	add.s64 	%rd157, %rd35, %rd156;
	st.shared.u32 	[%rd157], %r730;
	add.s32 	%r793, %r769, %r688;
	mul.wide.s32 	%rd158, %r793, 4;
	add.s64 	%rd159, %rd35, %rd158;
	st.shared.u32 	[%rd159], %r733;
	add.s32 	%r794, %r770, %r688;
	mul.wide.s32 	%rd160, %r794, 4;
	add.s64 	%rd161, %rd35, %rd160;
	st.shared.u32 	[%rd161], %r736;
	add.s32 	%r795, %r771, %r688;
	mul.wide.s32 	%rd162, %r795, 4;
	add.s64 	%rd163, %rd35, %rd162;
	st.shared.u32 	[%rd163], %r739;
	add.s32 	%r796, %r772, %r688;
	mul.wide.s32 	%rd164, %r796, 4;
	add.s64 	%rd165, %rd35, %rd164;
	st.shared.u32 	[%rd165], %r742;
	add.s32 	%r797, %r773, %r688;
	mul.wide.s32 	%rd166, %r797, 4;
	add.s64 	%rd167, %rd35, %rd166;
	st.shared.u32 	[%rd167], %r745;
	add.s32 	%r798, %r774, %r688;
	mul.wide.s32 	%rd168, %r798, 4;
	add.s64 	%rd169, %rd35, %rd168;
	st.shared.u32 	[%rd169], %r748;
	add.s32 	%r799, %r775, %r688;
	mul.wide.s32 	%rd170, %r799, 4;
	add.s64 	%rd171, %rd35, %rd170;
	st.shared.u32 	[%rd171], %r751;
	selp.b32 	%r800, 0, %r754, %p47;
	add.s32 	%r801, %r776, %r688;
	mul.wide.s32 	%rd172, %r801, 4;
	add.s64 	%rd173, %rd35, %rd172;
	st.shared.u32 	[%rd173], %r800;
	add.s32 	%r802, %r777, %r688;
	mul.wide.s32 	%rd174, %r802, 4;
	add.s64 	%rd175, %rd35, %rd174;
	st.shared.u32 	[%rd175], %r3216;
	add.s32 	%r803, %r778, %r688;
	mul.wide.s32 	%rd176, %r803, 4;
	add.s64 	%rd177, %rd35, %rd176;
	st.shared.u32 	[%rd177], %r3216;
	bar.sync 	0;
	mov.u32 	%r3229, %r3216;
	mov.u32 	%r3230, %r3216;
	mov.u32 	%r3231, %r3216;
	mov.u32 	%r3232, %r3216;
	mov.u32 	%r3233, %r3216;
	mov.u32 	%r3234, %r3216;
	mov.u32 	%r3235, %r3216;
	mov.u32 	%r3236, %r3216;
	mov.u32 	%r3237, %r3216;
	mov.u32 	%r3238, %r3216;
	mov.u32 	%r3239, %r3216;
	mov.u32 	%r3240, %r3216;
	mov.u32 	%r3241, %r3216;
	mov.u32 	%r3242, %r3216;
	mov.u32 	%r3243, %r3216;
	mov.u32 	%r3244, %r3216;
	mov.u32 	%r3245, %r3216;
	mov.u32 	%r3246, %r3216;
	mov.u32 	%r3247, %r3216;
	mov.u32 	%r3248, %r3216;
	mov.u32 	%r3249, %r3216;
	mov.u32 	%r3250, %r3216;
	mov.u32 	%r3251, %r3216;
	mov.u32 	%r3252, %r3216;
	@%p46 bra 	LBB0_43;
	bra.uni 	LBB0_17;
LBB0_43:                                // %oksrem3295
                                        //   in Loop: Header=BB0_16 Depth=1
	cvt.u16.u32 	%rs99, %r83;
	mul.hi.s16 	%rs100, %rs99, 10923;
	shr.u16 	%rs101, %rs100, 15;
	shr.s16 	%rs102, %rs100, 2;
	add.s16 	%rs103, %rs102, %rs101;
	mul.lo.s16 	%rs104, %rs103, 24;
	sub.s16 	%rs105, %rs99, %rs104;
	cvt.s32.s16 	%r804, %rs105;
	add.s32 	%r805, %r62, %r804;
	add.s32 	%r806, %r805, %r63;
	add.s32 	%r807, %r806, %r64;
	add.s32 	%r808, %r807, %r65;
	mul.wide.s32 	%rd178, %r808, 4;
	add.s64 	%rd180, %rd35, %rd178;
	ld.shared.u32 	%r3229, [%rd180];
	ld.shared.u32 	%r3230, [%rd10+4];
	ld.shared.u32 	%r3231, [%rd10+8];
	ld.shared.u32 	%r3232, [%rd10+12];
	ld.shared.u32 	%r3233, [%rd10+16];
	ld.shared.u32 	%r3234, [%rd10+20];
	ld.shared.u32 	%r3235, [%rd10+24];
	ld.shared.u32 	%r3236, [%rd10+28];
	ld.shared.u32 	%r3237, [%rd10+32];
	ld.shared.u32 	%r3238, [%rd10+36];
	ld.shared.u32 	%r3239, [%rd10+40];
	ld.shared.u32 	%r3240, [%rd10+44];
	ld.shared.u32 	%r3241, [%rd10+48];
	ld.shared.u32 	%r3242, [%rd10+52];
	ld.shared.u32 	%r3243, [%rd10+56];
	ld.shared.u32 	%r3244, [%rd10+60];
	add.s16 	%rs106, %rs99, 16;
	mul.hi.s16 	%rs107, %rs106, 10923;
	shr.u16 	%rs108, %rs107, 15;
	shr.s16 	%rs109, %rs107, 2;
	add.s16 	%rs110, %rs109, %rs108;
	mul.lo.s16 	%rs111, %rs110, 24;
	sub.s16 	%rs112, %rs106, %rs111;
	cvt.s32.s16 	%r809, %rs112;
	add.s32 	%r810, %r62, %r809;
	add.s32 	%r811, %r810, %r63;
	add.s32 	%r812, %r811, %r64;
	add.s32 	%r813, %r812, %r65;
	mul.wide.s32 	%rd181, %r813, 4;
	add.s64 	%rd182, %rd35, %rd181;
	ld.shared.u32 	%r3245, [%rd182];
	add.s16 	%rs113, %rs99, 17;
	mul.hi.s16 	%rs114, %rs113, 10923;
	shr.u16 	%rs115, %rs114, 15;
	shr.s16 	%rs116, %rs114, 2;
	add.s16 	%rs117, %rs116, %rs115;
	mul.lo.s16 	%rs118, %rs117, 24;
	sub.s16 	%rs119, %rs113, %rs118;
	cvt.s32.s16 	%r814, %rs119;
	add.s32 	%r815, %r62, %r814;
	add.s32 	%r816, %r815, %r63;
	add.s32 	%r817, %r816, %r64;
	add.s32 	%r818, %r817, %r65;
	mul.wide.s32 	%rd183, %r818, 4;
	add.s64 	%rd184, %rd35, %rd183;
	ld.shared.u32 	%r3246, [%rd184];
	add.s16 	%rs120, %rs99, 18;
	mul.hi.s16 	%rs121, %rs120, 10923;
	shr.u16 	%rs122, %rs121, 15;
	shr.s16 	%rs123, %rs121, 2;
	add.s16 	%rs124, %rs123, %rs122;
	mul.lo.s16 	%rs125, %rs124, 24;
	sub.s16 	%rs126, %rs120, %rs125;
	cvt.s32.s16 	%r819, %rs126;
	add.s32 	%r820, %r62, %r819;
	add.s32 	%r821, %r820, %r63;
	add.s32 	%r822, %r821, %r64;
	add.s32 	%r823, %r822, %r65;
	mul.wide.s32 	%rd185, %r823, 4;
	add.s64 	%rd186, %rd35, %rd185;
	ld.shared.u32 	%r3247, [%rd186];
	add.s16 	%rs127, %rs99, 19;
	mul.hi.s16 	%rs128, %rs127, 10923;
	shr.u16 	%rs129, %rs128, 15;
	shr.s16 	%rs130, %rs128, 2;
	add.s16 	%rs131, %rs130, %rs129;
	mul.lo.s16 	%rs132, %rs131, 24;
	sub.s16 	%rs133, %rs127, %rs132;
	cvt.s32.s16 	%r824, %rs133;
	add.s32 	%r825, %r62, %r824;
	add.s32 	%r826, %r825, %r63;
	add.s32 	%r827, %r826, %r64;
	add.s32 	%r828, %r827, %r65;
	mul.wide.s32 	%rd187, %r828, 4;
	add.s64 	%rd188, %rd35, %rd187;
	ld.shared.u32 	%r3248, [%rd188];
	add.s16 	%rs134, %rs99, 20;
	mul.hi.s16 	%rs135, %rs134, 10923;
	shr.u16 	%rs136, %rs135, 15;
	shr.s16 	%rs137, %rs135, 2;
	add.s16 	%rs138, %rs137, %rs136;
	mul.lo.s16 	%rs139, %rs138, 24;
	sub.s16 	%rs140, %rs134, %rs139;
	cvt.s32.s16 	%r829, %rs140;
	add.s32 	%r830, %r62, %r829;
	add.s32 	%r831, %r830, %r63;
	add.s32 	%r832, %r831, %r64;
	add.s32 	%r833, %r832, %r65;
	mul.wide.s32 	%rd189, %r833, 4;
	add.s64 	%rd190, %rd35, %rd189;
	ld.shared.u32 	%r3249, [%rd190];
	add.s16 	%rs141, %rs99, 21;
	mul.hi.s16 	%rs142, %rs141, 10923;
	shr.u16 	%rs143, %rs142, 15;
	shr.s16 	%rs144, %rs142, 2;
	add.s16 	%rs145, %rs144, %rs143;
	mul.lo.s16 	%rs146, %rs145, 24;
	sub.s16 	%rs147, %rs141, %rs146;
	cvt.s32.s16 	%r834, %rs147;
	add.s32 	%r835, %r62, %r834;
	add.s32 	%r836, %r835, %r63;
	add.s32 	%r837, %r836, %r64;
	add.s32 	%r838, %r837, %r65;
	mul.wide.s32 	%rd191, %r838, 4;
	add.s64 	%rd192, %rd35, %rd191;
	ld.shared.u32 	%r3250, [%rd192];
	add.s16 	%rs148, %rs99, 22;
	mul.hi.s16 	%rs149, %rs148, 10923;
	shr.u16 	%rs150, %rs149, 15;
	shr.s16 	%rs151, %rs149, 2;
	add.s16 	%rs152, %rs151, %rs150;
	mul.lo.s16 	%rs153, %rs152, 24;
	sub.s16 	%rs154, %rs148, %rs153;
	cvt.s32.s16 	%r839, %rs154;
	add.s32 	%r840, %r62, %r839;
	add.s32 	%r841, %r840, %r63;
	add.s32 	%r842, %r841, %r64;
	add.s32 	%r843, %r842, %r65;
	mul.wide.s32 	%rd193, %r843, 4;
	add.s64 	%rd194, %rd35, %rd193;
	ld.shared.u32 	%r3251, [%rd194];
	add.s16 	%rs155, %rs99, 23;
	mul.hi.s16 	%rs156, %rs155, 10923;
	shr.u16 	%rs157, %rs156, 15;
	shr.s16 	%rs158, %rs156, 2;
	add.s16 	%rs159, %rs158, %rs157;
	mul.lo.s16 	%rs160, %rs159, 24;
	sub.s16 	%rs161, %rs155, %rs160;
	cvt.s32.s16 	%r844, %rs161;
	add.s32 	%r845, %r62, %r844;
	add.s32 	%r846, %r845, %r63;
	add.s32 	%r847, %r846, %r64;
	add.s32 	%r848, %r847, %r65;
	mul.wide.s32 	%rd195, %r848, 4;
	add.s64 	%rd196, %rd35, %rd195;
	ld.shared.u32 	%r3252, [%rd196];
LBB0_17:                                // %L12784
                                        //   in Loop: Header=BB0_16 Depth=1
	bar.sync 	0;
	xor.b32  	%r108, %r3229, -2004318072;
	shr.u32 	%r109, %r108, 8;
	xor.b32  	%r110, %r3230, -2004318072;
	shr.u32 	%r111, %r110, 8;
	xor.b32  	%r112, %r3231, -2004318072;
	shr.u32 	%r113, %r112, 8;
	xor.b32  	%r114, %r3232, -2004318072;
	shr.u32 	%r115, %r114, 8;
	xor.b32  	%r116, %r3233, -2004318072;
	shr.u32 	%r117, %r116, 8;
	xor.b32  	%r118, %r3234, -2004318072;
	shr.u32 	%r119, %r118, 8;
	xor.b32  	%r120, %r3235, -2004318072;
	shr.u32 	%r121, %r120, 8;
	xor.b32  	%r122, %r3236, -2004318072;
	shr.u32 	%r123, %r122, 8;
	xor.b32  	%r124, %r3237, -2004318072;
	shr.u32 	%r125, %r124, 8;
	xor.b32  	%r126, %r3238, -2004318072;
	shr.u32 	%r127, %r126, 8;
	xor.b32  	%r128, %r3239, -2004318072;
	shr.u32 	%r129, %r128, 8;
	xor.b32  	%r130, %r3240, -2004318072;
	shr.u32 	%r131, %r130, 8;
	xor.b32  	%r132, %r3241, -2004318072;
	shr.u32 	%r133, %r132, 8;
	xor.b32  	%r134, %r3242, -2004318072;
	shr.u32 	%r135, %r134, 8;
	xor.b32  	%r136, %r3243, -2004318072;
	shr.u32 	%r137, %r136, 8;
	xor.b32  	%r138, %r3244, -2004318072;
	shr.u32 	%r139, %r138, 8;
	xor.b32  	%r140, %r3245, -2004318072;
	shr.u32 	%r141, %r140, 8;
	xor.b32  	%r142, %r3246, -2004318072;
	shr.u32 	%r143, %r142, 8;
	xor.b32  	%r144, %r3247, -2004318072;
	shr.u32 	%r145, %r144, 8;
	xor.b32  	%r146, %r3248, -2004318072;
	shr.u32 	%r147, %r146, 8;
	xor.b32  	%r148, %r3249, -2004318072;
	shr.u32 	%r149, %r148, 8;
	xor.b32  	%r150, %r3250, -2004318072;
	shr.u32 	%r151, %r150, 8;
	xor.b32  	%r152, %r3251, -2004318072;
	shr.u32 	%r153, %r152, 8;
	xor.b32  	%r154, %r3252, -2004318072;
	shr.u32 	%r155, %r154, 8;
	mov.u32 	%r3253, 24;
	mov.u32 	%r3254, %r3216;
	bra.uni 	LBB0_18;
LBB0_37:                                // %L27540
                                        //   in Loop: Header=BB0_18 Depth=2
	add.s32 	%r3256, %r3256, 1;
	mov.u32 	%r3257, 0;
	mov.u32 	%r3258, %r3257;
	mov.u32 	%r3259, %r3257;
	mov.u32 	%r3260, %r3257;
	mov.u32 	%r3255, %r3257;
LBB0_38:                                // %L27541
                                        //   in Loop: Header=BB0_18 Depth=2
	bar.sync 	0;
	add.s32 	%r3254, %r3254, 1;
	add.s32 	%r3253, %r3253, -4;
	setp.eq.s32 	%p74, %r3253, -24;
	@%p74 bra 	LBB0_39;
LBB0_18:                                // %L12810
                                        //   Parent Loop BB0_16 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u16 	%rs162, 25600;
	// begin inline asm
	mov.b32 %r856, {%rs162, %rs162};
	// end inline asm
	mov.u16 	%rs164, 21504;
	// begin inline asm
	mov.b32 %r867, {%rs164, %rs164};
	// end inline asm
	mov.u32 	%r854, 983055;
	// begin inline asm
	lop3.b32 %r853, %r854, %r108, %r856, 202;
	// end inline asm
	mov.u16 	%rs166, 18432;
	// begin inline asm
	mov.b32 %r857, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r858, %r856, %r857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r861, %r853, %r858;
	// end inline asm
	mov.u32 	%r865, 15728880;
	// begin inline asm
	lop3.b32 %r864, %r865, %r108, %r867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r868, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r869, %r867, %r868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r872, %r864, %r869;
	// end inline asm
	// begin inline asm
	lop3.b32 %r875, %r854, %r109, %r856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r879, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r880, %r856, %r879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r883, %r875, %r880;
	// end inline asm
	// begin inline asm
	lop3.b32 %r886, %r865, %r109, %r867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r890, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r891, %r867, %r890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r894, %r886, %r891;
	// end inline asm
	// begin inline asm
	mov.b32 %r902, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r913, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r899, %r854, %r110, %r902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r903, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r904, %r902, %r903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r907, %r899, %r904;
	// end inline asm
	// begin inline asm
	lop3.b32 %r910, %r865, %r110, %r913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r914, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r915, %r913, %r914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r918, %r910, %r915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r921, %r854, %r111, %r902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r925, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r926, %r902, %r925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r929, %r921, %r926;
	// end inline asm
	// begin inline asm
	lop3.b32 %r932, %r865, %r111, %r913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r936, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r937, %r913, %r936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r940, %r932, %r937;
	// end inline asm
	// begin inline asm
	mov.b32 %r948, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r959, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r945, %r854, %r112, %r948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r949, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r950, %r948, %r949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r953, %r945, %r950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r956, %r865, %r112, %r959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r960, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r961, %r959, %r960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r964, %r956, %r961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r967, %r854, %r113, %r948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r971, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r972, %r948, %r971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r975, %r967, %r972;
	// end inline asm
	// begin inline asm
	lop3.b32 %r978, %r865, %r113, %r959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r982, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r983, %r959, %r982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r986, %r978, %r983;
	// end inline asm
	// begin inline asm
	mov.b32 %r994, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1005, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r991, %r854, %r114, %r994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r995, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r996, %r994, %r995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r999, %r991, %r996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1002, %r865, %r114, %r1005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1006, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1007, %r1005, %r1006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1010, %r1002, %r1007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1013, %r854, %r115, %r994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1017, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1018, %r994, %r1017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1021, %r1013, %r1018;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1024, %r865, %r115, %r1005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1028, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1029, %r1005, %r1028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1032, %r1024, %r1029;
	// end inline asm
	// begin inline asm
	mov.b32 %r1040, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1051, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1037, %r854, %r116, %r1040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1041, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1042, %r1040, %r1041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1045, %r1037, %r1042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1048, %r865, %r116, %r1051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1052, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1053, %r1051, %r1052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1056, %r1048, %r1053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1059, %r854, %r117, %r1040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1063, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1064, %r1040, %r1063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1067, %r1059, %r1064;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1070, %r865, %r117, %r1051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1074, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1075, %r1051, %r1074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1078, %r1070, %r1075;
	// end inline asm
	// begin inline asm
	mov.b32 %r1086, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1097, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1083, %r854, %r118, %r1086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1087, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1088, %r1086, %r1087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1091, %r1083, %r1088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1094, %r865, %r118, %r1097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1098, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1099, %r1097, %r1098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1102, %r1094, %r1099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1105, %r854, %r119, %r1086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1109, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1110, %r1086, %r1109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1113, %r1105, %r1110;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1116, %r865, %r119, %r1097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1120, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1121, %r1097, %r1120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1124, %r1116, %r1121;
	// end inline asm
	// begin inline asm
	mov.b32 %r1132, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1143, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1129, %r854, %r120, %r1132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1133, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1134, %r1132, %r1133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1137, %r1129, %r1134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1140, %r865, %r120, %r1143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1144, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1145, %r1143, %r1144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1148, %r1140, %r1145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1151, %r854, %r121, %r1132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1155, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1156, %r1132, %r1155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1159, %r1151, %r1156;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1162, %r865, %r121, %r1143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1166, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1167, %r1143, %r1166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1170, %r1162, %r1167;
	// end inline asm
	// begin inline asm
	mov.b32 %r1178, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1189, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1175, %r854, %r122, %r1178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1179, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1180, %r1178, %r1179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1183, %r1175, %r1180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1186, %r865, %r122, %r1189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1190, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1191, %r1189, %r1190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1194, %r1186, %r1191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1197, %r854, %r123, %r1178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1201, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1202, %r1178, %r1201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1205, %r1197, %r1202;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1208, %r865, %r123, %r1189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1212, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1213, %r1189, %r1212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1216, %r1208, %r1213;
	// end inline asm
	// begin inline asm
	mov.b32 %r1224, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1235, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1221, %r854, %r124, %r1224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1225, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1226, %r1224, %r1225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1229, %r1221, %r1226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1232, %r865, %r124, %r1235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1236, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1237, %r1235, %r1236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1240, %r1232, %r1237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1243, %r854, %r125, %r1224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1247, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1248, %r1224, %r1247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1251, %r1243, %r1248;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1254, %r865, %r125, %r1235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1258, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1259, %r1235, %r1258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1262, %r1254, %r1259;
	// end inline asm
	// begin inline asm
	mov.b32 %r1270, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1281, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1267, %r854, %r126, %r1270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1271, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1272, %r1270, %r1271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1275, %r1267, %r1272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1278, %r865, %r126, %r1281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1282, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1283, %r1281, %r1282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1286, %r1278, %r1283;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1289, %r854, %r127, %r1270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1293, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1294, %r1270, %r1293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1297, %r1289, %r1294;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1300, %r865, %r127, %r1281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1304, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1305, %r1281, %r1304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1308, %r1300, %r1305;
	// end inline asm
	// begin inline asm
	mov.b32 %r1316, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1327, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1313, %r854, %r128, %r1316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1317, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1318, %r1316, %r1317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1321, %r1313, %r1318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1324, %r865, %r128, %r1327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1328, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1329, %r1327, %r1328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1332, %r1324, %r1329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1335, %r854, %r129, %r1316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1339, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1340, %r1316, %r1339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1343, %r1335, %r1340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1346, %r865, %r129, %r1327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1350, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1351, %r1327, %r1350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1354, %r1346, %r1351;
	// end inline asm
	// begin inline asm
	mov.b32 %r1362, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1373, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1359, %r854, %r130, %r1362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1363, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1364, %r1362, %r1363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1367, %r1359, %r1364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1370, %r865, %r130, %r1373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1374, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1375, %r1373, %r1374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1378, %r1370, %r1375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1381, %r854, %r131, %r1362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1385, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1386, %r1362, %r1385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1389, %r1381, %r1386;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1392, %r865, %r131, %r1373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1396, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1397, %r1373, %r1396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1400, %r1392, %r1397;
	// end inline asm
	// begin inline asm
	mov.b32 %r1408, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1419, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1405, %r854, %r132, %r1408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1409, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1410, %r1408, %r1409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1413, %r1405, %r1410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1416, %r865, %r132, %r1419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1420, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1421, %r1419, %r1420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1424, %r1416, %r1421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1427, %r854, %r133, %r1408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1431, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1432, %r1408, %r1431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1435, %r1427, %r1432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1438, %r865, %r133, %r1419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1442, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1443, %r1419, %r1442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1446, %r1438, %r1443;
	// end inline asm
	// begin inline asm
	mov.b32 %r1454, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1465, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1451, %r854, %r134, %r1454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1455, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1456, %r1454, %r1455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1459, %r1451, %r1456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1462, %r865, %r134, %r1465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1466, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1467, %r1465, %r1466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1470, %r1462, %r1467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1473, %r854, %r135, %r1454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1477, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1478, %r1454, %r1477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1481, %r1473, %r1478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1484, %r865, %r135, %r1465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1488, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1489, %r1465, %r1488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1492, %r1484, %r1489;
	// end inline asm
	// begin inline asm
	mov.b32 %r1500, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1511, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1497, %r854, %r136, %r1500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1501, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1502, %r1500, %r1501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1505, %r1497, %r1502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1508, %r865, %r136, %r1511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1512, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1513, %r1511, %r1512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1516, %r1508, %r1513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1519, %r854, %r137, %r1500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1523, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1524, %r1500, %r1523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1527, %r1519, %r1524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1530, %r865, %r137, %r1511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1534, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1535, %r1511, %r1534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1538, %r1530, %r1535;
	// end inline asm
	// begin inline asm
	mov.b32 %r1546, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1557, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1543, %r854, %r138, %r1546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1547, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1548, %r1546, %r1547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1551, %r1543, %r1548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1554, %r865, %r138, %r1557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1558, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1559, %r1557, %r1558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1562, %r1554, %r1559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1565, %r854, %r139, %r1546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1569, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1570, %r1546, %r1569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1573, %r1565, %r1570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1576, %r865, %r139, %r1557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1580, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1581, %r1557, %r1580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1584, %r1576, %r1581;
	// end inline asm
	// begin inline asm
	mov.b32 %r1592, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1603, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1589, %r854, %r140, %r1592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1593, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1594, %r1592, %r1593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1597, %r1589, %r1594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1600, %r865, %r140, %r1603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1604, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1605, %r1603, %r1604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1608, %r1600, %r1605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1611, %r854, %r141, %r1592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1615, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1616, %r1592, %r1615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1619, %r1611, %r1616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1622, %r865, %r141, %r1603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1626, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1627, %r1603, %r1626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1630, %r1622, %r1627;
	// end inline asm
	// begin inline asm
	mov.b32 %r1638, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1649, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1635, %r854, %r142, %r1638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1639, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1640, %r1638, %r1639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1643, %r1635, %r1640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1646, %r865, %r142, %r1649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1650, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1651, %r1649, %r1650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1654, %r1646, %r1651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1657, %r854, %r143, %r1638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1661, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1662, %r1638, %r1661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1665, %r1657, %r1662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1668, %r865, %r143, %r1649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1672, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1673, %r1649, %r1672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1676, %r1668, %r1673;
	// end inline asm
	// begin inline asm
	mov.b32 %r1684, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1695, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1681, %r854, %r144, %r1684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1685, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1686, %r1684, %r1685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1689, %r1681, %r1686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1692, %r865, %r144, %r1695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1696, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1697, %r1695, %r1696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1700, %r1692, %r1697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1703, %r854, %r145, %r1684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1707, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1708, %r1684, %r1707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1711, %r1703, %r1708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1714, %r865, %r145, %r1695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1718, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1719, %r1695, %r1718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1722, %r1714, %r1719;
	// end inline asm
	// begin inline asm
	mov.b32 %r1730, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1741, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1727, %r854, %r146, %r1730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1731, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1732, %r1730, %r1731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1735, %r1727, %r1732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1738, %r865, %r146, %r1741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1742, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1743, %r1741, %r1742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1746, %r1738, %r1743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1749, %r854, %r147, %r1730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1753, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1754, %r1730, %r1753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1757, %r1749, %r1754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1760, %r865, %r147, %r1741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1764, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1765, %r1741, %r1764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1768, %r1760, %r1765;
	// end inline asm
	// begin inline asm
	mov.b32 %r1776, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1787, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1773, %r854, %r148, %r1776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1777, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1778, %r1776, %r1777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1781, %r1773, %r1778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1784, %r865, %r148, %r1787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1788, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1789, %r1787, %r1788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1792, %r1784, %r1789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1795, %r854, %r149, %r1776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1799, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1800, %r1776, %r1799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1803, %r1795, %r1800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1806, %r865, %r149, %r1787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1810, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1811, %r1787, %r1810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1814, %r1806, %r1811;
	// end inline asm
	// begin inline asm
	mov.b32 %r1822, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1833, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1819, %r854, %r150, %r1822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1823, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1824, %r1822, %r1823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1827, %r1819, %r1824;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1830, %r865, %r150, %r1833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1834, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1835, %r1833, %r1834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1838, %r1830, %r1835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1841, %r854, %r151, %r1822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1845, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1846, %r1822, %r1845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1849, %r1841, %r1846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1852, %r865, %r151, %r1833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1856, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1857, %r1833, %r1856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1860, %r1852, %r1857;
	// end inline asm
	// begin inline asm
	mov.b32 %r1868, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1879, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1865, %r854, %r152, %r1868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1869, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1870, %r1868, %r1869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1873, %r1865, %r1870;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1876, %r865, %r152, %r1879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1880, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1881, %r1879, %r1880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1884, %r1876, %r1881;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1887, %r854, %r153, %r1868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1891, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1892, %r1868, %r1891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1895, %r1887, %r1892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1898, %r865, %r153, %r1879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1902, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1903, %r1879, %r1902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1906, %r1898, %r1903;
	// end inline asm
	// begin inline asm
	mov.b32 %r1914, {%rs162, %rs162};
	// end inline asm
	// begin inline asm
	mov.b32 %r1925, {%rs164, %rs164};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1911, %r854, %r154, %r1914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1915, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1916, %r1914, %r1915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1919, %r1911, %r1916;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1922, %r865, %r154, %r1925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1926, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1927, %r1925, %r1926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1930, %r1922, %r1927;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1933, %r854, %r155, %r1914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1937, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1938, %r1914, %r1937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1941, %r1933, %r1938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1944, %r865, %r155, %r1925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1948, {%rs166, %rs166};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1949, %r1925, %r1948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1952, %r1944, %r1949;
	// end inline asm
	setp.eq.s32 	%p51, %r3253, 24;
	selp.b32 	%r2308, %r861, 0, %p51;
	setp.eq.s32 	%p52, %r3253, 20;
	selp.b32 	%r2309, %r1045, %r2308, %p52;
	setp.eq.s32 	%p53, %r3253, 16;
	selp.b32 	%r2310, %r1229, %r2309, %p53;
	setp.eq.s32 	%p54, %r3253, 12;
	selp.b32 	%r2311, %r1413, %r2310, %p54;
	setp.eq.s32 	%p55, %r3253, 8;
	selp.b32 	%r2312, %r1597, %r2311, %p55;
	setp.eq.s32 	%p56, %r3253, 4;
	selp.b32 	%r2313, %r1781, %r2312, %p56;
	setp.eq.s32 	%p57, %r3253, 0;
	selp.b32 	%r2314, %r883, %r2313, %p57;
	setp.eq.s32 	%p58, %r3253, -4;
	selp.b32 	%r2315, %r1067, %r2314, %p58;
	setp.eq.s32 	%p59, %r3253, -8;
	selp.b32 	%r2316, %r1251, %r2315, %p59;
	setp.eq.s32 	%p60, %r3253, -12;
	selp.b32 	%r2317, %r1435, %r2316, %p60;
	setp.eq.s32 	%p61, %r3253, -16;
	selp.b32 	%r2318, %r1619, %r2317, %p61;
	setp.eq.s32 	%p62, %r3253, -20;
	selp.b32 	%r1957, %r1803, %r2318, %p62;
	selp.b32 	%r2319, %r872, 0, %p51;
	selp.b32 	%r2320, %r1056, %r2319, %p52;
	selp.b32 	%r2321, %r1240, %r2320, %p53;
	selp.b32 	%r2322, %r1424, %r2321, %p54;
	selp.b32 	%r2323, %r1608, %r2322, %p55;
	selp.b32 	%r2324, %r1792, %r2323, %p56;
	selp.b32 	%r2325, %r894, %r2324, %p57;
	selp.b32 	%r2326, %r1078, %r2325, %p58;
	selp.b32 	%r2327, %r1262, %r2326, %p59;
	selp.b32 	%r2328, %r1446, %r2327, %p60;
	selp.b32 	%r2329, %r1630, %r2328, %p61;
	selp.b32 	%r1960, %r1814, %r2329, %p62;
	selp.b32 	%r2330, %r907, 0, %p51;
	selp.b32 	%r2331, %r1091, %r2330, %p52;
	selp.b32 	%r2332, %r1275, %r2331, %p53;
	selp.b32 	%r2333, %r1459, %r2332, %p54;
	selp.b32 	%r2334, %r1643, %r2333, %p55;
	selp.b32 	%r2335, %r1827, %r2334, %p56;
	selp.b32 	%r2336, %r929, %r2335, %p57;
	selp.b32 	%r2337, %r1113, %r2336, %p58;
	selp.b32 	%r2338, %r1297, %r2337, %p59;
	selp.b32 	%r2339, %r1481, %r2338, %p60;
	selp.b32 	%r2340, %r1665, %r2339, %p61;
	selp.b32 	%r1963, %r1849, %r2340, %p62;
	selp.b32 	%r2341, %r918, 0, %p51;
	selp.b32 	%r2342, %r1102, %r2341, %p52;
	selp.b32 	%r2343, %r1286, %r2342, %p53;
	selp.b32 	%r2344, %r1470, %r2343, %p54;
	selp.b32 	%r2345, %r1654, %r2344, %p55;
	selp.b32 	%r2346, %r1838, %r2345, %p56;
	selp.b32 	%r2347, %r940, %r2346, %p57;
	selp.b32 	%r2348, %r1124, %r2347, %p58;
	selp.b32 	%r2349, %r1308, %r2348, %p59;
	selp.b32 	%r2350, %r1492, %r2349, %p60;
	selp.b32 	%r2351, %r1676, %r2350, %p61;
	selp.b32 	%r1966, %r1860, %r2351, %p62;
	selp.b32 	%r2352, %r953, 0, %p51;
	selp.b32 	%r2353, %r1137, %r2352, %p52;
	selp.b32 	%r2354, %r1321, %r2353, %p53;
	selp.b32 	%r2355, %r1505, %r2354, %p54;
	selp.b32 	%r2356, %r1689, %r2355, %p55;
	selp.b32 	%r2357, %r1873, %r2356, %p56;
	selp.b32 	%r2358, %r975, %r2357, %p57;
	selp.b32 	%r2359, %r1159, %r2358, %p58;
	selp.b32 	%r2360, %r1343, %r2359, %p59;
	selp.b32 	%r2361, %r1527, %r2360, %p60;
	selp.b32 	%r2362, %r1711, %r2361, %p61;
	selp.b32 	%r1969, %r1895, %r2362, %p62;
	selp.b32 	%r2363, %r964, 0, %p51;
	selp.b32 	%r2364, %r1148, %r2363, %p52;
	selp.b32 	%r2365, %r1332, %r2364, %p53;
	selp.b32 	%r2366, %r1516, %r2365, %p54;
	selp.b32 	%r2367, %r1700, %r2366, %p55;
	selp.b32 	%r2368, %r1884, %r2367, %p56;
	selp.b32 	%r2369, %r986, %r2368, %p57;
	selp.b32 	%r2370, %r1170, %r2369, %p58;
	selp.b32 	%r2371, %r1354, %r2370, %p59;
	selp.b32 	%r2372, %r1538, %r2371, %p60;
	selp.b32 	%r2373, %r1722, %r2372, %p61;
	selp.b32 	%r1972, %r1906, %r2373, %p62;
	selp.b32 	%r2374, %r999, 0, %p51;
	selp.b32 	%r2375, %r1183, %r2374, %p52;
	selp.b32 	%r2376, %r1367, %r2375, %p53;
	selp.b32 	%r2377, %r1551, %r2376, %p54;
	selp.b32 	%r2378, %r1735, %r2377, %p55;
	selp.b32 	%r2379, %r1919, %r2378, %p56;
	selp.b32 	%r2380, %r1021, %r2379, %p57;
	selp.b32 	%r2381, %r1205, %r2380, %p58;
	selp.b32 	%r2382, %r1389, %r2381, %p59;
	selp.b32 	%r2383, %r1573, %r2382, %p60;
	selp.b32 	%r2384, %r1757, %r2383, %p61;
	selp.b32 	%r1975, %r1941, %r2384, %p62;
	selp.b32 	%r2385, %r1010, 0, %p51;
	selp.b32 	%r2386, %r1194, %r2385, %p52;
	selp.b32 	%r2387, %r1378, %r2386, %p53;
	selp.b32 	%r2388, %r1562, %r2387, %p54;
	selp.b32 	%r2389, %r1746, %r2388, %p55;
	selp.b32 	%r2390, %r1930, %r2389, %p56;
	selp.b32 	%r2391, %r1032, %r2390, %p57;
	selp.b32 	%r2392, %r1216, %r2391, %p58;
	selp.b32 	%r2393, %r1400, %r2392, %p59;
	selp.b32 	%r2394, %r1584, %r2393, %p60;
	selp.b32 	%r2395, %r1768, %r2394, %p61;
	selp.b32 	%r1978, %r1952, %r2395, %p62;
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3220;
    mov.b32 {%r2im, %r2re}, %r1957;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1955, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3221;
    mov.b32 {%r2im, %r2re}, %r1960;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1958, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3220;
    mov.b32 {%r2im, %r2re}, %r1963;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1961, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3221;
    mov.b32 {%r2im, %r2re}, %r1966;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1964, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3220;
    mov.b32 {%r2im, %r2re}, %r1969;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1967, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3221;
    mov.b32 {%r2im, %r2re}, %r1972;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1970, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3220;
    mov.b32 {%r2im, %r2re}, %r1975;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1973, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3221;
    mov.b32 {%r2im, %r2re}, %r1978;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1976, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2039, %r2042}, {%r287, %r284}, {%r1955}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2048, %r2051}, {%r287, %r284}, {%r1958}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2057, %r2060}, {%r287, %r284}, {%r1961}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2066, %r2069}, {%r287, %r284}, {%r1964}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2075, %r2078}, {%r287, %r284}, {%r1967}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2084, %r2087}, {%r287, %r284}, {%r1970}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2093, %r2096}, {%r287, %r284}, {%r1973}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2102, %r2105}, {%r287, %r284}, {%r1976}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2035, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2037, %r2035, %r2039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2040, %r322, %r2042, %r2037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2044, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2046, %r2044, %r2048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2049, %r322, %r2051, %r2046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2053, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2055, %r2053, %r2057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2058, %r322, %r2060, %r2055;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2062, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2064, %r2062, %r2066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2067, %r322, %r2069, %r2064;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2071, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2073, %r2071, %r2075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2076, %r322, %r2078, %r2073;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2080, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2082, %r2080, %r2084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2085, %r322, %r2087, %r2082;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2089, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2091, %r2089, %r2093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2094, %r322, %r2096, %r2091;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2098, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2100, %r2098, %r2102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2103, %r322, %r2105, %r2100;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2107, %r325, %r2042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2110, %r322, %r2039, %r2107;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2114, %r325, %r2051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2117, %r322, %r2048, %r2114;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2121, %r325, %r2060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2124, %r322, %r2057, %r2121;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2128, %r325, %r2069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2131, %r322, %r2066, %r2128;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2135, %r325, %r2078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2138, %r322, %r2075, %r2135;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2142, %r325, %r2087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2145, %r322, %r2084, %r2142;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2149, %r325, %r2096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2152, %r322, %r2093, %r2149;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2156, %r325, %r2105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2159, %r322, %r2102, %r2156;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2244, %r2245}, {%r355, %r349, %r352, %r346}, {%r2110, %r2040}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2252, %r2253}, {%r355, %r349, %r352, %r346}, {%r2117, %r2049}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2260, %r2261}, {%r355, %r349, %r352, %r346}, {%r2124, %r2058}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2268, %r2269}, {%r355, %r349, %r352, %r346}, {%r2131, %r2067}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2276, %r2277}, {%r355, %r349, %r352, %r346}, {%r2138, %r2076}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2284, %r2285}, {%r355, %r349, %r352, %r346}, {%r2145, %r2085}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2292, %r2293}, {%r355, %r349, %r352, %r346}, {%r2152, %r2094}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2300, %r2301}, {%r355, %r349, %r352, %r346}, {%r2159, %r2103}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	prmt.b32 %r2243, %r2244, %r2245, %r637;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2247, %r2244, %r2245, %r641;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2251, %r2252, %r2253, %r637;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2255, %r2252, %r2253, %r641;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2259, %r2260, %r2261, %r637;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2263, %r2260, %r2261, %r641;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2267, %r2268, %r2269, %r637;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2271, %r2268, %r2269, %r641;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2275, %r2276, %r2277, %r637;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2279, %r2276, %r2277, %r641;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2283, %r2284, %r2285, %r637;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2287, %r2284, %r2285, %r641;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2291, %r2292, %r2293, %r637;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2295, %r2292, %r2293, %r641;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2299, %r2300, %r2301, %r637;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2303, %r2300, %r2301, %r641;
	// end inline asm
	st.shared.u32 	[%rd6], %r2243;
	st.shared.u32 	[%rd7+33024], %r2247;
	st.shared.u32 	[%rd7+128], %r2251;
	st.shared.u32 	[%rd7+33152], %r2255;
	cvt.u16.u32 	%rs450, %r3254;
	and.b16  	%rs451, %rs450, 255;
	mul.lo.s16 	%rs452, %rs451, 171;
	shr.u16 	%rs453, %rs452, 11;
	mul.lo.s16 	%rs454, %rs453, 12;
	sub.s16 	%rs455, %rs450, %rs454;
	shl.b16 	%rs456, %rs455, 2;
	cvt.u32.u16 	%r2396, %rs456;
	and.b32  	%r2397, %r2396, 252;
	add.s32 	%r2398, %r83, %r2397;
	add.s32 	%r2399, %r2398, 1;
	shr.s32 	%r2400, %r2399, 31;
	shr.u32 	%r2401, %r2400, 30;
	add.s32 	%r2402, %r2399, %r2401;
	and.b32  	%r2403, %r2402, 67108860;
	sub.s32 	%r2404, %r2399, %r2403;
	shl.b32 	%r164, %r2404, 6;
	add.s32 	%r2405, %r66, %r164;
	mul.wide.s32 	%rd197, %r2405, 4;
	add.s64 	%rd199, %rd35, %rd197;
	st.shared.u32 	[%rd199], %r2259;
	add.s32 	%r165, %r164, 8256;
	add.s32 	%r2406, %r66, %r165;
	mul.wide.u32 	%rd200, %r2406, 4;
	add.s64 	%rd201, %rd35, %rd200;
	st.shared.u32 	[%rd201], %r2263;
	or.b32  	%r166, %r164, 32;
	add.s32 	%r2407, %r66, %r166;
	mul.wide.s32 	%rd202, %r2407, 4;
	add.s64 	%rd203, %rd35, %rd202;
	st.shared.u32 	[%rd203], %r2267;
	add.s32 	%r167, %r164, 8288;
	add.s32 	%r2408, %r66, %r167;
	mul.wide.u32 	%rd204, %r2408, 4;
	add.s64 	%rd205, %rd35, %rd204;
	st.shared.u32 	[%rd205], %r2271;
	add.s32 	%r2409, %r2398, 2;
	shr.s32 	%r2410, %r2409, 31;
	shr.u32 	%r2411, %r2410, 30;
	add.s32 	%r2412, %r2409, %r2411;
	and.b32  	%r2413, %r2412, 67108860;
	sub.s32 	%r2414, %r2409, %r2413;
	shl.b32 	%r168, %r2414, 6;
	add.s32 	%r2415, %r66, %r168;
	mul.wide.s32 	%rd206, %r2415, 4;
	add.s64 	%rd207, %rd35, %rd206;
	st.shared.u32 	[%rd207], %r2275;
	add.s32 	%r169, %r168, 8256;
	add.s32 	%r2416, %r66, %r169;
	mul.wide.u32 	%rd208, %r2416, 4;
	add.s64 	%rd209, %rd35, %rd208;
	st.shared.u32 	[%rd209], %r2279;
	or.b32  	%r170, %r168, 32;
	add.s32 	%r2417, %r66, %r170;
	mul.wide.s32 	%rd210, %r2417, 4;
	add.s64 	%rd211, %rd35, %rd210;
	st.shared.u32 	[%rd211], %r2283;
	add.s32 	%r171, %r168, 8288;
	add.s32 	%r2418, %r66, %r171;
	mul.wide.u32 	%rd212, %r2418, 4;
	add.s64 	%rd213, %rd35, %rd212;
	st.shared.u32 	[%rd213], %r2287;
	add.s32 	%r2419, %r2398, 3;
	shr.s32 	%r2420, %r2419, 31;
	shr.u32 	%r2421, %r2420, 30;
	add.s32 	%r2422, %r2419, %r2421;
	and.b32  	%r2423, %r2422, 67108860;
	sub.s32 	%r2424, %r2419, %r2423;
	shl.b32 	%r172, %r2424, 6;
	add.s32 	%r2425, %r66, %r172;
	mul.wide.s32 	%rd214, %r2425, 4;
	add.s64 	%rd215, %rd35, %rd214;
	st.shared.u32 	[%rd215], %r2291;
	add.s32 	%r173, %r172, 8256;
	add.s32 	%r2426, %r66, %r173;
	mul.wide.u32 	%rd216, %r2426, 4;
	add.s64 	%rd217, %rd35, %rd216;
	st.shared.u32 	[%rd217], %r2295;
	or.b32  	%r174, %r172, 32;
	add.s32 	%r2427, %r66, %r174;
	mul.wide.s32 	%rd218, %r2427, 4;
	add.s64 	%rd219, %rd35, %rd218;
	st.shared.u32 	[%rd219], %r2299;
	add.s32 	%r175, %r172, 8288;
	add.s32 	%r2428, %r66, %r175;
	mul.wide.u32 	%rd220, %r2428, 4;
	add.s64 	%rd221, %rd35, %rd220;
	st.shared.u32 	[%rd221], %r2303;
	bar.sync 	0;
	mov.u32 	%r3261, %r3216;
	mov.u32 	%r3262, %r3216;
	mov.u32 	%r3263, %r3216;
	mov.u32 	%r3264, %r3216;
	@%p50 bra 	LBB0_44;
	bra.uni 	LBB0_19;
LBB0_44:                                // %oksrem7188
                                        //   in Loop: Header=BB0_18 Depth=2
	ld.shared.u32 	%r3261, [%rd8];
	ld.shared.u32 	%r3262, [%rd9+33024];
	ld.shared.u32 	%r3263, [%rd9+128];
	ld.shared.u32 	%r3264, [%rd9+33152];
LBB0_19:                                // %L20884
                                        //   in Loop: Header=BB0_18 Depth=2
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2461, %r2464}, {%r287, %r284}, {%r3261}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2470, %r2473}, {%r287, %r284}, {%r3262}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2479, %r2482}, {%r287, %r284}, {%r3263}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2488, %r2491}, {%r287, %r284}, {%r3264}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2457, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2459, %r2457, %r2461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2462, %r322, %r2464, %r2459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2466, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2468, %r2466, %r2470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2471, %r322, %r2473, %r2468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2475, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2477, %r2475, %r2479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2480, %r322, %r2482, %r2477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2484, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2486, %r2484, %r2488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2489, %r322, %r2491, %r2486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2493, %r325, %r2464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2496, %r322, %r2461, %r2493;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2500, %r325, %r2473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2503, %r322, %r2470, %r2500;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2507, %r325, %r2482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2510, %r322, %r2479, %r2507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2514, %r325, %r2491;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2517, %r322, %r2488, %r2514;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2562, %r2566}, {%r355, %r349, %r352, %r346}, {%r2496, %r2462}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2570, %r2574}, {%r355, %r349, %r352, %r346}, {%r2503, %r2471}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2578, %r2582}, {%r355, %r349, %r352, %r346}, {%r2510, %r2480}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2586, %r2590}, {%r355, %r349, %r352, %r346}, {%r2517, %r2489}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2561, %r2562, %r2562, %r3260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3270, %r2566, %r2566, %r2561;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2569, %r2570, %r2570, %r3259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3269, %r2574, %r2574, %r2569;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2577, %r2578, %r2578, %r3258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3268, %r2582, %r2582, %r2577;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2585, %r2586, %r2586, %r3257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3267, %r2590, %r2590, %r2585;
	// end inline asm
	add.s32 	%r3265, %r3255, 1;
	setp.ne.s32 	%p63, %r3265, 40;
	@%p63 bra 	LBB0_23;
// %bb.20:                              // %L21067
                                        //   in Loop: Header=BB0_18 Depth=2
	@%p26 bra 	LBB0_22;
// %bb.21:                              // %L21132
                                        //   in Loop: Header=BB0_18 Depth=2
	mul.lo.s32 	%r2593, %r3256, 193536;
	or.b32  	%r2594, %r2593, %r38;
	add.s32 	%r2595, %r2594, %r73;
	add.s32 	%r2596, %r2595, %r74;
	mul.wide.u32 	%rd222, %r2596, 4;
	add.s64 	%rd223, %rd4, %rd222;
	st.global.u32 	[%rd223], %r3270;
	add.s32 	%r2597, %r75, %r2593;
	add.s32 	%r2598, %r2597, %r38;
	add.s32 	%r2599, %r2598, %r74;
	mul.wide.u32 	%rd224, %r2599, 4;
	add.s64 	%rd225, %rd4, %rd224;
	st.global.u32 	[%rd225], %r3269;
	cvt.u64.u32 	%rd226, %r74;
	cvt.u64.u32 	%rd227, %r73;
	cvt.u64.u32 	%rd228, %r2594;
	add.s64 	%rd229, %rd228, %rd227;
	add.s64 	%rd230, %rd229, %rd226;
	shl.b64 	%rd231, %rd230, 2;
	add.s64 	%rd232, %rd4, %rd231;
	st.global.u32 	[%rd232+387072], %r3268;
	cvt.u64.u32 	%rd233, %r75;
	add.s64 	%rd234, %rd228, %rd233;
	add.s64 	%rd235, %rd234, %rd226;
	shl.b64 	%rd236, %rd235, 2;
	add.s64 	%rd237, %rd4, %rd236;
	st.global.u32 	[%rd237+387072], %r3267;
LBB0_22:                                // %L21645
                                        //   in Loop: Header=BB0_18 Depth=2
	add.s32 	%r3256, %r3256, 1;
	mov.u32 	%r3265, 0;
	mov.u32 	%r3267, %r3265;
	mov.u32 	%r3268, %r3265;
	mov.u32 	%r3269, %r3265;
	mov.u32 	%r3270, %r3265;
LBB0_23:                                // %L21646
                                        //   in Loop: Header=BB0_18 Depth=2
	mov.u32 	%r2601, 0;
	mov.u32 	%r3271, %r2601;
	mov.u32 	%r3272, %r2601;
	mov.u32 	%r3273, %r2601;
	mov.u32 	%r3274, %r2601;
	@%p50 bra 	LBB0_45;
	bra.uni 	LBB0_24;
LBB0_45:                                // %oksrem7942
                                        //   in Loop: Header=BB0_18 Depth=2
	or.b32  	%r2602, %r164, %r22;
	add.s32 	%r2603, %r2602, %r67;
	add.s32 	%r2604, %r2603, %r68;
	add.s32 	%r2605, %r2604, %r69;
	add.s32 	%r2606, %r2605, %r70;
	add.s32 	%r2607, %r2606, %r71;
	add.s32 	%r2608, %r2607, %r72;
	mul.wide.s32 	%rd238, %r2608, 4;
	add.s64 	%rd240, %rd35, %rd238;
	ld.shared.u32 	%r3271, [%rd240];
	or.b32  	%r2609, %r165, %r22;
	add.s32 	%r2610, %r2609, %r67;
	add.s32 	%r2611, %r2610, %r68;
	add.s32 	%r2612, %r2611, %r69;
	add.s32 	%r2613, %r2612, %r70;
	add.s32 	%r2614, %r2613, %r71;
	add.s32 	%r2615, %r2614, %r72;
	mul.wide.u32 	%rd241, %r2615, 4;
	add.s64 	%rd242, %rd35, %rd241;
	ld.shared.u32 	%r3272, [%rd242];
	or.b32  	%r2616, %r166, %r22;
	add.s32 	%r2617, %r2616, %r67;
	add.s32 	%r2618, %r2617, %r68;
	add.s32 	%r2619, %r2618, %r69;
	add.s32 	%r2620, %r2619, %r70;
	add.s32 	%r2621, %r2620, %r71;
	add.s32 	%r2622, %r2621, %r72;
	mul.wide.s32 	%rd243, %r2622, 4;
	add.s64 	%rd244, %rd35, %rd243;
	ld.shared.u32 	%r3273, [%rd244];
	or.b32  	%r2623, %r167, %r22;
	add.s32 	%r2624, %r2623, %r67;
	add.s32 	%r2625, %r2624, %r68;
	add.s32 	%r2626, %r2625, %r69;
	add.s32 	%r2627, %r2626, %r70;
	add.s32 	%r2628, %r2627, %r71;
	add.s32 	%r2629, %r2628, %r72;
	mul.wide.u32 	%rd245, %r2629, 4;
	add.s64 	%rd246, %rd35, %rd245;
	ld.shared.u32 	%r3274, [%rd246];
LBB0_24:                                // %L22849
                                        //   in Loop: Header=BB0_18 Depth=2
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2662, %r2665}, {%r287, %r284}, {%r3271}, {%r2601, %r2601};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2671, %r2674}, {%r287, %r284}, {%r3272}, {%r2601, %r2601};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2680, %r2683}, {%r287, %r284}, {%r3273}, {%r2601, %r2601};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2689, %r2692}, {%r287, %r284}, {%r3274}, {%r2601, %r2601};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2658, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2660, %r2658, %r2662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2663, %r322, %r2665, %r2660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2667, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2669, %r2667, %r2671;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2672, %r322, %r2674, %r2669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2676, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2678, %r2676, %r2680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2681, %r322, %r2683, %r2678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2685, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2687, %r2685, %r2689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2690, %r322, %r2692, %r2687;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2694, %r325, %r2665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2697, %r322, %r2662, %r2694;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2701, %r325, %r2674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2704, %r322, %r2671, %r2701;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2708, %r325, %r2683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2711, %r322, %r2680, %r2708;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2715, %r325, %r2692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2718, %r322, %r2689, %r2715;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2763, %r2767}, {%r355, %r349, %r352, %r346}, {%r2697, %r2663}, {%r2601, %r2601};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2771, %r2775}, {%r355, %r349, %r352, %r346}, {%r2704, %r2672}, {%r2601, %r2601};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2779, %r2783}, {%r355, %r349, %r352, %r346}, {%r2711, %r2681}, {%r2601, %r2601};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2787, %r2791}, {%r355, %r349, %r352, %r346}, {%r2718, %r2690}, {%r2601, %r2601};
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2762, %r2763, %r2763, %r3270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3280, %r2767, %r2767, %r2762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2770, %r2771, %r2771, %r3269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3279, %r2775, %r2775, %r2770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2778, %r2779, %r2779, %r3268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3278, %r2783, %r2783, %r2778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2786, %r2787, %r2787, %r3267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3277, %r2791, %r2791, %r2786;
	// end inline asm
	add.s32 	%r3275, %r3265, 1;
	setp.ne.s32 	%p66, %r3275, 40;
	@%p66 bra 	LBB0_28;
// %bb.25:                              // %L23032
                                        //   in Loop: Header=BB0_18 Depth=2
	@%p26 bra 	LBB0_27;
// %bb.26:                              // %L23097
                                        //   in Loop: Header=BB0_18 Depth=2
	mul.lo.s32 	%r2794, %r3256, 193536;
	or.b32  	%r2795, %r2794, %r38;
	add.s32 	%r2796, %r2795, %r73;
	add.s32 	%r2797, %r2796, %r74;
	mul.wide.u32 	%rd247, %r2797, 4;
	add.s64 	%rd248, %rd4, %rd247;
	st.global.u32 	[%rd248], %r3280;
	add.s32 	%r2798, %r75, %r2794;
	add.s32 	%r2799, %r2798, %r38;
	add.s32 	%r2800, %r2799, %r74;
	mul.wide.u32 	%rd249, %r2800, 4;
	add.s64 	%rd250, %rd4, %rd249;
	st.global.u32 	[%rd250], %r3279;
	cvt.u64.u32 	%rd251, %r74;
	cvt.u64.u32 	%rd252, %r73;
	cvt.u64.u32 	%rd253, %r2795;
	add.s64 	%rd254, %rd253, %rd252;
	add.s64 	%rd255, %rd254, %rd251;
	shl.b64 	%rd256, %rd255, 2;
	add.s64 	%rd257, %rd4, %rd256;
	st.global.u32 	[%rd257+387072], %r3278;
	cvt.u64.u32 	%rd258, %r75;
	add.s64 	%rd259, %rd253, %rd258;
	add.s64 	%rd260, %rd259, %rd251;
	shl.b64 	%rd261, %rd260, 2;
	add.s64 	%rd262, %rd4, %rd261;
	st.global.u32 	[%rd262+387072], %r3277;
LBB0_27:                                // %L23610
                                        //   in Loop: Header=BB0_18 Depth=2
	add.s32 	%r3256, %r3256, 1;
	mov.u32 	%r3275, 0;
	mov.u32 	%r3277, %r3275;
	mov.u32 	%r3278, %r3275;
	mov.u32 	%r3279, %r3275;
	mov.u32 	%r3280, %r3275;
LBB0_28:                                // %L23611
                                        //   in Loop: Header=BB0_18 Depth=2
	mov.u32 	%r2802, 0;
	mov.u32 	%r3281, %r2802;
	mov.u32 	%r3282, %r2802;
	mov.u32 	%r3283, %r2802;
	mov.u32 	%r3284, %r2802;
	@%p50 bra 	LBB0_46;
	bra.uni 	LBB0_29;
LBB0_46:                                // %oksrem8696
                                        //   in Loop: Header=BB0_18 Depth=2
	or.b32  	%r2803, %r168, %r22;
	add.s32 	%r2804, %r2803, %r67;
	add.s32 	%r2805, %r2804, %r68;
	add.s32 	%r2806, %r2805, %r69;
	add.s32 	%r2807, %r2806, %r70;
	add.s32 	%r2808, %r2807, %r71;
	add.s32 	%r2809, %r2808, %r72;
	mul.wide.s32 	%rd263, %r2809, 4;
	add.s64 	%rd265, %rd35, %rd263;
	ld.shared.u32 	%r3281, [%rd265];
	or.b32  	%r2810, %r169, %r22;
	add.s32 	%r2811, %r2810, %r67;
	add.s32 	%r2812, %r2811, %r68;
	add.s32 	%r2813, %r2812, %r69;
	add.s32 	%r2814, %r2813, %r70;
	add.s32 	%r2815, %r2814, %r71;
	add.s32 	%r2816, %r2815, %r72;
	mul.wide.u32 	%rd266, %r2816, 4;
	add.s64 	%rd267, %rd35, %rd266;
	ld.shared.u32 	%r3282, [%rd267];
	or.b32  	%r2817, %r170, %r22;
	add.s32 	%r2818, %r2817, %r67;
	add.s32 	%r2819, %r2818, %r68;
	add.s32 	%r2820, %r2819, %r69;
	add.s32 	%r2821, %r2820, %r70;
	add.s32 	%r2822, %r2821, %r71;
	add.s32 	%r2823, %r2822, %r72;
	mul.wide.s32 	%rd268, %r2823, 4;
	add.s64 	%rd269, %rd35, %rd268;
	ld.shared.u32 	%r3283, [%rd269];
	or.b32  	%r2824, %r171, %r22;
	add.s32 	%r2825, %r2824, %r67;
	add.s32 	%r2826, %r2825, %r68;
	add.s32 	%r2827, %r2826, %r69;
	add.s32 	%r2828, %r2827, %r70;
	add.s32 	%r2829, %r2828, %r71;
	add.s32 	%r2830, %r2829, %r72;
	mul.wide.u32 	%rd270, %r2830, 4;
	add.s64 	%rd271, %rd35, %rd270;
	ld.shared.u32 	%r3284, [%rd271];
LBB0_29:                                // %L24814
                                        //   in Loop: Header=BB0_18 Depth=2
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2863, %r2866}, {%r287, %r284}, {%r3281}, {%r2802, %r2802};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2872, %r2875}, {%r287, %r284}, {%r3282}, {%r2802, %r2802};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2881, %r2884}, {%r287, %r284}, {%r3283}, {%r2802, %r2802};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2890, %r2893}, {%r287, %r284}, {%r3284}, {%r2802, %r2802};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2859, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2861, %r2859, %r2863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2864, %r322, %r2866, %r2861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2868, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2870, %r2868, %r2872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2873, %r322, %r2875, %r2870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2877, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2879, %r2877, %r2881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2882, %r322, %r2884, %r2879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2886, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2888, %r2886, %r2890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2891, %r322, %r2893, %r2888;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2895, %r325, %r2866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2898, %r322, %r2863, %r2895;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2902, %r325, %r2875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2905, %r322, %r2872, %r2902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2909, %r325, %r2884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2912, %r322, %r2881, %r2909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2916, %r325, %r2893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2919, %r322, %r2890, %r2916;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2964, %r2968}, {%r355, %r349, %r352, %r346}, {%r2898, %r2864}, {%r2802, %r2802};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2972, %r2976}, {%r355, %r349, %r352, %r346}, {%r2905, %r2873}, {%r2802, %r2802};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2980, %r2984}, {%r355, %r349, %r352, %r346}, {%r2912, %r2882}, {%r2802, %r2802};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2988, %r2992}, {%r355, %r349, %r352, %r346}, {%r2919, %r2891}, {%r2802, %r2802};
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2963, %r2964, %r2964, %r3280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3290, %r2968, %r2968, %r2963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2971, %r2972, %r2972, %r3279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3289, %r2976, %r2976, %r2971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2979, %r2980, %r2980, %r3278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3288, %r2984, %r2984, %r2979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2987, %r2988, %r2988, %r3277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3287, %r2992, %r2992, %r2987;
	// end inline asm
	add.s32 	%r3285, %r3275, 1;
	setp.ne.s32 	%p69, %r3285, 40;
	@%p69 bra 	LBB0_33;
// %bb.30:                              // %L24997
                                        //   in Loop: Header=BB0_18 Depth=2
	@%p26 bra 	LBB0_32;
// %bb.31:                              // %L25062
                                        //   in Loop: Header=BB0_18 Depth=2
	mul.lo.s32 	%r2995, %r3256, 193536;
	or.b32  	%r2996, %r2995, %r38;
	add.s32 	%r2997, %r2996, %r73;
	add.s32 	%r2998, %r2997, %r74;
	mul.wide.u32 	%rd272, %r2998, 4;
	add.s64 	%rd273, %rd4, %rd272;
	st.global.u32 	[%rd273], %r3290;
	add.s32 	%r2999, %r75, %r2995;
	add.s32 	%r3000, %r2999, %r38;
	add.s32 	%r3001, %r3000, %r74;
	mul.wide.u32 	%rd274, %r3001, 4;
	add.s64 	%rd275, %rd4, %rd274;
	st.global.u32 	[%rd275], %r3289;
	cvt.u64.u32 	%rd276, %r74;
	cvt.u64.u32 	%rd277, %r73;
	cvt.u64.u32 	%rd278, %r2996;
	add.s64 	%rd279, %rd278, %rd277;
	add.s64 	%rd280, %rd279, %rd276;
	shl.b64 	%rd281, %rd280, 2;
	add.s64 	%rd282, %rd4, %rd281;
	st.global.u32 	[%rd282+387072], %r3288;
	cvt.u64.u32 	%rd283, %r75;
	add.s64 	%rd284, %rd278, %rd283;
	add.s64 	%rd285, %rd284, %rd276;
	shl.b64 	%rd286, %rd285, 2;
	add.s64 	%rd287, %rd4, %rd286;
	st.global.u32 	[%rd287+387072], %r3287;
LBB0_32:                                // %L25575
                                        //   in Loop: Header=BB0_18 Depth=2
	add.s32 	%r3256, %r3256, 1;
	mov.u32 	%r3285, 0;
	mov.u32 	%r3287, %r3285;
	mov.u32 	%r3288, %r3285;
	mov.u32 	%r3289, %r3285;
	mov.u32 	%r3290, %r3285;
LBB0_33:                                // %L25576
                                        //   in Loop: Header=BB0_18 Depth=2
	mov.u32 	%r3003, 0;
	mov.u32 	%r3291, %r3003;
	mov.u32 	%r3292, %r3003;
	mov.u32 	%r3293, %r3003;
	mov.u32 	%r3294, %r3003;
	@%p50 bra 	LBB0_47;
	bra.uni 	LBB0_34;
LBB0_47:                                // %oksrem9450
                                        //   in Loop: Header=BB0_18 Depth=2
	or.b32  	%r3004, %r172, %r22;
	add.s32 	%r3005, %r3004, %r67;
	add.s32 	%r3006, %r3005, %r68;
	add.s32 	%r3007, %r3006, %r69;
	add.s32 	%r3008, %r3007, %r70;
	add.s32 	%r3009, %r3008, %r71;
	add.s32 	%r3010, %r3009, %r72;
	mul.wide.s32 	%rd288, %r3010, 4;
	add.s64 	%rd290, %rd35, %rd288;
	ld.shared.u32 	%r3294, [%rd290];
	or.b32  	%r3011, %r173, %r22;
	add.s32 	%r3012, %r3011, %r67;
	add.s32 	%r3013, %r3012, %r68;
	add.s32 	%r3014, %r3013, %r69;
	add.s32 	%r3015, %r3014, %r70;
	add.s32 	%r3016, %r3015, %r71;
	add.s32 	%r3017, %r3016, %r72;
	mul.wide.u32 	%rd291, %r3017, 4;
	add.s64 	%rd292, %rd35, %rd291;
	ld.shared.u32 	%r3293, [%rd292];
	or.b32  	%r3018, %r174, %r22;
	add.s32 	%r3019, %r3018, %r67;
	add.s32 	%r3020, %r3019, %r68;
	add.s32 	%r3021, %r3020, %r69;
	add.s32 	%r3022, %r3021, %r70;
	add.s32 	%r3023, %r3022, %r71;
	add.s32 	%r3024, %r3023, %r72;
	mul.wide.s32 	%rd293, %r3024, 4;
	add.s64 	%rd294, %rd35, %rd293;
	ld.shared.u32 	%r3292, [%rd294];
	or.b32  	%r3025, %r175, %r22;
	add.s32 	%r3026, %r3025, %r67;
	add.s32 	%r3027, %r3026, %r68;
	add.s32 	%r3028, %r3027, %r69;
	add.s32 	%r3029, %r3028, %r70;
	add.s32 	%r3030, %r3029, %r71;
	add.s32 	%r3031, %r3030, %r72;
	mul.wide.u32 	%rd295, %r3031, 4;
	add.s64 	%rd296, %rd35, %rd295;
	ld.shared.u32 	%r3291, [%rd296];
LBB0_34:                                // %L26779
                                        //   in Loop: Header=BB0_18 Depth=2
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r3064, %r3067}, {%r287, %r284}, {%r3294}, {%r3003, %r3003};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r3073, %r3076}, {%r287, %r284}, {%r3293}, {%r3003, %r3003};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r3082, %r3085}, {%r287, %r284}, {%r3292}, {%r3003, %r3003};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r3091, %r3094}, {%r287, %r284}, {%r3291}, {%r3003, %r3003};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3060, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3062, %r3060, %r3064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3065, %r322, %r3067, %r3062;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3069, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3071, %r3069, %r3073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r322, %r3076, %r3071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3078, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3080, %r3078, %r3082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3083, %r322, %r3085, %r3080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3087, %r325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3089, %r3087, %r3091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3092, %r322, %r3094, %r3089;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3096, %r325, %r3067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3099, %r322, %r3064, %r3096;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3103, %r325, %r3076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3106, %r322, %r3073, %r3103;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3110, %r325, %r3085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3113, %r322, %r3082, %r3110;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3117, %r325, %r3094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3120, %r322, %r3091, %r3117;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3165, %r3169}, {%r355, %r349, %r352, %r346}, {%r3099, %r3065}, {%r3003, %r3003};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3173, %r3177}, {%r355, %r349, %r352, %r346}, {%r3106, %r3074}, {%r3003, %r3003};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3181, %r3185}, {%r355, %r349, %r352, %r346}, {%r3113, %r3083}, {%r3003, %r3003};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3189, %r3193}, {%r355, %r349, %r352, %r346}, {%r3120, %r3092}, {%r3003, %r3003};
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3164, %r3165, %r3165, %r3290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3260, %r3169, %r3169, %r3164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3172, %r3173, %r3173, %r3289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3259, %r3177, %r3177, %r3172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3180, %r3181, %r3181, %r3288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3258, %r3185, %r3185, %r3180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3188, %r3189, %r3189, %r3287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3257, %r3193, %r3193, %r3188;
	// end inline asm
	add.s32 	%r3255, %r3285, 1;
	setp.ne.s32 	%p72, %r3255, 40;
	@%p72 bra 	LBB0_38;
// %bb.35:                              // %L26962
                                        //   in Loop: Header=BB0_18 Depth=2
	@%p26 bra 	LBB0_37;
// %bb.36:                              // %L27027
                                        //   in Loop: Header=BB0_18 Depth=2
	mul.lo.s32 	%r3196, %r3256, 193536;
	or.b32  	%r3197, %r3196, %r38;
	add.s32 	%r3198, %r3197, %r73;
	add.s32 	%r3199, %r3198, %r74;
	mul.wide.u32 	%rd297, %r3199, 4;
	add.s64 	%rd298, %rd4, %rd297;
	st.global.u32 	[%rd298], %r3260;
	add.s32 	%r3200, %r75, %r3196;
	add.s32 	%r3201, %r3200, %r38;
	add.s32 	%r3202, %r3201, %r74;
	mul.wide.u32 	%rd299, %r3202, 4;
	add.s64 	%rd300, %rd4, %rd299;
	st.global.u32 	[%rd300], %r3259;
	cvt.u64.u32 	%rd301, %r74;
	cvt.u64.u32 	%rd302, %r73;
	cvt.u64.u32 	%rd303, %r3197;
	add.s64 	%rd304, %rd303, %rd302;
	add.s64 	%rd305, %rd304, %rd301;
	shl.b64 	%rd306, %rd305, 2;
	add.s64 	%rd307, %rd4, %rd306;
	st.global.u32 	[%rd307+387072], %r3258;
	cvt.u64.u32 	%rd308, %r75;
	add.s64 	%rd309, %rd303, %rd308;
	add.s64 	%rd310, %rd309, %rd301;
	shl.b64 	%rd311, %rd310, 2;
	add.s64 	%rd312, %rd4, %rd311;
	st.global.u32 	[%rd312+387072], %r3257;
	bra.uni 	LBB0_37;
LBB0_40:                                // %guard_pass10761
	@%p26 bra 	LBB0_42;
// %bb.41:                              // %L27658
	mul.lo.s32 	%r3204, %r3256, 193536;
	or.b32  	%r3205, %r3204, %r38;
	add.s32 	%r3206, %r3205, %r73;
	add.s32 	%r3207, %r3206, %r74;
	mul.wide.u32 	%rd313, %r3207, 4;
	add.s64 	%rd314, %rd4, %rd313;
	st.global.u32 	[%rd314], %r3260;
	add.s32 	%r3208, %r75, %r3204;
	add.s32 	%r3209, %r3208, %r38;
	add.s32 	%r3210, %r3209, %r74;
	mul.wide.u32 	%rd315, %r3210, 4;
	add.s64 	%rd316, %rd4, %rd315;
	st.global.u32 	[%rd316], %r3259;
	cvt.u64.u32 	%rd317, %r74;
	cvt.u64.u32 	%rd318, %r73;
	cvt.u64.u32 	%rd319, %r3205;
	add.s64 	%rd320, %rd319, %rd318;
	add.s64 	%rd321, %rd320, %rd317;
	shl.b64 	%rd322, %rd321, 2;
	add.s64 	%rd323, %rd4, %rd322;
	st.global.u32 	[%rd323+387072], %r3258;
	cvt.u64.u32 	%rd324, %r75;
	add.s64 	%rd325, %rd319, %rd324;
	add.s64 	%rd326, %rd325, %rd317;
	shl.b64 	%rd327, %rd326, 2;
	add.s64 	%rd328, %rd4, %rd327;
	st.global.u32 	[%rd328+387072], %r3257;
LBB0_42:                                // %L28171
	mov.u32 	%r3211, 0;
	st.global.u32 	[%rd5], %r3211;
	ret;
LBB0_1:                                 // %L9
	ld.param.u64 	%rd11, [_Z15julia_frb_1152013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_0];
	mov.u64 	%rd16, exception1;
	cvta.global.u64 	%rd17, %rd16;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd17;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd11;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
