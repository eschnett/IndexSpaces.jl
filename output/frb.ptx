CHORD FRB beamformer
Compiling kernel...
// PTX CompilerJob of kernel #frb(CuDeviceVector{Int32, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int32, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Float16x2, 1}) for sm_86, minthreads=768, blocks_per_sm=1

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE // -- Begin function _Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[8]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE
.visible .entry _Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE(
	.param .align 8 .b8 _Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_0[8],
	.param .align 8 .b8 _Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_8[32]
)
.reqntid 768, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<78>;
	.reg .b16 	%rs<286>;
	.reg .f32 	%f<202>;
	.reg .b32 	%r<3634>;
	.reg .b64 	%rd<314>;

// %bb.0:                               // %conversion
	// begin inline asm
	mov.u32 %r275, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r275, 76895;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L11
	ld.param.u64 	%rd12, [_Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_5];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	mul.lo.s32 	%r282, %r2, 768;
	or.b32  	%r283, %r282, %r1;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	add.s32 	%r284, %r4, %r283;
	mul.wide.u32 	%rd18, %r284, 4;
	add.s64 	%rd5, %rd12, %rd18;
	mov.u32 	%r285, 1;
	st.global.u32 	[%rd5], %r285;
	and.b32  	%r5, %r1, 3;
	shr.u32 	%r6, %r1, 2;
	mul.lo.s32 	%r286, %r5, %r6;
	and.b32  	%r287, %r286, 7;
	cvt.rn.f32.u32 	%f18, %r287;
	mov.f32 	%f19, 0f40800000;
	div.approx.f32 	%f20, %f18, %f19;
	add.f32 	%f21, %f20, %f20;
	mov.b32 	%r288, %f21;
	and.b32  	%r289, %r288, -2147483648;
	or.b32  	%r290, %r289, 1056964608;
	mov.b32 	%f22, %r290;
	add.f32 	%f23, %f21, %f22;
	cvt.rzi.f32.f32 	%f24, %f23;
	abs.f32 	%f25, %f21;
	setp.gt.f32 	%p2, %f25, 0f4B000000;
	selp.f32 	%f26, %f21, %f24, %p2;
	cvt.rzi.f32.f32 	%f27, %f21;
	setp.lt.f32 	%p3, %f25, 0f3F000000;
	selp.f32 	%f28, %f27, %f26, %p3;
	cvt.rzi.s32.f32 	%r291, %f28;
	fma.rn.f32 	%f29, %f28, 0fBF000000, %f20;
	mul.f32 	%f30, %f29, 0f34222169;
	fma.rn.f32 	%f31, %f29, 0f40490FDA, %f30;
	mul.f32 	%f32, %f31, %f31;
	fma.rn.f32 	%f33, %f32, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f34, %f33, %f32, 0f3D2AAABB;
	fma.rn.f32 	%f35, %f34, %f32, 0fBEFFFFFF;
	fma.rn.f32 	%f36, %f35, %f32, 0f3F800000;
	fma.rn.f32 	%f37, %f32, %f31, 0f00000000;
	fma.rn.f32 	%f38, %f32, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f39, %f38, %f32, 0fBE2AAAA8;
	fma.rn.f32 	%f40, %f39, %f37, %f31;
	and.b32  	%r292, %r291, 1;
	setp.eq.b32 	%p4, %r292, 1;
	selp.f32 	%f41, %f36, %f40, %p4;
	selp.f32 	%f42, %f40, %f36, %p4;
	and.b32  	%r293, %r291, 2;
	setp.eq.s32 	%p5, %r293, 0;
	neg.f32 	%f43, %f41;
	selp.f32 	%f44, %f41, %f43, %p5;
	add.s32 	%r294, %r291, 1;
	and.b32  	%r295, %r294, 2;
	mov.f32 	%f200, 0f00000000;
	cvt.rzi.f32.f32 	%f47, %f20;
	setp.eq.f32 	%p7, %f47, %f20;
	mul.f32 	%f48, %f20, 0f00000000;
	shl.b32 	%r9, %r1, 1;
	and.b32  	%r10, %r9, 6;
	or.b32  	%r11, %r10, 1;
	setp.eq.s32 	%p9, %r10, 6;
	mov.f32 	%f192, 0f41C00000;
	mul.lo.s32 	%r3543, %r10, %r6;
	mov.f32 	%f194, %f200;
	mov.f32 	%f195, %f200;
	@%p9 bra 	LBB0_4;
// %bb.3:                               // %L207
	cvt.u16.u32 	%rs1, %r3543;
	and.b16  	%rs2, %rs1, 255;
	mul.lo.s16 	%rs3, %rs2, 171;
	shr.u16 	%rs4, %rs3, 13;
	mul.lo.s16 	%rs5, %rs4, 48;
	sub.s16 	%rs6, %rs1, %rs5;
	and.b16  	%rs7, %rs6, 255;
	cvt.rn.f32.u16 	%f53, %rs7;
	div.approx.f32 	%f55, %f53, %f192;
	add.f32 	%f56, %f55, %f55;
	mov.b32 	%r297, %f56;
	and.b32  	%r298, %r297, -2147483648;
	or.b32  	%r299, %r298, 1056964608;
	mov.b32 	%f57, %r299;
	add.f32 	%f58, %f56, %f57;
	cvt.rzi.f32.f32 	%f59, %f58;
	abs.f32 	%f60, %f56;
	setp.gt.f32 	%p10, %f60, 0f4B000000;
	selp.f32 	%f61, %f56, %f59, %p10;
	cvt.rzi.f32.f32 	%f62, %f56;
	setp.lt.f32 	%p11, %f60, 0f3F000000;
	selp.f32 	%f63, %f62, %f61, %p11;
	cvt.rzi.s32.f32 	%r300, %f63;
	fma.rn.f32 	%f64, %f63, 0fBF000000, %f55;
	mul.f32 	%f65, %f64, 0f34222169;
	fma.rn.f32 	%f66, %f64, 0f40490FDA, %f65;
	mul.f32 	%f67, %f66, %f66;
	fma.rn.f32 	%f68, %f67, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f69, %f68, %f67, 0f3D2AAABB;
	fma.rn.f32 	%f70, %f69, %f67, 0fBEFFFFFF;
	fma.rn.f32 	%f71, %f70, %f67, 0f3F800000;
	fma.rn.f32 	%f72, %f67, %f66, 0f00000000;
	fma.rn.f32 	%f73, %f67, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f74, %f73, %f67, 0fBE2AAAA8;
	fma.rn.f32 	%f75, %f74, %f72, %f66;
	and.b32  	%r301, %r300, 1;
	setp.eq.b32 	%p12, %r301, 1;
	selp.f32 	%f76, %f71, %f75, %p12;
	selp.f32 	%f77, %f75, %f71, %p12;
	and.b32  	%r302, %r300, 2;
	setp.eq.s32 	%p13, %r302, 0;
	neg.f32 	%f78, %f76;
	selp.f32 	%f79, %f76, %f78, %p13;
	add.s32 	%r303, %r300, 1;
	and.b32  	%r304, %r303, 2;
	setp.eq.s32 	%p14, %r304, 0;
	mov.f32 	%f80, 0f00000000;
	sub.f32 	%f81, %f80, %f77;
	selp.f32 	%f82, %f77, %f81, %p14;
	cvt.rzi.f32.f32 	%f83, %f55;
	setp.eq.f32 	%p15, %f83, %f55;
	mul.f32 	%f84, %f55, 0f00000000;
	selp.f32 	%f195, %f84, %f79, %p15;
	abs.f32 	%f85, %f55;
	setp.gt.f32 	%p16, %f85, 0f4B800000;
	add.f32 	%f86, %f195, 0f3F800000;
	selp.f32 	%f194, %f86, %f82, %p16;
LBB0_4:                                 // %L222
	setp.eq.s32 	%p6, %r295, 0;
	sub.f32 	%f45, %f200, %f42;
	selp.f32 	%f49, %f48, %f44, %p7;
	abs.f32 	%f50, %f20;
	setp.gt.u32 	%p17, %r11, 5;
	mul.lo.s32 	%r3544, %r11, %r6;
	mov.f32 	%f196, %f200;
	mov.f32 	%f197, %f200;
	@%p17 bra 	LBB0_6;
// %bb.5:                               // %L226
	cvt.u16.u32 	%rs8, %r3544;
	and.b16  	%rs9, %rs8, 255;
	mul.lo.s16 	%rs10, %rs9, 171;
	shr.u16 	%rs11, %rs10, 13;
	mul.lo.s16 	%rs12, %rs11, 48;
	sub.s16 	%rs13, %rs8, %rs12;
	and.b16  	%rs14, %rs13, 255;
	cvt.rn.f32.u16 	%f88, %rs14;
	div.approx.f32 	%f90, %f88, %f192;
	add.f32 	%f91, %f90, %f90;
	mov.b32 	%r306, %f91;
	and.b32  	%r307, %r306, -2147483648;
	or.b32  	%r308, %r307, 1056964608;
	mov.b32 	%f92, %r308;
	add.f32 	%f93, %f91, %f92;
	cvt.rzi.f32.f32 	%f94, %f93;
	abs.f32 	%f95, %f91;
	setp.gt.f32 	%p18, %f95, 0f4B000000;
	selp.f32 	%f96, %f91, %f94, %p18;
	cvt.rzi.f32.f32 	%f97, %f91;
	setp.lt.f32 	%p19, %f95, 0f3F000000;
	selp.f32 	%f98, %f97, %f96, %p19;
	cvt.rzi.s32.f32 	%r309, %f98;
	fma.rn.f32 	%f99, %f98, 0fBF000000, %f90;
	mul.f32 	%f100, %f99, 0f34222169;
	fma.rn.f32 	%f101, %f99, 0f40490FDA, %f100;
	mul.f32 	%f102, %f101, %f101;
	fma.rn.f32 	%f103, %f102, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f104, %f103, %f102, 0f3D2AAABB;
	fma.rn.f32 	%f105, %f104, %f102, 0fBEFFFFFF;
	fma.rn.f32 	%f106, %f105, %f102, 0f3F800000;
	fma.rn.f32 	%f107, %f102, %f101, 0f00000000;
	fma.rn.f32 	%f108, %f102, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f109, %f108, %f102, 0fBE2AAAA8;
	fma.rn.f32 	%f110, %f109, %f107, %f101;
	and.b32  	%r310, %r309, 1;
	setp.eq.b32 	%p20, %r310, 1;
	selp.f32 	%f111, %f106, %f110, %p20;
	selp.f32 	%f112, %f110, %f106, %p20;
	and.b32  	%r311, %r309, 2;
	setp.eq.s32 	%p21, %r311, 0;
	neg.f32 	%f113, %f111;
	selp.f32 	%f114, %f111, %f113, %p21;
	add.s32 	%r312, %r309, 1;
	and.b32  	%r313, %r312, 2;
	setp.eq.s32 	%p22, %r313, 0;
	mov.f32 	%f115, 0f00000000;
	sub.f32 	%f116, %f115, %f112;
	selp.f32 	%f117, %f112, %f116, %p22;
	cvt.rzi.f32.f32 	%f118, %f90;
	setp.eq.f32 	%p23, %f118, %f90;
	mul.f32 	%f119, %f90, 0f00000000;
	selp.f32 	%f197, %f119, %f114, %p23;
	abs.f32 	%f120, %f90;
	setp.gt.f32 	%p24, %f120, 0f4B800000;
	add.f32 	%f121, %f197, 0f3F800000;
	selp.f32 	%f196, %f121, %f117, %p24;
LBB0_6:                                 // %L241
	selp.f32 	%f46, %f42, %f45, %p6;
	setp.gt.f32 	%p8, %f50, 0f4B800000;
	add.f32 	%f51, %f49, 0f3F800000;
	setp.gt.u32 	%p26, %r1, 23;
	or.pred  	%p27, %p9, %p26;
	mov.f32 	%f193, 0f40400000;
	mov.f32 	%f198, %f200;
	mov.f32 	%f199, %f200;
	@%p27 bra 	LBB0_8;
// %bb.7:                               // %L283
	cvt.u16.u32 	%rs15, %r3543;
	and.b16  	%rs16, %rs15, 255;
	mul.lo.s16 	%rs17, %rs16, 171;
	shr.u16 	%rs18, %rs17, 10;
	mul.lo.s16 	%rs19, %rs18, 6;
	sub.s16 	%rs20, %rs15, %rs19;
	and.b16  	%rs21, %rs20, 255;
	cvt.rn.f32.u16 	%f123, %rs21;
	div.approx.f32 	%f125, %f123, %f193;
	add.f32 	%f126, %f125, %f125;
	mov.b32 	%r321, %f126;
	and.b32  	%r322, %r321, -2147483648;
	or.b32  	%r323, %r322, 1056964608;
	mov.b32 	%f127, %r323;
	add.f32 	%f128, %f126, %f127;
	cvt.rzi.f32.f32 	%f129, %f128;
	abs.f32 	%f130, %f126;
	setp.gt.f32 	%p28, %f130, 0f4B000000;
	selp.f32 	%f131, %f126, %f129, %p28;
	cvt.rzi.f32.f32 	%f132, %f126;
	setp.lt.f32 	%p29, %f130, 0f3F000000;
	selp.f32 	%f133, %f132, %f131, %p29;
	cvt.rzi.s32.f32 	%r324, %f133;
	fma.rn.f32 	%f134, %f133, 0fBF000000, %f125;
	mul.f32 	%f135, %f134, 0f34222169;
	fma.rn.f32 	%f136, %f134, 0f40490FDA, %f135;
	mul.f32 	%f137, %f136, %f136;
	fma.rn.f32 	%f138, %f137, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f139, %f138, %f137, 0f3D2AAABB;
	fma.rn.f32 	%f140, %f139, %f137, 0fBEFFFFFF;
	fma.rn.f32 	%f141, %f140, %f137, 0f3F800000;
	fma.rn.f32 	%f142, %f137, %f136, 0f00000000;
	fma.rn.f32 	%f143, %f137, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f144, %f143, %f137, 0fBE2AAAA8;
	fma.rn.f32 	%f145, %f144, %f142, %f136;
	and.b32  	%r325, %r324, 1;
	setp.eq.b32 	%p30, %r325, 1;
	selp.f32 	%f146, %f141, %f145, %p30;
	selp.f32 	%f147, %f145, %f141, %p30;
	and.b32  	%r326, %r324, 2;
	setp.eq.s32 	%p31, %r326, 0;
	neg.f32 	%f148, %f146;
	selp.f32 	%f149, %f146, %f148, %p31;
	add.s32 	%r327, %r324, 1;
	and.b32  	%r328, %r327, 2;
	setp.eq.s32 	%p32, %r328, 0;
	mov.f32 	%f150, 0f00000000;
	sub.f32 	%f151, %f150, %f147;
	selp.f32 	%f152, %f147, %f151, %p32;
	cvt.rzi.f32.f32 	%f153, %f125;
	setp.eq.f32 	%p33, %f153, %f125;
	mul.f32 	%f154, %f125, 0f00000000;
	selp.f32 	%f199, %f154, %f149, %p33;
	abs.f32 	%f155, %f125;
	setp.gt.f32 	%p34, %f155, 0f4B800000;
	add.f32 	%f156, %f199, 0f3F800000;
	selp.f32 	%f198, %f156, %f152, %p34;
LBB0_8:                                 // %L298
	selp.f32 	%f52, %f51, %f46, %p8;
	or.pred  	%p37, %p17, %p26;
	mov.f32 	%f201, %f200;
	@%p37 bra 	LBB0_10;
// %bb.9:                               // %L306
	cvt.u16.u32 	%rs22, %r3544;
	and.b16  	%rs23, %rs22, 255;
	mul.lo.s16 	%rs24, %rs23, 171;
	shr.u16 	%rs25, %rs24, 10;
	mul.lo.s16 	%rs26, %rs25, 6;
	sub.s16 	%rs27, %rs22, %rs26;
	and.b16  	%rs28, %rs27, 255;
	cvt.rn.f32.u16 	%f158, %rs28;
	div.approx.f32 	%f160, %f158, %f193;
	add.f32 	%f161, %f160, %f160;
	mov.b32 	%r330, %f161;
	and.b32  	%r331, %r330, -2147483648;
	or.b32  	%r332, %r331, 1056964608;
	mov.b32 	%f162, %r332;
	add.f32 	%f163, %f161, %f162;
	cvt.rzi.f32.f32 	%f164, %f163;
	abs.f32 	%f165, %f161;
	setp.gt.f32 	%p38, %f165, 0f4B000000;
	selp.f32 	%f166, %f161, %f164, %p38;
	cvt.rzi.f32.f32 	%f167, %f161;
	setp.lt.f32 	%p39, %f165, 0f3F000000;
	selp.f32 	%f168, %f167, %f166, %p39;
	cvt.rzi.s32.f32 	%r333, %f168;
	fma.rn.f32 	%f169, %f168, 0fBF000000, %f160;
	mul.f32 	%f170, %f169, 0f34222169;
	fma.rn.f32 	%f171, %f169, 0f40490FDA, %f170;
	mul.f32 	%f172, %f171, %f171;
	fma.rn.f32 	%f173, %f172, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f174, %f173, %f172, 0f3D2AAABB;
	fma.rn.f32 	%f175, %f174, %f172, 0fBEFFFFFF;
	fma.rn.f32 	%f176, %f175, %f172, 0f3F800000;
	fma.rn.f32 	%f177, %f172, %f171, 0f00000000;
	fma.rn.f32 	%f178, %f172, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f179, %f178, %f172, 0fBE2AAAA8;
	fma.rn.f32 	%f180, %f179, %f177, %f171;
	and.b32  	%r334, %r333, 1;
	setp.eq.b32 	%p40, %r334, 1;
	selp.f32 	%f181, %f176, %f180, %p40;
	selp.f32 	%f182, %f180, %f176, %p40;
	and.b32  	%r335, %r333, 2;
	setp.eq.s32 	%p41, %r335, 0;
	neg.f32 	%f183, %f181;
	selp.f32 	%f184, %f181, %f183, %p41;
	add.s32 	%r336, %r333, 1;
	and.b32  	%r337, %r336, 2;
	setp.eq.s32 	%p42, %r337, 0;
	mov.f32 	%f185, 0f00000000;
	sub.f32 	%f186, %f185, %f182;
	selp.f32 	%f187, %f182, %f186, %p42;
	cvt.rzi.f32.f32 	%f188, %f160;
	setp.eq.f32 	%p43, %f188, %f160;
	mul.f32 	%f189, %f160, 0f00000000;
	selp.f32 	%f201, %f189, %f184, %p43;
	abs.f32 	%f190, %f160;
	setp.gt.f32 	%p44, %f190, 0f4B800000;
	add.f32 	%f191, %f201, 0f3F800000;
	selp.f32 	%f200, %f191, %f187, %p44;
LBB0_10:                                // %L321
	mov.b32 	%r278, %f52;
	mov.b32 	%r281, %f49;
	mov.b32 	%r339, %f198;
	mov.b32 	%r340, %f200;
	mov.b32 	%r345, %f199;
	mov.b32 	%r346, %f201;
	mov.u32 	%r3546, 999999999;
	cvt.u16.u32 	%rs284, %r1;
	@%p26 bra 	LBB0_12;
// %bb.11:                              // %L364
	ld.param.u64 	%rd1, [_Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_1];
	and.b16  	%rs30, %rs284, 255;
	mul.lo.s16 	%rs31, %rs30, 171;
	shr.u16 	%rs32, %rs31, 12;
	mul.lo.s16 	%rs33, %rs32, 24;
	sub.s16 	%rs34, %rs284, %rs33;
	cvt.u32.u16 	%r351, %rs34;
	and.b32  	%r352, %r351, 255;
	mad.lo.s32 	%r353, %r352, 24, %r3;
	cvt.u16.u32 	%rs35, %r353;
	mul.hi.u16 	%rs36, %rs35, -7281;
	shr.u16 	%rs37, %rs36, 9;
	mul.lo.s16 	%rs38, %rs37, 576;
	sub.s16 	%rs39, %rs35, %rs38;
	cvt.u32.u16 	%r354, %rs39;
	mul.wide.u32 	%rd19, %r354, 4;
	add.s64 	%rd20, %rd1, %rd19;
	ld.global.u32 	%r3546, [%rd20];
LBB0_12:                                // %L441
	xor.b32  	%r277, %r281, -2147483648;
	mov.b32 	%r315, %f194;
	mov.b32 	%r316, %f196;
	mov.b32 	%r318, %f195;
	mov.b32 	%r319, %f197;
	xor.b32  	%r342, %r345, -2147483648;
	xor.b32  	%r343, %r346, -2147483648;
	and.b32  	%r20, %r1, 24;
	setp.ne.s32 	%p46, %r20, 24;
	cvt.u16.u32 	%rs285, %r6;
	@%p46 bra 	LBB0_14;
// %bb.13:                              // %L441.L786_crit_edge
	cvt.u16.u32 	%rs52, %r3;
	and.b16  	%rs53, %rs52, 255;
	mul.lo.s16 	%rs54, %rs53, 171;
	shr.u16 	%rs55, %rs54, 10;
	mul.lo.s16 	%rs56, %rs55, -6;
	add.s16 	%rs57, %rs56, %rs52;
	cvt.u32.u16 	%r367, %rs57;
	and.b32  	%r3550, %r367, 255;
	cvt.u32.u16 	%r3549, %rs55;
	mul.lo.s16 	%rs59, %rs285, 171;
	shr.u16 	%rs60, %rs59, 10;
	mul.lo.s16 	%rs61, %rs60, 6;
	sub.s16 	%rs62, %rs285, %rs61;
	cvt.u32.u16 	%r368, %rs62;
	and.b32  	%r3548, %r368, 255;
	mul.wide.u16 	%r3547, %rs55, 6;
	mov.u32 	%r3551, 0;
	mov.u32 	%r3552, %r3551;
	bra.uni 	LBB0_15;
LBB0_14:                                // %L470
	ld.param.u64 	%rd2, [_Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_2];
	mul.lo.s32 	%r355, %r5, 144;
	cvt.u16.u32 	%rs40, %r3;
	and.b16  	%rs41, %rs40, 255;
	mul.lo.s16 	%rs42, %rs41, 171;
	shr.u16 	%rs43, %rs42, 10;
	cvt.u32.u16 	%r3549, %rs43;
	mul.wide.u16 	%r3547, %rs43, 6;
	add.s32 	%r357, %r3547, %r355;
	mul.lo.s16 	%rs45, %rs285, 171;
	shr.u16 	%rs46, %rs45, 10;
	mul.lo.s16 	%rs47, %rs46, 6;
	sub.s16 	%rs48, %rs285, %rs47;
	cvt.u32.u16 	%r358, %rs48;
	and.b32  	%r3548, %r358, 255;
	and.b16  	%rs49, %rs48, 255;
	mul.wide.u16 	%r359, %rs49, 24;
	add.s32 	%r360, %r357, %r359;
	mul.lo.s16 	%rs50, %rs43, -6;
	add.s16 	%rs51, %rs50, %rs40;
	cvt.u32.u16 	%r361, %rs51;
	and.b32  	%r3550, %r361, 255;
	add.s32 	%r362, %r360, %r3550;
	mul.lo.s32 	%r363, %r2, 576;
	add.s32 	%r364, %r362, %r363;
	mul.wide.u32 	%rd21, %r364, 4;
	add.s64 	%rd22, %rd2, %rd21;
	ld.global.u32 	%r3551, [%rd22];
	cvt.u64.u32 	%rd23, %r363;
	cvt.u64.u16 	%rd24, %rs51;
	and.b64  	%rd25, %rd24, 255;
	cvt.u64.u32 	%rd26, %r359;
	cvt.u64.u32 	%rd27, %r3547;
	cvt.u64.u32 	%rd28, %r355;
	add.s64 	%rd29, %rd28, %rd27;
	add.s64 	%rd30, %rd29, %rd26;
	add.s64 	%rd31, %rd30, %rd25;
	add.s64 	%rd32, %rd31, %rd23;
	shl.b64 	%rd33, %rd32, 2;
	add.s64 	%rd34, %rd2, %rd33;
	ld.global.u32 	%r3552, [%rd34+193536];
LBB0_15:                                // %L786
	ld.param.u64 	%rd3, [_Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_3];
	ld.param.u64 	%rd4, [_Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_4];
	// begin inline asm
	cvt.rn.f16x2.f32 %r276, %r278, %r277;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r279, %r281, %r278;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r314, %r316, %r315;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r317, %r319, %r318;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r338, %r340, %r339;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r341, %r343, %r342;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r344, %r346, %r345;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r347, %r340, %r339;
	// end inline asm
	mov.u32 	%r3545, 0;
	shr.u32 	%r37, %r1, 4;
	mul.lo.s32 	%r38, %r37, 10752;
	shl.b32 	%r370, %r1, 2;
	and.b32  	%r371, %r370, 60;
	shl.b32 	%r39, %r2, 7;
	or.b32  	%r40, %r371, %r38;
	or.b32  	%r41, %r370, 64;
	and.b32  	%r372, %r9, 30;
	or.b32  	%r373, %r37, %r372;
	mul.lo.s32 	%r42, %r373, 257;
	or.b32  	%r374, %r9, %r37;
	or.b32  	%r375, %r374, 32;
	mul.lo.s32 	%r43, %r375, 257;
	shr.u32 	%r376, %r3, 3;
	mul.lo.s32 	%r44, %r376, 257;
	and.b16  	%rs64, %rs284, 255;
	mul.lo.s16 	%rs65, %rs64, 171;
	shr.u16 	%rs66, %rs65, 12;
	mul.lo.s16 	%rs67, %rs66, 24;
	sub.s16 	%rs68, %rs284, %rs67;
	cvt.u32.u16 	%r377, %rs68;
	and.b32  	%r45, %r377, 255;
	and.b32  	%r46, %r4, 224;
	add.s32 	%r378, %r3, 24;
	shr.u32 	%r379, %r378, 3;
	mul.lo.s32 	%r47, %r379, 257;
	add.s32 	%r380, %r3, 48;
	shr.u32 	%r381, %r380, 3;
	mul.lo.s32 	%r48, %r381, 257;
	add.s32 	%r382, %r3, 72;
	shr.u32 	%r383, %r382, 3;
	mul.lo.s32 	%r49, %r383, 257;
	or.b32  	%r384, %r376, 12;
	mul.lo.s32 	%r50, %r384, 257;
	add.s32 	%r385, %r3, 120;
	shr.u32 	%r386, %r385, 3;
	mul.lo.s32 	%r51, %r386, 257;
	add.s32 	%r387, %r3, 144;
	shr.u32 	%r388, %r387, 3;
	mul.lo.s32 	%r52, %r388, 257;
	add.s32 	%r389, %r3, 168;
	shr.u32 	%r390, %r389, 3;
	mul.lo.s32 	%r53, %r390, 257;
	or.b32  	%r391, %r376, 24;
	mul.lo.s32 	%r54, %r391, 257;
	add.s32 	%r392, %r3, 216;
	shr.u32 	%r393, %r392, 3;
	mul.lo.s32 	%r55, %r393, 257;
	add.s32 	%r394, %r3, 240;
	shr.u32 	%r395, %r394, 3;
	mul.lo.s32 	%r56, %r395, 257;
	add.s32 	%r396, %r3, 264;
	shr.u32 	%r397, %r396, 3;
	mul.lo.s32 	%r57, %r397, 257;
	or.b32  	%r398, %r376, 36;
	mul.lo.s32 	%r58, %r398, 257;
	add.s32 	%r399, %r3, 312;
	shr.u32 	%r400, %r399, 3;
	mul.lo.s32 	%r59, %r400, 257;
	add.s32 	%r401, %r3, 336;
	shr.u32 	%r402, %r401, 3;
	mul.lo.s32 	%r60, %r402, 257;
	add.s32 	%r403, %r3, 360;
	shr.u32 	%r404, %r403, 3;
	mul.lo.s32 	%r61, %r404, 257;
	or.b32  	%r405, %r376, 48;
	mul.lo.s32 	%r62, %r405, 257;
	add.s32 	%r406, %r3, 408;
	shr.u32 	%r407, %r406, 3;
	mul.lo.s32 	%r63, %r407, 257;
	add.s32 	%r408, %r3, 432;
	shr.u32 	%r409, %r408, 3;
	mul.lo.s32 	%r64, %r409, 257;
	add.s32 	%r410, %r3, 456;
	shr.u32 	%r411, %r410, 3;
	mul.lo.s32 	%r65, %r411, 257;
	or.b32  	%r412, %r376, 60;
	mul.lo.s32 	%r66, %r412, 257;
	add.s32 	%r413, %r3, 504;
	bfe.u32 	%r414, %r413, 3, 6;
	mul.lo.s32 	%r67, %r414, 257;
	mul.lo.s32 	%r68, %r3550, 33;
	mul.lo.s32 	%r69, %r3549, 198;
	mul.lo.s32 	%r70, %r5, 4806;
	mul.lo.s32 	%r71, %r3548, 801;
	add.s32 	%r415, %r3547, %r3550;
	and.b32  	%r416, %r1, 1;
	mul.lo.s32 	%r417, %r416, 4112;
	add.s32 	%r418, %r415, %r417;
	bfe.u32 	%r419, %r1, 1, 1;
	mul.lo.s32 	%r420, %r419, 2056;
	add.s32 	%r421, %r418, %r420;
	bfe.u32 	%r422, %r1, 3, 1;
	mul.lo.s32 	%r423, %r422, 514;
	add.s32 	%r424, %r421, %r423;
	mul.lo.s32 	%r425, %r37, 257;
	add.s32 	%r426, %r424, %r425;
	and.b32  	%r427, %r6, 1;
	mul.lo.s32 	%r428, %r427, 1028;
	add.s32 	%r72, %r426, %r428;
	mul.wide.u32 	%rd35, %r72, 4;
	mov.u64 	%rd36, shmem;
	add.s64 	%rd6, %rd36, %rd35;
	cvt.u64.u32 	%rd37, %r428;
	cvt.u64.u32 	%rd38, %r425;
	cvt.u64.u32 	%rd39, %r423;
	cvt.u64.u32 	%rd40, %r420;
	cvt.u64.u32 	%rd41, %r417;
	cvt.u64.u32 	%rd42, %r3547;
	cvt.u64.u32 	%rd43, %r3550;
	add.s64 	%rd44, %rd43, %rd42;
	add.s64 	%rd45, %rd44, %rd41;
	add.s64 	%rd46, %rd45, %rd40;
	add.s64 	%rd47, %rd46, %rd39;
	add.s64 	%rd48, %rd47, %rd38;
	add.s64 	%rd49, %rd48, %rd37;
	shl.b64 	%rd50, %rd49, 2;
	add.s64 	%rd7, %rd36, %rd50;
	mul.lo.s32 	%r73, %r5, 6;
	add.s32 	%r429, %r3548, %r73;
	and.b32  	%r430, %r3, 1;
	mul.lo.s32 	%r74, %r430, 4112;
	add.s32 	%r431, %r429, %r74;
	bfe.u32 	%r432, %r3, 1, 1;
	mul.lo.s32 	%r75, %r432, 2056;
	add.s32 	%r433, %r431, %r75;
	bfe.u32 	%r434, %r3, 3, 1;
	mul.lo.s32 	%r76, %r434, 514;
	add.s32 	%r435, %r433, %r76;
	shr.u32 	%r436, %r3, 4;
	mul.lo.s32 	%r77, %r436, 257;
	add.s32 	%r437, %r435, %r77;
	bfe.u32 	%r438, %r3, 2, 1;
	mul.lo.s32 	%r78, %r438, 1028;
	add.s32 	%r439, %r437, %r78;
	mul.wide.u32 	%rd51, %r439, 4;
	add.s64 	%rd8, %rd36, %rd51;
	cvt.u64.u32 	%rd52, %r78;
	cvt.u64.u32 	%rd53, %r77;
	cvt.u64.u32 	%rd54, %r76;
	cvt.u64.u32 	%rd55, %r75;
	cvt.u64.u32 	%rd56, %r74;
	cvt.u64.u32 	%rd57, %r3548;
	cvt.u64.u32 	%rd58, %r73;
	add.s64 	%rd59, %rd58, %rd57;
	add.s64 	%rd60, %rd59, %rd56;
	add.s64 	%rd61, %rd60, %rd55;
	add.s64 	%rd62, %rd61, %rd54;
	add.s64 	%rd63, %rd62, %rd53;
	add.s64 	%rd64, %rd63, %rd52;
	shl.b64 	%rd65, %rd64, 2;
	add.s64 	%rd9, %rd36, %rd65;
	cvt.u16.u32 	%rs69, %r3;
	shl.b16 	%rs70, %rs69, 1;
	and.b16  	%rs71, %rs70, 254;
	mul.lo.s16 	%rs72, %rs71, 171;
	shr.u16 	%rs73, %rs72, 13;
	mul.lo.s16 	%rs74, %rs73, 48;
	sub.s16 	%rs75, %rs70, %rs74;
	and.b16  	%rs76, %rs75, 254;
	mul.wide.u16 	%r79, %rs76, 24;
	mul.lo.s32 	%r80, %r2, 1152;
	or.b16  	%rs77, %rs70, 1;
	and.b16  	%rs78, %rs77, 255;
	mul.lo.s16 	%rs79, %rs78, 171;
	shr.u16 	%rs80, %rs79, 13;
	mul.lo.s16 	%rs81, %rs80, 48;
	sub.s16 	%rs82, %rs77, %rs81;
	and.b16  	%rs83, %rs82, 255;
	mul.wide.u16 	%r81, %rs83, 24;
	cvt.u64.u32 	%rd66, %r71;
	cvt.u64.u32 	%rd67, %r70;
	cvt.u64.u32 	%rd68, %r69;
	cvt.u64.u32 	%rd69, %r68;
	add.s64 	%rd70, %rd69, %rd68;
	add.s64 	%rd71, %rd70, %rd67;
	add.s64 	%rd72, %rd71, %rd66;
	shl.b64 	%rd73, %rd72, 2;
	add.s64 	%rd10, %rd36, %rd73;
	setp.gt.u32 	%p47, %r3, 7;
	setp.eq.s32 	%p48, %r37, 1;
	setp.lt.u32 	%p50, %r1, 24;
	mov.u32 	%r3553, %r3545;
	mov.u32 	%r3584, %r3545;
	mov.u32 	%r3585, %r3545;
	mov.u32 	%r3586, %r3545;
	mov.u32 	%r3587, %r3545;
	bra.uni 	LBB0_16;
LBB0_37:                                // %guard_pass14622
                                        //   in Loop: Header=BB0_16 Depth=1
	add.s32 	%r274, %r3553, 48;
	setp.ne.s32 	%p76, %r3553, 2016;
	mov.u32 	%r3553, %r274;
	@%p76 bra 	LBB0_16;
	bra.uni 	LBB0_38;
LBB0_16:                                // %L789
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_18 Depth 2
                                        //     Child Loop BB0_28 Depth 2
	mul.hi.u32 	%r633, %r3553, -1431655765;
	shr.u32 	%r634, %r633, 5;
	mul.lo.s32 	%r87, %r634, 48;
	add.s32 	%r635, %r3, %r87;
	cvt.u16.u32 	%rs84, %r635;
	mul.hi.s16 	%rs85, %rs84, 16257;
	shr.u16 	%rs86, %rs85, 15;
	shr.s16 	%rs87, %rs85, 9;
	add.s16 	%rs88, %rs87, %rs86;
	mul.lo.s16 	%rs89, %rs88, 2064;
	sub.s16 	%rs90, %rs84, %rs89;
	mul.wide.s16 	%r636, %rs90, 21504;
	add.s32 	%r637, %r40, %r636;
	add.s32 	%r638, %r637, %r39;
	mul.wide.s32 	%rd74, %r638, 4;
	add.s64 	%rd75, %rd3, %rd74;
	ld.global.v4.u32 	{%r639, %r640, %r641, %r642}, [%rd75];
	add.s32 	%r643, %r636, %r38;
	or.b32  	%r644, %r41, %r643;
	add.s32 	%r645, %r644, %r39;
	mul.wide.s32 	%rd76, %r645, 4;
	add.s64 	%rd77, %rd3, %rd76;
	ld.global.v4.u32 	{%r646, %r647, %r648, %r649}, [%rd77];
	add.s16 	%rs91, %rs84, 24;
	mul.hi.s16 	%rs92, %rs91, 16257;
	shr.u16 	%rs93, %rs92, 15;
	shr.s16 	%rs94, %rs92, 9;
	add.s16 	%rs95, %rs94, %rs93;
	mul.lo.s16 	%rs96, %rs95, 2064;
	sub.s16 	%rs97, %rs91, %rs96;
	mul.wide.s16 	%r650, %rs97, 21504;
	add.s32 	%r651, %r40, %r650;
	add.s32 	%r652, %r651, %r39;
	mul.wide.s32 	%rd78, %r652, 4;
	add.s64 	%rd79, %rd3, %rd78;
	ld.global.v4.u32 	{%r653, %r654, %r655, %r656}, [%rd79];
	add.s32 	%r657, %r650, %r38;
	or.b32  	%r658, %r41, %r657;
	add.s32 	%r659, %r658, %r39;
	mul.wide.s32 	%rd80, %r659, 4;
	add.s64 	%rd81, %rd3, %rd80;
	ld.global.v4.u32 	{%r660, %r661, %r662, %r663}, [%rd81];
	selp.b32 	%r664, %r639, %r641, %p48;
	shfl.sync.bfly.b32	%r665, %r664, 16, 31, -1;
	selp.b32 	%r442, %r665, %r639, %p48;
	selp.b32 	%r447, %r641, %r665, %p48;
	selp.b32 	%r666, %r640, %r642, %p48;
	shfl.sync.bfly.b32	%r667, %r666, 16, 31, -1;
	selp.b32 	%r450, %r667, %r640, %p48;
	selp.b32 	%r455, %r642, %r667, %p48;
	selp.b32 	%r668, %r646, %r648, %p48;
	shfl.sync.bfly.b32	%r669, %r668, 16, 31, -1;
	selp.b32 	%r458, %r669, %r646, %p48;
	selp.b32 	%r463, %r648, %r669, %p48;
	selp.b32 	%r670, %r647, %r649, %p48;
	shfl.sync.bfly.b32	%r671, %r670, 16, 31, -1;
	selp.b32 	%r466, %r671, %r647, %p48;
	selp.b32 	%r471, %r649, %r671, %p48;
	selp.b32 	%r672, %r653, %r655, %p48;
	shfl.sync.bfly.b32	%r673, %r672, 16, 31, -1;
	selp.b32 	%r474, %r673, %r653, %p48;
	selp.b32 	%r479, %r655, %r673, %p48;
	selp.b32 	%r674, %r654, %r656, %p48;
	shfl.sync.bfly.b32	%r675, %r674, 16, 31, -1;
	selp.b32 	%r482, %r675, %r654, %p48;
	selp.b32 	%r487, %r656, %r675, %p48;
	selp.b32 	%r676, %r660, %r662, %p48;
	shfl.sync.bfly.b32	%r677, %r676, 16, 31, -1;
	selp.b32 	%r490, %r677, %r660, %p48;
	selp.b32 	%r495, %r662, %r677, %p48;
	selp.b32 	%r678, %r661, %r663, %p48;
	shfl.sync.bfly.b32	%r679, %r678, 16, 31, -1;
	selp.b32 	%r498, %r679, %r661, %p48;
	selp.b32 	%r503, %r663, %r679, %p48;
	shl.b32 	%r443, %r447, 4;
	mov.u32 	%r441, 252645135;
	// begin inline asm
	lop3.b32 %r505, %r441, %r442, %r443, 202;
	// end inline asm
	shr.u32 	%r446, %r442, 4;
	// begin inline asm
	lop3.b32 %r521, %r441, %r446, %r447, 202;
	// end inline asm
	shl.b32 	%r451, %r455, 4;
	// begin inline asm
	lop3.b32 %r513, %r441, %r450, %r451, 202;
	// end inline asm
	shr.u32 	%r454, %r450, 4;
	// begin inline asm
	lop3.b32 %r529, %r441, %r454, %r455, 202;
	// end inline asm
	shl.b32 	%r459, %r463, 4;
	// begin inline asm
	lop3.b32 %r537, %r441, %r458, %r459, 202;
	// end inline asm
	shr.u32 	%r462, %r458, 4;
	// begin inline asm
	lop3.b32 %r553, %r441, %r462, %r463, 202;
	// end inline asm
	shl.b32 	%r467, %r471, 4;
	// begin inline asm
	lop3.b32 %r545, %r441, %r466, %r467, 202;
	// end inline asm
	shr.u32 	%r470, %r466, 4;
	// begin inline asm
	lop3.b32 %r561, %r441, %r470, %r471, 202;
	// end inline asm
	shl.b32 	%r475, %r479, 4;
	// begin inline asm
	lop3.b32 %r506, %r441, %r474, %r475, 202;
	// end inline asm
	shr.u32 	%r478, %r474, 4;
	// begin inline asm
	lop3.b32 %r522, %r441, %r478, %r479, 202;
	// end inline asm
	shl.b32 	%r483, %r487, 4;
	// begin inline asm
	lop3.b32 %r514, %r441, %r482, %r483, 202;
	// end inline asm
	shr.u32 	%r486, %r482, 4;
	// begin inline asm
	lop3.b32 %r530, %r441, %r486, %r487, 202;
	// end inline asm
	shl.b32 	%r491, %r495, 4;
	// begin inline asm
	lop3.b32 %r538, %r441, %r490, %r491, 202;
	// end inline asm
	shr.u32 	%r494, %r490, 4;
	// begin inline asm
	lop3.b32 %r554, %r441, %r494, %r495, 202;
	// end inline asm
	shl.b32 	%r499, %r503, 4;
	// begin inline asm
	lop3.b32 %r546, %r441, %r498, %r499, 202;
	// end inline asm
	shr.u32 	%r502, %r498, 4;
	// begin inline asm
	lop3.b32 %r562, %r441, %r502, %r503, 202;
	// end inline asm
	mov.u32 	%r507, 25152;
	// begin inline asm
	prmt.b32 %r569, %r505, %r506, %r507;
	// end inline asm
	mov.u32 	%r511, 29521;
	// begin inline asm
	prmt.b32 %r601, %r505, %r506, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r577, %r513, %r514, %r507;
	// end inline asm
	// begin inline asm
	prmt.b32 %r609, %r513, %r514, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r570, %r521, %r522, %r507;
	// end inline asm
	// begin inline asm
	prmt.b32 %r602, %r521, %r522, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r578, %r529, %r530, %r507;
	// end inline asm
	// begin inline asm
	prmt.b32 %r610, %r529, %r530, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r585, %r537, %r538, %r507;
	// end inline asm
	// begin inline asm
	prmt.b32 %r617, %r537, %r538, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r593, %r545, %r546, %r507;
	// end inline asm
	// begin inline asm
	prmt.b32 %r625, %r545, %r546, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r586, %r553, %r554, %r507;
	// end inline asm
	// begin inline asm
	prmt.b32 %r618, %r553, %r554, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r594, %r561, %r562, %r507;
	// end inline asm
	// begin inline asm
	prmt.b32 %r626, %r561, %r562, %r511;
	// end inline asm
	mov.u32 	%r627, 21520;
	// begin inline asm
	prmt.b32 %r568, %r569, %r570, %r627;
	// end inline asm
	mov.u32 	%r631, 30258;
	// begin inline asm
	prmt.b32 %r572, %r569, %r570, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r576, %r577, %r578, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r580, %r577, %r578, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r584, %r585, %r586, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r588, %r585, %r586, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r592, %r593, %r594, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r596, %r593, %r594, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r600, %r601, %r602, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r604, %r601, %r602, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r608, %r609, %r610, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r612, %r609, %r610, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r616, %r617, %r618, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r620, %r617, %r618, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r624, %r625, %r626, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r628, %r625, %r626, %r631;
	// end inline asm
	mul.hi.s16 	%rs98, %rs84, 10923;
	shr.u16 	%rs99, %rs98, 15;
	shr.s16 	%rs100, %rs98, 2;
	add.s16 	%rs101, %rs100, %rs99;
	mul.lo.s16 	%rs102, %rs101, 24;
	sub.s16 	%rs103, %rs84, %rs102;
	cvt.s32.s16 	%r680, %rs103;
	add.s32 	%r681, %r42, %r680;
	mul.wide.s32 	%rd82, %r681, 4;
	add.s64 	%rd84, %rd36, %rd82;
	st.shared.u32 	[%rd84], %r568;
	st.shared.u32 	[%rd84+512], %r576;
	st.shared.u32 	[%rd84+256], %r572;
	st.shared.u32 	[%rd84+768], %r580;
	add.s32 	%r682, %r43, %r680;
	mul.wide.s32 	%rd85, %r682, 4;
	add.s64 	%rd86, %rd36, %rd85;
	st.shared.u32 	[%rd86], %r584;
	st.shared.u32 	[%rd86+512], %r592;
	st.shared.u32 	[%rd86+256], %r588;
	st.shared.u32 	[%rd86+768], %r596;
	st.shared.u32 	[%rd84+128], %r600;
	st.shared.u32 	[%rd84+640], %r608;
	st.shared.u32 	[%rd84+384], %r604;
	st.shared.u32 	[%rd84+896], %r612;
	st.shared.u32 	[%rd86+128], %r616;
	st.shared.u32 	[%rd86+640], %r624;
	st.shared.u32 	[%rd86+384], %r620;
	st.shared.u32 	[%rd86+896], %r628;
	bar.sync 	0;
	add.s32 	%r683, %r87, %r45;
	cvt.u16.u32 	%rs104, %r683;
	mul.hi.s16 	%rs105, %rs104, 10923;
	shr.u16 	%rs106, %rs105, 15;
	shr.s16 	%rs107, %rs105, 2;
	add.s16 	%rs108, %rs107, %rs106;
	mul.lo.s16 	%rs109, %rs108, 24;
	sub.s16 	%rs110, %rs104, %rs109;
	cvt.s32.s16 	%r684, %rs110;
	add.s32 	%r685, %r44, %r684;
	add.s32 	%r686, %r685, %r46;
	mul.wide.s32 	%rd87, %r686, 4;
	add.s64 	%rd88, %rd36, %rd87;
	ld.shared.u32 	%r687, [%rd88];
	add.s32 	%r688, %r47, %r684;
	add.s32 	%r689, %r688, %r46;
	mul.wide.u32 	%rd89, %r689, 4;
	add.s64 	%rd90, %rd36, %rd89;
	ld.shared.u32 	%r690, [%rd90];
	add.s32 	%r691, %r48, %r684;
	add.s32 	%r692, %r691, %r46;
	mul.wide.u32 	%rd91, %r692, 4;
	add.s64 	%rd92, %rd36, %rd91;
	ld.shared.u32 	%r693, [%rd92];
	add.s32 	%r694, %r49, %r684;
	add.s32 	%r695, %r694, %r46;
	mul.wide.u32 	%rd93, %r695, 4;
	add.s64 	%rd94, %rd36, %rd93;
	ld.shared.u32 	%r696, [%rd94];
	add.s32 	%r697, %r50, %r684;
	add.s32 	%r698, %r697, %r46;
	mul.wide.s32 	%rd95, %r698, 4;
	add.s64 	%rd96, %rd36, %rd95;
	ld.shared.u32 	%r699, [%rd96];
	add.s32 	%r700, %r51, %r684;
	add.s32 	%r701, %r700, %r46;
	mul.wide.u32 	%rd97, %r701, 4;
	add.s64 	%rd98, %rd36, %rd97;
	ld.shared.u32 	%r702, [%rd98];
	add.s32 	%r703, %r52, %r684;
	add.s32 	%r704, %r703, %r46;
	mul.wide.u32 	%rd99, %r704, 4;
	add.s64 	%rd100, %rd36, %rd99;
	ld.shared.u32 	%r705, [%rd100];
	add.s32 	%r706, %r53, %r684;
	add.s32 	%r707, %r706, %r46;
	mul.wide.u32 	%rd101, %r707, 4;
	add.s64 	%rd102, %rd36, %rd101;
	ld.shared.u32 	%r708, [%rd102];
	add.s32 	%r709, %r54, %r684;
	add.s32 	%r710, %r709, %r46;
	mul.wide.s32 	%rd103, %r710, 4;
	add.s64 	%rd104, %rd36, %rd103;
	ld.shared.u32 	%r711, [%rd104];
	add.s32 	%r712, %r55, %r684;
	add.s32 	%r713, %r712, %r46;
	mul.wide.u32 	%rd105, %r713, 4;
	add.s64 	%rd106, %rd36, %rd105;
	ld.shared.u32 	%r714, [%rd106];
	add.s32 	%r715, %r56, %r684;
	add.s32 	%r716, %r715, %r46;
	mul.wide.u32 	%rd107, %r716, 4;
	add.s64 	%rd108, %rd36, %rd107;
	ld.shared.u32 	%r717, [%rd108];
	add.s32 	%r718, %r57, %r684;
	add.s32 	%r719, %r718, %r46;
	mul.wide.u32 	%rd109, %r719, 4;
	add.s64 	%rd110, %rd36, %rd109;
	ld.shared.u32 	%r720, [%rd110];
	add.s32 	%r721, %r58, %r684;
	add.s32 	%r722, %r721, %r46;
	mul.wide.s32 	%rd111, %r722, 4;
	add.s64 	%rd112, %rd36, %rd111;
	ld.shared.u32 	%r723, [%rd112];
	add.s32 	%r724, %r59, %r684;
	add.s32 	%r725, %r724, %r46;
	mul.wide.u32 	%rd113, %r725, 4;
	add.s64 	%rd114, %rd36, %rd113;
	ld.shared.u32 	%r726, [%rd114];
	add.s32 	%r727, %r60, %r684;
	add.s32 	%r728, %r727, %r46;
	mul.wide.u32 	%rd115, %r728, 4;
	add.s64 	%rd116, %rd36, %rd115;
	ld.shared.u32 	%r729, [%rd116];
	add.s32 	%r730, %r61, %r684;
	add.s32 	%r731, %r730, %r46;
	mul.wide.u32 	%rd117, %r731, 4;
	add.s64 	%rd118, %rd36, %rd117;
	ld.shared.u32 	%r732, [%rd118];
	add.s32 	%r733, %r62, %r684;
	add.s32 	%r734, %r733, %r46;
	mul.wide.s32 	%rd119, %r734, 4;
	add.s64 	%rd120, %rd36, %rd119;
	ld.shared.u32 	%r735, [%rd120];
	add.s32 	%r736, %r63, %r684;
	add.s32 	%r737, %r736, %r46;
	mul.wide.u32 	%rd121, %r737, 4;
	add.s64 	%rd122, %rd36, %rd121;
	ld.shared.u32 	%r738, [%rd122];
	add.s32 	%r739, %r64, %r684;
	add.s32 	%r740, %r739, %r46;
	mul.wide.u32 	%rd123, %r740, 4;
	add.s64 	%rd124, %rd36, %rd123;
	ld.shared.u32 	%r741, [%rd124];
	add.s32 	%r742, %r65, %r684;
	add.s32 	%r743, %r742, %r46;
	mul.wide.u32 	%rd125, %r743, 4;
	add.s64 	%rd126, %rd36, %rd125;
	ld.shared.u32 	%r744, [%rd126];
	add.s32 	%r745, %r66, %r684;
	add.s32 	%r746, %r745, %r46;
	mul.wide.s32 	%rd127, %r746, 4;
	add.s64 	%rd128, %rd36, %rd127;
	ld.shared.u32 	%r747, [%rd128];
	add.s32 	%r748, %r67, %r684;
	add.s32 	%r749, %r748, %r46;
	mul.wide.s32 	%rd129, %r749, 4;
	add.s64 	%rd130, %rd36, %rd129;
	ld.shared.u32 	%r750, [%rd130];
	bar.sync 	0;
	shfl.sync.idx.b32	%r751, %r3546, 0, 31, -1;
	shfl.sync.idx.b32	%r752, %r3546, 1, 31, -1;
	shfl.sync.idx.b32	%r753, %r3546, 2, 31, -1;
	shfl.sync.idx.b32	%r754, %r3546, 3, 31, -1;
	shfl.sync.idx.b32	%r755, %r3546, 4, 31, -1;
	shfl.sync.idx.b32	%r756, %r3546, 5, 31, -1;
	shfl.sync.idx.b32	%r757, %r3546, 6, 31, -1;
	shfl.sync.idx.b32	%r758, %r3546, 7, 31, -1;
	shfl.sync.idx.b32	%r759, %r3546, 8, 31, -1;
	shfl.sync.idx.b32	%r760, %r3546, 9, 31, -1;
	shfl.sync.idx.b32	%r761, %r3546, 10, 31, -1;
	shfl.sync.idx.b32	%r762, %r3546, 11, 31, -1;
	shfl.sync.idx.b32	%r763, %r3546, 12, 31, -1;
	shfl.sync.idx.b32	%r764, %r3546, 13, 31, -1;
	shfl.sync.idx.b32	%r765, %r3546, 14, 31, -1;
	shfl.sync.idx.b32	%r766, %r3546, 15, 31, -1;
	shfl.sync.idx.b32	%r767, %r3546, 16, 31, -1;
	shfl.sync.idx.b32	%r768, %r3546, 17, 31, -1;
	shfl.sync.idx.b32	%r769, %r3546, 18, 31, -1;
	shfl.sync.idx.b32	%r770, %r3546, 19, 31, -1;
	shfl.sync.idx.b32	%r771, %r3546, 20, 31, -1;
	shfl.sync.idx.b32	%r772, %r3546, 21, 31, -1;
	shfl.sync.idx.b32	%r773, %r3546, 22, 31, -1;
	shfl.sync.idx.b32	%r774, %r3546, 23, 31, -1;
	add.s32 	%r775, %r751, %r684;
	mul.wide.s32 	%rd131, %r775, 4;
	add.s64 	%rd132, %rd36, %rd131;
	st.shared.u32 	[%rd132], %r687;
	add.s32 	%r776, %r752, %r684;
	mul.wide.s32 	%rd133, %r776, 4;
	add.s64 	%rd134, %rd36, %rd133;
	st.shared.u32 	[%rd134], %r690;
	add.s32 	%r777, %r753, %r684;
	mul.wide.s32 	%rd135, %r777, 4;
	add.s64 	%rd136, %rd36, %rd135;
	st.shared.u32 	[%rd136], %r693;
	add.s32 	%r778, %r754, %r684;
	mul.wide.s32 	%rd137, %r778, 4;
	add.s64 	%rd138, %rd36, %rd137;
	st.shared.u32 	[%rd138], %r696;
	add.s32 	%r779, %r755, %r684;
	mul.wide.s32 	%rd139, %r779, 4;
	add.s64 	%rd140, %rd36, %rd139;
	st.shared.u32 	[%rd140], %r699;
	add.s32 	%r780, %r756, %r684;
	mul.wide.s32 	%rd141, %r780, 4;
	add.s64 	%rd142, %rd36, %rd141;
	st.shared.u32 	[%rd142], %r702;
	add.s32 	%r781, %r757, %r684;
	mul.wide.s32 	%rd143, %r781, 4;
	add.s64 	%rd144, %rd36, %rd143;
	st.shared.u32 	[%rd144], %r705;
	add.s32 	%r782, %r758, %r684;
	mul.wide.s32 	%rd145, %r782, 4;
	add.s64 	%rd146, %rd36, %rd145;
	st.shared.u32 	[%rd146], %r708;
	add.s32 	%r783, %r759, %r684;
	mul.wide.s32 	%rd147, %r783, 4;
	add.s64 	%rd148, %rd36, %rd147;
	st.shared.u32 	[%rd148], %r711;
	add.s32 	%r784, %r760, %r684;
	mul.wide.s32 	%rd149, %r784, 4;
	add.s64 	%rd150, %rd36, %rd149;
	st.shared.u32 	[%rd150], %r714;
	add.s32 	%r785, %r761, %r684;
	mul.wide.s32 	%rd151, %r785, 4;
	add.s64 	%rd152, %rd36, %rd151;
	st.shared.u32 	[%rd152], %r717;
	add.s32 	%r786, %r762, %r684;
	mul.wide.s32 	%rd153, %r786, 4;
	add.s64 	%rd154, %rd36, %rd153;
	st.shared.u32 	[%rd154], %r720;
	add.s32 	%r787, %r763, %r684;
	mul.wide.s32 	%rd155, %r787, 4;
	add.s64 	%rd156, %rd36, %rd155;
	st.shared.u32 	[%rd156], %r723;
	add.s32 	%r788, %r764, %r684;
	mul.wide.s32 	%rd157, %r788, 4;
	add.s64 	%rd158, %rd36, %rd157;
	st.shared.u32 	[%rd158], %r726;
	add.s32 	%r789, %r765, %r684;
	mul.wide.s32 	%rd159, %r789, 4;
	add.s64 	%rd160, %rd36, %rd159;
	st.shared.u32 	[%rd160], %r729;
	add.s32 	%r790, %r766, %r684;
	mul.wide.s32 	%rd161, %r790, 4;
	add.s64 	%rd162, %rd36, %rd161;
	st.shared.u32 	[%rd162], %r732;
	add.s32 	%r791, %r767, %r684;
	mul.wide.s32 	%rd163, %r791, 4;
	add.s64 	%rd164, %rd36, %rd163;
	st.shared.u32 	[%rd164], %r735;
	add.s32 	%r792, %r768, %r684;
	mul.wide.s32 	%rd165, %r792, 4;
	add.s64 	%rd166, %rd36, %rd165;
	st.shared.u32 	[%rd166], %r738;
	add.s32 	%r793, %r769, %r684;
	mul.wide.s32 	%rd167, %r793, 4;
	add.s64 	%rd168, %rd36, %rd167;
	st.shared.u32 	[%rd168], %r741;
	add.s32 	%r794, %r770, %r684;
	mul.wide.s32 	%rd169, %r794, 4;
	add.s64 	%rd170, %rd36, %rd169;
	st.shared.u32 	[%rd170], %r744;
	add.s32 	%r795, %r771, %r684;
	mul.wide.s32 	%rd171, %r795, 4;
	add.s64 	%rd172, %rd36, %rd171;
	st.shared.u32 	[%rd172], %r747;
	selp.b32 	%r796, 0, %r750, %p47;
	add.s32 	%r797, %r772, %r684;
	mul.wide.s32 	%rd173, %r797, 4;
	add.s64 	%rd174, %rd36, %rd173;
	st.shared.u32 	[%rd174], %r796;
	add.s32 	%r798, %r773, %r684;
	mul.wide.s32 	%rd175, %r798, 4;
	add.s64 	%rd176, %rd36, %rd175;
	st.shared.u32 	[%rd176], %r3545;
	add.s32 	%r799, %r774, %r684;
	mul.wide.s32 	%rd177, %r799, 4;
	add.s64 	%rd178, %rd36, %rd177;
	st.shared.u32 	[%rd178], %r3545;
	bar.sync 	0;
	mov.u32 	%r3558, %r3545;
	mov.u32 	%r3559, %r3545;
	mov.u32 	%r3560, %r3545;
	mov.u32 	%r3561, %r3545;
	mov.u32 	%r3562, %r3545;
	mov.u32 	%r3563, %r3545;
	mov.u32 	%r3564, %r3545;
	mov.u32 	%r3565, %r3545;
	mov.u32 	%r3566, %r3545;
	mov.u32 	%r3567, %r3545;
	mov.u32 	%r3568, %r3545;
	mov.u32 	%r3569, %r3545;
	mov.u32 	%r3570, %r3545;
	mov.u32 	%r3571, %r3545;
	mov.u32 	%r3572, %r3545;
	mov.u32 	%r3573, %r3545;
	mov.u32 	%r3574, %r3545;
	mov.u32 	%r3575, %r3545;
	mov.u32 	%r3576, %r3545;
	mov.u32 	%r3577, %r3545;
	mov.u32 	%r3578, %r3545;
	mov.u32 	%r3579, %r3545;
	mov.u32 	%r3580, %r3545;
	mov.u32 	%r3581, %r3545;
	@%p46 bra 	LBB0_41;
	bra.uni 	LBB0_17;
LBB0_41:                                // %oksrem3306
                                        //   in Loop: Header=BB0_16 Depth=1
	cvt.u16.u32 	%rs111, %r87;
	mul.hi.s16 	%rs112, %rs111, 10923;
	shr.u16 	%rs113, %rs112, 15;
	shr.s16 	%rs114, %rs112, 2;
	add.s16 	%rs115, %rs114, %rs113;
	mul.lo.s16 	%rs116, %rs115, 24;
	sub.s16 	%rs117, %rs111, %rs116;
	cvt.s32.s16 	%r800, %rs117;
	add.s32 	%r801, %r68, %r800;
	add.s32 	%r802, %r801, %r69;
	add.s32 	%r803, %r802, %r70;
	add.s32 	%r804, %r803, %r71;
	mul.wide.s32 	%rd179, %r804, 4;
	add.s64 	%rd181, %rd36, %rd179;
	ld.shared.u32 	%r3558, [%rd181];
	ld.shared.u32 	%r3559, [%rd10+4];
	ld.shared.u32 	%r3560, [%rd10+8];
	ld.shared.u32 	%r3561, [%rd10+12];
	ld.shared.u32 	%r3562, [%rd10+16];
	ld.shared.u32 	%r3563, [%rd10+20];
	ld.shared.u32 	%r3564, [%rd10+24];
	ld.shared.u32 	%r3565, [%rd10+28];
	ld.shared.u32 	%r3566, [%rd10+32];
	ld.shared.u32 	%r3567, [%rd10+36];
	ld.shared.u32 	%r3568, [%rd10+40];
	ld.shared.u32 	%r3569, [%rd10+44];
	ld.shared.u32 	%r3570, [%rd10+48];
	ld.shared.u32 	%r3571, [%rd10+52];
	ld.shared.u32 	%r3572, [%rd10+56];
	ld.shared.u32 	%r3573, [%rd10+60];
	add.s16 	%rs118, %rs111, 16;
	mul.hi.s16 	%rs119, %rs118, 10923;
	shr.u16 	%rs120, %rs119, 15;
	shr.s16 	%rs121, %rs119, 2;
	add.s16 	%rs122, %rs121, %rs120;
	mul.lo.s16 	%rs123, %rs122, 24;
	sub.s16 	%rs124, %rs118, %rs123;
	cvt.s32.s16 	%r805, %rs124;
	add.s32 	%r806, %r68, %r805;
	add.s32 	%r807, %r806, %r69;
	add.s32 	%r808, %r807, %r70;
	add.s32 	%r809, %r808, %r71;
	mul.wide.s32 	%rd182, %r809, 4;
	add.s64 	%rd183, %rd36, %rd182;
	ld.shared.u32 	%r3574, [%rd183];
	add.s16 	%rs125, %rs111, 17;
	mul.hi.s16 	%rs126, %rs125, 10923;
	shr.u16 	%rs127, %rs126, 15;
	shr.s16 	%rs128, %rs126, 2;
	add.s16 	%rs129, %rs128, %rs127;
	mul.lo.s16 	%rs130, %rs129, 24;
	sub.s16 	%rs131, %rs125, %rs130;
	cvt.s32.s16 	%r810, %rs131;
	add.s32 	%r811, %r68, %r810;
	add.s32 	%r812, %r811, %r69;
	add.s32 	%r813, %r812, %r70;
	add.s32 	%r814, %r813, %r71;
	mul.wide.s32 	%rd184, %r814, 4;
	add.s64 	%rd185, %rd36, %rd184;
	ld.shared.u32 	%r3575, [%rd185];
	add.s16 	%rs132, %rs111, 18;
	mul.hi.s16 	%rs133, %rs132, 10923;
	shr.u16 	%rs134, %rs133, 15;
	shr.s16 	%rs135, %rs133, 2;
	add.s16 	%rs136, %rs135, %rs134;
	mul.lo.s16 	%rs137, %rs136, 24;
	sub.s16 	%rs138, %rs132, %rs137;
	cvt.s32.s16 	%r815, %rs138;
	add.s32 	%r816, %r68, %r815;
	add.s32 	%r817, %r816, %r69;
	add.s32 	%r818, %r817, %r70;
	add.s32 	%r819, %r818, %r71;
	mul.wide.s32 	%rd186, %r819, 4;
	add.s64 	%rd187, %rd36, %rd186;
	ld.shared.u32 	%r3576, [%rd187];
	add.s16 	%rs139, %rs111, 19;
	mul.hi.s16 	%rs140, %rs139, 10923;
	shr.u16 	%rs141, %rs140, 15;
	shr.s16 	%rs142, %rs140, 2;
	add.s16 	%rs143, %rs142, %rs141;
	mul.lo.s16 	%rs144, %rs143, 24;
	sub.s16 	%rs145, %rs139, %rs144;
	cvt.s32.s16 	%r820, %rs145;
	add.s32 	%r821, %r68, %r820;
	add.s32 	%r822, %r821, %r69;
	add.s32 	%r823, %r822, %r70;
	add.s32 	%r824, %r823, %r71;
	mul.wide.s32 	%rd188, %r824, 4;
	add.s64 	%rd189, %rd36, %rd188;
	ld.shared.u32 	%r3577, [%rd189];
	add.s16 	%rs146, %rs111, 20;
	mul.hi.s16 	%rs147, %rs146, 10923;
	shr.u16 	%rs148, %rs147, 15;
	shr.s16 	%rs149, %rs147, 2;
	add.s16 	%rs150, %rs149, %rs148;
	mul.lo.s16 	%rs151, %rs150, 24;
	sub.s16 	%rs152, %rs146, %rs151;
	cvt.s32.s16 	%r825, %rs152;
	add.s32 	%r826, %r68, %r825;
	add.s32 	%r827, %r826, %r69;
	add.s32 	%r828, %r827, %r70;
	add.s32 	%r829, %r828, %r71;
	mul.wide.s32 	%rd190, %r829, 4;
	add.s64 	%rd191, %rd36, %rd190;
	ld.shared.u32 	%r3578, [%rd191];
	add.s16 	%rs153, %rs111, 21;
	mul.hi.s16 	%rs154, %rs153, 10923;
	shr.u16 	%rs155, %rs154, 15;
	shr.s16 	%rs156, %rs154, 2;
	add.s16 	%rs157, %rs156, %rs155;
	mul.lo.s16 	%rs158, %rs157, 24;
	sub.s16 	%rs159, %rs153, %rs158;
	cvt.s32.s16 	%r830, %rs159;
	add.s32 	%r831, %r68, %r830;
	add.s32 	%r832, %r831, %r69;
	add.s32 	%r833, %r832, %r70;
	add.s32 	%r834, %r833, %r71;
	mul.wide.s32 	%rd192, %r834, 4;
	add.s64 	%rd193, %rd36, %rd192;
	ld.shared.u32 	%r3579, [%rd193];
	add.s16 	%rs160, %rs111, 22;
	mul.hi.s16 	%rs161, %rs160, 10923;
	shr.u16 	%rs162, %rs161, 15;
	shr.s16 	%rs163, %rs161, 2;
	add.s16 	%rs164, %rs163, %rs162;
	mul.lo.s16 	%rs165, %rs164, 24;
	sub.s16 	%rs166, %rs160, %rs165;
	cvt.s32.s16 	%r835, %rs166;
	add.s32 	%r836, %r68, %r835;
	add.s32 	%r837, %r836, %r69;
	add.s32 	%r838, %r837, %r70;
	add.s32 	%r839, %r838, %r71;
	mul.wide.s32 	%rd194, %r839, 4;
	add.s64 	%rd195, %rd36, %rd194;
	ld.shared.u32 	%r3580, [%rd195];
	add.s16 	%rs167, %rs111, 23;
	mul.hi.s16 	%rs168, %rs167, 10923;
	shr.u16 	%rs169, %rs168, 15;
	shr.s16 	%rs170, %rs168, 2;
	add.s16 	%rs171, %rs170, %rs169;
	mul.lo.s16 	%rs172, %rs171, 24;
	sub.s16 	%rs173, %rs167, %rs172;
	cvt.s32.s16 	%r840, %rs173;
	add.s32 	%r841, %r68, %r840;
	add.s32 	%r842, %r841, %r69;
	add.s32 	%r843, %r842, %r70;
	add.s32 	%r844, %r843, %r71;
	mul.wide.s32 	%rd196, %r844, 4;
	add.s64 	%rd197, %rd36, %rd196;
	ld.shared.u32 	%r3581, [%rd197];
LBB0_17:                                // %L12775
                                        //   in Loop: Header=BB0_16 Depth=1
	bar.sync 	0;
	add.s32 	%r112, %r87, 1;
	add.s32 	%r113, %r87, 2;
	add.s32 	%r114, %r87, 3;
	mov.u32 	%r3582, 12;
	mov.u32 	%r3583, %r3545;
	bra.uni 	LBB0_18;
LBB0_25:                                // %L24042
                                        //   in Loop: Header=BB0_18 Depth=2
	add.s32 	%r3585, %r3585, 1;
	mov.u32 	%r3584, 0;
	mov.u32 	%r3586, %r3584;
	mov.u32 	%r3587, %r3584;
LBB0_26:                                // %L24043
                                        //   in Loop: Header=BB0_18 Depth=2
	bar.sync 	0;
	add.s32 	%r3583, %r3583, 1;
	add.s32 	%r3582, %r3582, -4;
	setp.ne.s32 	%p62, %r3582, -12;
	@%p62 bra 	LBB0_18;
	bra.uni 	LBB0_27;
LBB0_18:                                // %L12801
                                        //   Parent Loop BB0_16 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.eq.s32 	%p51, %r3582, 12;
	selp.b32 	%r1384, %r3558, 0, %p51;
	setp.eq.s32 	%p52, %r3582, 8;
	selp.b32 	%r1385, %r3562, %r1384, %p52;
	setp.eq.s32 	%p53, %r3582, 4;
	selp.b32 	%r1386, %r3566, %r1385, %p53;
	setp.eq.s32 	%p54, %r3582, 0;
	selp.b32 	%r1387, %r3570, %r1386, %p54;
	setp.eq.s32 	%p55, %r3582, -4;
	selp.b32 	%r1388, %r3574, %r1387, %p55;
	setp.eq.s32 	%p56, %r3582, -8;
	selp.b32 	%r1389, %r3578, %r1388, %p56;
	selp.b32 	%r1390, %r3559, 0, %p51;
	selp.b32 	%r1391, %r3563, %r1390, %p52;
	selp.b32 	%r1392, %r3567, %r1391, %p53;
	selp.b32 	%r1393, %r3571, %r1392, %p54;
	selp.b32 	%r1394, %r3575, %r1393, %p55;
	selp.b32 	%r1395, %r3579, %r1394, %p56;
	selp.b32 	%r1396, %r3560, 0, %p51;
	selp.b32 	%r1397, %r3564, %r1396, %p52;
	selp.b32 	%r1398, %r3568, %r1397, %p53;
	selp.b32 	%r1399, %r3572, %r1398, %p54;
	selp.b32 	%r1400, %r3576, %r1399, %p55;
	selp.b32 	%r1401, %r3580, %r1400, %p56;
	selp.b32 	%r1402, %r3561, 0, %p51;
	selp.b32 	%r1403, %r3565, %r1402, %p52;
	selp.b32 	%r1404, %r3569, %r1403, %p53;
	selp.b32 	%r1405, %r3573, %r1404, %p54;
	selp.b32 	%r1406, %r3577, %r1405, %p55;
	selp.b32 	%r1407, %r3581, %r1406, %p56;
	mov.u16 	%rs211, 25600;
	// begin inline asm
	mov.b32 %r852, {%rs211, %rs211};
	// end inline asm
	mov.u16 	%rs213, 21504;
	// begin inline asm
	mov.b32 %r863, {%rs213, %rs213};
	// end inline asm
	xor.b32  	%r851, %r1389, -2004318072;
	mov.u32 	%r988, 983055;
	// begin inline asm
	lop3.b32 %r849, %r988, %r851, %r852, 202;
	// end inline asm
	mov.u16 	%rs217, 18432;
	// begin inline asm
	mov.b32 %r853, {%rs217, %rs217};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r854, %r852, %r853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r857, %r849, %r854;
	// end inline asm
	mov.u32 	%r999, 15728880;
	// begin inline asm
	lop3.b32 %r860, %r999, %r851, %r863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r864, {%rs217, %rs217};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r865, %r863, %r864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r868, %r860, %r865;
	// end inline asm
	// begin inline asm
	mov.b32 %r898, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	mov.b32 %r909, {%rs213, %rs213};
	// end inline asm
	xor.b32  	%r897, %r1395, -2004318072;
	// begin inline asm
	lop3.b32 %r895, %r988, %r897, %r898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r899, {%rs217, %rs217};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r900, %r898, %r899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r903, %r895, %r900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r906, %r999, %r897, %r909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs217, %rs217};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r911, %r909, %r910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r914, %r906, %r911;
	// end inline asm
	// begin inline asm
	mov.b32 %r944, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	mov.b32 %r955, {%rs213, %rs213};
	// end inline asm
	xor.b32  	%r943, %r1401, -2004318072;
	// begin inline asm
	lop3.b32 %r941, %r988, %r943, %r944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r945, {%rs217, %rs217};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r946, %r944, %r945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r949, %r941, %r946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r952, %r999, %r943, %r955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs217, %rs217};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r957, %r955, %r956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r960, %r952, %r957;
	// end inline asm
	// begin inline asm
	mov.b32 %r990, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	mov.b32 %r1001, {%rs213, %rs213};
	// end inline asm
	xor.b32  	%r989, %r1407, -2004318072;
	// begin inline asm
	lop3.b32 %r987, %r988, %r989, %r990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r991, {%rs217, %rs217};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r992, %r990, %r991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r995, %r987, %r992;
	// end inline asm
	// begin inline asm
	lop3.b32 %r998, %r999, %r989, %r1001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1002, {%rs217, %rs217};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1003, %r1001, %r1002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1006, %r998, %r1003;
	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3551;
    mov.b32 {%r2im, %r2re}, %r857;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1031, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3552;
    mov.b32 {%r2im, %r2re}, %r868;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1034, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3551;
    mov.b32 {%r2im, %r2re}, %r903;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1037, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3552;
    mov.b32 {%r2im, %r2re}, %r914;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1040, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3551;
    mov.b32 {%r2im, %r2re}, %r949;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1043, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3552;
    mov.b32 {%r2im, %r2re}, %r960;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1046, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3551;
    mov.b32 {%r2im, %r2re}, %r995;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1049, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3552;
    mov.b32 {%r2im, %r2re}, %r1006;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r1052, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1115, %r1118}, {%r279, %r276}, {%r1031}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1124, %r1127}, {%r279, %r276}, {%r1034}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1133, %r1136}, {%r279, %r276}, {%r1037}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1142, %r1145}, {%r279, %r276}, {%r1040}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1151, %r1154}, {%r279, %r276}, {%r1043}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1160, %r1163}, {%r279, %r276}, {%r1046}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1169, %r1172}, {%r279, %r276}, {%r1049}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1178, %r1181}, {%r279, %r276}, {%r1052}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1111, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1113, %r1111, %r1115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1116, %r314, %r1118, %r1113;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1120, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1122, %r1120, %r1124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1125, %r314, %r1127, %r1122;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1129, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1131, %r1129, %r1133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1134, %r314, %r1136, %r1131;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1138, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1140, %r1138, %r1142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1143, %r314, %r1145, %r1140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1147, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1149, %r1147, %r1151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1152, %r314, %r1154, %r1149;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1156, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1158, %r1156, %r1160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1161, %r314, %r1163, %r1158;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1165, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1167, %r1165, %r1169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1170, %r314, %r1172, %r1167;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1174, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1176, %r1174, %r1178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1179, %r314, %r1181, %r1176;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1183, %r317, %r1118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1186, %r314, %r1115, %r1183;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1190, %r317, %r1127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1193, %r314, %r1124, %r1190;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1197, %r317, %r1136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1200, %r314, %r1133, %r1197;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1204, %r317, %r1145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1207, %r314, %r1142, %r1204;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1211, %r317, %r1154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1214, %r314, %r1151, %r1211;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1218, %r317, %r1163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1221, %r314, %r1160, %r1218;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1225, %r317, %r1172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1228, %r314, %r1169, %r1225;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1232, %r317, %r1181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1235, %r314, %r1178, %r1232;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1320, %r1321}, {%r347, %r341, %r344, %r338}, {%r1186, %r1116}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1328, %r1329}, {%r347, %r341, %r344, %r338}, {%r1193, %r1125}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1336, %r1337}, {%r347, %r341, %r344, %r338}, {%r1200, %r1134}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1344, %r1345}, {%r347, %r341, %r344, %r338}, {%r1207, %r1143}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1352, %r1353}, {%r347, %r341, %r344, %r338}, {%r1214, %r1152}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1360, %r1361}, {%r347, %r341, %r344, %r338}, {%r1221, %r1161}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1368, %r1369}, {%r347, %r341, %r344, %r338}, {%r1228, %r1170}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1376, %r1377}, {%r347, %r341, %r344, %r338}, {%r1235, %r1179}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	prmt.b32 %r1319, %r1320, %r1321, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1323, %r1320, %r1321, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1327, %r1328, %r1329, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1331, %r1328, %r1329, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1335, %r1336, %r1337, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1339, %r1336, %r1337, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1343, %r1344, %r1345, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1347, %r1344, %r1345, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1351, %r1352, %r1353, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1355, %r1352, %r1353, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1359, %r1360, %r1361, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1363, %r1360, %r1361, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1367, %r1368, %r1369, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1371, %r1368, %r1369, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1375, %r1376, %r1377, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1379, %r1376, %r1377, %r631;
	// end inline asm
	st.shared.u32 	[%rd6], %r1319;
	st.shared.u32 	[%rd7+33024], %r1323;
	st.shared.u32 	[%rd7+128], %r1327;
	st.shared.u32 	[%rd7+33152], %r1331;
	cvt.u16.u32 	%rs222, %r3583;
	and.b16  	%rs223, %rs222, 255;
	mul.lo.s16 	%rs224, %rs223, 171;
	shr.u16 	%rs225, %rs224, 10;
	mul.lo.s16 	%rs226, %rs225, 6;
	sub.s16 	%rs227, %rs222, %rs226;
	shl.b16 	%rs228, %rs227, 2;
	cvt.u32.u16 	%r1408, %rs228;
	and.b32  	%r1409, %r1408, 252;
	add.s32 	%r1410, %r112, %r1409;
	shr.s32 	%r1411, %r1410, 31;
	shr.u32 	%r1412, %r1411, 30;
	add.s32 	%r1413, %r1410, %r1412;
	and.b32  	%r1414, %r1413, 67108860;
	sub.s32 	%r1415, %r1410, %r1414;
	shl.b32 	%r121, %r1415, 6;
	add.s32 	%r1416, %r72, %r121;
	mul.wide.s32 	%rd198, %r1416, 4;
	add.s64 	%rd200, %rd36, %rd198;
	st.shared.u32 	[%rd200], %r1335;
	add.s32 	%r122, %r121, 8256;
	add.s32 	%r1417, %r72, %r122;
	mul.wide.u32 	%rd201, %r1417, 4;
	add.s64 	%rd202, %rd36, %rd201;
	st.shared.u32 	[%rd202], %r1339;
	or.b32  	%r123, %r121, 32;
	add.s32 	%r1418, %r72, %r123;
	mul.wide.s32 	%rd203, %r1418, 4;
	add.s64 	%rd204, %rd36, %rd203;
	st.shared.u32 	[%rd204], %r1343;
	add.s32 	%r124, %r121, 8288;
	add.s32 	%r1419, %r72, %r124;
	mul.wide.u32 	%rd205, %r1419, 4;
	add.s64 	%rd206, %rd36, %rd205;
	st.shared.u32 	[%rd206], %r1347;
	add.s32 	%r1420, %r113, %r1409;
	shr.s32 	%r1421, %r1420, 31;
	shr.u32 	%r1422, %r1421, 30;
	add.s32 	%r1423, %r1420, %r1422;
	and.b32  	%r1424, %r1423, 67108860;
	sub.s32 	%r1425, %r1420, %r1424;
	shl.b32 	%r125, %r1425, 6;
	add.s32 	%r1426, %r72, %r125;
	mul.wide.s32 	%rd207, %r1426, 4;
	add.s64 	%rd208, %rd36, %rd207;
	st.shared.u32 	[%rd208], %r1351;
	add.s32 	%r126, %r125, 8256;
	add.s32 	%r1427, %r72, %r126;
	mul.wide.u32 	%rd209, %r1427, 4;
	add.s64 	%rd210, %rd36, %rd209;
	st.shared.u32 	[%rd210], %r1355;
	or.b32  	%r127, %r125, 32;
	add.s32 	%r1428, %r72, %r127;
	mul.wide.s32 	%rd211, %r1428, 4;
	add.s64 	%rd212, %rd36, %rd211;
	st.shared.u32 	[%rd212], %r1359;
	add.s32 	%r128, %r125, 8288;
	add.s32 	%r1429, %r72, %r128;
	mul.wide.u32 	%rd213, %r1429, 4;
	add.s64 	%rd214, %rd36, %rd213;
	st.shared.u32 	[%rd214], %r1363;
	add.s32 	%r1430, %r114, %r1409;
	shr.s32 	%r1431, %r1430, 31;
	shr.u32 	%r1432, %r1431, 30;
	add.s32 	%r1433, %r1430, %r1432;
	and.b32  	%r1434, %r1433, 67108860;
	sub.s32 	%r1435, %r1430, %r1434;
	shl.b32 	%r129, %r1435, 6;
	add.s32 	%r1436, %r72, %r129;
	mul.wide.s32 	%rd215, %r1436, 4;
	add.s64 	%rd216, %rd36, %rd215;
	st.shared.u32 	[%rd216], %r1367;
	add.s32 	%r130, %r129, 8256;
	add.s32 	%r1437, %r72, %r130;
	mul.wide.u32 	%rd217, %r1437, 4;
	add.s64 	%rd218, %rd36, %rd217;
	st.shared.u32 	[%rd218], %r1371;
	or.b32  	%r131, %r129, 32;
	add.s32 	%r1438, %r72, %r131;
	mul.wide.s32 	%rd219, %r1438, 4;
	add.s64 	%rd220, %rd36, %rd219;
	st.shared.u32 	[%rd220], %r1375;
	add.s32 	%r132, %r129, 8288;
	add.s32 	%r1439, %r72, %r132;
	mul.wide.u32 	%rd221, %r1439, 4;
	add.s64 	%rd222, %rd36, %rd221;
	st.shared.u32 	[%rd222], %r1379;
	bar.sync 	0;
	mov.u32 	%r3588, %r3545;
	mov.u32 	%r3589, %r3545;
	mov.u32 	%r3590, %r3545;
	mov.u32 	%r3591, %r3545;
	@%p50 bra 	LBB0_42;
	bra.uni 	LBB0_19;
LBB0_42:                                // %oksrem7103
                                        //   in Loop: Header=BB0_18 Depth=2
	ld.shared.u32 	%r3588, [%rd8];
	ld.shared.u32 	%r3589, [%rd9+33024];
	ld.shared.u32 	%r3590, [%rd9+128];
	ld.shared.u32 	%r3591, [%rd9+33152];
LBB0_19:                                // %L19405
                                        //   in Loop: Header=BB0_18 Depth=2
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1472, %r1475}, {%r279, %r276}, {%r3588}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1481, %r1484}, {%r279, %r276}, {%r3589}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1490, %r1493}, {%r279, %r276}, {%r3590}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1499, %r1502}, {%r279, %r276}, {%r3591}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1468, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1470, %r1468, %r1472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1473, %r314, %r1475, %r1470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1477, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1479, %r1477, %r1481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1482, %r314, %r1484, %r1479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1486, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1488, %r1486, %r1490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1491, %r314, %r1493, %r1488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1495, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1497, %r1495, %r1499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1500, %r314, %r1502, %r1497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1504, %r317, %r1475;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1507, %r314, %r1472, %r1504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1511, %r317, %r1484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1514, %r314, %r1481, %r1511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1518, %r317, %r1493;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1521, %r314, %r1490, %r1518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1525, %r317, %r1502;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1528, %r314, %r1499, %r1525;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1577, %r1573}, {%r347, %r341, %r344, %r338}, {%r1507, %r1473}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1593, %r1589}, {%r347, %r341, %r344, %r338}, {%r1514, %r1482}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1585, %r1581}, {%r347, %r341, %r344, %r338}, {%r1521, %r1491}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1601, %r1597}, {%r347, %r341, %r344, %r338}, {%r1528, %r1500}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1572, %r1573, %r1573, %r3587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1576, %r1577, %r1577, %r1572;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1580, %r1581, %r1581, %r1576;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1584, %r1585, %r1585, %r1580;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1588, %r1589, %r1589, %r3586;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1592, %r1593, %r1593, %r1588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1596, %r1597, %r1597, %r1592;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1600, %r1601, %r1601, %r1596;
	// end inline asm
	mov.u32 	%r3592, %r3545;
	mov.u32 	%r3593, %r3545;
	mov.u32 	%r3594, %r3545;
	mov.u32 	%r3595, %r3545;
	@%p50 bra 	LBB0_43;
	bra.uni 	LBB0_20;
LBB0_43:                                // %oksrem7638
                                        //   in Loop: Header=BB0_18 Depth=2
	or.b32  	%r1605, %r73, %r121;
	add.s32 	%r1606, %r1605, %r3548;
	add.s32 	%r1607, %r1606, %r74;
	add.s32 	%r1608, %r1607, %r75;
	add.s32 	%r1609, %r1608, %r76;
	add.s32 	%r1610, %r1609, %r77;
	add.s32 	%r1611, %r1610, %r78;
	mul.wide.s32 	%rd223, %r1611, 4;
	add.s64 	%rd225, %rd36, %rd223;
	ld.shared.u32 	%r3592, [%rd225];
	or.b32  	%r1612, %r122, %r73;
	add.s32 	%r1613, %r1612, %r3548;
	add.s32 	%r1614, %r1613, %r74;
	add.s32 	%r1615, %r1614, %r75;
	add.s32 	%r1616, %r1615, %r76;
	add.s32 	%r1617, %r1616, %r77;
	add.s32 	%r1618, %r1617, %r78;
	mul.wide.u32 	%rd226, %r1618, 4;
	add.s64 	%rd227, %rd36, %rd226;
	ld.shared.u32 	%r3593, [%rd227];
	or.b32  	%r1619, %r123, %r73;
	add.s32 	%r1620, %r1619, %r3548;
	add.s32 	%r1621, %r1620, %r74;
	add.s32 	%r1622, %r1621, %r75;
	add.s32 	%r1623, %r1622, %r76;
	add.s32 	%r1624, %r1623, %r77;
	add.s32 	%r1625, %r1624, %r78;
	mul.wide.s32 	%rd228, %r1625, 4;
	add.s64 	%rd229, %rd36, %rd228;
	ld.shared.u32 	%r3594, [%rd229];
	or.b32  	%r1626, %r124, %r73;
	add.s32 	%r1627, %r1626, %r3548;
	add.s32 	%r1628, %r1627, %r74;
	add.s32 	%r1629, %r1628, %r75;
	add.s32 	%r1630, %r1629, %r76;
	add.s32 	%r1631, %r1630, %r77;
	add.s32 	%r1632, %r1631, %r78;
	mul.wide.u32 	%rd230, %r1632, 4;
	add.s64 	%rd231, %rd36, %rd230;
	ld.shared.u32 	%r3595, [%rd231];
LBB0_20:                                // %L20783
                                        //   in Loop: Header=BB0_18 Depth=2
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1665, %r1668}, {%r279, %r276}, {%r3592}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1674, %r1677}, {%r279, %r276}, {%r3593}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1683, %r1686}, {%r279, %r276}, {%r3594}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1692, %r1695}, {%r279, %r276}, {%r3595}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1661, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1663, %r1661, %r1665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1666, %r314, %r1668, %r1663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1670, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1672, %r1670, %r1674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1675, %r314, %r1677, %r1672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1679, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1681, %r1679, %r1683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1684, %r314, %r1686, %r1681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1688, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1690, %r1688, %r1692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1693, %r314, %r1695, %r1690;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1697, %r317, %r1668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1700, %r314, %r1665, %r1697;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1704, %r317, %r1677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1707, %r314, %r1674, %r1704;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1711, %r317, %r1686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1714, %r314, %r1683, %r1711;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1718, %r317, %r1695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1721, %r314, %r1692, %r1718;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1770, %r1766}, {%r347, %r341, %r344, %r338}, {%r1700, %r1666}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1786, %r1782}, {%r347, %r341, %r344, %r338}, {%r1707, %r1675}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1778, %r1774}, {%r347, %r341, %r344, %r338}, {%r1714, %r1684}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1794, %r1790}, {%r347, %r341, %r344, %r338}, {%r1721, %r1693}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1765, %r1766, %r1766, %r1584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1769, %r1770, %r1770, %r1765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1773, %r1774, %r1774, %r1769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1777, %r1778, %r1778, %r1773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1781, %r1782, %r1782, %r1600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1785, %r1786, %r1786, %r1781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1789, %r1790, %r1790, %r1785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1793, %r1794, %r1794, %r1789;
	// end inline asm
	mov.u32 	%r3596, %r3545;
	mov.u32 	%r3597, %r3545;
	mov.u32 	%r3598, %r3545;
	mov.u32 	%r3599, %r3545;
	@%p50 bra 	LBB0_44;
	bra.uni 	LBB0_21;
LBB0_44:                                // %oksrem8173
                                        //   in Loop: Header=BB0_18 Depth=2
	or.b32  	%r1798, %r73, %r125;
	add.s32 	%r1799, %r1798, %r3548;
	add.s32 	%r1800, %r1799, %r74;
	add.s32 	%r1801, %r1800, %r75;
	add.s32 	%r1802, %r1801, %r76;
	add.s32 	%r1803, %r1802, %r77;
	add.s32 	%r1804, %r1803, %r78;
	mul.wide.s32 	%rd232, %r1804, 4;
	add.s64 	%rd234, %rd36, %rd232;
	ld.shared.u32 	%r3596, [%rd234];
	or.b32  	%r1805, %r126, %r73;
	add.s32 	%r1806, %r1805, %r3548;
	add.s32 	%r1807, %r1806, %r74;
	add.s32 	%r1808, %r1807, %r75;
	add.s32 	%r1809, %r1808, %r76;
	add.s32 	%r1810, %r1809, %r77;
	add.s32 	%r1811, %r1810, %r78;
	mul.wide.u32 	%rd235, %r1811, 4;
	add.s64 	%rd236, %rd36, %rd235;
	ld.shared.u32 	%r3597, [%rd236];
	or.b32  	%r1812, %r127, %r73;
	add.s32 	%r1813, %r1812, %r3548;
	add.s32 	%r1814, %r1813, %r74;
	add.s32 	%r1815, %r1814, %r75;
	add.s32 	%r1816, %r1815, %r76;
	add.s32 	%r1817, %r1816, %r77;
	add.s32 	%r1818, %r1817, %r78;
	mul.wide.s32 	%rd237, %r1818, 4;
	add.s64 	%rd238, %rd36, %rd237;
	ld.shared.u32 	%r3598, [%rd238];
	or.b32  	%r1819, %r128, %r73;
	add.s32 	%r1820, %r1819, %r3548;
	add.s32 	%r1821, %r1820, %r74;
	add.s32 	%r1822, %r1821, %r75;
	add.s32 	%r1823, %r1822, %r76;
	add.s32 	%r1824, %r1823, %r77;
	add.s32 	%r1825, %r1824, %r78;
	mul.wide.u32 	%rd239, %r1825, 4;
	add.s64 	%rd240, %rd36, %rd239;
	ld.shared.u32 	%r3599, [%rd240];
LBB0_21:                                // %L22161
                                        //   in Loop: Header=BB0_18 Depth=2
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1858, %r1861}, {%r279, %r276}, {%r3596}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1867, %r1870}, {%r279, %r276}, {%r3597}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1876, %r1879}, {%r279, %r276}, {%r3598}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r1885, %r1888}, {%r279, %r276}, {%r3599}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1854, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1856, %r1854, %r1858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1859, %r314, %r1861, %r1856;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1863, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1865, %r1863, %r1867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1868, %r314, %r1870, %r1865;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1872, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1874, %r1872, %r1876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1877, %r314, %r1879, %r1874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1881, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1883, %r1881, %r1885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1886, %r314, %r1888, %r1883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1890, %r317, %r1861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1893, %r314, %r1858, %r1890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1897, %r317, %r1870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1900, %r314, %r1867, %r1897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1904, %r317, %r1879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1907, %r314, %r1876, %r1904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1911, %r317, %r1888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1914, %r314, %r1885, %r1911;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1963, %r1959}, {%r347, %r341, %r344, %r338}, {%r1893, %r1859}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1979, %r1975}, {%r347, %r341, %r344, %r338}, {%r1900, %r1868}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1971, %r1967}, {%r347, %r341, %r344, %r338}, {%r1907, %r1877}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1987, %r1983}, {%r347, %r341, %r344, %r338}, {%r1914, %r1886}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1958, %r1959, %r1959, %r1777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1962, %r1963, %r1963, %r1958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1966, %r1967, %r1967, %r1962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1970, %r1971, %r1971, %r1966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1974, %r1975, %r1975, %r1793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1978, %r1979, %r1979, %r1974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1982, %r1983, %r1983, %r1978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1986, %r1987, %r1987, %r1982;
	// end inline asm
	mov.u32 	%r3600, %r3545;
	mov.u32 	%r3601, %r3545;
	mov.u32 	%r3602, %r3545;
	mov.u32 	%r3603, %r3545;
	@%p50 bra 	LBB0_45;
	bra.uni 	LBB0_22;
LBB0_45:                                // %oksrem8708
                                        //   in Loop: Header=BB0_18 Depth=2
	or.b32  	%r1991, %r73, %r129;
	add.s32 	%r1992, %r1991, %r3548;
	add.s32 	%r1993, %r1992, %r74;
	add.s32 	%r1994, %r1993, %r75;
	add.s32 	%r1995, %r1994, %r76;
	add.s32 	%r1996, %r1995, %r77;
	add.s32 	%r1997, %r1996, %r78;
	mul.wide.s32 	%rd241, %r1997, 4;
	add.s64 	%rd243, %rd36, %rd241;
	ld.shared.u32 	%r3600, [%rd243];
	or.b32  	%r1998, %r130, %r73;
	add.s32 	%r1999, %r1998, %r3548;
	add.s32 	%r2000, %r1999, %r74;
	add.s32 	%r2001, %r2000, %r75;
	add.s32 	%r2002, %r2001, %r76;
	add.s32 	%r2003, %r2002, %r77;
	add.s32 	%r2004, %r2003, %r78;
	mul.wide.u32 	%rd244, %r2004, 4;
	add.s64 	%rd245, %rd36, %rd244;
	ld.shared.u32 	%r3601, [%rd245];
	or.b32  	%r2005, %r131, %r73;
	add.s32 	%r2006, %r2005, %r3548;
	add.s32 	%r2007, %r2006, %r74;
	add.s32 	%r2008, %r2007, %r75;
	add.s32 	%r2009, %r2008, %r76;
	add.s32 	%r2010, %r2009, %r77;
	add.s32 	%r2011, %r2010, %r78;
	mul.wide.s32 	%rd246, %r2011, 4;
	add.s64 	%rd247, %rd36, %rd246;
	ld.shared.u32 	%r3602, [%rd247];
	or.b32  	%r2012, %r132, %r73;
	add.s32 	%r2013, %r2012, %r3548;
	add.s32 	%r2014, %r2013, %r74;
	add.s32 	%r2015, %r2014, %r75;
	add.s32 	%r2016, %r2015, %r76;
	add.s32 	%r2017, %r2016, %r77;
	add.s32 	%r2018, %r2017, %r78;
	mul.wide.u32 	%rd248, %r2018, 4;
	add.s64 	%rd249, %rd36, %rd248;
	ld.shared.u32 	%r3603, [%rd249];
LBB0_22:                                // %L23539
                                        //   in Loop: Header=BB0_18 Depth=2
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2051, %r2054}, {%r279, %r276}, {%r3600}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2060, %r2063}, {%r279, %r276}, {%r3601}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2069, %r2072}, {%r279, %r276}, {%r3602}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2078, %r2081}, {%r279, %r276}, {%r3603}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2047, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2049, %r2047, %r2051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2052, %r314, %r2054, %r2049;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2056, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2058, %r2056, %r2060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2061, %r314, %r2063, %r2058;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2065, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2067, %r2065, %r2069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2070, %r314, %r2072, %r2067;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2074, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2076, %r2074, %r2078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2079, %r314, %r2081, %r2076;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2083, %r317, %r2054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2086, %r314, %r2051, %r2083;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2090, %r317, %r2063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2093, %r314, %r2060, %r2090;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2097, %r317, %r2072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2100, %r314, %r2069, %r2097;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2104, %r317, %r2081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2107, %r314, %r2078, %r2104;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2156, %r2152}, {%r347, %r341, %r344, %r338}, {%r2086, %r2052}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2172, %r2168}, {%r347, %r341, %r344, %r338}, {%r2093, %r2061}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2164, %r2160}, {%r347, %r341, %r344, %r338}, {%r2100, %r2070}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2180, %r2176}, {%r347, %r341, %r344, %r338}, {%r2107, %r2079}, {%r3545, %r3545};
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2151, %r2152, %r2152, %r1970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2155, %r2156, %r2156, %r2151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2159, %r2160, %r2160, %r2155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3587, %r2164, %r2164, %r2159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2167, %r2168, %r2168, %r1986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2171, %r2172, %r2172, %r2167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2175, %r2176, %r2176, %r2171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3586, %r2180, %r2180, %r2175;
	// end inline asm
	add.s32 	%r3584, %r3584, 4;
	setp.ne.s32 	%p60, %r3584, 40;
	@%p60 bra 	LBB0_26;
// %bb.23:                              // %L23721
                                        //   in Loop: Header=BB0_18 Depth=2
	@%p26 bra 	LBB0_25;
// %bb.24:                              // %L23786
                                        //   in Loop: Header=BB0_18 Depth=2
	mad.lo.s32 	%r2183, %r3585, 96768, %r80;
	add.s32 	%r2184, %r2183, %r79;
	add.s32 	%r2185, %r2184, %r45;
	mul.wide.u32 	%rd250, %r2185, 4;
	add.s64 	%rd251, %rd4, %rd250;
	st.global.u32 	[%rd251], %r3587;
	add.s32 	%r2186, %r2183, %r81;
	add.s32 	%r2187, %r2186, %r45;
	mul.wide.u32 	%rd252, %r2187, 4;
	add.s64 	%rd253, %rd4, %rd252;
	st.global.u32 	[%rd253], %r3586;
	bra.uni 	LBB0_25;
LBB0_27:                                // %L24074.preheader
                                        //   in Loop: Header=BB0_16 Depth=1
	add.s32 	%r165, %r87, 25;
	add.s32 	%r166, %r87, 26;
	add.s32 	%r167, %r87, 27;
	mov.u32 	%r2190, 0;
	mov.u32 	%r3608, 12;
	mov.u32 	%r3609, %r2190;
	bra.uni 	LBB0_28;
LBB0_35:                                // %L35315
                                        //   in Loop: Header=BB0_28 Depth=2
	add.s32 	%r3585, %r3585, 1;
	mov.u32 	%r3586, 0;
	mov.u32 	%r3587, %r3586;
	mov.u32 	%r3584, %r3586;
LBB0_36:                                // %L35316
                                        //   in Loop: Header=BB0_28 Depth=2
	bar.sync 	0;
	add.s32 	%r3609, %r3609, 1;
	add.s32 	%r3608, %r3608, -4;
	setp.eq.s32 	%p75, %r3608, -12;
	@%p75 bra 	LBB0_37;
LBB0_28:                                // %L24074
                                        //   Parent Loop BB0_16 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.eq.s32 	%p64, %r3608, 12;
	selp.b32 	%r2728, %r3558, 0, %p64;
	setp.eq.s32 	%p65, %r3608, 8;
	selp.b32 	%r2729, %r3562, %r2728, %p65;
	setp.eq.s32 	%p66, %r3608, 4;
	selp.b32 	%r2730, %r3566, %r2729, %p66;
	setp.eq.s32 	%p67, %r3608, 0;
	selp.b32 	%r2731, %r3570, %r2730, %p67;
	setp.eq.s32 	%p68, %r3608, -4;
	selp.b32 	%r2732, %r3574, %r2731, %p68;
	setp.eq.s32 	%p69, %r3608, -8;
	selp.b32 	%r2733, %r3578, %r2732, %p69;
	selp.b32 	%r2734, %r3559, 0, %p64;
	selp.b32 	%r2735, %r3563, %r2734, %p65;
	selp.b32 	%r2736, %r3567, %r2735, %p66;
	selp.b32 	%r2737, %r3571, %r2736, %p67;
	selp.b32 	%r2738, %r3575, %r2737, %p68;
	selp.b32 	%r2739, %r3579, %r2738, %p69;
	selp.b32 	%r2740, %r3560, 0, %p64;
	selp.b32 	%r2741, %r3564, %r2740, %p65;
	selp.b32 	%r2742, %r3568, %r2741, %p66;
	selp.b32 	%r2743, %r3572, %r2742, %p67;
	selp.b32 	%r2744, %r3576, %r2743, %p68;
	selp.b32 	%r2745, %r3580, %r2744, %p69;
	selp.b32 	%r2746, %r3561, 0, %p64;
	selp.b32 	%r2747, %r3565, %r2746, %p65;
	selp.b32 	%r2748, %r3569, %r2747, %p66;
	selp.b32 	%r2749, %r3573, %r2748, %p67;
	selp.b32 	%r2750, %r3577, %r2749, %p68;
	selp.b32 	%r2751, %r3581, %r2750, %p69;
	// begin inline asm
	mov.b32 %r2218, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	mov.b32 %r2229, {%rs213, %rs213};
	// end inline asm
	shr.u32 	%r2752, %r2733, 8;
	xor.b32  	%r2228, %r2752, 8947848;
	// begin inline asm
	lop3.b32 %r2215, %r988, %r2228, %r2218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2219, {%rs217, %rs217};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2220, %r2218, %r2219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2223, %r2215, %r2220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2226, %r999, %r2228, %r2229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2230, {%rs217, %rs217};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2231, %r2229, %r2230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2234, %r2226, %r2231;
	// end inline asm
	// begin inline asm
	mov.b32 %r2264, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	mov.b32 %r2275, {%rs213, %rs213};
	// end inline asm
	shr.u32 	%r2753, %r2739, 8;
	xor.b32  	%r2274, %r2753, 8947848;
	// begin inline asm
	lop3.b32 %r2261, %r988, %r2274, %r2264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2265, {%rs217, %rs217};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2266, %r2264, %r2265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2269, %r2261, %r2266;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2272, %r999, %r2274, %r2275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2276, {%rs217, %rs217};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2277, %r2275, %r2276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2280, %r2272, %r2277;
	// end inline asm
	// begin inline asm
	mov.b32 %r2310, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	mov.b32 %r2321, {%rs213, %rs213};
	// end inline asm
	shr.u32 	%r2754, %r2745, 8;
	xor.b32  	%r2320, %r2754, 8947848;
	// begin inline asm
	lop3.b32 %r2307, %r988, %r2320, %r2310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2311, {%rs217, %rs217};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2312, %r2310, %r2311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2315, %r2307, %r2312;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2318, %r999, %r2320, %r2321, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2322, {%rs217, %rs217};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2323, %r2321, %r2322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2326, %r2318, %r2323;
	// end inline asm
	// begin inline asm
	mov.b32 %r2356, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	mov.b32 %r2367, {%rs213, %rs213};
	// end inline asm
	shr.u32 	%r2755, %r2751, 8;
	xor.b32  	%r2366, %r2755, 8947848;
	// begin inline asm
	lop3.b32 %r2353, %r988, %r2366, %r2356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2357, {%rs217, %rs217};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2358, %r2356, %r2357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2361, %r2353, %r2358;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2364, %r999, %r2366, %r2367, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2368, {%rs217, %rs217};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2369, %r2367, %r2368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2372, %r2364, %r2369;
	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3551;
    mov.b32 {%r2im, %r2re}, %r2223;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2375, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3552;
    mov.b32 {%r2im, %r2re}, %r2234;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2378, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3551;
    mov.b32 {%r2im, %r2re}, %r2269;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2381, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3552;
    mov.b32 {%r2im, %r2re}, %r2280;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2384, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3551;
    mov.b32 {%r2im, %r2re}, %r2315;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2387, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3552;
    mov.b32 {%r2im, %r2re}, %r2326;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2390, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3551;
    mov.b32 {%r2im, %r2re}, %r2361;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2393, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1im, %r1re}, %r3552;
    mov.b32 {%r2im, %r2re}, %r2372;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r2396, {%r0im, %r0re};
}

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2459, %r2462}, {%r279, %r276}, {%r2375}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2468, %r2471}, {%r279, %r276}, {%r2378}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2477, %r2480}, {%r279, %r276}, {%r2381}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2486, %r2489}, {%r279, %r276}, {%r2384}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2495, %r2498}, {%r279, %r276}, {%r2387}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2504, %r2507}, {%r279, %r276}, {%r2390}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2513, %r2516}, {%r279, %r276}, {%r2393}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2522, %r2525}, {%r279, %r276}, {%r2396}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2455, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2457, %r2455, %r2459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2460, %r314, %r2462, %r2457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2464, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2466, %r2464, %r2468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2469, %r314, %r2471, %r2466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2473, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2475, %r2473, %r2477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2478, %r314, %r2480, %r2475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2482, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2484, %r2482, %r2486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2487, %r314, %r2489, %r2484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2491, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2493, %r2491, %r2495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2496, %r314, %r2498, %r2493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2500, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2502, %r2500, %r2504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2505, %r314, %r2507, %r2502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2509, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2511, %r2509, %r2513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2514, %r314, %r2516, %r2511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2518, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2520, %r2518, %r2522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2523, %r314, %r2525, %r2520;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2527, %r317, %r2462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2530, %r314, %r2459, %r2527;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2534, %r317, %r2471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2537, %r314, %r2468, %r2534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2541, %r317, %r2480;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2544, %r314, %r2477, %r2541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2548, %r317, %r2489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2551, %r314, %r2486, %r2548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2555, %r317, %r2498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2558, %r314, %r2495, %r2555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2562, %r317, %r2507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2565, %r314, %r2504, %r2562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2569, %r317, %r2516;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2572, %r314, %r2513, %r2569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2576, %r317, %r2525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2579, %r314, %r2522, %r2576;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2664, %r2665}, {%r347, %r341, %r344, %r338}, {%r2530, %r2460}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2672, %r2673}, {%r347, %r341, %r344, %r338}, {%r2537, %r2469}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2680, %r2681}, {%r347, %r341, %r344, %r338}, {%r2544, %r2478}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2688, %r2689}, {%r347, %r341, %r344, %r338}, {%r2551, %r2487}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2696, %r2697}, {%r347, %r341, %r344, %r338}, {%r2558, %r2496}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2704, %r2705}, {%r347, %r341, %r344, %r338}, {%r2565, %r2505}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2712, %r2713}, {%r347, %r341, %r344, %r338}, {%r2572, %r2514}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2720, %r2721}, {%r347, %r341, %r344, %r338}, {%r2579, %r2523}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	prmt.b32 %r2663, %r2664, %r2665, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2667, %r2664, %r2665, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2671, %r2672, %r2673, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2675, %r2672, %r2673, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2679, %r2680, %r2681, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2683, %r2680, %r2681, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2687, %r2688, %r2689, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2691, %r2688, %r2689, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2695, %r2696, %r2697, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2699, %r2696, %r2697, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2703, %r2704, %r2705, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2707, %r2704, %r2705, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2711, %r2712, %r2713, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2715, %r2712, %r2713, %r631;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2719, %r2720, %r2721, %r627;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2723, %r2720, %r2721, %r631;
	// end inline asm
	st.shared.u32 	[%rd6], %r2663;
	st.shared.u32 	[%rd7+33024], %r2667;
	st.shared.u32 	[%rd7+128], %r2671;
	st.shared.u32 	[%rd7+33152], %r2675;
	cvt.u16.u32 	%rs277, %r3609;
	and.b16  	%rs278, %rs277, 255;
	mul.lo.s16 	%rs279, %rs278, 171;
	shr.u16 	%rs280, %rs279, 10;
	mul.lo.s16 	%rs281, %rs280, 6;
	sub.s16 	%rs282, %rs277, %rs281;
	shl.b16 	%rs283, %rs282, 2;
	cvt.u32.u16 	%r2756, %rs283;
	and.b32  	%r2757, %r2756, 252;
	add.s32 	%r2758, %r165, %r2757;
	shr.s32 	%r2759, %r2758, 31;
	shr.u32 	%r2760, %r2759, 30;
	add.s32 	%r2761, %r2758, %r2760;
	and.b32  	%r2762, %r2761, 67108860;
	sub.s32 	%r2763, %r2758, %r2762;
	shl.b32 	%r174, %r2763, 6;
	add.s32 	%r2764, %r72, %r174;
	mul.wide.s32 	%rd254, %r2764, 4;
	add.s64 	%rd256, %rd36, %rd254;
	st.shared.u32 	[%rd256], %r2679;
	add.s32 	%r175, %r174, 8256;
	add.s32 	%r2765, %r72, %r175;
	mul.wide.u32 	%rd257, %r2765, 4;
	add.s64 	%rd258, %rd36, %rd257;
	st.shared.u32 	[%rd258], %r2683;
	or.b32  	%r176, %r174, 32;
	add.s32 	%r2766, %r72, %r176;
	mul.wide.s32 	%rd259, %r2766, 4;
	add.s64 	%rd260, %rd36, %rd259;
	st.shared.u32 	[%rd260], %r2687;
	add.s32 	%r177, %r174, 8288;
	add.s32 	%r2767, %r72, %r177;
	mul.wide.u32 	%rd261, %r2767, 4;
	add.s64 	%rd262, %rd36, %rd261;
	st.shared.u32 	[%rd262], %r2691;
	add.s32 	%r2768, %r166, %r2757;
	shr.s32 	%r2769, %r2768, 31;
	shr.u32 	%r2770, %r2769, 30;
	add.s32 	%r2771, %r2768, %r2770;
	and.b32  	%r2772, %r2771, 67108860;
	sub.s32 	%r2773, %r2768, %r2772;
	shl.b32 	%r178, %r2773, 6;
	add.s32 	%r2774, %r72, %r178;
	mul.wide.s32 	%rd263, %r2774, 4;
	add.s64 	%rd264, %rd36, %rd263;
	st.shared.u32 	[%rd264], %r2695;
	add.s32 	%r179, %r178, 8256;
	add.s32 	%r2775, %r72, %r179;
	mul.wide.u32 	%rd265, %r2775, 4;
	add.s64 	%rd266, %rd36, %rd265;
	st.shared.u32 	[%rd266], %r2699;
	or.b32  	%r180, %r178, 32;
	add.s32 	%r2776, %r72, %r180;
	mul.wide.s32 	%rd267, %r2776, 4;
	add.s64 	%rd268, %rd36, %rd267;
	st.shared.u32 	[%rd268], %r2703;
	add.s32 	%r181, %r178, 8288;
	add.s32 	%r2777, %r72, %r181;
	mul.wide.u32 	%rd269, %r2777, 4;
	add.s64 	%rd270, %rd36, %rd269;
	st.shared.u32 	[%rd270], %r2707;
	add.s32 	%r2778, %r167, %r2757;
	shr.s32 	%r2779, %r2778, 31;
	shr.u32 	%r2780, %r2779, 30;
	add.s32 	%r2781, %r2778, %r2780;
	and.b32  	%r2782, %r2781, 67108860;
	sub.s32 	%r2783, %r2778, %r2782;
	shl.b32 	%r182, %r2783, 6;
	add.s32 	%r2784, %r72, %r182;
	mul.wide.s32 	%rd271, %r2784, 4;
	add.s64 	%rd272, %rd36, %rd271;
	st.shared.u32 	[%rd272], %r2711;
	add.s32 	%r183, %r182, 8256;
	add.s32 	%r2785, %r72, %r183;
	mul.wide.u32 	%rd273, %r2785, 4;
	add.s64 	%rd274, %rd36, %rd273;
	st.shared.u32 	[%rd274], %r2715;
	or.b32  	%r184, %r182, 32;
	add.s32 	%r2786, %r72, %r184;
	mul.wide.s32 	%rd275, %r2786, 4;
	add.s64 	%rd276, %rd36, %rd275;
	st.shared.u32 	[%rd276], %r2719;
	add.s32 	%r185, %r182, 8288;
	add.s32 	%r2787, %r72, %r185;
	mul.wide.u32 	%rd277, %r2787, 4;
	add.s64 	%rd278, %rd36, %rd277;
	st.shared.u32 	[%rd278], %r2723;
	bar.sync 	0;
	mov.u32 	%r3614, %r2190;
	mov.u32 	%r3615, %r2190;
	mov.u32 	%r3616, %r2190;
	mov.u32 	%r3617, %r2190;
	@%p50 bra 	LBB0_46;
	bra.uni 	LBB0_29;
LBB0_46:                                // %oksrem11501
                                        //   in Loop: Header=BB0_28 Depth=2
	ld.shared.u32 	%r3617, [%rd8];
	ld.shared.u32 	%r3616, [%rd9+33024];
	ld.shared.u32 	%r3615, [%rd9+128];
	ld.shared.u32 	%r3614, [%rd9+33152];
LBB0_29:                                // %L30678
                                        //   in Loop: Header=BB0_28 Depth=2
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2820, %r2823}, {%r279, %r276}, {%r3617}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2829, %r2832}, {%r279, %r276}, {%r3616}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2838, %r2841}, {%r279, %r276}, {%r3615}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r2847, %r2850}, {%r279, %r276}, {%r3614}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2816, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2818, %r2816, %r2820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2821, %r314, %r2823, %r2818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2825, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2827, %r2825, %r2829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2830, %r314, %r2832, %r2827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2834, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2836, %r2834, %r2838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2839, %r314, %r2841, %r2836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2843, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2845, %r2843, %r2847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2848, %r314, %r2850, %r2845;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2852, %r317, %r2823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2855, %r314, %r2820, %r2852;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2859, %r317, %r2832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2862, %r314, %r2829, %r2859;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2866, %r317, %r2841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2869, %r314, %r2838, %r2866;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2873, %r317, %r2850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2876, %r314, %r2847, %r2873;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2925, %r2921}, {%r347, %r341, %r344, %r338}, {%r2855, %r2821}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2941, %r2937}, {%r347, %r341, %r344, %r338}, {%r2862, %r2830}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2933, %r2929}, {%r347, %r341, %r344, %r338}, {%r2869, %r2839}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2949, %r2945}, {%r347, %r341, %r344, %r338}, {%r2876, %r2848}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2920, %r2921, %r2921, %r3587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2924, %r2925, %r2925, %r2920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2928, %r2929, %r2929, %r2924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2932, %r2933, %r2933, %r2928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2936, %r2937, %r2937, %r3586;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2940, %r2941, %r2941, %r2936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2944, %r2945, %r2945, %r2940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2948, %r2949, %r2949, %r2944;
	// end inline asm
	mov.u32 	%r3618, %r2190;
	mov.u32 	%r3619, %r2190;
	mov.u32 	%r3620, %r2190;
	mov.u32 	%r3621, %r2190;
	@%p50 bra 	LBB0_47;
	bra.uni 	LBB0_30;
LBB0_47:                                // %oksrem12036
                                        //   in Loop: Header=BB0_28 Depth=2
	or.b32  	%r2953, %r73, %r174;
	add.s32 	%r2954, %r2953, %r3548;
	add.s32 	%r2955, %r2954, %r74;
	add.s32 	%r2956, %r2955, %r75;
	add.s32 	%r2957, %r2956, %r76;
	add.s32 	%r2958, %r2957, %r77;
	add.s32 	%r2959, %r2958, %r78;
	mul.wide.s32 	%rd279, %r2959, 4;
	add.s64 	%rd281, %rd36, %rd279;
	ld.shared.u32 	%r3621, [%rd281];
	or.b32  	%r2960, %r175, %r73;
	add.s32 	%r2961, %r2960, %r3548;
	add.s32 	%r2962, %r2961, %r74;
	add.s32 	%r2963, %r2962, %r75;
	add.s32 	%r2964, %r2963, %r76;
	add.s32 	%r2965, %r2964, %r77;
	add.s32 	%r2966, %r2965, %r78;
	mul.wide.u32 	%rd282, %r2966, 4;
	add.s64 	%rd283, %rd36, %rd282;
	ld.shared.u32 	%r3620, [%rd283];
	or.b32  	%r2967, %r176, %r73;
	add.s32 	%r2968, %r2967, %r3548;
	add.s32 	%r2969, %r2968, %r74;
	add.s32 	%r2970, %r2969, %r75;
	add.s32 	%r2971, %r2970, %r76;
	add.s32 	%r2972, %r2971, %r77;
	add.s32 	%r2973, %r2972, %r78;
	mul.wide.s32 	%rd284, %r2973, 4;
	add.s64 	%rd285, %rd36, %rd284;
	ld.shared.u32 	%r3619, [%rd285];
	or.b32  	%r2974, %r177, %r73;
	add.s32 	%r2975, %r2974, %r3548;
	add.s32 	%r2976, %r2975, %r74;
	add.s32 	%r2977, %r2976, %r75;
	add.s32 	%r2978, %r2977, %r76;
	add.s32 	%r2979, %r2978, %r77;
	add.s32 	%r2980, %r2979, %r78;
	mul.wide.u32 	%rd286, %r2980, 4;
	add.s64 	%rd287, %rd36, %rd286;
	ld.shared.u32 	%r3618, [%rd287];
LBB0_30:                                // %L32056
                                        //   in Loop: Header=BB0_28 Depth=2
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r3013, %r3016}, {%r279, %r276}, {%r3621}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r3022, %r3025}, {%r279, %r276}, {%r3620}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r3031, %r3034}, {%r279, %r276}, {%r3619}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r3040, %r3043}, {%r279, %r276}, {%r3618}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3009, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3011, %r3009, %r3013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3014, %r314, %r3016, %r3011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3018, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3020, %r3018, %r3022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3023, %r314, %r3025, %r3020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3027, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3029, %r3027, %r3031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3032, %r314, %r3034, %r3029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3036, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3038, %r3036, %r3040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3041, %r314, %r3043, %r3038;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3045, %r317, %r3016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3048, %r314, %r3013, %r3045;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3052, %r317, %r3025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3055, %r314, %r3022, %r3052;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3059, %r317, %r3034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3062, %r314, %r3031, %r3059;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3066, %r317, %r3043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3069, %r314, %r3040, %r3066;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3118, %r3114}, {%r347, %r341, %r344, %r338}, {%r3048, %r3014}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3134, %r3130}, {%r347, %r341, %r344, %r338}, {%r3055, %r3023}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3126, %r3122}, {%r347, %r341, %r344, %r338}, {%r3062, %r3032}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3142, %r3138}, {%r347, %r341, %r344, %r338}, {%r3069, %r3041}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3113, %r3114, %r3114, %r2932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3117, %r3118, %r3118, %r3113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3121, %r3122, %r3122, %r3117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3125, %r3126, %r3126, %r3121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3129, %r3130, %r3130, %r2948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3133, %r3134, %r3134, %r3129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3137, %r3138, %r3138, %r3133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3141, %r3142, %r3142, %r3137;
	// end inline asm
	mov.u32 	%r3622, %r2190;
	mov.u32 	%r3623, %r2190;
	mov.u32 	%r3624, %r2190;
	mov.u32 	%r3625, %r2190;
	@%p50 bra 	LBB0_48;
	bra.uni 	LBB0_31;
LBB0_48:                                // %oksrem12571
                                        //   in Loop: Header=BB0_28 Depth=2
	or.b32  	%r3146, %r73, %r178;
	add.s32 	%r3147, %r3146, %r3548;
	add.s32 	%r3148, %r3147, %r74;
	add.s32 	%r3149, %r3148, %r75;
	add.s32 	%r3150, %r3149, %r76;
	add.s32 	%r3151, %r3150, %r77;
	add.s32 	%r3152, %r3151, %r78;
	mul.wide.s32 	%rd288, %r3152, 4;
	add.s64 	%rd290, %rd36, %rd288;
	ld.shared.u32 	%r3625, [%rd290];
	or.b32  	%r3153, %r179, %r73;
	add.s32 	%r3154, %r3153, %r3548;
	add.s32 	%r3155, %r3154, %r74;
	add.s32 	%r3156, %r3155, %r75;
	add.s32 	%r3157, %r3156, %r76;
	add.s32 	%r3158, %r3157, %r77;
	add.s32 	%r3159, %r3158, %r78;
	mul.wide.u32 	%rd291, %r3159, 4;
	add.s64 	%rd292, %rd36, %rd291;
	ld.shared.u32 	%r3624, [%rd292];
	or.b32  	%r3160, %r180, %r73;
	add.s32 	%r3161, %r3160, %r3548;
	add.s32 	%r3162, %r3161, %r74;
	add.s32 	%r3163, %r3162, %r75;
	add.s32 	%r3164, %r3163, %r76;
	add.s32 	%r3165, %r3164, %r77;
	add.s32 	%r3166, %r3165, %r78;
	mul.wide.s32 	%rd293, %r3166, 4;
	add.s64 	%rd294, %rd36, %rd293;
	ld.shared.u32 	%r3623, [%rd294];
	or.b32  	%r3167, %r181, %r73;
	add.s32 	%r3168, %r3167, %r3548;
	add.s32 	%r3169, %r3168, %r74;
	add.s32 	%r3170, %r3169, %r75;
	add.s32 	%r3171, %r3170, %r76;
	add.s32 	%r3172, %r3171, %r77;
	add.s32 	%r3173, %r3172, %r78;
	mul.wide.u32 	%rd295, %r3173, 4;
	add.s64 	%rd296, %rd36, %rd295;
	ld.shared.u32 	%r3622, [%rd296];
LBB0_31:                                // %L33434
                                        //   in Loop: Header=BB0_28 Depth=2
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r3206, %r3209}, {%r279, %r276}, {%r3625}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r3215, %r3218}, {%r279, %r276}, {%r3624}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r3224, %r3227}, {%r279, %r276}, {%r3623}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r3233, %r3236}, {%r279, %r276}, {%r3622}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3202, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3204, %r3202, %r3206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3207, %r314, %r3209, %r3204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3211, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3213, %r3211, %r3215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3216, %r314, %r3218, %r3213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3220, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3222, %r3220, %r3224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3225, %r314, %r3227, %r3222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3229, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3231, %r3229, %r3233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3234, %r314, %r3236, %r3231;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3238, %r317, %r3209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3241, %r314, %r3206, %r3238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3245, %r317, %r3218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3248, %r314, %r3215, %r3245;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3252, %r317, %r3227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3255, %r314, %r3224, %r3252;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3259, %r317, %r3236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3262, %r314, %r3233, %r3259;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3311, %r3307}, {%r347, %r341, %r344, %r338}, {%r3241, %r3207}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3327, %r3323}, {%r347, %r341, %r344, %r338}, {%r3248, %r3216}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3319, %r3315}, {%r347, %r341, %r344, %r338}, {%r3255, %r3225}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3335, %r3331}, {%r347, %r341, %r344, %r338}, {%r3262, %r3234}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3306, %r3307, %r3307, %r3125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3310, %r3311, %r3311, %r3306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3314, %r3315, %r3315, %r3310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3318, %r3319, %r3319, %r3314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3322, %r3323, %r3323, %r3141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3326, %r3327, %r3327, %r3322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3330, %r3331, %r3331, %r3326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3334, %r3335, %r3335, %r3330;
	// end inline asm
	mov.u32 	%r3626, %r2190;
	mov.u32 	%r3627, %r2190;
	mov.u32 	%r3628, %r2190;
	mov.u32 	%r3629, %r2190;
	@%p50 bra 	LBB0_49;
	bra.uni 	LBB0_32;
LBB0_49:                                // %oksrem13106
                                        //   in Loop: Header=BB0_28 Depth=2
	or.b32  	%r3339, %r73, %r182;
	add.s32 	%r3340, %r3339, %r3548;
	add.s32 	%r3341, %r3340, %r74;
	add.s32 	%r3342, %r3341, %r75;
	add.s32 	%r3343, %r3342, %r76;
	add.s32 	%r3344, %r3343, %r77;
	add.s32 	%r3345, %r3344, %r78;
	mul.wide.s32 	%rd297, %r3345, 4;
	add.s64 	%rd299, %rd36, %rd297;
	ld.shared.u32 	%r3629, [%rd299];
	or.b32  	%r3346, %r183, %r73;
	add.s32 	%r3347, %r3346, %r3548;
	add.s32 	%r3348, %r3347, %r74;
	add.s32 	%r3349, %r3348, %r75;
	add.s32 	%r3350, %r3349, %r76;
	add.s32 	%r3351, %r3350, %r77;
	add.s32 	%r3352, %r3351, %r78;
	mul.wide.u32 	%rd300, %r3352, 4;
	add.s64 	%rd301, %rd36, %rd300;
	ld.shared.u32 	%r3628, [%rd301];
	or.b32  	%r3353, %r184, %r73;
	add.s32 	%r3354, %r3353, %r3548;
	add.s32 	%r3355, %r3354, %r74;
	add.s32 	%r3356, %r3355, %r75;
	add.s32 	%r3357, %r3356, %r76;
	add.s32 	%r3358, %r3357, %r77;
	add.s32 	%r3359, %r3358, %r78;
	mul.wide.s32 	%rd302, %r3359, 4;
	add.s64 	%rd303, %rd36, %rd302;
	ld.shared.u32 	%r3627, [%rd303];
	or.b32  	%r3360, %r185, %r73;
	add.s32 	%r3361, %r3360, %r3548;
	add.s32 	%r3362, %r3361, %r74;
	add.s32 	%r3363, %r3362, %r75;
	add.s32 	%r3364, %r3363, %r76;
	add.s32 	%r3365, %r3364, %r77;
	add.s32 	%r3366, %r3365, %r78;
	mul.wide.u32 	%rd304, %r3366, 4;
	add.s64 	%rd305, %rd36, %rd304;
	ld.shared.u32 	%r3626, [%rd305];
LBB0_32:                                // %L34812
                                        //   in Loop: Header=BB0_28 Depth=2
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r3399, %r3402}, {%r279, %r276}, {%r3629}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r3408, %r3411}, {%r279, %r276}, {%r3628}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r3417, %r3420}, {%r279, %r276}, {%r3627}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r3426, %r3429}, {%r279, %r276}, {%r3626}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3395, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3397, %r3395, %r3399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3400, %r314, %r3402, %r3397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3404, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3406, %r3404, %r3408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3409, %r314, %r3411, %r3406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3413, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3415, %r3413, %r3417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3418, %r314, %r3420, %r3415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3422, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3424, %r3422, %r3426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3427, %r314, %r3429, %r3424;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3431, %r317, %r3402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3434, %r314, %r3399, %r3431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3438, %r317, %r3411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3441, %r314, %r3408, %r3438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3445, %r317, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3448, %r314, %r3417, %r3445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3452, %r317, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3455, %r314, %r3426, %r3452;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3504, %r3500}, {%r347, %r341, %r344, %r338}, {%r3434, %r3400}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3520, %r3516}, {%r347, %r341, %r344, %r338}, {%r3441, %r3409}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3512, %r3508}, {%r347, %r341, %r344, %r338}, {%r3448, %r3418}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3528, %r3524}, {%r347, %r341, %r344, %r338}, {%r3455, %r3427}, {%r2190, %r2190};
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3499, %r3500, %r3500, %r3318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3503, %r3504, %r3504, %r3499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3507, %r3508, %r3508, %r3503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3587, %r3512, %r3512, %r3507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3515, %r3516, %r3516, %r3334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3519, %r3520, %r3520, %r3515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3523, %r3524, %r3524, %r3519;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3586, %r3528, %r3528, %r3523;
	// end inline asm
	add.s32 	%r3584, %r3584, 4;
	setp.ne.s32 	%p73, %r3584, 40;
	@%p73 bra 	LBB0_36;
// %bb.33:                              // %L34994
                                        //   in Loop: Header=BB0_28 Depth=2
	@%p26 bra 	LBB0_35;
// %bb.34:                              // %L35059
                                        //   in Loop: Header=BB0_28 Depth=2
	mad.lo.s32 	%r3531, %r3585, 96768, %r80;
	add.s32 	%r3532, %r3531, %r79;
	add.s32 	%r3533, %r3532, %r45;
	mul.wide.u32 	%rd306, %r3533, 4;
	add.s64 	%rd307, %rd4, %rd306;
	st.global.u32 	[%rd307], %r3587;
	add.s32 	%r3534, %r3531, %r81;
	add.s32 	%r3535, %r3534, %r45;
	mul.wide.u32 	%rd308, %r3535, 4;
	add.s64 	%rd309, %rd4, %rd308;
	st.global.u32 	[%rd309], %r3586;
	bra.uni 	LBB0_35;
LBB0_38:                                // %guard_pass14638
	@%p26 bra 	LBB0_40;
// %bb.39:                              // %L35427
	mad.lo.s32 	%r3537, %r3585, 96768, %r80;
	add.s32 	%r3538, %r3537, %r79;
	add.s32 	%r3539, %r3538, %r45;
	mul.wide.u32 	%rd310, %r3539, 4;
	add.s64 	%rd311, %rd4, %rd310;
	st.global.u32 	[%rd311], %r3587;
	add.s32 	%r3540, %r3537, %r81;
	add.s32 	%r3541, %r3540, %r45;
	mul.wide.u32 	%rd312, %r3541, 4;
	add.s64 	%rd313, %rd4, %rd312;
	st.global.u32 	[%rd313], %r3586;
LBB0_40:                                // %L35683
	mov.u32 	%r3542, 0;
	st.global.u32 	[%rd5], %r3542;
	ret;
LBB0_1:                                 // %L9
	ld.param.u64 	%rd11, [_Z14julia_frb_604513CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_IS0_Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_IS1_Li1ELi1EE_param_0];
	mov.u64 	%rd16, exception1;
	cvta.global.u64 	%rd17, %rd16;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd17;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd11;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
