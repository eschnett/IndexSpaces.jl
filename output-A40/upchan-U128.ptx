// PTX CompilerJob of upchan(CuDeviceVector{Int32, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int32, 1}) in world 33605 for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[8]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5095[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[8],
	.param .align 8 .b8 _Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<307>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16219>;
	.reg .f32 	%f<1404>;
	.reg .b64 	%rd<95>;

// %bb.0:                               // %conversion
	ld.param.u64 	%rd35, [_Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r240, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r240, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd40, [_Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd36, [_Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r4, %r3, 9;
	mov.u32 	%r5, %tid.x;
	or.b32  	%r241, %r4, %r5;
	or.b32  	%r242, %r241, %r2;
	mul.wide.u32 	%rd46, %r242, 4;
	add.s64 	%rd4, %rd40, %rd46;
	mov.u32 	%r243, 1;
	st.global.u32 	[%rd4], %r243;
	ld.global.u32 	%r6, [%rd36];
	and.b32  	%r244, %r6, -32513;
	setp.eq.s32 	%p2, %r244, 0;
	@%p2 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L255
	bfe.u32 	%r17, %r5, 1, 1;
	and.b32  	%r18, %r5, 1;
	bfe.u32 	%r20, %r5, 2, 1;
	shr.u32 	%r21, %r5, 4;
	shl.b32 	%r250, %r21, 2;
	shl.b32 	%r251, %r20, 3;
	shl.b32 	%r252, %r18, 4;
	shl.b32 	%r253, %r17, 5;
	or.b32  	%r254, %r252, %r253;
	or.b32  	%r255, %r251, %r254;
	or.b32  	%r256, %r250, %r255;
	bfe.u32 	%r23, %r5, 3, 1;
	shl.b32 	%r257, %r23, 1;
	or.b32  	%r24, %r257, %r256;
	or.b32  	%r25, %r24, 64;
	mov.f32 	%f255, 0f40000000;
	mov.f32 	%f256, 0f43FF8000;
	div.approx.f32 	%f1, %f256, %f255;
	cvt.rn.f32.s32 	%f257, %r24;
	sub.f32 	%f258, %f257, %f1;
	mov.f32 	%f287, 0f43000000;
	div.approx.f32 	%f3, %f258, %f287;
	setp.eq.f32 	%p8, %f3, 0f00000000;
	mov.f32 	%f1363, 0f3F800000;
	mov.f32 	%f1348, %f1363;
	@%p8 bra 	LBB0_6;
// %bb.5:                               // %L607
	sin.approx.f32 	%f288, %f3;
	div.approx.f32 	%f1348, %f288, %f3;
LBB0_6:                                 // %L610
	cvt.rn.f32.s32 	%f291, %r25;
	sub.f32 	%f292, %f291, %f1;
	div.approx.f32 	%f8, %f292, %f287;
	setp.eq.f32 	%p14, %f8, 0f00000000;
	mov.f32 	%f1349, %f1363;
	@%p14 bra 	LBB0_8;
// %bb.7:                               // %L627
	sin.approx.f32 	%f322, %f8;
	div.approx.f32 	%f1349, %f322, %f8;
LBB0_8:                                 // %L630
	or.b32  	%r275, %r24, 1;
	or.b32  	%r27, %r24, 65;
	cvt.rn.f32.s32 	%f326, %r275;
	sub.f32 	%f327, %f326, %f1;
	div.approx.f32 	%f12, %f327, %f287;
	setp.eq.f32 	%p20, %f12, 0f00000000;
	mov.f32 	%f1350, %f1363;
	@%p20 bra 	LBB0_10;
// %bb.9:                               // %L709
	sin.approx.f32 	%f357, %f12;
	div.approx.f32 	%f1350, %f357, %f12;
LBB0_10:                                // %L712
	cvt.rn.f32.s32 	%f360, %r27;
	sub.f32 	%f361, %f360, %f1;
	div.approx.f32 	%f17, %f361, %f287;
	setp.eq.f32 	%p26, %f17, 0f00000000;
	mov.f32 	%f1351, %f1363;
	@%p26 bra 	LBB0_12;
// %bb.11:                              // %L729
	sin.approx.f32 	%f391, %f17;
	div.approx.f32 	%f1351, %f391, %f17;
LBB0_12:                                // %L732
	or.b32  	%r293, %r24, 128;
	or.b32  	%r29, %r24, 192;
	cvt.rn.f32.s32 	%f395, %r293;
	sub.f32 	%f396, %f395, %f1;
	div.approx.f32 	%f21, %f396, %f287;
	setp.eq.f32 	%p32, %f21, 0f00000000;
	mov.f32 	%f1352, %f1363;
	@%p32 bra 	LBB0_14;
// %bb.13:                              // %L811
	sin.approx.f32 	%f426, %f21;
	div.approx.f32 	%f1352, %f426, %f21;
LBB0_14:                                // %L814
	cvt.rn.f32.s32 	%f429, %r29;
	sub.f32 	%f430, %f429, %f1;
	div.approx.f32 	%f26, %f430, %f287;
	setp.eq.f32 	%p38, %f26, 0f00000000;
	mov.f32 	%f1353, %f1363;
	@%p38 bra 	LBB0_16;
// %bb.15:                              // %L831
	sin.approx.f32 	%f460, %f26;
	div.approx.f32 	%f1353, %f460, %f26;
LBB0_16:                                // %L834
	or.b32  	%r311, %r24, 129;
	or.b32  	%r31, %r24, 193;
	cvt.rn.f32.s32 	%f464, %r311;
	sub.f32 	%f465, %f464, %f1;
	div.approx.f32 	%f30, %f465, %f287;
	setp.eq.f32 	%p44, %f30, 0f00000000;
	mov.f32 	%f1354, %f1363;
	@%p44 bra 	LBB0_18;
// %bb.17:                              // %L913
	sin.approx.f32 	%f495, %f30;
	div.approx.f32 	%f1354, %f495, %f30;
LBB0_18:                                // %L916
	cvt.rn.f32.s32 	%f498, %r31;
	sub.f32 	%f499, %f498, %f1;
	div.approx.f32 	%f35, %f499, %f287;
	setp.eq.f32 	%p50, %f35, 0f00000000;
	mov.f32 	%f1355, %f1363;
	@%p50 bra 	LBB0_20;
// %bb.19:                              // %L933
	sin.approx.f32 	%f529, %f35;
	div.approx.f32 	%f1355, %f529, %f35;
LBB0_20:                                // %L936
	or.b32  	%r329, %r24, 256;
	or.b32  	%r33, %r24, 320;
	cvt.rn.f32.s32 	%f533, %r329;
	sub.f32 	%f534, %f533, %f1;
	div.approx.f32 	%f39, %f534, %f287;
	setp.eq.f32 	%p56, %f39, 0f00000000;
	mov.f32 	%f1356, %f1363;
	@%p56 bra 	LBB0_22;
// %bb.21:                              // %L1015
	sin.approx.f32 	%f564, %f39;
	div.approx.f32 	%f1356, %f564, %f39;
LBB0_22:                                // %L1018
	mov.f32 	%f259, 0f44004000;
	cvt.rn.f32.s32 	%f567, %r33;
	sub.f32 	%f568, %f567, %f1;
	div.approx.f32 	%f44, %f568, %f287;
	setp.eq.f32 	%p62, %f44, 0f00000000;
	mov.f32 	%f1357, %f1363;
	@%p62 bra 	LBB0_24;
// %bb.23:                              // %L1035
	sin.approx.f32 	%f598, %f44;
	div.approx.f32 	%f1357, %f598, %f44;
LBB0_24:                                // %L1038
	div.approx.f32 	%f260, %f258, %f259;
	div.approx.f32 	%f294, %f292, %f259;
	div.approx.f32 	%f329, %f327, %f259;
	div.approx.f32 	%f363, %f361, %f259;
	div.approx.f32 	%f398, %f396, %f259;
	div.approx.f32 	%f432, %f430, %f259;
	div.approx.f32 	%f467, %f465, %f259;
	div.approx.f32 	%f501, %f499, %f259;
	div.approx.f32 	%f536, %f534, %f259;
	div.approx.f32 	%f570, %f568, %f259;
	or.b32  	%r347, %r24, 257;
	or.b32  	%r35, %r24, 321;
	cvt.rn.f32.s32 	%f602, %r347;
	sub.f32 	%f603, %f602, %f1;
	div.approx.f32 	%f605, %f603, %f259;
	div.approx.f32 	%f48, %f603, %f287;
	setp.eq.f32 	%p68, %f48, 0f00000000;
	mov.f32 	%f1358, %f1363;
	@%p68 bra 	LBB0_26;
// %bb.25:                              // %L1117
	sin.approx.f32 	%f633, %f48;
	div.approx.f32 	%f1358, %f633, %f48;
LBB0_26:                                // %L1120
	abs.f32 	%f261, %f260;
	abs.f32 	%f295, %f294;
	abs.f32 	%f330, %f329;
	abs.f32 	%f364, %f363;
	abs.f32 	%f399, %f398;
	abs.f32 	%f433, %f432;
	abs.f32 	%f468, %f467;
	abs.f32 	%f502, %f501;
	abs.f32 	%f537, %f536;
	abs.f32 	%f571, %f570;
	abs.f32 	%f606, %f605;
	cvt.rn.f32.s32 	%f636, %r35;
	sub.f32 	%f637, %f636, %f1;
	div.approx.f32 	%f639, %f637, %f259;
	abs.f32 	%f640, %f639;
	div.approx.f32 	%f53, %f637, %f287;
	setp.eq.f32 	%p74, %f53, 0f00000000;
	mov.f32 	%f1359, %f1363;
	@%p74 bra 	LBB0_28;
// %bb.27:                              // %L1137
	sin.approx.f32 	%f667, %f53;
	div.approx.f32 	%f1359, %f667, %f53;
LBB0_28:                                // %L1140
	setp.gt.f32 	%p3, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p9, %f295, 0f4B800000;
	mul.f32 	%f296, %f294, 0f00000000;
	setp.gt.f32 	%p15, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p21, %f364, 0f4B800000;
	mul.f32 	%f365, %f363, 0f00000000;
	setp.gt.f32 	%p27, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p33, %f433, 0f4B800000;
	mul.f32 	%f434, %f432, 0f00000000;
	setp.gt.f32 	%p39, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	setp.gt.f32 	%p45, %f502, 0f4B800000;
	mul.f32 	%f503, %f501, 0f00000000;
	setp.gt.f32 	%p51, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	setp.gt.f32 	%p57, %f571, 0f4B800000;
	mul.f32 	%f572, %f570, 0f00000000;
	setp.gt.f32 	%p63, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	setp.gt.f32 	%p69, %f640, 0f4B800000;
	mul.f32 	%f641, %f639, 0f00000000;
	or.b32  	%r365, %r24, 384;
	or.b32  	%r37, %r24, 448;
	cvt.rn.f32.s32 	%f671, %r365;
	sub.f32 	%f672, %f671, %f1;
	div.approx.f32 	%f674, %f672, %f259;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p75, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	div.approx.f32 	%f57, %f672, %f287;
	setp.eq.f32 	%p80, %f57, 0f00000000;
	mov.f32 	%f1360, %f1363;
	@%p80 bra 	LBB0_30;
// %bb.29:                              // %L1219
	sin.approx.f32 	%f702, %f57;
	div.approx.f32 	%f1360, %f702, %f57;
LBB0_30:                                // %L1222
	selp.f32 	%f263, %f262, %f260, %p3;
	selp.f32 	%f297, %f296, %f294, %p9;
	selp.f32 	%f332, %f331, %f329, %p15;
	selp.f32 	%f366, %f365, %f363, %p21;
	selp.f32 	%f401, %f400, %f398, %p27;
	selp.f32 	%f435, %f434, %f432, %p33;
	selp.f32 	%f470, %f469, %f467, %p39;
	selp.f32 	%f504, %f503, %f501, %p45;
	selp.f32 	%f539, %f538, %f536, %p51;
	selp.f32 	%f573, %f572, %f570, %p57;
	selp.f32 	%f608, %f607, %f605, %p63;
	selp.f32 	%f642, %f641, %f639, %p69;
	selp.f32 	%f677, %f676, %f674, %p75;
	cvt.rn.f32.s32 	%f705, %r37;
	sub.f32 	%f706, %f705, %f1;
	div.approx.f32 	%f708, %f706, %f259;
	abs.f32 	%f709, %f708;
	setp.gt.f32 	%p81, %f709, 0f4B800000;
	mul.f32 	%f710, %f708, 0f00000000;
	selp.f32 	%f711, %f710, %f708, %p81;
	div.approx.f32 	%f62, %f706, %f287;
	setp.eq.f32 	%p86, %f62, 0f00000000;
	mov.f32 	%f1361, %f1363;
	@%p86 bra 	LBB0_32;
// %bb.31:                              // %L1239
	sin.approx.f32 	%f736, %f62;
	div.approx.f32 	%f1361, %f736, %f62;
LBB0_32:                                // %L1242
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f298, %f297, %f297;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f367, %f366, %f366;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f436, %f435, %f435;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f505, %f504, %f504;
	add.f32 	%f540, %f539, %f539;
	add.f32 	%f574, %f573, %f573;
	add.f32 	%f609, %f608, %f608;
	add.f32 	%f643, %f642, %f642;
	add.f32 	%f678, %f677, %f677;
	add.f32 	%f712, %f711, %f711;
	or.b32  	%r383, %r24, 385;
	or.b32  	%r39, %r24, 449;
	cvt.rn.f32.s32 	%f740, %r383;
	sub.f32 	%f741, %f740, %f1;
	div.approx.f32 	%f743, %f741, %f259;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p87, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p87;
	add.f32 	%f747, %f746, %f746;
	div.approx.f32 	%f66, %f741, %f287;
	setp.eq.f32 	%p92, %f66, 0f00000000;
	mov.f32 	%f1362, %f1363;
	@%p92 bra 	LBB0_34;
// %bb.33:                              // %L1321
	sin.approx.f32 	%f771, %f66;
	div.approx.f32 	%f1362, %f771, %f66;
LBB0_34:                                // %L1324
	mov.b32 	%r258, %f264;
	mov.b32 	%r265, %f298;
	mov.b32 	%r276, %f333;
	mov.b32 	%r283, %f367;
	mov.b32 	%r294, %f402;
	mov.b32 	%r301, %f436;
	mov.b32 	%r312, %f471;
	mov.b32 	%r319, %f505;
	mov.b32 	%r330, %f540;
	mov.b32 	%r337, %f574;
	mov.b32 	%r348, %f609;
	mov.b32 	%r355, %f643;
	mov.b32 	%r366, %f678;
	mov.b32 	%r373, %f712;
	mov.b32 	%r384, %f747;
	cvt.rn.f32.s32 	%f774, %r39;
	sub.f32 	%f775, %f774, %f1;
	div.approx.f32 	%f777, %f775, %f259;
	abs.f32 	%f778, %f777;
	setp.gt.f32 	%p93, %f778, 0f4B800000;
	mul.f32 	%f779, %f777, 0f00000000;
	selp.f32 	%f780, %f779, %f777, %p93;
	add.f32 	%f781, %f780, %f780;
	mov.b32 	%r391, %f781;
	div.approx.f32 	%f71, %f775, %f287;
	setp.eq.f32 	%p98, %f71, 0f00000000;
	@%p98 bra 	LBB0_36;
// %bb.35:                              // %L1341
	sin.approx.f32 	%f805, %f71;
	div.approx.f32 	%f1363, %f805, %f71;
LBB0_36:                                // %L1344
	and.b32  	%r259, %r258, -2147483648;
	and.b32  	%r266, %r265, -2147483648;
	and.b32  	%r277, %r276, -2147483648;
	and.b32  	%r284, %r283, -2147483648;
	and.b32  	%r295, %r294, -2147483648;
	and.b32  	%r302, %r301, -2147483648;
	and.b32  	%r313, %r312, -2147483648;
	and.b32  	%r320, %r319, -2147483648;
	and.b32  	%r331, %r330, -2147483648;
	and.b32  	%r338, %r337, -2147483648;
	and.b32  	%r349, %r348, -2147483648;
	and.b32  	%r356, %r355, -2147483648;
	and.b32  	%r367, %r366, -2147483648;
	and.b32  	%r374, %r373, -2147483648;
	and.b32  	%r385, %r384, -2147483648;
	and.b32  	%r392, %r391, -2147483648;
	mul.lo.s32 	%r41, %r24, 127;
	cvt.rn.f32.s32 	%f808, %r41;
	div.approx.f32 	%f74, %f808, %f287;
	abs.f32 	%f1366, %f74;
	setp.lt.f32 	%p99, %f1366, 0f40000000;
	@%p99 bra 	LBB0_48;
// %bb.37:
	setp.gtu.f32 	%p100, %f1366, 0f4B800000;
	@%p100 bra 	LBB0_44;
	bra.uni 	LBB0_38;
LBB0_44:
	mov.b32 	%r43, %f1366;
	and.b32  	%r401, %r43, 8388607;
	or.b32  	%r16149, %r401, 1065353216;
	mov.b32 	%f1365, %r16149;
	add.s32 	%r402, %r43, -1073741824;
	and.b32  	%r16150, %r402, -8388608;
	setp.eq.s32 	%p106, %r16150, 0;
	@%p106 bra 	LBB0_47;
// %bb.45:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f819, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f818,%f819;
	// end inline asm
LBB0_46:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r403, %r16150, 192937984;
	add.s32 	%r404, %r403, %r16149;
	mov.b32 	%f820, %r404;
	mul.f32 	%f821, %f818, %f820;
	sub.f32 	%f822, %f820, %f821;
	fma.rn.f32 	%f823, %f822, %f818, %f821;
	sub.f32 	%f824, %f820, %f823;
	fma.rz.f32 	%f825, %f824, %f818, %f823;
	cvt.rzi.f32.f32 	%f826, %f825;
	sub.f32 	%f1365, %f820, %f826;
	sub.s32 	%r16150, %r16150, %r403;
	mov.b32 	%r16149, %f1365;
	setp.ne.s32 	%p107, %r16150, 0;
	setp.ne.s32 	%p108, %r16149, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	LBB0_46;
LBB0_47:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r43, 2139095039;
	selp.f32 	%f827, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f828, %f1365, 0f34000000;
	mul.f32 	%f1366, %f827, %f828;
	bra.uni 	LBB0_48;
LBB0_38:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f811, %f1366, %f255;
	cvt.rzi.f32.f32 	%f1364, %f811;
	fma.rn.f32 	%f77, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r42, %f77;
	setp.lt.u32 	%p101, %r42, 1073741824;
	@%p101 bra 	LBB0_43;
// %bb.39:
	setp.lt.u32 	%p102, %r42, -2147483647;
	@%p102 bra 	LBB0_41;
// %bb.40:
	add.f32 	%f816, %f1364, 0fBF800000;
	setp.lt.f32 	%p105, %f77, 0fC0000000;
	add.f32 	%f817, %f816, 0fBF800000;
	selp.f32 	%f1364, %f817, %f816, %p105;
	bra.uni 	LBB0_43;
LBB0_41:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p103, %f77, 0f40800000;
	@%p103 bra 	LBB0_43;
// %bb.42:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f812, %f1364, 0f3F800000;
	fma.rn.f32 	%f814, %f255, 0fC0400000, %f77;
	setp.ge.f32 	%p104, %f814, 0f00000000;
	add.f32 	%f815, %f812, 0f3F800000;
	selp.f32 	%f1364, %f815, %f812, %p104;
LBB0_43:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
LBB0_48:                                // %__internal_fmodf_kernel.exit.i
	or.b32  	%r260, %r259, 1056964608;
	or.b32  	%r267, %r266, 1056964608;
	or.b32  	%r278, %r277, 1056964608;
	or.b32  	%r285, %r284, 1056964608;
	or.b32  	%r296, %r295, 1056964608;
	or.b32  	%r303, %r302, 1056964608;
	or.b32  	%r314, %r313, 1056964608;
	or.b32  	%r321, %r320, 1056964608;
	or.b32  	%r332, %r331, 1056964608;
	or.b32  	%r339, %r338, 1056964608;
	or.b32  	%r350, %r349, 1056964608;
	or.b32  	%r357, %r356, 1056964608;
	or.b32  	%r368, %r367, 1056964608;
	or.b32  	%r375, %r374, 1056964608;
	or.b32  	%r386, %r385, 1056964608;
	or.b32  	%r393, %r392, 1056964608;
	abs.f32 	%f829, %f1366;
	setp.gtu.f32 	%p111, %f829, 0f7F800000;
	@%p111 bra 	LBB0_50;
// %bb.49:
	mov.b32 	%r405, %f74;
	and.b32  	%r406, %r405, -2147483648;
	mov.b32 	%r407, %f1366;
	or.b32  	%r408, %r406, %r407;
	mov.b32 	%f1366, %r408;
LBB0_50:                                // %__nv_fmodf.exit
	mov.b32 	%f265, %r260;
	mov.b32 	%f299, %r267;
	mov.b32 	%f334, %r278;
	mov.b32 	%f368, %r285;
	mov.b32 	%f403, %r296;
	mov.b32 	%f437, %r303;
	mov.b32 	%f472, %r314;
	mov.b32 	%f506, %r321;
	mov.b32 	%f541, %r332;
	mov.b32 	%f575, %r339;
	mov.b32 	%f610, %r350;
	mov.b32 	%f644, %r357;
	mov.b32 	%f679, %r368;
	mov.b32 	%f713, %r375;
	mov.b32 	%f748, %r386;
	mov.b32 	%f782, %r393;
	add.f32 	%f830, %f1366, %f1366;
	mov.b32 	%r409, %f830;
	and.b32  	%r410, %r409, -2147483648;
	or.b32  	%r411, %r410, 1056964608;
	mov.b32 	%f831, %r411;
	add.f32 	%f832, %f830, %f831;
	cvt.rzi.f32.f32 	%f833, %f832;
	abs.f32 	%f834, %f830;
	setp.gt.f32 	%p112, %f834, 0f4B000000;
	selp.f32 	%f835, %f830, %f833, %p112;
	cvt.rzi.f32.f32 	%f836, %f830;
	setp.lt.f32 	%p113, %f834, 0f3F000000;
	add.s32 	%r417, %r41, 8128;
	cvt.rn.f32.s32 	%f861, %r417;
	div.approx.f32 	%f93, %f861, %f287;
	abs.f32 	%f1370, %f93;
	setp.lt.f32 	%p119, %f1370, 0f40000000;
	@%p119 bra 	LBB0_62;
// %bb.51:
	setp.gtu.f32 	%p120, %f1370, 0f4B800000;
	@%p120 bra 	LBB0_58;
	bra.uni 	LBB0_52;
LBB0_58:
	mov.b32 	%r51, %f1370;
	and.b32  	%r418, %r51, 8388607;
	or.b32  	%r16151, %r418, 1065353216;
	mov.b32 	%f1369, %r16151;
	add.s32 	%r419, %r51, -1073741824;
	and.b32  	%r16152, %r419, -8388608;
	setp.eq.s32 	%p126, %r16152, 0;
	@%p126 bra 	LBB0_61;
// %bb.59:                              // %__nv_fmaf_rn.exit4.i.i.i2229.preheader
	mov.f32 	%f872, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f871,%f872;
	// end inline asm
LBB0_60:                                // %__nv_fmaf_rn.exit4.i.i.i2229
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r420, %r16152, 192937984;
	add.s32 	%r421, %r420, %r16151;
	mov.b32 	%f873, %r421;
	mul.f32 	%f874, %f871, %f873;
	sub.f32 	%f875, %f873, %f874;
	fma.rn.f32 	%f876, %f875, %f871, %f874;
	sub.f32 	%f877, %f873, %f876;
	fma.rz.f32 	%f878, %f877, %f871, %f876;
	cvt.rzi.f32.f32 	%f879, %f878;
	sub.f32 	%f1369, %f873, %f879;
	sub.s32 	%r16152, %r16152, %r420;
	mov.b32 	%r16151, %f1369;
	setp.ne.s32 	%p127, %r16152, 0;
	setp.ne.s32 	%p128, %r16151, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	LBB0_60;
LBB0_61:                                // %__internal_fmodf_slowpath_mod.exit.i.i2231
	setp.gt.u32 	%p130, %r51, 2139095039;
	selp.f32 	%f880, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f881, %f1369, 0f34000000;
	mul.f32 	%f1370, %f880, %f881;
	bra.uni 	LBB0_62;
LBB0_52:                                // %__nv_fast_fdividef.exit.i.i.i2201
	div.approx.f32 	%f864, %f1370, %f255;
	cvt.rzi.f32.f32 	%f1368, %f864;
	fma.rn.f32 	%f96, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r50, %f96;
	setp.lt.u32 	%p121, %r50, 1073741824;
	@%p121 bra 	LBB0_57;
// %bb.53:
	setp.lt.u32 	%p122, %r50, -2147483647;
	@%p122 bra 	LBB0_55;
// %bb.54:
	add.f32 	%f869, %f1368, 0fBF800000;
	setp.lt.f32 	%p125, %f96, 0fC0000000;
	add.f32 	%f870, %f869, 0fBF800000;
	selp.f32 	%f1368, %f870, %f869, %p125;
	bra.uni 	LBB0_57;
LBB0_55:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p123, %f96, 0f40800000;
	@%p123 bra 	LBB0_57;
// %bb.56:                              // %__nv_fmaf_rn.exit.i.i.i2206
	add.f32 	%f865, %f1368, 0f3F800000;
	fma.rn.f32 	%f867, %f255, 0fC0400000, %f96;
	setp.ge.f32 	%p124, %f867, 0f00000000;
	add.f32 	%f868, %f865, 0f3F800000;
	selp.f32 	%f1368, %f868, %f865, %p124;
LBB0_57:                                // %__internal_fmodf_fastpath_quot.exit.i.i2210
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
LBB0_62:                                // %__internal_fmodf_kernel.exit.i2235
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f300, %f298, %f299;
	abs.f32 	%f302, %f298;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f369, %f367, %f368;
	abs.f32 	%f371, %f367;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f438, %f436, %f437;
	abs.f32 	%f440, %f436;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f507, %f505, %f506;
	abs.f32 	%f509, %f505;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f576, %f574, %f575;
	abs.f32 	%f578, %f574;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f714, %f712, %f713;
	abs.f32 	%f716, %f712;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	add.f32 	%f783, %f781, %f782;
	abs.f32 	%f785, %f781;
	selp.f32 	%f837, %f836, %f835, %p113;
	shr.u32 	%r19, %r5, 2;
	abs.f32 	%f882, %f1370;
	setp.gtu.f32 	%p131, %f882, 0f7F800000;
	@%p131 bra 	LBB0_64;
// %bb.63:
	mov.b32 	%r422, %f93;
	and.b32  	%r423, %r422, -2147483648;
	mov.b32 	%r424, %f1370;
	or.b32  	%r425, %r423, %r424;
	mov.b32 	%f1370, %r425;
LBB0_64:                                // %__nv_fmodf.exit2236
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p4, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f301, %f300;
	setp.gt.f32 	%p10, %f302, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p16, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f370, %f369;
	setp.gt.f32 	%p22, %f371, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p28, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f439, %f438;
	setp.gt.f32 	%p34, %f440, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p40, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f508, %f507;
	setp.gt.f32 	%p46, %f509, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p52, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f577, %f576;
	setp.gt.f32 	%p58, %f578, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p64, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p70, %f647, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p76, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f715, %f714;
	setp.gt.f32 	%p82, %f716, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p88, %f751, 0f4B000000;
	cvt.rzi.f32.f32 	%f784, %f783;
	setp.gt.f32 	%p94, %f785, 0f4B000000;
	fma.rn.f32 	%f838, %f837, 0fBF000000, %f1366;
	add.f32 	%f883, %f1370, %f1370;
	mov.b32 	%r438, %f883;
	and.b32  	%r439, %r438, -2147483648;
	or.b32  	%r440, %r439, 1056964608;
	mov.b32 	%f884, %r440;
	add.f32 	%f885, %f883, %f884;
	cvt.rzi.f32.f32 	%f886, %f885;
	abs.f32 	%f887, %f883;
	setp.gt.f32 	%p132, %f887, 0f4B000000;
	selp.f32 	%f888, %f883, %f886, %p132;
	cvt.rzi.f32.f32 	%f889, %f883;
	setp.lt.f32 	%p133, %f887, 0f3F000000;
	selp.f32 	%f890, %f889, %f888, %p133;
	fma.rn.f32 	%f891, %f890, 0fBF000000, %f1370;
	and.b32  	%r446, %r5, 3;
	mul.lo.s32 	%r447, %r446, %r19;
	shl.b32 	%r448, %r447, 1;
	neg.s32 	%r62, %r448;
	cvt.rn.f32.s32 	%f916, %r62;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f110, %f916, %f917;
	abs.f32 	%f1374, %f110;
	setp.lt.f32 	%p139, %f1374, 0f40000000;
	@%p139 bra 	LBB0_76;
// %bb.65:
	setp.gtu.f32 	%p140, %f1374, 0f4B800000;
	@%p140 bra 	LBB0_72;
	bra.uni 	LBB0_66;
LBB0_72:
	mov.b32 	%r64, %f1374;
	and.b32  	%r449, %r64, 8388607;
	or.b32  	%r16153, %r449, 1065353216;
	mov.b32 	%f1373, %r16153;
	add.s32 	%r450, %r64, -1073741824;
	and.b32  	%r16154, %r450, -8388608;
	setp.eq.s32 	%p146, %r16154, 0;
	@%p146 bra 	LBB0_75;
// %bb.73:                              // %__nv_fmaf_rn.exit4.i.i.i2275.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
LBB0_74:                                // %__nv_fmaf_rn.exit4.i.i.i2275
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r451, %r16154, 192937984;
	add.s32 	%r452, %r451, %r16153;
	mov.b32 	%f928, %r452;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1373, %f928, %f934;
	sub.s32 	%r16154, %r16154, %r451;
	mov.b32 	%r16153, %f1373;
	setp.ne.s32 	%p147, %r16154, 0;
	setp.ne.s32 	%p148, %r16153, 0;
	and.pred  	%p149, %p147, %p148;
	@%p149 bra 	LBB0_74;
LBB0_75:                                // %__internal_fmodf_slowpath_mod.exit.i.i2277
	setp.gt.u32 	%p150, %r64, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p150;
	mul.f32 	%f936, %f1373, 0f34000000;
	mul.f32 	%f1374, %f935, %f936;
	bra.uni 	LBB0_76;
LBB0_66:                                // %__nv_fast_fdividef.exit.i.i.i2247
	div.approx.f32 	%f919, %f1374, %f255;
	cvt.rzi.f32.f32 	%f1372, %f919;
	fma.rn.f32 	%f113, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r63, %f113;
	setp.lt.u32 	%p141, %r63, 1073741824;
	@%p141 bra 	LBB0_71;
// %bb.67:
	setp.lt.u32 	%p142, %r63, -2147483647;
	@%p142 bra 	LBB0_69;
// %bb.68:
	add.f32 	%f924, %f1372, 0fBF800000;
	setp.lt.f32 	%p145, %f113, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1372, %f925, %f924, %p145;
	bra.uni 	LBB0_71;
LBB0_69:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p143, %f113, 0f40800000;
	@%p143 bra 	LBB0_71;
// %bb.70:                              // %__nv_fmaf_rn.exit.i.i.i2252
	add.f32 	%f920, %f1372, 0f3F800000;
	fma.rn.f32 	%f922, %f255, 0fC0400000, %f113;
	setp.ge.f32 	%p144, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1372, %f923, %f920, %p144;
LBB0_71:                                // %__internal_fmodf_fastpath_quot.exit.i.i2256
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
LBB0_76:                                // %__internal_fmodf_kernel.exit.i2281
	selp.f32 	%f269, %f264, %f267, %p4;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p5, %f268, 0f3F000000;
	selp.f32 	%f303, %f298, %f301, %p10;
	cvt.rzi.f32.f32 	%f304, %f298;
	setp.lt.f32 	%p11, %f302, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p16;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p17, %f337, 0f3F000000;
	selp.f32 	%f372, %f367, %f370, %p22;
	cvt.rzi.f32.f32 	%f373, %f367;
	setp.lt.f32 	%p23, %f371, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p28;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p29, %f406, 0f3F000000;
	selp.f32 	%f441, %f436, %f439, %p34;
	cvt.rzi.f32.f32 	%f442, %f436;
	setp.lt.f32 	%p35, %f440, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p40;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p41, %f475, 0f3F000000;
	selp.f32 	%f510, %f505, %f508, %p46;
	cvt.rzi.f32.f32 	%f511, %f505;
	setp.lt.f32 	%p47, %f509, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p52;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p53, %f544, 0f3F000000;
	selp.f32 	%f579, %f574, %f577, %p58;
	cvt.rzi.f32.f32 	%f580, %f574;
	setp.lt.f32 	%p59, %f578, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p64;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p65, %f613, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p70;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p71, %f647, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p76;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p77, %f682, 0f3F000000;
	selp.f32 	%f717, %f712, %f715, %p82;
	cvt.rzi.f32.f32 	%f718, %f712;
	setp.lt.f32 	%p83, %f716, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p88;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p89, %f751, 0f3F000000;
	selp.f32 	%f786, %f781, %f784, %p94;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p95, %f785, 0f3F000000;
	mul.f32 	%f839, %f838, 0f34222169;
	mul.f32 	%f892, %f891, 0f34222169;
	abs.f32 	%f937, %f1374;
	setp.gtu.f32 	%p151, %f937, 0f7F800000;
	@%p151 bra 	LBB0_78;
// %bb.77:
	mov.b32 	%r453, %f110;
	and.b32  	%r454, %r453, -2147483648;
	mov.b32 	%r455, %f1374;
	or.b32  	%r456, %r454, %r455;
	mov.b32 	%f1374, %r456;
LBB0_78:                                // %__nv_fmodf.exit2282
	selp.f32 	%f271, %f270, %f269, %p5;
	selp.f32 	%f305, %f304, %f303, %p11;
	selp.f32 	%f340, %f339, %f338, %p17;
	selp.f32 	%f374, %f373, %f372, %p23;
	selp.f32 	%f409, %f408, %f407, %p29;
	selp.f32 	%f443, %f442, %f441, %p35;
	selp.f32 	%f478, %f477, %f476, %p41;
	selp.f32 	%f512, %f511, %f510, %p47;
	selp.f32 	%f547, %f546, %f545, %p53;
	selp.f32 	%f581, %f580, %f579, %p59;
	selp.f32 	%f616, %f615, %f614, %p65;
	selp.f32 	%f650, %f649, %f648, %p71;
	selp.f32 	%f685, %f684, %f683, %p77;
	selp.f32 	%f719, %f718, %f717, %p83;
	selp.f32 	%f754, %f753, %f752, %p89;
	selp.f32 	%f788, %f787, %f786, %p95;
	fma.rn.f32 	%f840, %f838, 0f40490FDA, %f839;
	fma.rn.f32 	%f893, %f891, 0f40490FDA, %f892;
	add.f32 	%f938, %f1374, %f1374;
	mov.b32 	%r457, %f938;
	and.b32  	%r458, %r457, -2147483648;
	or.b32  	%r459, %r458, 1056964608;
	mov.b32 	%f939, %r459;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p152, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p152;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p153, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p153;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1374;
	mul.f32 	%f947, %f946, 0f34222169;
	fma.rn.f32 	%f948, %f946, 0f40490FDA, %f947;
	shl.b32 	%r71, %r19, 3;
	sub.s32 	%r465, %r62, %r71;
	cvt.rn.f32.s32 	%f969, %r465;
	div.approx.f32 	%f129, %f969, %f917;
	abs.f32 	%f1378, %f129;
	setp.lt.f32 	%p159, %f1378, 0f40000000;
	@%p159 bra 	LBB0_90;
// %bb.79:
	setp.gtu.f32 	%p160, %f1378, 0f4B800000;
	@%p160 bra 	LBB0_86;
	bra.uni 	LBB0_80;
LBB0_86:
	mov.b32 	%r73, %f1378;
	and.b32  	%r466, %r73, 8388607;
	or.b32  	%r16155, %r466, 1065353216;
	mov.b32 	%f1377, %r16155;
	add.s32 	%r467, %r73, -1073741824;
	and.b32  	%r16156, %r467, -8388608;
	setp.eq.s32 	%p166, %r16156, 0;
	@%p166 bra 	LBB0_89;
// %bb.87:                              // %__nv_fmaf_rn.exit4.i.i.i2321.preheader
	mov.f32 	%f980, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f979,%f980;
	// end inline asm
LBB0_88:                                // %__nv_fmaf_rn.exit4.i.i.i2321
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r468, %r16156, 192937984;
	add.s32 	%r469, %r468, %r16155;
	mov.b32 	%f981, %r469;
	mul.f32 	%f982, %f979, %f981;
	sub.f32 	%f983, %f981, %f982;
	fma.rn.f32 	%f984, %f983, %f979, %f982;
	sub.f32 	%f985, %f981, %f984;
	fma.rz.f32 	%f986, %f985, %f979, %f984;
	cvt.rzi.f32.f32 	%f987, %f986;
	sub.f32 	%f1377, %f981, %f987;
	sub.s32 	%r16156, %r16156, %r468;
	mov.b32 	%r16155, %f1377;
	setp.ne.s32 	%p167, %r16156, 0;
	setp.ne.s32 	%p168, %r16155, 0;
	and.pred  	%p169, %p167, %p168;
	@%p169 bra 	LBB0_88;
LBB0_89:                                // %__internal_fmodf_slowpath_mod.exit.i.i2323
	setp.gt.u32 	%p170, %r73, 2139095039;
	selp.f32 	%f988, 0f7FFFFFFF, 0f4B800000, %p170;
	mul.f32 	%f989, %f1377, 0f34000000;
	mul.f32 	%f1378, %f988, %f989;
	bra.uni 	LBB0_90;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i2293
	div.approx.f32 	%f972, %f1378, %f255;
	cvt.rzi.f32.f32 	%f1376, %f972;
	fma.rn.f32 	%f132, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r72, %f132;
	setp.lt.u32 	%p161, %r72, 1073741824;
	@%p161 bra 	LBB0_85;
// %bb.81:
	setp.lt.u32 	%p162, %r72, -2147483647;
	@%p162 bra 	LBB0_83;
// %bb.82:
	add.f32 	%f977, %f1376, 0fBF800000;
	setp.lt.f32 	%p165, %f132, 0fC0000000;
	add.f32 	%f978, %f977, 0fBF800000;
	selp.f32 	%f1376, %f978, %f977, %p165;
	bra.uni 	LBB0_85;
LBB0_83:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p163, %f132, 0f40800000;
	@%p163 bra 	LBB0_85;
// %bb.84:                              // %__nv_fmaf_rn.exit.i.i.i2298
	add.f32 	%f973, %f1376, 0f3F800000;
	fma.rn.f32 	%f975, %f255, 0fC0400000, %f132;
	setp.ge.f32 	%p164, %f975, 0f00000000;
	add.f32 	%f976, %f973, 0f3F800000;
	selp.f32 	%f1376, %f976, %f973, %p164;
LBB0_85:                                // %__internal_fmodf_fastpath_quot.exit.i.i2302
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
LBB0_90:                                // %__internal_fmodf_kernel.exit.i2327
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f306, %f305, 0fBF000000, %f297;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f375, %f374, 0fBF000000, %f366;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f444, %f443, 0fBF000000, %f435;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f513, %f512, 0fBF000000, %f504;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f582, %f581, 0fBF000000, %f573;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f642;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f720, %f719, 0fBF000000, %f711;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f780;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f894, %f893, %f893;
	mul.f32 	%f949, %f948, %f948;
	shl.b32 	%r11, %r5, 1;
	abs.f32 	%f990, %f1378;
	setp.gtu.f32 	%p171, %f990, 0f7F800000;
	@%p171 bra 	LBB0_92;
// %bb.91:
	mov.b32 	%r470, %f129;
	and.b32  	%r471, %r470, -2147483648;
	mov.b32 	%r472, %f1378;
	or.b32  	%r473, %r471, %r472;
	mov.b32 	%f1378, %r473;
LBB0_92:                                // %__nv_fmodf.exit2328
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f307, %f306, %f306;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f376, %f375, %f375;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f445, %f444, %f444;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f514, %f513, %f513;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f583, %f582, %f582;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f652, %f651, %f651;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f721, %f720, %f720;
	mul.f32 	%f756, %f755, %f755;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f842, %f841, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f895, %f894, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f950, %f949, 0f37CBAC00, 0fBAB607ED;
	add.f32 	%f991, %f1378, %f1378;
	mov.b32 	%r486, %f991;
	and.b32  	%r487, %r486, -2147483648;
	or.b32  	%r488, %r487, 1056964608;
	mov.b32 	%f992, %r488;
	add.f32 	%f993, %f991, %f992;
	cvt.rzi.f32.f32 	%f994, %f993;
	abs.f32 	%f995, %f991;
	setp.gt.f32 	%p172, %f995, 0f4B000000;
	selp.f32 	%f996, %f991, %f994, %p172;
	cvt.rzi.f32.f32 	%f997, %f991;
	setp.lt.f32 	%p173, %f995, 0f3F000000;
	selp.f32 	%f998, %f997, %f996, %p173;
	fma.rn.f32 	%f999, %f998, 0fBF000000, %f1378;
	mul.f32 	%f1000, %f999, 0f34222169;
	fma.rn.f32 	%f1001, %f999, 0f40490FDA, %f1000;
	mul.f32 	%f1002, %f1001, %f1001;
	fma.rn.f32 	%f1003, %f1002, 0f37CBAC00, 0fBAB607ED;
	and.b32  	%r494, %r11, 6;
	shl.b32 	%r495, %r494, 1;
	neg.s32 	%r84, %r495;
	mul.lo.s32 	%r85, %r84, %r19;
	cvt.rn.f32.s32 	%f1024, %r85;
	div.approx.f32 	%f146, %f1024, %f287;
	abs.f32 	%f1382, %f146;
	setp.lt.f32 	%p179, %f1382, 0f40000000;
	@%p179 bra 	LBB0_104;
// %bb.93:
	setp.gtu.f32 	%p180, %f1382, 0f4B800000;
	@%p180 bra 	LBB0_100;
	bra.uni 	LBB0_94;
LBB0_100:
	mov.b32 	%r87, %f1382;
	and.b32  	%r496, %r87, 8388607;
	or.b32  	%r16157, %r496, 1065353216;
	mov.b32 	%f1381, %r16157;
	add.s32 	%r497, %r87, -1073741824;
	and.b32  	%r16158, %r497, -8388608;
	setp.eq.s32 	%p186, %r16158, 0;
	@%p186 bra 	LBB0_103;
// %bb.101:                             // %__nv_fmaf_rn.exit4.i.i.i2367.preheader
	mov.f32 	%f1035, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1034,%f1035;
	// end inline asm
LBB0_102:                               // %__nv_fmaf_rn.exit4.i.i.i2367
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r498, %r16158, 192937984;
	add.s32 	%r499, %r498, %r16157;
	mov.b32 	%f1036, %r499;
	mul.f32 	%f1037, %f1034, %f1036;
	sub.f32 	%f1038, %f1036, %f1037;
	fma.rn.f32 	%f1039, %f1038, %f1034, %f1037;
	sub.f32 	%f1040, %f1036, %f1039;
	fma.rz.f32 	%f1041, %f1040, %f1034, %f1039;
	cvt.rzi.f32.f32 	%f1042, %f1041;
	sub.f32 	%f1381, %f1036, %f1042;
	sub.s32 	%r16158, %r16158, %r498;
	mov.b32 	%r16157, %f1381;
	setp.ne.s32 	%p187, %r16158, 0;
	setp.ne.s32 	%p188, %r16157, 0;
	and.pred  	%p189, %p187, %p188;
	@%p189 bra 	LBB0_102;
LBB0_103:                               // %__internal_fmodf_slowpath_mod.exit.i.i2369
	setp.gt.u32 	%p190, %r87, 2139095039;
	selp.f32 	%f1043, 0f7FFFFFFF, 0f4B800000, %p190;
	mul.f32 	%f1044, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1043, %f1044;
	bra.uni 	LBB0_104;
LBB0_94:                                // %__nv_fast_fdividef.exit.i.i.i2339
	div.approx.f32 	%f1027, %f1382, %f255;
	cvt.rzi.f32.f32 	%f1380, %f1027;
	fma.rn.f32 	%f149, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r86, %f149;
	setp.lt.u32 	%p181, %r86, 1073741824;
	@%p181 bra 	LBB0_99;
// %bb.95:
	setp.lt.u32 	%p182, %r86, -2147483647;
	@%p182 bra 	LBB0_97;
// %bb.96:
	add.f32 	%f1032, %f1380, 0fBF800000;
	setp.lt.f32 	%p185, %f149, 0fC0000000;
	add.f32 	%f1033, %f1032, 0fBF800000;
	selp.f32 	%f1380, %f1033, %f1032, %p185;
	bra.uni 	LBB0_99;
LBB0_97:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p183, %f149, 0f40800000;
	@%p183 bra 	LBB0_99;
// %bb.98:                              // %__nv_fmaf_rn.exit.i.i.i2344
	add.f32 	%f1028, %f1380, 0f3F800000;
	fma.rn.f32 	%f1030, %f255, 0fC0400000, %f149;
	setp.ge.f32 	%p184, %f1030, 0f00000000;
	add.f32 	%f1031, %f1028, 0f3F800000;
	selp.f32 	%f1380, %f1031, %f1028, %p184;
LBB0_99:                                // %__internal_fmodf_fastpath_quot.exit.i.i2348
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
LBB0_104:                               // %__internal_fmodf_kernel.exit.i2373
	cvt.rzi.s32.f32 	%r261, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r268, %f305;
	fma.rn.f32 	%f308, %f307, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f309, %f307, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r279, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r286, %f374;
	fma.rn.f32 	%f377, %f376, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f378, %f376, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r297, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r304, %f443;
	fma.rn.f32 	%f446, %f445, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f447, %f445, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r315, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r322, %f512;
	fma.rn.f32 	%f515, %f514, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f516, %f514, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r333, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r340, %f581;
	fma.rn.f32 	%f584, %f583, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f585, %f583, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r351, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r358, %f650;
	fma.rn.f32 	%f653, %f652, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f654, %f652, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r369, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r376, %f719;
	fma.rn.f32 	%f722, %f721, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f723, %f721, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r387, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r394, %f788;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r412, %f837;
	fma.rn.f32 	%f843, %f842, %f841, 0f3D2AAABB;
	fma.rn.f32 	%f847, %f841, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r441, %f890;
	fma.rn.f32 	%f896, %f895, %f894, 0f3D2AAABB;
	fma.rn.f32 	%f900, %f894, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r460, %f945;
	fma.rn.f32 	%f951, %f950, %f949, 0f3D2AAABB;
	fma.rn.f32 	%f955, %f949, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r489, %f998;
	fma.rn.f32 	%f1004, %f1003, %f1002, 0f3D2AAABB;
	fma.rn.f32 	%f1008, %f1002, 0fB94D4153, 0f3C0885E4;
	abs.f32 	%f1045, %f1382;
	setp.gtu.f32 	%p191, %f1045, 0f7F800000;
	@%p191 bra 	LBB0_106;
// %bb.105:
	mov.b32 	%r500, %f146;
	and.b32  	%r501, %r500, -2147483648;
	mov.b32 	%r502, %f1382;
	or.b32  	%r503, %r501, %r502;
	mov.b32 	%f1382, %r503;
LBB0_106:                               // %__nv_fmodf.exit2374
	add.s32 	%r262, %r261, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r269, %r268, 1;
	fma.rn.f32 	%f310, %f308, %f307, 0fC0A55DF6;
	fma.rn.f32 	%f311, %f309, %f307, 0f4081E0CF;
	fma.rn.f32 	%f312, %f307, %f306, 0f00000000;
	add.s32 	%r280, %r279, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r287, %r286, 1;
	fma.rn.f32 	%f379, %f377, %f376, 0fC0A55DF6;
	fma.rn.f32 	%f380, %f378, %f376, 0f4081E0CF;
	fma.rn.f32 	%f381, %f376, %f375, 0f00000000;
	add.s32 	%r298, %r297, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r305, %r304, 1;
	fma.rn.f32 	%f448, %f446, %f445, 0fC0A55DF6;
	fma.rn.f32 	%f449, %f447, %f445, 0f4081E0CF;
	fma.rn.f32 	%f450, %f445, %f444, 0f00000000;
	add.s32 	%r316, %r315, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r323, %r322, 1;
	fma.rn.f32 	%f517, %f515, %f514, 0fC0A55DF6;
	fma.rn.f32 	%f518, %f516, %f514, 0f4081E0CF;
	fma.rn.f32 	%f519, %f514, %f513, 0f00000000;
	add.s32 	%r334, %r333, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r341, %r340, 1;
	fma.rn.f32 	%f586, %f584, %f583, 0fC0A55DF6;
	fma.rn.f32 	%f587, %f585, %f583, 0f4081E0CF;
	fma.rn.f32 	%f588, %f583, %f582, 0f00000000;
	add.s32 	%r352, %r351, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r359, %r358, 1;
	fma.rn.f32 	%f655, %f653, %f652, 0fC0A55DF6;
	fma.rn.f32 	%f656, %f654, %f652, 0f4081E0CF;
	fma.rn.f32 	%f657, %f652, %f651, 0f00000000;
	add.s32 	%r370, %r369, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r377, %r376, 1;
	fma.rn.f32 	%f724, %f722, %f721, 0fC0A55DF6;
	fma.rn.f32 	%f725, %f723, %f721, 0f4081E0CF;
	fma.rn.f32 	%f726, %f721, %f720, 0f00000000;
	add.s32 	%r388, %r387, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	add.s32 	%r395, %r394, 1;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f844, %f843, %f841, 0fBEFFFFFF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	fma.rn.f32 	%f848, %f847, %f841, 0fBE2AAAA8;
	and.b32  	%r413, %r412, 1;
	fma.rn.f32 	%f897, %f896, %f894, 0fBEFFFFFF;
	fma.rn.f32 	%f899, %f894, %f893, 0f00000000;
	fma.rn.f32 	%f901, %f900, %f894, 0fBE2AAAA8;
	and.b32  	%r442, %r441, 1;
	fma.rn.f32 	%f952, %f951, %f949, 0fBEFFFFFF;
	fma.rn.f32 	%f954, %f949, %f948, 0f00000000;
	fma.rn.f32 	%f956, %f955, %f949, 0fBE2AAAA8;
	and.b32  	%r461, %r460, 1;
	fma.rn.f32 	%f1005, %f1004, %f1002, 0fBEFFFFFF;
	fma.rn.f32 	%f1007, %f1002, %f1001, 0f00000000;
	fma.rn.f32 	%f1009, %f1008, %f1002, 0fBE2AAAA8;
	and.b32  	%r490, %r489, 1;
	add.f32 	%f1046, %f1382, %f1382;
	mov.b32 	%r504, %f1046;
	and.b32  	%r505, %r504, -2147483648;
	or.b32  	%r506, %r505, 1056964608;
	mov.b32 	%f1047, %r506;
	add.f32 	%f1048, %f1046, %f1047;
	cvt.rzi.f32.f32 	%f1049, %f1048;
	abs.f32 	%f1050, %f1046;
	setp.gt.f32 	%p192, %f1050, 0f4B000000;
	selp.f32 	%f1051, %f1046, %f1049, %p192;
	cvt.rzi.f32.f32 	%f1052, %f1046;
	setp.lt.f32 	%p193, %f1050, 0f3F000000;
	selp.f32 	%f1053, %f1052, %f1051, %p193;
	cvt.rzi.s32.f32 	%r507, %f1053;
	fma.rn.f32 	%f1054, %f1053, 0fBF000000, %f1382;
	mul.f32 	%f1055, %f1054, 0f34222169;
	fma.rn.f32 	%f1056, %f1054, 0f40490FDA, %f1055;
	mul.f32 	%f1057, %f1056, %f1056;
	fma.rn.f32 	%f1058, %f1057, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1059, %f1058, %f1057, 0f3D2AAABB;
	fma.rn.f32 	%f1063, %f1057, 0fB94D4153, 0f3C0885E4;
	sub.s32 	%r512, %r85, %r71;
	cvt.rn.f32.s32 	%f1077, %r512;
	div.approx.f32 	%f165, %f1077, %f287;
	abs.f32 	%f1386, %f165;
	setp.lt.f32 	%p199, %f1386, 0f40000000;
	@%p199 bra 	LBB0_118;
// %bb.107:
	setp.gtu.f32 	%p200, %f1386, 0f4B800000;
	@%p200 bra 	LBB0_114;
	bra.uni 	LBB0_108;
LBB0_114:
	mov.b32 	%r95, %f1386;
	and.b32  	%r513, %r95, 8388607;
	or.b32  	%r16159, %r513, 1065353216;
	mov.b32 	%f1385, %r16159;
	add.s32 	%r514, %r95, -1073741824;
	and.b32  	%r16160, %r514, -8388608;
	setp.eq.s32 	%p206, %r16160, 0;
	@%p206 bra 	LBB0_117;
// %bb.115:                             // %__nv_fmaf_rn.exit4.i.i.i2413.preheader
	mov.f32 	%f1088, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1087,%f1088;
	// end inline asm
LBB0_116:                               // %__nv_fmaf_rn.exit4.i.i.i2413
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r515, %r16160, 192937984;
	add.s32 	%r516, %r515, %r16159;
	mov.b32 	%f1089, %r516;
	mul.f32 	%f1090, %f1087, %f1089;
	sub.f32 	%f1091, %f1089, %f1090;
	fma.rn.f32 	%f1092, %f1091, %f1087, %f1090;
	sub.f32 	%f1093, %f1089, %f1092;
	fma.rz.f32 	%f1094, %f1093, %f1087, %f1092;
	cvt.rzi.f32.f32 	%f1095, %f1094;
	sub.f32 	%f1385, %f1089, %f1095;
	sub.s32 	%r16160, %r16160, %r515;
	mov.b32 	%r16159, %f1385;
	setp.ne.s32 	%p207, %r16160, 0;
	setp.ne.s32 	%p208, %r16159, 0;
	and.pred  	%p209, %p207, %p208;
	@%p209 bra 	LBB0_116;
LBB0_117:                               // %__internal_fmodf_slowpath_mod.exit.i.i2415
	setp.gt.u32 	%p210, %r95, 2139095039;
	selp.f32 	%f1096, 0f7FFFFFFF, 0f4B800000, %p210;
	mul.f32 	%f1097, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1096, %f1097;
	bra.uni 	LBB0_118;
LBB0_108:                               // %__nv_fast_fdividef.exit.i.i.i2385
	div.approx.f32 	%f1080, %f1386, %f255;
	cvt.rzi.f32.f32 	%f1384, %f1080;
	fma.rn.f32 	%f168, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r94, %f168;
	setp.lt.u32 	%p201, %r94, 1073741824;
	@%p201 bra 	LBB0_113;
// %bb.109:
	setp.lt.u32 	%p202, %r94, -2147483647;
	@%p202 bra 	LBB0_111;
// %bb.110:
	add.f32 	%f1085, %f1384, 0fBF800000;
	setp.lt.f32 	%p205, %f168, 0fC0000000;
	add.f32 	%f1086, %f1085, 0fBF800000;
	selp.f32 	%f1384, %f1086, %f1085, %p205;
	bra.uni 	LBB0_113;
LBB0_111:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p203, %f168, 0f40800000;
	@%p203 bra 	LBB0_113;
// %bb.112:                             // %__nv_fmaf_rn.exit.i.i.i2390
	add.f32 	%f1081, %f1384, 0f3F800000;
	fma.rn.f32 	%f1083, %f255, 0fC0400000, %f168;
	setp.ge.f32 	%p204, %f1083, 0f00000000;
	add.f32 	%f1084, %f1081, 0f3F800000;
	selp.f32 	%f1384, %f1084, %f1081, %p204;
LBB0_113:                               // %__internal_fmodf_fastpath_quot.exit.i.i2394
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
LBB0_118:                               // %__internal_fmodf_kernel.exit.i2419
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r263, %r262, 1;
	fma.rn.f32 	%f313, %f311, %f307, 0fC09DE9E6;
	fma.rn.f32 	%f314, %f310, %f312, 0f00000000;
	and.b32  	%r270, %r269, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r281, %r280, 1;
	fma.rn.f32 	%f382, %f380, %f376, 0fC09DE9E6;
	fma.rn.f32 	%f383, %f379, %f381, 0f00000000;
	and.b32  	%r288, %r287, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r299, %r298, 1;
	fma.rn.f32 	%f451, %f449, %f445, 0fC09DE9E6;
	fma.rn.f32 	%f452, %f448, %f450, 0f00000000;
	and.b32  	%r306, %r305, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r317, %r316, 1;
	fma.rn.f32 	%f520, %f518, %f514, 0fC09DE9E6;
	fma.rn.f32 	%f521, %f517, %f519, 0f00000000;
	and.b32  	%r324, %r323, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r335, %r334, 1;
	fma.rn.f32 	%f589, %f587, %f583, 0fC09DE9E6;
	fma.rn.f32 	%f590, %f586, %f588, 0f00000000;
	and.b32  	%r342, %r341, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r353, %r352, 1;
	fma.rn.f32 	%f658, %f656, %f652, 0fC09DE9E6;
	fma.rn.f32 	%f659, %f655, %f657, 0f00000000;
	and.b32  	%r360, %r359, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r371, %r370, 1;
	fma.rn.f32 	%f727, %f725, %f721, 0fC09DE9E6;
	fma.rn.f32 	%f728, %f724, %f726, 0f00000000;
	and.b32  	%r378, %r377, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r389, %r388, 1;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	and.b32  	%r396, %r395, 1;
	fma.rn.f32 	%f845, %f844, %f841, 0f3F800000;
	fma.rn.f32 	%f849, %f848, %f846, %f840;
	setp.eq.b32 	%p114, %r413, 1;
	fma.rn.f32 	%f898, %f897, %f894, 0f3F800000;
	fma.rn.f32 	%f902, %f901, %f899, %f893;
	setp.eq.b32 	%p134, %r442, 1;
	fma.rn.f32 	%f953, %f952, %f949, 0f3F800000;
	fma.rn.f32 	%f957, %f956, %f954, %f948;
	setp.eq.b32 	%p154, %r461, 1;
	fma.rn.f32 	%f1006, %f1005, %f1002, 0f3F800000;
	fma.rn.f32 	%f1010, %f1009, %f1007, %f1001;
	setp.eq.b32 	%p174, %r490, 1;
	fma.rn.f32 	%f1060, %f1059, %f1057, 0fBEFFFFFF;
	fma.rn.f32 	%f1062, %f1057, %f1056, 0f00000000;
	fma.rn.f32 	%f1064, %f1063, %f1057, 0fBE2AAAA8;
	and.b32  	%r508, %r507, 1;
	shr.u32 	%r16, %r5, 1;
	shr.u32 	%r22, %r5, 3;
	abs.f32 	%f1098, %f1386;
	setp.gtu.f32 	%p211, %f1098, 0f7F800000;
	@%p211 bra 	LBB0_120;
// %bb.119:
	mov.b32 	%r517, %f165;
	and.b32  	%r518, %r517, -2147483648;
	mov.b32 	%r519, %f1386;
	or.b32  	%r520, %r518, %r519;
	mov.b32 	%f1386, %r520;
LBB0_120:                               // %__nv_fmodf.exit2420
	shl.b32 	%r7, %r5, 2;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p6, %r263, 1;
	fma.rn.f32 	%f315, %f313, %f307, 0f3F800000;
	fma.rn.f32 	%f316, %f306, 0f40490FDB, %f314;
	setp.eq.b32 	%p12, %r270, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p18, %r281, 1;
	fma.rn.f32 	%f384, %f382, %f376, 0f3F800000;
	fma.rn.f32 	%f385, %f375, 0f40490FDB, %f383;
	setp.eq.b32 	%p24, %r288, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p30, %r299, 1;
	fma.rn.f32 	%f453, %f451, %f445, 0f3F800000;
	fma.rn.f32 	%f454, %f444, 0f40490FDB, %f452;
	setp.eq.b32 	%p36, %r306, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p42, %r317, 1;
	fma.rn.f32 	%f522, %f520, %f514, 0f3F800000;
	fma.rn.f32 	%f523, %f513, 0f40490FDB, %f521;
	setp.eq.b32 	%p48, %r324, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p54, %r335, 1;
	fma.rn.f32 	%f591, %f589, %f583, 0f3F800000;
	fma.rn.f32 	%f592, %f582, 0f40490FDB, %f590;
	setp.eq.b32 	%p60, %r342, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p66, %r353, 1;
	fma.rn.f32 	%f660, %f658, %f652, 0f3F800000;
	fma.rn.f32 	%f661, %f651, 0f40490FDB, %f659;
	setp.eq.b32 	%p72, %r360, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p78, %r371, 1;
	fma.rn.f32 	%f729, %f727, %f721, 0f3F800000;
	fma.rn.f32 	%f730, %f720, 0f40490FDB, %f728;
	setp.eq.b32 	%p84, %r378, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p90, %r389, 1;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	setp.eq.b32 	%p96, %r396, 1;
	selp.f32 	%f850, %f845, %f849, %p114;
	and.b32  	%r414, %r412, 2;
	selp.f32 	%f903, %f898, %f902, %p134;
	and.b32  	%r443, %r441, 2;
	selp.f32 	%f958, %f953, %f957, %p154;
	and.b32  	%r462, %r460, 2;
	selp.f32 	%f1011, %f1006, %f1010, %p174;
	and.b32  	%r491, %r489, 2;
	fma.rn.f32 	%f1061, %f1060, %f1057, 0f3F800000;
	fma.rn.f32 	%f1065, %f1064, %f1062, %f1056;
	setp.eq.b32 	%p194, %r508, 1;
	add.f32 	%f1099, %f1386, %f1386;
	mov.b32 	%r527, %f1099;
	and.b32  	%r528, %r527, -2147483648;
	or.b32  	%r529, %r528, 1056964608;
	mov.b32 	%f1100, %r529;
	add.f32 	%f1101, %f1099, %f1100;
	cvt.rzi.f32.f32 	%f1102, %f1101;
	abs.f32 	%f1103, %f1099;
	setp.gt.f32 	%p212, %f1103, 0f4B000000;
	selp.f32 	%f1104, %f1099, %f1102, %p212;
	cvt.rzi.f32.f32 	%f1105, %f1099;
	setp.lt.f32 	%p213, %f1103, 0f3F000000;
	selp.f32 	%f1106, %f1105, %f1104, %p213;
	cvt.rzi.s32.f32 	%r530, %f1106;
	fma.rn.f32 	%f1107, %f1106, 0fBF000000, %f1386;
	mul.f32 	%f1108, %f1107, 0f34222169;
	fma.rn.f32 	%f1109, %f1107, 0f40490FDA, %f1108;
	mul.f32 	%f1110, %f1109, %f1109;
	fma.rn.f32 	%f1111, %f1110, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1112, %f1111, %f1110, 0f3D2AAABB;
	fma.rn.f32 	%f1113, %f1112, %f1110, 0fBEFFFFFF;
	fma.rn.f32 	%f1114, %f1113, %f1110, 0f3F800000;
	fma.rn.f32 	%f1115, %f1110, %f1109, 0f00000000;
	fma.rn.f32 	%f1116, %f1110, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1117, %f1116, %f1110, 0fBE2AAAA8;
	fma.rn.f32 	%f1118, %f1117, %f1115, %f1109;
	and.b32  	%r531, %r530, 1;
	setp.eq.b32 	%p214, %r531, 1;
	and.b32  	%r535, %r22, 2;
	and.b32  	%r536, %r16, 4;
	or.b32  	%r537, %r20, %r535;
	or.b32  	%r104, %r537, %r536;
	mul.lo.s32 	%r105, %r84, %r104;
	cvt.rn.f32.s32 	%f1132, %r105;
	mov.f32 	%f1133, 0f41800000;
	div.approx.f32 	%f182, %f1132, %f1133;
	abs.f32 	%f1390, %f182;
	setp.lt.f32 	%p219, %f1390, 0f40000000;
	@%p219 bra 	LBB0_132;
// %bb.121:
	setp.gtu.f32 	%p220, %f1390, 0f4B800000;
	@%p220 bra 	LBB0_128;
	bra.uni 	LBB0_122;
LBB0_128:
	mov.b32 	%r107, %f1390;
	and.b32  	%r538, %r107, 8388607;
	or.b32  	%r16161, %r538, 1065353216;
	mov.b32 	%f1389, %r16161;
	add.s32 	%r539, %r107, -1073741824;
	and.b32  	%r16162, %r539, -8388608;
	setp.eq.s32 	%p226, %r16162, 0;
	@%p226 bra 	LBB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i2459.preheader
	mov.f32 	%f1143, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1142,%f1143;
	// end inline asm
LBB0_130:                               // %__nv_fmaf_rn.exit4.i.i.i2459
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r540, %r16162, 192937984;
	add.s32 	%r541, %r540, %r16161;
	mov.b32 	%f1144, %r541;
	mul.f32 	%f1145, %f1142, %f1144;
	sub.f32 	%f1146, %f1144, %f1145;
	fma.rn.f32 	%f1147, %f1146, %f1142, %f1145;
	sub.f32 	%f1148, %f1144, %f1147;
	fma.rz.f32 	%f1149, %f1148, %f1142, %f1147;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	sub.f32 	%f1389, %f1144, %f1150;
	sub.s32 	%r16162, %r16162, %r540;
	mov.b32 	%r16161, %f1389;
	setp.ne.s32 	%p227, %r16162, 0;
	setp.ne.s32 	%p228, %r16161, 0;
	and.pred  	%p229, %p227, %p228;
	@%p229 bra 	LBB0_130;
LBB0_131:                               // %__internal_fmodf_slowpath_mod.exit.i.i2461
	setp.gt.u32 	%p230, %r107, 2139095039;
	selp.f32 	%f1151, 0f7FFFFFFF, 0f4B800000, %p230;
	mul.f32 	%f1152, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1151, %f1152;
	bra.uni 	LBB0_132;
LBB0_122:                               // %__nv_fast_fdividef.exit.i.i.i2431
	div.approx.f32 	%f1135, %f1390, %f255;
	cvt.rzi.f32.f32 	%f1388, %f1135;
	fma.rn.f32 	%f185, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r106, %f185;
	setp.lt.u32 	%p221, %r106, 1073741824;
	@%p221 bra 	LBB0_127;
// %bb.123:
	setp.lt.u32 	%p222, %r106, -2147483647;
	@%p222 bra 	LBB0_125;
// %bb.124:
	add.f32 	%f1140, %f1388, 0fBF800000;
	setp.lt.f32 	%p225, %f185, 0fC0000000;
	add.f32 	%f1141, %f1140, 0fBF800000;
	selp.f32 	%f1388, %f1141, %f1140, %p225;
	bra.uni 	LBB0_127;
LBB0_125:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p223, %f185, 0f40800000;
	@%p223 bra 	LBB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i2436
	add.f32 	%f1136, %f1388, 0f3F800000;
	fma.rn.f32 	%f1138, %f255, 0fC0400000, %f185;
	setp.ge.f32 	%p224, %f1138, 0f00000000;
	add.f32 	%f1139, %f1136, 0f3F800000;
	selp.f32 	%f1388, %f1139, %f1136, %p224;
LBB0_127:                               // %__internal_fmodf_fastpath_quot.exit.i.i2440
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
LBB0_132:                               // %__internal_fmodf_kernel.exit.i2465
	and.b32  	%r9, %r7, 4;
	and.b32  	%r13, %r5, 18;
	selp.f32 	%f283, %f281, %f282, %p6;
	and.b32  	%r264, %r262, 2;
	mov.f32 	%f284, 0f00000000;
	selp.f32 	%f317, %f315, %f316, %p12;
	and.b32  	%r271, %r269, 2;
	selp.f32 	%f352, %f350, %f351, %p18;
	and.b32  	%r282, %r280, 2;
	selp.f32 	%f386, %f384, %f385, %p24;
	and.b32  	%r289, %r287, 2;
	selp.f32 	%f421, %f419, %f420, %p30;
	and.b32  	%r300, %r298, 2;
	selp.f32 	%f455, %f453, %f454, %p36;
	and.b32  	%r307, %r305, 2;
	selp.f32 	%f490, %f488, %f489, %p42;
	and.b32  	%r318, %r316, 2;
	selp.f32 	%f524, %f522, %f523, %p48;
	and.b32  	%r325, %r323, 2;
	selp.f32 	%f559, %f557, %f558, %p54;
	and.b32  	%r336, %r334, 2;
	selp.f32 	%f593, %f591, %f592, %p60;
	and.b32  	%r343, %r341, 2;
	selp.f32 	%f628, %f626, %f627, %p66;
	and.b32  	%r354, %r352, 2;
	selp.f32 	%f662, %f660, %f661, %p72;
	and.b32  	%r361, %r359, 2;
	selp.f32 	%f697, %f695, %f696, %p78;
	and.b32  	%r372, %r370, 2;
	selp.f32 	%f731, %f729, %f730, %p84;
	and.b32  	%r379, %r377, 2;
	selp.f32 	%f766, %f764, %f765, %p90;
	and.b32  	%r390, %r388, 2;
	selp.f32 	%f800, %f798, %f799, %p96;
	and.b32  	%r397, %r395, 2;
	setp.eq.s32 	%p115, %r414, 0;
	neg.f32 	%f852, %f850;
	add.s32 	%r415, %r412, 1;
	cvt.rzi.f32.f32 	%f857, %f1366;
	setp.eq.s32 	%p135, %r443, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r444, %r441, 1;
	cvt.rzi.f32.f32 	%f910, %f1370;
	setp.eq.s32 	%p155, %r462, 0;
	neg.f32 	%f960, %f958;
	add.s32 	%r463, %r460, 1;
	cvt.rzi.f32.f32 	%f965, %f1374;
	setp.eq.s32 	%p175, %r491, 0;
	neg.f32 	%f1013, %f1011;
	add.s32 	%r492, %r489, 1;
	cvt.rzi.f32.f32 	%f1018, %f1378;
	selp.f32 	%f1066, %f1061, %f1065, %p194;
	and.b32  	%r509, %r507, 2;
	selp.f32 	%f1119, %f1114, %f1118, %p214;
	and.b32  	%r532, %r530, 2;
	abs.f32 	%f1153, %f1390;
	setp.gtu.f32 	%p231, %f1153, 0f7F800000;
	@%p231 bra 	LBB0_134;
// %bb.133:
	mov.b32 	%r542, %f182;
	and.b32  	%r543, %r542, -2147483648;
	mov.b32 	%r544, %f1390;
	or.b32  	%r545, %r543, %r544;
	mov.b32 	%f1390, %r545;
LBB0_134:                               // %__nv_fmodf.exit2466
	and.b32  	%r8, %r7, 32;
	or.b32  	%r246, %r13, %r9;
	setp.eq.s32 	%p7, %r264, 0;
	sub.f32 	%f285, %f284, %f283;
	setp.eq.s32 	%p13, %r271, 0;
	sub.f32 	%f319, %f284, %f317;
	setp.eq.s32 	%p19, %r282, 0;
	sub.f32 	%f354, %f284, %f352;
	setp.eq.s32 	%p25, %r289, 0;
	sub.f32 	%f388, %f284, %f386;
	setp.eq.s32 	%p31, %r300, 0;
	sub.f32 	%f423, %f284, %f421;
	setp.eq.s32 	%p37, %r307, 0;
	sub.f32 	%f457, %f284, %f455;
	setp.eq.s32 	%p43, %r318, 0;
	sub.f32 	%f492, %f284, %f490;
	setp.eq.s32 	%p49, %r325, 0;
	sub.f32 	%f526, %f284, %f524;
	setp.eq.s32 	%p55, %r336, 0;
	sub.f32 	%f561, %f284, %f559;
	setp.eq.s32 	%p61, %r343, 0;
	sub.f32 	%f595, %f284, %f593;
	setp.eq.s32 	%p67, %r354, 0;
	sub.f32 	%f630, %f284, %f628;
	setp.eq.s32 	%p73, %r361, 0;
	sub.f32 	%f664, %f284, %f662;
	setp.eq.s32 	%p79, %r372, 0;
	sub.f32 	%f699, %f284, %f697;
	setp.eq.s32 	%p85, %r379, 0;
	sub.f32 	%f733, %f284, %f731;
	setp.eq.s32 	%p91, %r390, 0;
	sub.f32 	%f768, %f284, %f766;
	setp.eq.s32 	%p97, %r397, 0;
	sub.f32 	%f802, %f284, %f800;
	selp.f32 	%f851, %f849, %f845, %p114;
	selp.f32 	%f853, %f850, %f852, %p115;
	and.b32  	%r416, %r415, 2;
	setp.eq.f32 	%p117, %f857, %f1366;
	mul.f32 	%f858, %f1366, 0f00000000;
	selp.f32 	%f904, %f902, %f898, %p134;
	selp.f32 	%f906, %f903, %f905, %p135;
	and.b32  	%r445, %r444, 2;
	setp.eq.f32 	%p137, %f910, %f1370;
	mul.f32 	%f911, %f1370, 0f00000000;
	selp.f32 	%f959, %f957, %f953, %p154;
	selp.f32 	%f961, %f958, %f960, %p155;
	and.b32  	%r464, %r463, 2;
	setp.eq.f32 	%p157, %f965, %f1374;
	mul.f32 	%f966, %f1374, 0f00000000;
	selp.f32 	%f1012, %f1010, %f1006, %p174;
	selp.f32 	%f1014, %f1011, %f1013, %p175;
	and.b32  	%r493, %r492, 2;
	setp.eq.f32 	%p177, %f1018, %f1378;
	mul.f32 	%f1019, %f1378, 0f00000000;
	setp.eq.s32 	%p195, %r509, 0;
	neg.f32 	%f1068, %f1066;
	add.s32 	%r510, %r507, 1;
	cvt.rzi.f32.f32 	%f1073, %f1382;
	setp.eq.s32 	%p215, %r532, 0;
	neg.f32 	%f1121, %f1119;
	add.s32 	%r533, %r530, 1;
	cvt.rzi.f32.f32 	%f1126, %f1386;
	add.f32 	%f1154, %f1390, %f1390;
	mov.b32 	%r546, %f1154;
	and.b32  	%r547, %r546, -2147483648;
	or.b32  	%r548, %r547, 1056964608;
	mov.b32 	%f1155, %r548;
	add.f32 	%f1156, %f1154, %f1155;
	cvt.rzi.f32.f32 	%f1157, %f1156;
	abs.f32 	%f1158, %f1154;
	setp.gt.f32 	%p232, %f1158, 0f4B000000;
	selp.f32 	%f1159, %f1154, %f1157, %p232;
	cvt.rzi.f32.f32 	%f1160, %f1154;
	setp.lt.f32 	%p233, %f1158, 0f3F000000;
	selp.f32 	%f1161, %f1160, %f1159, %p233;
	cvt.rzi.s32.f32 	%r549, %f1161;
	fma.rn.f32 	%f1162, %f1161, 0fBF000000, %f1390;
	mul.f32 	%f1163, %f1162, 0f34222169;
	fma.rn.f32 	%f1164, %f1162, 0f40490FDA, %f1163;
	mul.f32 	%f1165, %f1164, %f1164;
	fma.rn.f32 	%f1166, %f1165, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1167, %f1166, %f1165, 0f3D2AAABB;
	fma.rn.f32 	%f1168, %f1167, %f1165, 0fBEFFFFFF;
	fma.rn.f32 	%f1169, %f1168, %f1165, 0f3F800000;
	fma.rn.f32 	%f1170, %f1165, %f1164, 0f00000000;
	fma.rn.f32 	%f1171, %f1165, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1172, %f1171, %f1165, 0fBE2AAAA8;
	fma.rn.f32 	%f1173, %f1172, %f1170, %f1164;
	and.b32  	%r550, %r549, 1;
	setp.eq.b32 	%p234, %r550, 1;
	selp.f32 	%f1174, %f1169, %f1173, %p234;
	selp.f32 	%f1175, %f1173, %f1169, %p234;
	and.b32  	%r551, %r549, 2;
	setp.eq.s32 	%p235, %r551, 0;
	neg.f32 	%f1176, %f1174;
	selp.f32 	%f1177, %f1174, %f1176, %p235;
	add.s32 	%r552, %r549, 1;
	and.b32  	%r553, %r552, 2;
	cvt.rzi.f32.f32 	%f1181, %f1390;
	setp.eq.f32 	%p237, %f1181, %f1390;
	mul.f32 	%f1182, %f1390, 0f00000000;
	shl.b32 	%r554, %r104, 3;
	sub.s32 	%r555, %r105, %r554;
	cvt.rn.f32.s32 	%f1185, %r555;
	div.approx.f32 	%f201, %f1185, %f1133;
	abs.f32 	%f1394, %f201;
	setp.lt.f32 	%p239, %f1394, 0f40000000;
	@%p239 bra 	LBB0_146;
// %bb.135:
	setp.gtu.f32 	%p240, %f1394, 0f4B800000;
	@%p240 bra 	LBB0_142;
	bra.uni 	LBB0_136;
LBB0_142:
	mov.b32 	%r115, %f1394;
	and.b32  	%r556, %r115, 8388607;
	or.b32  	%r16163, %r556, 1065353216;
	mov.b32 	%f1393, %r16163;
	add.s32 	%r557, %r115, -1073741824;
	and.b32  	%r16164, %r557, -8388608;
	setp.eq.s32 	%p246, %r16164, 0;
	@%p246 bra 	LBB0_145;
// %bb.143:                             // %__nv_fmaf_rn.exit4.i.i.i2505.preheader
	mov.f32 	%f1196, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1195,%f1196;
	// end inline asm
LBB0_144:                               // %__nv_fmaf_rn.exit4.i.i.i2505
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r558, %r16164, 192937984;
	add.s32 	%r559, %r558, %r16163;
	mov.b32 	%f1197, %r559;
	mul.f32 	%f1198, %f1195, %f1197;
	sub.f32 	%f1199, %f1197, %f1198;
	fma.rn.f32 	%f1200, %f1199, %f1195, %f1198;
	sub.f32 	%f1201, %f1197, %f1200;
	fma.rz.f32 	%f1202, %f1201, %f1195, %f1200;
	cvt.rzi.f32.f32 	%f1203, %f1202;
	sub.f32 	%f1393, %f1197, %f1203;
	sub.s32 	%r16164, %r16164, %r558;
	mov.b32 	%r16163, %f1393;
	setp.ne.s32 	%p247, %r16164, 0;
	setp.ne.s32 	%p248, %r16163, 0;
	and.pred  	%p249, %p247, %p248;
	@%p249 bra 	LBB0_144;
LBB0_145:                               // %__internal_fmodf_slowpath_mod.exit.i.i2507
	setp.gt.u32 	%p250, %r115, 2139095039;
	selp.f32 	%f1204, 0f7FFFFFFF, 0f4B800000, %p250;
	mul.f32 	%f1205, %f1393, 0f34000000;
	mul.f32 	%f1394, %f1204, %f1205;
	bra.uni 	LBB0_146;
LBB0_136:                               // %__nv_fast_fdividef.exit.i.i.i2477
	div.approx.f32 	%f1188, %f1394, %f255;
	cvt.rzi.f32.f32 	%f1392, %f1188;
	fma.rn.f32 	%f204, %f1392, 0fC0000000, %f1394;
	mov.b32 	%r114, %f204;
	setp.lt.u32 	%p241, %r114, 1073741824;
	@%p241 bra 	LBB0_141;
// %bb.137:
	setp.lt.u32 	%p242, %r114, -2147483647;
	@%p242 bra 	LBB0_139;
// %bb.138:
	add.f32 	%f1193, %f1392, 0fBF800000;
	setp.lt.f32 	%p245, %f204, 0fC0000000;
	add.f32 	%f1194, %f1193, 0fBF800000;
	selp.f32 	%f1392, %f1194, %f1193, %p245;
	bra.uni 	LBB0_141;
LBB0_139:
	add.f32 	%f1392, %f1392, 0f3F800000;
	setp.ltu.f32 	%p243, %f204, 0f40800000;
	@%p243 bra 	LBB0_141;
// %bb.140:                             // %__nv_fmaf_rn.exit.i.i.i2482
	add.f32 	%f1189, %f1392, 0f3F800000;
	fma.rn.f32 	%f1191, %f255, 0fC0400000, %f204;
	setp.ge.f32 	%p244, %f1191, 0f00000000;
	add.f32 	%f1192, %f1189, 0f3F800000;
	selp.f32 	%f1392, %f1192, %f1189, %p244;
LBB0_141:                               // %__internal_fmodf_fastpath_quot.exit.i.i2486
	fma.rn.f32 	%f1394, %f1392, 0fC0000000, %f1394;
LBB0_146:                               // %__internal_fmodf_kernel.exit.i2511
	and.b32  	%r12, %r11, 8;
	or.b32  	%r247, %r246, %r8;
	selp.f32 	%f286, %f283, %f285, %p7;
	selp.f32 	%f320, %f317, %f319, %p13;
	selp.f32 	%f355, %f352, %f354, %p19;
	selp.f32 	%f389, %f386, %f388, %p25;
	selp.f32 	%f424, %f421, %f423, %p31;
	selp.f32 	%f458, %f455, %f457, %p37;
	selp.f32 	%f493, %f490, %f492, %p43;
	selp.f32 	%f527, %f524, %f526, %p49;
	selp.f32 	%f562, %f559, %f561, %p55;
	selp.f32 	%f596, %f593, %f595, %p61;
	selp.f32 	%f631, %f628, %f630, %p67;
	selp.f32 	%f665, %f662, %f664, %p73;
	selp.f32 	%f700, %f697, %f699, %p79;
	selp.f32 	%f734, %f731, %f733, %p85;
	selp.f32 	%f769, %f766, %f768, %p91;
	selp.f32 	%f803, %f800, %f802, %p97;
	setp.eq.s32 	%p116, %r416, 0;
	sub.f32 	%f855, %f284, %f851;
	selp.f32 	%f91, %f858, %f853, %p117;
	abs.f32 	%f859, %f1366;
	setp.eq.s32 	%p136, %r445, 0;
	sub.f32 	%f908, %f284, %f904;
	selp.f32 	%f912, %f911, %f906, %p137;
	abs.f32 	%f913, %f1370;
	setp.eq.s32 	%p156, %r464, 0;
	sub.f32 	%f963, %f284, %f959;
	selp.f32 	%f127, %f966, %f961, %p157;
	abs.f32 	%f967, %f1374;
	setp.eq.s32 	%p176, %r493, 0;
	sub.f32 	%f1016, %f284, %f1012;
	selp.f32 	%f1020, %f1019, %f1014, %p177;
	abs.f32 	%f1021, %f1378;
	selp.f32 	%f1067, %f1065, %f1061, %p194;
	selp.f32 	%f1069, %f1066, %f1068, %p195;
	and.b32  	%r511, %r510, 2;
	setp.eq.f32 	%p197, %f1073, %f1382;
	mul.f32 	%f1074, %f1382, 0f00000000;
	selp.f32 	%f1120, %f1118, %f1114, %p214;
	selp.f32 	%f1122, %f1119, %f1121, %p215;
	and.b32  	%r534, %r533, 2;
	setp.eq.f32 	%p217, %f1126, %f1386;
	mul.f32 	%f1127, %f1386, 0f00000000;
	setp.eq.s32 	%p236, %r553, 0;
	sub.f32 	%f1179, %f284, %f1175;
	selp.f32 	%f199, %f1182, %f1177, %p237;
	abs.f32 	%f1183, %f1390;
	and.b32  	%r10, %r5, 16;
	abs.f32 	%f1206, %f1394;
	setp.gtu.f32 	%p251, %f1206, 0f7F800000;
	@%p251 bra 	LBB0_148;
// %bb.147:
	mov.b32 	%r560, %f201;
	and.b32  	%r561, %r560, -2147483648;
	mov.b32 	%r562, %f1394;
	or.b32  	%r563, %r561, %r562;
	mov.b32 	%f1394, %r563;
LBB0_148:                               // %__nv_fmodf.exit2512
	or.b32  	%r248, %r247, %r12;
	mul.f32 	%f2, %f286, %f286;
	mul.f32 	%f7, %f320, %f320;
	mul.f32 	%f11, %f355, %f355;
	mul.f32 	%f16, %f389, %f389;
	mul.f32 	%f20, %f424, %f424;
	mul.f32 	%f25, %f458, %f458;
	mul.f32 	%f29, %f493, %f493;
	mul.f32 	%f34, %f527, %f527;
	mul.f32 	%f38, %f562, %f562;
	mul.f32 	%f43, %f596, %f596;
	mul.f32 	%f47, %f631, %f631;
	mul.f32 	%f52, %f665, %f665;
	mul.f32 	%f56, %f700, %f700;
	mul.f32 	%f61, %f734, %f734;
	mul.f32 	%f65, %f769, %f769;
	mul.f32 	%f70, %f803, %f803;
	selp.f32 	%f856, %f851, %f855, %p116;
	setp.gt.f32 	%p118, %f859, 0f4B800000;
	add.f32 	%f860, %f91, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p136;
	setp.gt.f32 	%p138, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f964, %f959, %f963, %p156;
	setp.gt.f32 	%p158, %f967, 0f4B800000;
	add.f32 	%f968, %f127, 0f3F800000;
	selp.f32 	%f1017, %f1012, %f1016, %p176;
	setp.gt.f32 	%p178, %f1021, 0f4B800000;
	add.f32 	%f1022, %f1020, 0f3F800000;
	setp.eq.s32 	%p196, %r511, 0;
	sub.f32 	%f1071, %f284, %f1067;
	selp.f32 	%f163, %f1074, %f1069, %p197;
	abs.f32 	%f1075, %f1382;
	setp.eq.s32 	%p216, %r534, 0;
	sub.f32 	%f1124, %f284, %f1120;
	selp.f32 	%f1128, %f1127, %f1122, %p217;
	abs.f32 	%f1129, %f1386;
	selp.f32 	%f1180, %f1175, %f1179, %p236;
	setp.gt.f32 	%p238, %f1183, 0f4B800000;
	add.f32 	%f1184, %f199, 0f3F800000;
	add.f32 	%f1207, %f1394, %f1394;
	mov.b32 	%r576, %f1207;
	and.b32  	%r577, %r576, -2147483648;
	or.b32  	%r578, %r577, 1056964608;
	mov.b32 	%f1208, %r578;
	add.f32 	%f1209, %f1207, %f1208;
	cvt.rzi.f32.f32 	%f1210, %f1209;
	abs.f32 	%f1211, %f1207;
	setp.gt.f32 	%p252, %f1211, 0f4B000000;
	selp.f32 	%f1212, %f1207, %f1210, %p252;
	cvt.rzi.f32.f32 	%f1213, %f1207;
	setp.lt.f32 	%p253, %f1211, 0f3F000000;
	selp.f32 	%f1214, %f1213, %f1212, %p253;
	cvt.rzi.s32.f32 	%r579, %f1214;
	fma.rn.f32 	%f1215, %f1214, 0fBF000000, %f1394;
	mul.f32 	%f1216, %f1215, 0f34222169;
	fma.rn.f32 	%f1217, %f1215, 0f40490FDA, %f1216;
	mul.f32 	%f1218, %f1217, %f1217;
	fma.rn.f32 	%f1219, %f1218, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1220, %f1219, %f1218, 0f3D2AAABB;
	fma.rn.f32 	%f1221, %f1220, %f1218, 0fBEFFFFFF;
	fma.rn.f32 	%f1222, %f1221, %f1218, 0f3F800000;
	fma.rn.f32 	%f1223, %f1218, %f1217, 0f00000000;
	fma.rn.f32 	%f1224, %f1218, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1225, %f1224, %f1218, 0fBE2AAAA8;
	fma.rn.f32 	%f1226, %f1225, %f1223, %f1217;
	and.b32  	%r580, %r579, 1;
	setp.eq.b32 	%p254, %r580, 1;
	selp.f32 	%f1227, %f1222, %f1226, %p254;
	selp.f32 	%f1228, %f1226, %f1222, %p254;
	and.b32  	%r581, %r579, 2;
	setp.eq.s32 	%p255, %r581, 0;
	neg.f32 	%f1229, %f1227;
	selp.f32 	%f1230, %f1227, %f1229, %p255;
	add.s32 	%r582, %r579, 1;
	and.b32  	%r583, %r582, 2;
	setp.eq.s32 	%p256, %r583, 0;
	sub.f32 	%f1232, %f284, %f1228;
	selp.f32 	%f1233, %f1228, %f1232, %p256;
	cvt.rzi.f32.f32 	%f1234, %f1394;
	setp.eq.f32 	%p257, %f1234, %f1394;
	mul.f32 	%f1235, %f1394, 0f00000000;
	selp.f32 	%f1236, %f1235, %f1230, %p257;
	abs.f32 	%f1237, %f1394;
	setp.gt.f32 	%p258, %f1237, 0f4B800000;
	add.f32 	%f1238, %f1236, 0f3F800000;
	cvt.u16.u32 	%rs1, %r5;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	add.s32 	%r585, %r251, %r10;
	neg.s32 	%r586, %r585;
	mad.lo.s32 	%r587, %r23, -32, %r586;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r588, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r589, %rs21;
	sub.s32 	%r590, %r587, %r589;
	shl.b32 	%r591, %r590, 1;
	cvt.rn.f32.s32 	%f1240, %r591;
	div.approx.f32 	%f218, %f1240, %f287;
	abs.f32 	%f1398, %f218;
	setp.lt.f32 	%p259, %f1398, 0f40000000;
	@%p259 bra 	LBB0_160;
// %bb.149:
	setp.gtu.f32 	%p260, %f1398, 0f4B800000;
	@%p260 bra 	LBB0_156;
	bra.uni 	LBB0_150;
LBB0_156:
	mov.b32 	%r128, %f1398;
	and.b32  	%r592, %r128, 8388607;
	or.b32  	%r16165, %r592, 1065353216;
	mov.b32 	%f1397, %r16165;
	add.s32 	%r593, %r128, -1073741824;
	and.b32  	%r16166, %r593, -8388608;
	setp.eq.s32 	%p266, %r16166, 0;
	@%p266 bra 	LBB0_159;
// %bb.157:                             // %__nv_fmaf_rn.exit4.i.i.i2551.preheader
	mov.f32 	%f1251, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1250,%f1251;
	// end inline asm
LBB0_158:                               // %__nv_fmaf_rn.exit4.i.i.i2551
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r594, %r16166, 192937984;
	add.s32 	%r595, %r594, %r16165;
	mov.b32 	%f1252, %r595;
	mul.f32 	%f1253, %f1250, %f1252;
	sub.f32 	%f1254, %f1252, %f1253;
	fma.rn.f32 	%f1255, %f1254, %f1250, %f1253;
	sub.f32 	%f1256, %f1252, %f1255;
	fma.rz.f32 	%f1257, %f1256, %f1250, %f1255;
	cvt.rzi.f32.f32 	%f1258, %f1257;
	sub.f32 	%f1397, %f1252, %f1258;
	sub.s32 	%r16166, %r16166, %r594;
	mov.b32 	%r16165, %f1397;
	setp.ne.s32 	%p267, %r16166, 0;
	setp.ne.s32 	%p268, %r16165, 0;
	and.pred  	%p269, %p267, %p268;
	@%p269 bra 	LBB0_158;
LBB0_159:                               // %__internal_fmodf_slowpath_mod.exit.i.i2553
	setp.gt.u32 	%p270, %r128, 2139095039;
	selp.f32 	%f1259, 0f7FFFFFFF, 0f4B800000, %p270;
	mul.f32 	%f1260, %f1397, 0f34000000;
	mul.f32 	%f1398, %f1259, %f1260;
	bra.uni 	LBB0_160;
LBB0_150:                               // %__nv_fast_fdividef.exit.i.i.i2523
	div.approx.f32 	%f1243, %f1398, %f255;
	cvt.rzi.f32.f32 	%f1396, %f1243;
	fma.rn.f32 	%f221, %f1396, 0fC0000000, %f1398;
	mov.b32 	%r127, %f221;
	setp.lt.u32 	%p261, %r127, 1073741824;
	@%p261 bra 	LBB0_155;
// %bb.151:
	setp.lt.u32 	%p262, %r127, -2147483647;
	@%p262 bra 	LBB0_153;
// %bb.152:
	add.f32 	%f1248, %f1396, 0fBF800000;
	setp.lt.f32 	%p265, %f221, 0fC0000000;
	add.f32 	%f1249, %f1248, 0fBF800000;
	selp.f32 	%f1396, %f1249, %f1248, %p265;
	bra.uni 	LBB0_155;
LBB0_153:
	add.f32 	%f1396, %f1396, 0f3F800000;
	setp.ltu.f32 	%p263, %f221, 0f40800000;
	@%p263 bra 	LBB0_155;
// %bb.154:                             // %__nv_fmaf_rn.exit.i.i.i2528
	add.f32 	%f1244, %f1396, 0f3F800000;
	fma.rn.f32 	%f1246, %f255, 0fC0400000, %f221;
	setp.ge.f32 	%p264, %f1246, 0f00000000;
	add.f32 	%f1247, %f1244, 0f3F800000;
	selp.f32 	%f1396, %f1247, %f1244, %p264;
LBB0_155:                               // %__internal_fmodf_fastpath_quot.exit.i.i2532
	fma.rn.f32 	%f1398, %f1396, 0fC0000000, %f1398;
LBB0_160:                               // %__internal_fmodf_kernel.exit.i2557
	shr.u32 	%r249, %r248, 1;
	mul.f32 	%f290, %f2, 0f3B8B2FF9;
	mul.f32 	%f324, %f7, 0f3B8B2FF9;
	mul.f32 	%f359, %f11, 0f3B8B2FF9;
	mul.f32 	%f393, %f16, 0f3B8B2FF9;
	mul.f32 	%f428, %f20, 0f3B8B2FF9;
	mul.f32 	%f462, %f25, 0f3B8B2FF9;
	mul.f32 	%f497, %f29, 0f3B8B2FF9;
	mul.f32 	%f531, %f34, 0f3B8B2FF9;
	mul.f32 	%f566, %f38, 0f3B8B2FF9;
	mul.f32 	%f600, %f43, 0f3B8B2FF9;
	mul.f32 	%f635, %f47, 0f3B8B2FF9;
	mul.f32 	%f669, %f52, 0f3B8B2FF9;
	mul.f32 	%f704, %f56, 0f3B8B2FF9;
	mul.f32 	%f738, %f61, 0f3B8B2FF9;
	mul.f32 	%f773, %f65, 0f3B8B2FF9;
	mul.f32 	%f806, %f70, 0f3B8B2FF9;
	selp.f32 	%f92, %f860, %f856, %p118;
	selp.f32 	%f915, %f914, %f909, %p138;
	selp.f32 	%f128, %f968, %f964, %p158;
	selp.f32 	%f1023, %f1022, %f1017, %p178;
	selp.f32 	%f1072, %f1067, %f1071, %p196;
	setp.gt.f32 	%p198, %f1075, 0f4B800000;
	add.f32 	%f1076, %f163, 0f3F800000;
	selp.f32 	%f1125, %f1120, %f1124, %p216;
	setp.gt.f32 	%p218, %f1129, 0f4B800000;
	add.f32 	%f1130, %f1128, 0f3F800000;
	selp.f32 	%f200, %f1184, %f1180, %p238;
	selp.f32 	%f1239, %f1238, %f1233, %p258;
	sub.s32 	%r126, %r587, %r588;
	abs.f32 	%f1261, %f1398;
	setp.gtu.f32 	%p271, %f1261, 0f7F800000;
	@%p271 bra 	LBB0_162;
// %bb.161:
	mov.b32 	%r596, %f218;
	and.b32  	%r597, %r596, -2147483648;
	mov.b32 	%r598, %f1398;
	or.b32  	%r599, %r597, %r598;
	mov.b32 	%f1398, %r599;
LBB0_162:                               // %__nv_fmodf.exit2558
	ld.param.u64 	%rd1, [_Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd49, %r249, 4;
	mul.f32 	%f6, %f290, %f1348;
	mul.f32 	%f325, %f324, %f1349;
	mul.f32 	%f15, %f359, %f1350;
	mul.f32 	%f394, %f393, %f1351;
	mul.f32 	%f24, %f428, %f1352;
	mul.f32 	%f463, %f462, %f1353;
	mul.f32 	%f33, %f497, %f1354;
	mul.f32 	%f532, %f531, %f1355;
	mul.f32 	%f42, %f566, %f1356;
	mul.f32 	%f601, %f600, %f1357;
	mul.f32 	%f51, %f635, %f1358;
	mul.f32 	%f670, %f669, %f1359;
	mul.f32 	%f60, %f704, %f1360;
	mul.f32 	%f739, %f738, %f1361;
	mul.f32 	%f69, %f773, %f1362;
	mul.f32 	%f807, %f806, %f1363;
	mov.b32 	%r428, %f915;
	mov.b32 	%r427, %f92;
	mov.b32 	%r434, %f912;
	mov.b32 	%r433, %f91;
	mov.b32 	%r476, %f1023;
	mov.b32 	%r475, %f128;
	mov.b32 	%r482, %f1020;
	mov.b32 	%r481, %f127;
	selp.f32 	%f164, %f1076, %f1072, %p198;
	selp.f32 	%f1131, %f1130, %f1125, %p218;
	mov.b32 	%r566, %f1239;
	mov.b32 	%r565, %f200;
	mov.b32 	%r572, %f1236;
	mov.b32 	%r571, %f199;
	add.f32 	%f1262, %f1398, %f1398;
	mov.b32 	%r600, %f1262;
	and.b32  	%r601, %r600, -2147483648;
	or.b32  	%r602, %r601, 1056964608;
	mov.b32 	%f1263, %r602;
	add.f32 	%f1264, %f1262, %f1263;
	cvt.rzi.f32.f32 	%f1265, %f1264;
	abs.f32 	%f1266, %f1262;
	setp.gt.f32 	%p272, %f1266, 0f4B000000;
	selp.f32 	%f1267, %f1262, %f1265, %p272;
	cvt.rzi.f32.f32 	%f1268, %f1262;
	setp.lt.f32 	%p273, %f1266, 0f3F000000;
	selp.f32 	%f1269, %f1268, %f1267, %p273;
	cvt.rzi.s32.f32 	%r603, %f1269;
	fma.rn.f32 	%f1270, %f1269, 0fBF000000, %f1398;
	mul.f32 	%f1271, %f1270, 0f34222169;
	fma.rn.f32 	%f1272, %f1270, 0f40490FDA, %f1271;
	mul.f32 	%f1273, %f1272, %f1272;
	fma.rn.f32 	%f1274, %f1273, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1275, %f1274, %f1273, 0f3D2AAABB;
	fma.rn.f32 	%f1276, %f1275, %f1273, 0fBEFFFFFF;
	fma.rn.f32 	%f1277, %f1276, %f1273, 0f3F800000;
	fma.rn.f32 	%f1278, %f1273, %f1272, 0f00000000;
	fma.rn.f32 	%f1279, %f1273, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1280, %f1279, %f1273, 0fBE2AAAA8;
	fma.rn.f32 	%f1281, %f1280, %f1278, %f1272;
	and.b32  	%r604, %r603, 1;
	setp.eq.b32 	%p274, %r604, 1;
	selp.f32 	%f1282, %f1277, %f1281, %p274;
	selp.f32 	%f1283, %f1281, %f1277, %p274;
	and.b32  	%r605, %r603, 2;
	setp.eq.s32 	%p275, %r605, 0;
	neg.f32 	%f1284, %f1282;
	selp.f32 	%f1285, %f1282, %f1284, %p275;
	add.s32 	%r606, %r603, 1;
	and.b32  	%r607, %r606, 2;
	setp.eq.s32 	%p276, %r607, 0;
	sub.f32 	%f1287, %f284, %f1283;
	selp.f32 	%f1288, %f1283, %f1287, %p276;
	cvt.rzi.f32.f32 	%f1289, %f1398;
	setp.eq.f32 	%p277, %f1289, %f1398;
	mul.f32 	%f1290, %f1398, 0f00000000;
	selp.f32 	%f235, %f1290, %f1285, %p277;
	abs.f32 	%f1291, %f1398;
	setp.gt.f32 	%p278, %f1291, 0f4B800000;
	add.f32 	%f1292, %f235, 0f3F800000;
	shl.b32 	%r608, %r126, 1;
	cvt.rn.f32.s32 	%f1293, %r608;
	div.approx.f32 	%f237, %f1293, %f287;
	abs.f32 	%f1402, %f237;
	setp.lt.f32 	%p279, %f1402, 0f40000000;
	@%p279 bra 	LBB0_174;
// %bb.163:
	setp.gtu.f32 	%p280, %f1402, 0f4B800000;
	@%p280 bra 	LBB0_170;
	bra.uni 	LBB0_164;
LBB0_170:
	mov.b32 	%r136, %f1402;
	and.b32  	%r609, %r136, 8388607;
	or.b32  	%r16167, %r609, 1065353216;
	mov.b32 	%f1401, %r16167;
	add.s32 	%r610, %r136, -1073741824;
	and.b32  	%r16168, %r610, -8388608;
	setp.eq.s32 	%p286, %r16168, 0;
	@%p286 bra 	LBB0_173;
// %bb.171:                             // %__nv_fmaf_rn.exit4.i.i.i2597.preheader
	mov.f32 	%f1304, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1303,%f1304;
	// end inline asm
LBB0_172:                               // %__nv_fmaf_rn.exit4.i.i.i2597
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r611, %r16168, 192937984;
	add.s32 	%r612, %r611, %r16167;
	mov.b32 	%f1305, %r612;
	mul.f32 	%f1306, %f1303, %f1305;
	sub.f32 	%f1307, %f1305, %f1306;
	fma.rn.f32 	%f1308, %f1307, %f1303, %f1306;
	sub.f32 	%f1309, %f1305, %f1308;
	fma.rz.f32 	%f1310, %f1309, %f1303, %f1308;
	cvt.rzi.f32.f32 	%f1311, %f1310;
	sub.f32 	%f1401, %f1305, %f1311;
	sub.s32 	%r16168, %r16168, %r611;
	mov.b32 	%r16167, %f1401;
	setp.ne.s32 	%p287, %r16168, 0;
	setp.ne.s32 	%p288, %r16167, 0;
	and.pred  	%p289, %p287, %p288;
	@%p289 bra 	LBB0_172;
LBB0_173:                               // %__internal_fmodf_slowpath_mod.exit.i.i2599
	setp.gt.u32 	%p290, %r136, 2139095039;
	selp.f32 	%f1312, 0f7FFFFFFF, 0f4B800000, %p290;
	mul.f32 	%f1313, %f1401, 0f34000000;
	mul.f32 	%f1402, %f1312, %f1313;
	bra.uni 	LBB0_174;
LBB0_164:                               // %__nv_fast_fdividef.exit.i.i.i2569
	div.approx.f32 	%f1296, %f1402, %f255;
	cvt.rzi.f32.f32 	%f1400, %f1296;
	fma.rn.f32 	%f240, %f1400, 0fC0000000, %f1402;
	mov.b32 	%r135, %f240;
	setp.lt.u32 	%p281, %r135, 1073741824;
	@%p281 bra 	LBB0_169;
// %bb.165:
	setp.lt.u32 	%p282, %r135, -2147483647;
	@%p282 bra 	LBB0_167;
// %bb.166:
	add.f32 	%f1301, %f1400, 0fBF800000;
	setp.lt.f32 	%p285, %f240, 0fC0000000;
	add.f32 	%f1302, %f1301, 0fBF800000;
	selp.f32 	%f1400, %f1302, %f1301, %p285;
	bra.uni 	LBB0_169;
LBB0_167:
	add.f32 	%f1400, %f1400, 0f3F800000;
	setp.ltu.f32 	%p283, %f240, 0f40800000;
	@%p283 bra 	LBB0_169;
// %bb.168:                             // %__nv_fmaf_rn.exit.i.i.i2574
	add.f32 	%f1297, %f1400, 0f3F800000;
	fma.rn.f32 	%f1299, %f255, 0fC0400000, %f240;
	setp.ge.f32 	%p284, %f1299, 0f00000000;
	add.f32 	%f1300, %f1297, 0f3F800000;
	selp.f32 	%f1400, %f1300, %f1297, %p284;
LBB0_169:                               // %__internal_fmodf_fastpath_quot.exit.i.i2578
	fma.rn.f32 	%f1402, %f1400, 0fC0000000, %f1402;
LBB0_174:                               // %__internal_fmodf_kernel.exit.i2603
	add.s64 	%rd50, %rd1, %rd49;
	mov.b32 	%r274, %f325;
	mov.b32 	%r273, %f6;
	mov.b32 	%r292, %f394;
	mov.b32 	%r291, %f15;
	mov.b32 	%r310, %f463;
	mov.b32 	%r309, %f24;
	mov.b32 	%r328, %f532;
	mov.b32 	%r327, %f33;
	mov.b32 	%r346, %f601;
	mov.b32 	%r345, %f42;
	mov.b32 	%r364, %f670;
	mov.b32 	%r363, %f51;
	mov.b32 	%r382, %f739;
	mov.b32 	%r381, %f60;
	mov.b32 	%r400, %f807;
	mov.b32 	%r399, %f69;
	xor.b32  	%r479, %r482, -2147483648;
	xor.b32  	%r478, %r481, -2147483648;
	mov.b32 	%r523, %f1131;
	mov.b32 	%r522, %f164;
	mov.b32 	%r526, %f1128;
	mov.b32 	%r525, %f163;
	xor.b32  	%r569, %r572, -2147483648;
	xor.b32  	%r568, %r571, -2147483648;
	selp.f32 	%f236, %f1292, %f1288, %p278;
	abs.f32 	%f1314, %f1402;
	setp.gtu.f32 	%p291, %f1314, 0f7F800000;
	@%p291 bra 	LBB0_176;
// %bb.175:
	mov.b32 	%r613, %f237;
	and.b32  	%r614, %r613, -2147483648;
	mov.b32 	%r615, %f1402;
	or.b32  	%r616, %r614, %r615;
	mov.b32 	%f1402, %r616;
LBB0_176:                               // %__nv_fmodf.exit2604
	ld.param.u64 	%rd2, [_Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r14, [%rd50];
	ld.global.u32 	%r15, [%rd50+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r272, %r274, %r273;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r290, %r292, %r291;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r308, %r310, %r309;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r326, %r328, %r327;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r344, %r346, %r345;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r362, %r364, %r363;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r380, %r382, %r381;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r398, %r400, %r399;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r426, %r428, %r427;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r429, %r428, %r427;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r432, %r434, %r433;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r435, %r434, %r433;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r474, %r476, %r475;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r477, %r479, %r478;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r480, %r482, %r481;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r483, %r476, %r475;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r521, %r523, %r522;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r524, %r526, %r525;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r564, %r566, %r565;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r567, %r569, %r568;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r570, %r572, %r571;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r573, %r566, %r565;
	// end inline asm
	add.f32 	%f1315, %f1402, %f1402;
	mov.b32 	%r624, %f1315;
	and.b32  	%r625, %r624, -2147483648;
	or.b32  	%r626, %r625, 1056964608;
	mov.b32 	%f1316, %r626;
	add.f32 	%f1317, %f1315, %f1316;
	cvt.rzi.f32.f32 	%f1318, %f1317;
	abs.f32 	%f1319, %f1315;
	setp.gt.f32 	%p292, %f1319, 0f4B000000;
	selp.f32 	%f1320, %f1315, %f1318, %p292;
	cvt.rzi.f32.f32 	%f1321, %f1315;
	setp.lt.f32 	%p293, %f1319, 0f3F000000;
	selp.f32 	%f1322, %f1321, %f1320, %p293;
	cvt.rzi.s32.f32 	%r627, %f1322;
	fma.rn.f32 	%f1323, %f1322, 0fBF000000, %f1402;
	mul.f32 	%f1324, %f1323, 0f34222169;
	fma.rn.f32 	%f1325, %f1323, 0f40490FDA, %f1324;
	mul.f32 	%f1326, %f1325, %f1325;
	fma.rn.f32 	%f1327, %f1326, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1328, %f1327, %f1326, 0f3D2AAABB;
	fma.rn.f32 	%f1329, %f1328, %f1326, 0fBEFFFFFF;
	fma.rn.f32 	%f1330, %f1329, %f1326, 0f3F800000;
	fma.rn.f32 	%f1331, %f1326, %f1325, 0f00000000;
	fma.rn.f32 	%f1332, %f1326, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1333, %f1332, %f1326, 0fBE2AAAA8;
	fma.rn.f32 	%f1334, %f1333, %f1331, %f1325;
	and.b32  	%r628, %r627, 1;
	setp.eq.b32 	%p294, %r628, 1;
	selp.f32 	%f1335, %f1330, %f1334, %p294;
	selp.f32 	%f1336, %f1334, %f1330, %p294;
	and.b32  	%r629, %r627, 2;
	setp.eq.s32 	%p295, %r629, 0;
	neg.f32 	%f1337, %f1335;
	selp.f32 	%f1338, %f1335, %f1337, %p295;
	add.s32 	%r630, %r627, 1;
	and.b32  	%r631, %r630, 2;
	setp.eq.s32 	%p296, %r631, 0;
	sub.f32 	%f1340, %f284, %f1336;
	selp.f32 	%f1341, %f1336, %f1340, %p296;
	cvt.rzi.f32.f32 	%f1342, %f1402;
	setp.eq.f32 	%p297, %f1342, %f1402;
	mul.f32 	%f1343, %f1402, 0f00000000;
	selp.f32 	%f1344, %f1343, %f1338, %p297;
	abs.f32 	%f1345, %f1402;
	setp.gt.f32 	%p298, %f1345, 0f4B800000;
	add.f32 	%f1346, %f1344, 0f3F800000;
	selp.f32 	%f1347, %f1346, %f1341, %p298;
	mov.b32 	%r619, %f1347;
	mov.b32 	%r618, %f236;
	// begin inline asm
	cvt.rn.f16x2.f32 %r617, %r619, %r618;
	// end inline asm
	mov.b32 	%r622, %f1344;
	mov.b32 	%r621, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r620, %r622, %r621;
	// end inline asm
	shl.b32 	%r632, %r5, 3;
	and.b32  	%r633, %r632, 64;
	or.b32  	%r634, %r633, %r1;
	and.b32  	%r635, %r11, 32;
	or.b32  	%r145, %r634, %r635;
	and.b32  	%r636, %r7, 28;
	shl.b32 	%r637, %r3, 5;
	and.b32  	%r638, %r637, 96;
	or.b32  	%r146, %r636, %r638;
	and.b32  	%r147, %r4, 2048;
	shl.b32 	%r639, %r3, 4;
	and.b32  	%r148, %r639, 1920;
	and.b32  	%r149, %r5, 8;
	shr.u32 	%r640, %r1, 3;
	mul.lo.s32 	%r641, %r640, 260;
	shr.u32 	%r642, %r1, 1;
	bfe.u32 	%r643, %r1, 1, 1;
	bfe.u32 	%r644, %r1, 2, 1;
	shl.b32 	%r645, %r5, 4;
	or.b32  	%r646, %r645, %r149;
	shr.u32 	%r647, %r646, 2;
	and.b32  	%r648, %r647, 30;
	and.b32  	%r649, %r1, 1;
	mad.lo.s32 	%r650, %r21, 65, %r641;
	mad.lo.s32 	%r651, %r649, 2080, %r650;
	mad.lo.s32 	%r652, %r643, 1040, %r651;
	mad.lo.s32 	%r653, %r644, 520, %r652;
	add.s32 	%r654, %r653, %r648;
	mul.wide.u32 	%rd51, %r654, 4;
	mov.u64 	%rd52, shmem;
	add.s64 	%rd5, %rd52, %rd51;
	add.s32 	%r655, %r654, 32;
	mul.wide.u32 	%rd53, %r655, 4;
	add.s64 	%rd6, %rd52, %rd53;
	add.s32 	%r656, %r654, 1;
	mul.wide.u32 	%rd54, %r656, 4;
	add.s64 	%rd7, %rd52, %rd54;
	add.s32 	%r657, %r654, 33;
	mul.wide.u32 	%rd55, %r657, 4;
	add.s64 	%rd8, %rd52, %rd55;
	add.s32 	%r658, %r654, 130;
	mul.wide.u32 	%rd56, %r658, 4;
	add.s64 	%rd9, %rd52, %rd56;
	add.s32 	%r659, %r654, 162;
	mul.wide.u32 	%rd57, %r659, 4;
	add.s64 	%rd10, %rd52, %rd57;
	add.s32 	%r660, %r654, 131;
	mul.wide.u32 	%rd58, %r660, 4;
	add.s64 	%rd11, %rd52, %rd58;
	add.s32 	%r661, %r654, 163;
	mul.wide.u32 	%rd59, %r661, 4;
	add.s64 	%rd12, %rd52, %rd59;
	mul.lo.s32 	%r662, %r20, 260;
	and.b32  	%r663, %r2, 32;
	mul.lo.s32 	%r664, %r23, 1040;
	mul.lo.s32 	%r665, %r17, 65;
	mul.lo.s32 	%r666, %r21, 520;
	mul.lo.s32 	%r667, %r18, 130;
	or.b32  	%r668, %r663, %r642;
	add.s32 	%r669, %r668, %r666;
	add.s32 	%r670, %r669, %r667;
	add.s32 	%r671, %r670, %r662;
	add.s32 	%r672, %r671, %r664;
	add.s32 	%r673, %r672, %r665;
	or.b32  	%r674, %r642, 8;
	add.s32 	%r675, %r666, %r663;
	add.s32 	%r676, %r675, %r667;
	add.s32 	%r677, %r676, %r674;
	add.s32 	%r678, %r677, %r662;
	add.s32 	%r679, %r678, %r664;
	add.s32 	%r680, %r679, %r665;
	or.b32  	%r681, %r642, 16;
	add.s32 	%r682, %r676, %r681;
	add.s32 	%r683, %r682, %r662;
	add.s32 	%r684, %r683, %r664;
	add.s32 	%r685, %r684, %r665;
	or.b32  	%r686, %r642, 24;
	add.s32 	%r687, %r676, %r686;
	add.s32 	%r688, %r687, %r662;
	add.s32 	%r689, %r688, %r664;
	add.s32 	%r690, %r689, %r665;
	or.b32  	%r691, %r642, 2080;
	add.s32 	%r692, %r676, %r691;
	add.s32 	%r693, %r692, %r662;
	add.s32 	%r694, %r693, %r664;
	add.s32 	%r695, %r694, %r665;
	add.s32 	%r696, %r676, 2080;
	add.s32 	%r697, %r696, %r674;
	add.s32 	%r698, %r697, %r662;
	add.s32 	%r699, %r698, %r664;
	add.s32 	%r700, %r699, %r665;
	add.s32 	%r701, %r696, %r681;
	add.s32 	%r702, %r701, %r662;
	add.s32 	%r703, %r702, %r664;
	add.s32 	%r704, %r703, %r665;
	add.s32 	%r705, %r696, %r686;
	add.s32 	%r706, %r705, %r662;
	add.s32 	%r707, %r706, %r664;
	add.s32 	%r708, %r707, %r665;
	or.b32  	%r709, %r13, %r8;
	or.b32  	%r710, %r709, %r9;
	or.b32  	%r711, %r710, %r12;
	shr.u32 	%r712, %r711, 1;
	mul.lo.s32 	%r713, %r712, 65;
	add.s32 	%r714, %r668, %r713;
	or.b32  	%r715, %r674, %r663;
	add.s32 	%r716, %r715, %r713;
	or.b32  	%r717, %r681, %r663;
	add.s32 	%r718, %r717, %r713;
	or.b32  	%r719, %r686, %r663;
	add.s32 	%r720, %r719, %r713;
	add.s32 	%r721, %r713, 2080;
	add.s32 	%r722, %r668, %r721;
	add.s32 	%r723, %r715, %r721;
	add.s32 	%r724, %r717, %r721;
	add.s32 	%r725, %r719, %r721;
	shl.b32 	%r726, %r1, 1;
	or.b32  	%r727, %r21, %r726;
	mul.lo.s32 	%r728, %r727, 65;
	add.s32 	%r729, %r648, %r728;
	mul.wide.u32 	%rd60, %r729, 4;
	add.s64 	%rd13, %rd52, %rd60;
	cvt.u64.u32 	%rd61, %r648;
	cvt.u64.u32 	%rd62, %r728;
	add.s64 	%rd63, %rd62, %rd61;
	shl.b64 	%rd64, %rd63, 2;
	add.s64 	%rd14, %rd52, %rd64;
	or.b32  	%r730, %r727, 32;
	mul.lo.s32 	%r731, %r730, 65;
	add.s32 	%r732, %r731, %r648;
	mul.wide.u32 	%rd65, %r732, 4;
	add.s64 	%rd15, %rd52, %rd65;
	cvt.u64.u32 	%rd66, %r731;
	add.s64 	%rd67, %rd66, %rd61;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd16, %rd52, %rd68;
	shl.b32 	%r733, %r3, 16;
	and.b32  	%r734, %r733, 262144;
	or.b32  	%r735, %r148, %r22;
	shl.b32 	%r736, %r1, 9;
	shl.b32 	%r737, %r735, 7;
	or.b32  	%r738, %r638, %r736;
	or.b32  	%r739, %r738, %r636;
	or.b32  	%r740, %r739, %r734;
	or.b32  	%r741, %r740, %r737;
	or.b32  	%r150, %r741, -1572864;
	or.b32  	%r151, %r741, -1564672;
	mul.wide.u32 	%rd17, %r725, 4;
	mul.wide.u32 	%rd18, %r724, 4;
	mul.wide.u32 	%rd19, %r723, 4;
	mul.wide.u32 	%rd20, %r722, 4;
	mul.wide.u32 	%rd21, %r720, 4;
	mul.wide.u32 	%rd22, %r718, 4;
	mul.wide.u32 	%rd23, %r716, 4;
	mul.wide.u32 	%rd24, %r714, 4;
	mul.wide.u32 	%rd25, %r708, 4;
	mul.wide.u32 	%rd26, %r704, 4;
	mul.wide.u32 	%rd27, %r700, 4;
	mul.wide.u32 	%rd28, %r695, 4;
	mul.wide.u32 	%rd29, %r690, 4;
	mul.wide.u32 	%rd30, %r685, 4;
	mul.wide.u32 	%rd31, %r680, 4;
	mul.wide.u32 	%rd32, %r673, 4;
	mov.u32 	%r16195, 0;
	setp.eq.s32 	%p299, %r149, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16196, %r16195;
	mov.u32 	%r16197, %r16195;
	mov.u32 	%r16198, %r16195;
	mov.u32 	%r16199, %r16195;
	mov.u32 	%r16200, %r16195;
	mov.u32 	%r16201, %r16195;
	mov.u32 	%r16202, %r16195;
	mov.u32 	%r16203, %r16195;
	mov.u32 	%r16204, %r16195;
	mov.u32 	%r16205, %r16195;
	mov.u32 	%r16206, %r16195;
	mov.u32 	%r16207, %r16195;
	mov.u32 	%r16208, %r16195;
	mov.u32 	%r16209, %r16195;
	mov.u32 	%r16210, %r16195;
	mov.u32 	%r16211, %r16195;
	mov.u32 	%r16212, %r16195;
	mov.u32 	%r16213, %r16195;
	mov.u32 	%r16214, %r16195;
	mov.u32 	%r16215, %r16195;
	mov.u32 	%r16216, %r16195;
	mov.u32 	%r16217, %r16195;
	mov.u32 	%r16218, %r16195;
	mov.u32 	%r16193, %r16195;
	bra.uni 	LBB0_177;
LBB0_181:                               // %L63596
                                        //   in Loop: Header=BB0_177 Depth=1
	add.s32 	%r16193, %r176, 256;
	setp.gt.s32 	%p304, %r6, %r16193;
	setp.ne.s32 	%p305, %r176, 32512;
	and.pred  	%p306, %p305, %p304;
	@%p306 bra 	LBB0_177;
	bra.uni 	LBB0_182;
LBB0_177:                               // %L2074
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_178 Depth 2
	mov.u32 	%r176, %r16193;
	or.b32  	%r775, %r145, %r176;
	shl.b32 	%r776, %r775, 12;
	or.b32  	%r777, %r776, %r146;
	or.b32  	%r778, %r777, %r147;
	or.b32  	%r779, %r778, %r148;
	mul.wide.s32 	%rd70, %r779, 4;
	add.s64 	%rd71, %rd2, %rd70;
	ld.global.v4.u32 	{%r780, %r781, %r782, %r783}, [%rd71];
	or.b32  	%r784, %r779, 65536;
	mul.wide.s32 	%rd72, %r784, 4;
	add.s64 	%rd73, %rd2, %rd72;
	ld.global.v4.u32 	{%r785, %r786, %r787, %r788}, [%rd73];
	selp.b32 	%r789, %r782, %r780, %p299;
	shfl.sync.bfly.b32	%r790, %r789, 8, 31, -1;
	selp.b32 	%r743, %r780, %r790, %p299;
	selp.b32 	%r744, %r790, %r782, %p299;
	selp.b32 	%r791, %r783, %r781, %p299;
	shfl.sync.bfly.b32	%r792, %r791, 8, 31, -1;
	selp.b32 	%r751, %r781, %r792, %p299;
	selp.b32 	%r752, %r792, %r783, %p299;
	selp.b32 	%r793, %r787, %r785, %p299;
	shfl.sync.bfly.b32	%r794, %r793, 8, 31, -1;
	selp.b32 	%r759, %r785, %r794, %p299;
	selp.b32 	%r760, %r794, %r787, %p299;
	selp.b32 	%r795, %r788, %r786, %p299;
	shfl.sync.bfly.b32	%r796, %r795, 8, 31, -1;
	selp.b32 	%r767, %r786, %r796, %p299;
	selp.b32 	%r768, %r796, %r788, %p299;
	mov.u32 	%r769, 21520;
	// begin inline asm
	prmt.b32 %r742, %r743, %r744, %r769;
	// end inline asm
	mov.u32 	%r773, 30258;
	// begin inline asm
	prmt.b32 %r746, %r743, %r744, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r750, %r751, %r752, %r769;
	// end inline asm
	// begin inline asm
	prmt.b32 %r754, %r751, %r752, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r758, %r759, %r760, %r769;
	// end inline asm
	// begin inline asm
	prmt.b32 %r762, %r759, %r760, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r766, %r767, %r768, %r769;
	// end inline asm
	// begin inline asm
	prmt.b32 %r770, %r767, %r768, %r773;
	// end inline asm
	st.shared.u32 	[%rd5], %r742;
	st.shared.u32 	[%rd6], %r746;
	st.shared.u32 	[%rd7], %r750;
	st.shared.u32 	[%rd8], %r754;
	st.shared.u32 	[%rd9], %r758;
	st.shared.u32 	[%rd10], %r762;
	st.shared.u32 	[%rd11], %r766;
	st.shared.u32 	[%rd12], %r770;
	bar.sync 	0;
	mov.u32 	%r16194, 256;
	mov.u64 	%rd94, %rd52;
LBB0_178:                               // %L9074
                                        //   Parent Loop BB0_177 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd74, %rd94, %rd32;
	ld.shared.u32 	%r16061, [%rd74];
	add.s64 	%rd75, %rd94, %rd31;
	ld.shared.u32 	%r16062, [%rd75];
	add.s64 	%rd76, %rd94, %rd30;
	ld.shared.u32 	%r16063, [%rd76];
	add.s64 	%rd77, %rd94, %rd29;
	ld.shared.u32 	%r16064, [%rd77];
	add.s64 	%rd78, %rd94, %rd28;
	ld.shared.u32 	%r16065, [%rd78];
	add.s64 	%rd79, %rd94, %rd27;
	ld.shared.u32 	%r16066, [%rd79];
	add.s64 	%rd80, %rd94, %rd26;
	ld.shared.u32 	%r16067, [%rd80];
	add.s64 	%rd81, %rd94, %rd25;
	ld.shared.u32 	%r16068, [%rd81];
	// begin inline asm
	mov.b32 %r802, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r813, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r801, %r16061, -2004318072;
	mov.u32 	%r800, 983055;
	// begin inline asm
	lop3.b32 %r799, %r800, %r801, %r802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r803, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r804, %r802, %r803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r807, %r799, %r804;
	// end inline asm
	mov.u32 	%r811, 15728880;
	// begin inline asm
	lop3.b32 %r810, %r811, %r801, %r813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r815, %r813, %r814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r818, %r810, %r815;
	// end inline asm
	shr.u32 	%r823, %r801, 8;
	// begin inline asm
	lop3.b32 %r821, %r800, %r823, %r802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r825, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r826, %r802, %r825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r829, %r821, %r826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r832, %r811, %r823, %r813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r837, %r813, %r836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r840, %r832, %r837;
	// end inline asm
	// begin inline asm
	mov.b32 %r848, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r859, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r847, %r16062, -2004318072;
	// begin inline asm
	lop3.b32 %r845, %r800, %r847, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r849, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r850, %r848, %r849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r853, %r845, %r850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r856, %r811, %r847, %r859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r861, %r859, %r860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r864, %r856, %r861;
	// end inline asm
	shr.u32 	%r869, %r847, 8;
	// begin inline asm
	lop3.b32 %r867, %r800, %r869, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r871, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r872, %r848, %r871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r875, %r867, %r872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r878, %r811, %r869, %r859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r882, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r883, %r859, %r882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r886, %r878, %r883;
	// end inline asm
	// begin inline asm
	mov.b32 %r894, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r905, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r893, %r16063, -2004318072;
	// begin inline asm
	lop3.b32 %r891, %r800, %r893, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r896, %r894, %r895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r899, %r891, %r896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r902, %r811, %r893, %r905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r907, %r905, %r906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r910, %r902, %r907;
	// end inline asm
	shr.u32 	%r915, %r893, 8;
	// begin inline asm
	lop3.b32 %r913, %r800, %r915, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r918, %r894, %r917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r921, %r913, %r918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r924, %r811, %r915, %r905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r929, %r905, %r928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r932, %r924, %r929;
	// end inline asm
	// begin inline asm
	mov.b32 %r940, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r951, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r939, %r16064, -2004318072;
	// begin inline asm
	lop3.b32 %r937, %r800, %r939, %r940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r942, %r940, %r941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r945, %r937, %r942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r948, %r811, %r939, %r951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r953, %r951, %r952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r956, %r948, %r953;
	// end inline asm
	shr.u32 	%r961, %r939, 8;
	// begin inline asm
	lop3.b32 %r959, %r800, %r961, %r940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r963, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r964, %r940, %r963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r967, %r959, %r964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r970, %r811, %r961, %r951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r975, %r951, %r974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r978, %r970, %r975;
	// end inline asm
	// begin inline asm
	mov.b32 %r986, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r997, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r985, %r16065, -2004318072;
	// begin inline asm
	lop3.b32 %r983, %r800, %r985, %r986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r988, %r986, %r987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r991, %r983, %r988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r994, %r811, %r985, %r997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r999, %r997, %r998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1002, %r994, %r999;
	// end inline asm
	shr.u32 	%r1007, %r985, 8;
	// begin inline asm
	lop3.b32 %r1005, %r800, %r1007, %r986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1009, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1010, %r986, %r1009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1013, %r1005, %r1010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1016, %r811, %r1007, %r997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1021, %r997, %r1020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1024, %r1016, %r1021;
	// end inline asm
	// begin inline asm
	mov.b32 %r1032, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1043, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1031, %r16066, -2004318072;
	// begin inline asm
	lop3.b32 %r1029, %r800, %r1031, %r1032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1034, %r1032, %r1033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1037, %r1029, %r1034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1040, %r811, %r1031, %r1043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1045, %r1043, %r1044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1048, %r1040, %r1045;
	// end inline asm
	shr.u32 	%r1053, %r1031, 8;
	// begin inline asm
	lop3.b32 %r1051, %r800, %r1053, %r1032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1055, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1056, %r1032, %r1055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1059, %r1051, %r1056;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1062, %r811, %r1053, %r1043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1067, %r1043, %r1066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1070, %r1062, %r1067;
	// end inline asm
	// begin inline asm
	mov.b32 %r1078, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1089, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1077, %r16067, -2004318072;
	// begin inline asm
	lop3.b32 %r1075, %r800, %r1077, %r1078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1080, %r1078, %r1079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1083, %r1075, %r1080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1086, %r811, %r1077, %r1089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1091, %r1089, %r1090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1094, %r1086, %r1091;
	// end inline asm
	shr.u32 	%r1099, %r1077, 8;
	// begin inline asm
	lop3.b32 %r1097, %r800, %r1099, %r1078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1102, %r1078, %r1101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1105, %r1097, %r1102;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1108, %r811, %r1099, %r1089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1113, %r1089, %r1112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1116, %r1108, %r1113;
	// end inline asm
	// begin inline asm
	mov.b32 %r1124, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1135, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1123, %r16068, -2004318072;
	// begin inline asm
	lop3.b32 %r1121, %r800, %r1123, %r1124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1125, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1126, %r1124, %r1125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1129, %r1121, %r1126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1132, %r811, %r1123, %r1135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1137, %r1135, %r1136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1140, %r1132, %r1137;
	// end inline asm
	shr.u32 	%r1145, %r1123, 8;
	// begin inline asm
	lop3.b32 %r1143, %r800, %r1145, %r1124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1148, %r1124, %r1147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1151, %r1143, %r1148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1154, %r811, %r1145, %r1135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1159, %r1135, %r1158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1162, %r1154, %r1159;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1165, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1167, %r1165, %r807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1170, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1172, %r1170, %r818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1175, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1177, %r1175, %r829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1180, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1182, %r1180, %r840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1185, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1187, %r1185, %r853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1190, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1192, %r1190, %r864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1195, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1197, %r1195, %r875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1200, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1202, %r1200, %r886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1205, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1207, %r1205, %r899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1210, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1212, %r1210, %r910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1215, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1217, %r1215, %r921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1220, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1222, %r1220, %r932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1225, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1227, %r1225, %r945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1230, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1232, %r1230, %r956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1235, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1237, %r1235, %r967;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1240, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1242, %r1240, %r978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1245, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1247, %r1245, %r991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1250, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1252, %r1250, %r1002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1255, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1257, %r1255, %r1013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1260, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1262, %r1260, %r1024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1265, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1267, %r1265, %r1037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1270, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1272, %r1270, %r1048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1275, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1277, %r1275, %r1059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1280, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1282, %r1280, %r1070;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1285, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1287, %r1285, %r1083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1290, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1292, %r1290, %r1094;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1295, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1297, %r1295, %r1105;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1300, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1302, %r1300, %r1116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1305, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1307, %r1305, %r1129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1310, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1312, %r1310, %r1140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1315, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1317, %r1315, %r1151;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1320, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1322, %r1320, %r1162;
	// end inline asm
	// begin inline asm
	mov.b32 %r1330, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1341, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1329, %r16195, -2004318072;
	// begin inline asm
	lop3.b32 %r1327, %r800, %r1329, %r1330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1331, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1332, %r1330, %r1331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1335, %r1327, %r1332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1338, %r811, %r1329, %r1341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1343, %r1341, %r1342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1346, %r1338, %r1343;
	// end inline asm
	shr.u32 	%r1351, %r1329, 8;
	// begin inline asm
	lop3.b32 %r1349, %r800, %r1351, %r1330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1354, %r1330, %r1353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1357, %r1349, %r1354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1360, %r811, %r1351, %r1341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1364, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1365, %r1341, %r1364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1368, %r1360, %r1365;
	// end inline asm
	// begin inline asm
	mov.b32 %r1376, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1387, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1375, %r16196, -2004318072;
	// begin inline asm
	lop3.b32 %r1373, %r800, %r1375, %r1376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1377, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1378, %r1376, %r1377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1381, %r1373, %r1378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1384, %r811, %r1375, %r1387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1389, %r1387, %r1388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1392, %r1384, %r1389;
	// end inline asm
	shr.u32 	%r1397, %r1375, 8;
	// begin inline asm
	lop3.b32 %r1395, %r800, %r1397, %r1376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1400, %r1376, %r1399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1403, %r1395, %r1400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1406, %r811, %r1397, %r1387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1411, %r1387, %r1410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1414, %r1406, %r1411;
	// end inline asm
	// begin inline asm
	mov.b32 %r1422, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1433, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1421, %r16197, -2004318072;
	// begin inline asm
	lop3.b32 %r1419, %r800, %r1421, %r1422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1423, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1424, %r1422, %r1423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1427, %r1419, %r1424;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1430, %r811, %r1421, %r1433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1435, %r1433, %r1434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1438, %r1430, %r1435;
	// end inline asm
	shr.u32 	%r1443, %r1421, 8;
	// begin inline asm
	lop3.b32 %r1441, %r800, %r1443, %r1422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1446, %r1422, %r1445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1449, %r1441, %r1446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1452, %r811, %r1443, %r1433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1457, %r1433, %r1456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1460, %r1452, %r1457;
	// end inline asm
	// begin inline asm
	mov.b32 %r1468, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1479, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1467, %r16198, -2004318072;
	// begin inline asm
	lop3.b32 %r1465, %r800, %r1467, %r1468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1470, %r1468, %r1469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1473, %r1465, %r1470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1476, %r811, %r1467, %r1479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1481, %r1479, %r1480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1484, %r1476, %r1481;
	// end inline asm
	shr.u32 	%r1489, %r1467, 8;
	// begin inline asm
	lop3.b32 %r1487, %r800, %r1489, %r1468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1492, %r1468, %r1491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1495, %r1487, %r1492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1498, %r811, %r1489, %r1479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1502, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1503, %r1479, %r1502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1506, %r1498, %r1503;
	// end inline asm
	// begin inline asm
	mov.b32 %r1514, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1525, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1513, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r1511, %r800, %r1513, %r1514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1516, %r1514, %r1515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1519, %r1511, %r1516;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1522, %r811, %r1513, %r1525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1527, %r1525, %r1526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1530, %r1522, %r1527;
	// end inline asm
	shr.u32 	%r1535, %r1513, 8;
	// begin inline asm
	lop3.b32 %r1533, %r800, %r1535, %r1514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1538, %r1514, %r1537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1541, %r1533, %r1538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1544, %r811, %r1535, %r1525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1548, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1549, %r1525, %r1548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1552, %r1544, %r1549;
	// end inline asm
	// begin inline asm
	mov.b32 %r1560, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1571, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1559, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r1557, %r800, %r1559, %r1560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1561, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1562, %r1560, %r1561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1565, %r1557, %r1562;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1568, %r811, %r1559, %r1571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1572, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1573, %r1571, %r1572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1576, %r1568, %r1573;
	// end inline asm
	shr.u32 	%r1581, %r1559, 8;
	// begin inline asm
	lop3.b32 %r1579, %r800, %r1581, %r1560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1584, %r1560, %r1583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1587, %r1579, %r1584;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1590, %r811, %r1581, %r1571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1594, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1595, %r1571, %r1594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1598, %r1590, %r1595;
	// end inline asm
	// begin inline asm
	mov.b32 %r1606, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1617, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1605, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r1603, %r800, %r1605, %r1606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1607, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1608, %r1606, %r1607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1611, %r1603, %r1608;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1614, %r811, %r1605, %r1617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1618, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1619, %r1617, %r1618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1622, %r1614, %r1619;
	// end inline asm
	shr.u32 	%r1627, %r1605, 8;
	// begin inline asm
	lop3.b32 %r1625, %r800, %r1627, %r1606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1630, %r1606, %r1629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1633, %r1625, %r1630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1636, %r811, %r1627, %r1617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1640, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1641, %r1617, %r1640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1644, %r1636, %r1641;
	// end inline asm
	// begin inline asm
	mov.b32 %r1652, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1663, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1651, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r1649, %r800, %r1651, %r1652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1653, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1654, %r1652, %r1653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1657, %r1649, %r1654;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1660, %r811, %r1651, %r1663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1664, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1665, %r1663, %r1664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1668, %r1660, %r1665;
	// end inline asm
	shr.u32 	%r1673, %r1651, 8;
	// begin inline asm
	lop3.b32 %r1671, %r800, %r1673, %r1652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1675, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1676, %r1652, %r1675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1679, %r1671, %r1676;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1682, %r811, %r1673, %r1663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1686, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1687, %r1663, %r1686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1690, %r1682, %r1687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1693, %r272, %r1335, %r1167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1697, %r272, %r1346, %r1172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1701, %r272, %r1357, %r1177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1705, %r272, %r1368, %r1182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1709, %r272, %r1381, %r1187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1713, %r272, %r1392, %r1192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1717, %r272, %r1403, %r1197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1721, %r272, %r1414, %r1202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1725, %r272, %r1427, %r1207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1729, %r272, %r1438, %r1212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1733, %r272, %r1449, %r1217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1737, %r272, %r1460, %r1222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1741, %r272, %r1473, %r1227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1745, %r272, %r1484, %r1232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1749, %r272, %r1495, %r1237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1753, %r272, %r1506, %r1242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1757, %r290, %r1519, %r1247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1761, %r290, %r1530, %r1252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1765, %r290, %r1541, %r1257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1769, %r290, %r1552, %r1262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1773, %r290, %r1565, %r1267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1777, %r290, %r1576, %r1272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1781, %r290, %r1587, %r1277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1785, %r290, %r1598, %r1282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1789, %r290, %r1611, %r1287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1793, %r290, %r1622, %r1292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1797, %r290, %r1633, %r1297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1801, %r290, %r1644, %r1302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1805, %r290, %r1657, %r1307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1809, %r290, %r1668, %r1312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1813, %r290, %r1679, %r1317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1817, %r290, %r1690, %r1322;
	// end inline asm
	// begin inline asm
	mov.b32 %r1826, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1837, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1825, %r16199, -2004318072;
	// begin inline asm
	lop3.b32 %r1823, %r800, %r1825, %r1826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1828, %r1826, %r1827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1831, %r1823, %r1828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1834, %r811, %r1825, %r1837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1839, %r1837, %r1838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1842, %r1834, %r1839;
	// end inline asm
	shr.u32 	%r1847, %r1825, 8;
	// begin inline asm
	lop3.b32 %r1845, %r800, %r1847, %r1826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1849, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1850, %r1826, %r1849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1853, %r1845, %r1850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1856, %r811, %r1847, %r1837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1860, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1861, %r1837, %r1860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1864, %r1856, %r1861;
	// end inline asm
	// begin inline asm
	mov.b32 %r1872, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1883, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1871, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r1869, %r800, %r1871, %r1872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1874, %r1872, %r1873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1877, %r1869, %r1874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1880, %r811, %r1871, %r1883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1885, %r1883, %r1884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1888, %r1880, %r1885;
	// end inline asm
	shr.u32 	%r1893, %r1871, 8;
	// begin inline asm
	lop3.b32 %r1891, %r800, %r1893, %r1872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1896, %r1872, %r1895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1899, %r1891, %r1896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1902, %r811, %r1893, %r1883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1907, %r1883, %r1906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1910, %r1902, %r1907;
	// end inline asm
	// begin inline asm
	mov.b32 %r1918, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1929, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1917, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r1915, %r800, %r1917, %r1918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1920, %r1918, %r1919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1923, %r1915, %r1920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1926, %r811, %r1917, %r1929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1931, %r1929, %r1930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1934, %r1926, %r1931;
	// end inline asm
	shr.u32 	%r1939, %r1917, 8;
	// begin inline asm
	lop3.b32 %r1937, %r800, %r1939, %r1918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1942, %r1918, %r1941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1945, %r1937, %r1942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1948, %r811, %r1939, %r1929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1952, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1953, %r1929, %r1952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1956, %r1948, %r1953;
	// end inline asm
	// begin inline asm
	mov.b32 %r1964, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1975, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1963, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r1961, %r800, %r1963, %r1964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1966, %r1964, %r1965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1969, %r1961, %r1966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1972, %r811, %r1963, %r1975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1977, %r1975, %r1976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1980, %r1972, %r1977;
	// end inline asm
	shr.u32 	%r1985, %r1963, 8;
	// begin inline asm
	lop3.b32 %r1983, %r800, %r1985, %r1964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1988, %r1964, %r1987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1991, %r1983, %r1988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1994, %r811, %r1985, %r1975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1999, %r1975, %r1998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2002, %r1994, %r1999;
	// end inline asm
	// begin inline asm
	mov.b32 %r2010, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2021, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2009, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r2007, %r800, %r2009, %r2010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2012, %r2010, %r2011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2015, %r2007, %r2012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2018, %r811, %r2009, %r2021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2023, %r2021, %r2022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2026, %r2018, %r2023;
	// end inline asm
	shr.u32 	%r2031, %r2009, 8;
	// begin inline asm
	lop3.b32 %r2029, %r800, %r2031, %r2010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2034, %r2010, %r2033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2037, %r2029, %r2034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2040, %r811, %r2031, %r2021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2045, %r2021, %r2044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2048, %r2040, %r2045;
	// end inline asm
	// begin inline asm
	mov.b32 %r2056, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2067, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2055, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r2053, %r800, %r2055, %r2056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2058, %r2056, %r2057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2061, %r2053, %r2058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2064, %r811, %r2055, %r2067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2068, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2069, %r2067, %r2068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2072, %r2064, %r2069;
	// end inline asm
	shr.u32 	%r2077, %r2055, 8;
	// begin inline asm
	lop3.b32 %r2075, %r800, %r2077, %r2056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2080, %r2056, %r2079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2083, %r2075, %r2080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2086, %r811, %r2077, %r2067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2091, %r2067, %r2090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2094, %r2086, %r2091;
	// end inline asm
	// begin inline asm
	mov.b32 %r2102, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2113, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2101, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r2099, %r800, %r2101, %r2102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2104, %r2102, %r2103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2107, %r2099, %r2104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2110, %r811, %r2101, %r2113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2115, %r2113, %r2114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2118, %r2110, %r2115;
	// end inline asm
	shr.u32 	%r2123, %r2101, 8;
	// begin inline asm
	lop3.b32 %r2121, %r800, %r2123, %r2102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2125, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2126, %r2102, %r2125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2129, %r2121, %r2126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2132, %r811, %r2123, %r2113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2137, %r2113, %r2136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2140, %r2132, %r2137;
	// end inline asm
	// begin inline asm
	mov.b32 %r2148, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2159, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2147, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r2145, %r800, %r2147, %r2148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2150, %r2148, %r2149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2153, %r2145, %r2150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2156, %r811, %r2147, %r2159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2161, %r2159, %r2160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2164, %r2156, %r2161;
	// end inline asm
	shr.u32 	%r2169, %r2147, 8;
	// begin inline asm
	lop3.b32 %r2167, %r800, %r2169, %r2148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2171, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2172, %r2148, %r2171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2175, %r2167, %r2172;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2178, %r811, %r2169, %r2159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2183, %r2159, %r2182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2186, %r2178, %r2183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2189, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2191, %r2189, %r1831, %r1693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2195, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2197, %r2195, %r1842, %r1697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2201, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2203, %r2201, %r1853, %r1701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2207, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2209, %r2207, %r1864, %r1705;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2213, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2215, %r2213, %r1877, %r1709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2219, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2221, %r2219, %r1888, %r1713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2225, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2227, %r2225, %r1899, %r1717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2231, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2233, %r2231, %r1910, %r1721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2237, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2239, %r2237, %r1923, %r1725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2243, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2245, %r2243, %r1934, %r1729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2249, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2251, %r2249, %r1945, %r1733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2255, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2257, %r2255, %r1956, %r1737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2261, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2263, %r2261, %r1969, %r1741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2267, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2269, %r2267, %r1980, %r1745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2273, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2275, %r2273, %r1991, %r1749;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2279, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2281, %r2279, %r2002, %r1753;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2285, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2287, %r2285, %r2015, %r1757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2291, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2293, %r2291, %r2026, %r1761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2297, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2299, %r2297, %r2037, %r1765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2303, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2305, %r2303, %r2048, %r1769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2309, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2311, %r2309, %r2061, %r1773;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2315, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2317, %r2315, %r2072, %r1777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2321, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2323, %r2321, %r2083, %r1781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2327, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2329, %r2327, %r2094, %r1785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2333, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2335, %r2333, %r2107, %r1789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2339, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2341, %r2339, %r2118, %r1793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2345, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2347, %r2345, %r2129, %r1797;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2351, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2353, %r2351, %r2140, %r1801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2357, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2359, %r2357, %r2153, %r1805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2363, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2365, %r2363, %r2164, %r1809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2369, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2371, %r2369, %r2175, %r1813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2375, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2377, %r2375, %r2186, %r1817;
	// end inline asm
	// begin inline asm
	mov.b32 %r2386, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2397, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2385, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r2383, %r800, %r2385, %r2386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2388, %r2386, %r2387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2391, %r2383, %r2388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2394, %r811, %r2385, %r2397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2399, %r2397, %r2398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2402, %r2394, %r2399;
	// end inline asm
	shr.u32 	%r2407, %r2385, 8;
	// begin inline asm
	lop3.b32 %r2405, %r800, %r2407, %r2386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2410, %r2386, %r2409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2413, %r2405, %r2410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2416, %r811, %r2407, %r2397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2420, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2421, %r2397, %r2420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2424, %r2416, %r2421;
	// end inline asm
	// begin inline asm
	mov.b32 %r2432, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2443, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2431, %r16204, -2004318072;
	// begin inline asm
	lop3.b32 %r2429, %r800, %r2431, %r2432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2434, %r2432, %r2433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2437, %r2429, %r2434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2440, %r811, %r2431, %r2443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2445, %r2443, %r2444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2448, %r2440, %r2445;
	// end inline asm
	shr.u32 	%r2453, %r2431, 8;
	// begin inline asm
	lop3.b32 %r2451, %r800, %r2453, %r2432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2456, %r2432, %r2455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2459, %r2451, %r2456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2462, %r811, %r2453, %r2443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2466, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2467, %r2443, %r2466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2470, %r2462, %r2467;
	// end inline asm
	// begin inline asm
	mov.b32 %r2478, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2489, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2477, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r2475, %r800, %r2477, %r2478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2480, %r2478, %r2479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2483, %r2475, %r2480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2486, %r811, %r2477, %r2489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2491, %r2489, %r2490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2494, %r2486, %r2491;
	// end inline asm
	shr.u32 	%r2499, %r2477, 8;
	// begin inline asm
	lop3.b32 %r2497, %r800, %r2499, %r2478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2502, %r2478, %r2501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2505, %r2497, %r2502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2508, %r811, %r2499, %r2489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2513, %r2489, %r2512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2516, %r2508, %r2513;
	// end inline asm
	// begin inline asm
	mov.b32 %r2524, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2535, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2523, %r16206, -2004318072;
	// begin inline asm
	lop3.b32 %r2521, %r800, %r2523, %r2524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2526, %r2524, %r2525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2529, %r2521, %r2526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2532, %r811, %r2523, %r2535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2537, %r2535, %r2536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2540, %r2532, %r2537;
	// end inline asm
	shr.u32 	%r2545, %r2523, 8;
	// begin inline asm
	lop3.b32 %r2543, %r800, %r2545, %r2524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2548, %r2524, %r2547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2551, %r2543, %r2548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2554, %r811, %r2545, %r2535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2559, %r2535, %r2558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2562, %r2554, %r2559;
	// end inline asm
	// begin inline asm
	mov.b32 %r2570, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2581, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2569, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r2567, %r800, %r2569, %r2570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2572, %r2570, %r2571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2575, %r2567, %r2572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2578, %r811, %r2569, %r2581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2583, %r2581, %r2582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2586, %r2578, %r2583;
	// end inline asm
	shr.u32 	%r2591, %r2569, 8;
	// begin inline asm
	lop3.b32 %r2589, %r800, %r2591, %r2570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2594, %r2570, %r2593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2597, %r2589, %r2594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2600, %r811, %r2591, %r2581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2604, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2605, %r2581, %r2604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2608, %r2600, %r2605;
	// end inline asm
	// begin inline asm
	mov.b32 %r2616, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2627, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2615, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r2613, %r800, %r2615, %r2616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2618, %r2616, %r2617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2621, %r2613, %r2618;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2624, %r811, %r2615, %r2627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2629, %r2627, %r2628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2632, %r2624, %r2629;
	// end inline asm
	shr.u32 	%r2637, %r2615, 8;
	// begin inline asm
	lop3.b32 %r2635, %r800, %r2637, %r2616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2640, %r2616, %r2639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2643, %r2635, %r2640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2646, %r811, %r2637, %r2627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2650, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2651, %r2627, %r2650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2654, %r2646, %r2651;
	// end inline asm
	// begin inline asm
	mov.b32 %r2662, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2673, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2661, %r16217, -2004318072;
	// begin inline asm
	lop3.b32 %r2659, %r800, %r2661, %r2662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2664, %r2662, %r2663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2667, %r2659, %r2664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2670, %r811, %r2661, %r2673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2675, %r2673, %r2674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2678, %r2670, %r2675;
	// end inline asm
	shr.u32 	%r2683, %r2661, 8;
	// begin inline asm
	lop3.b32 %r2681, %r800, %r2683, %r2662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2686, %r2662, %r2685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2689, %r2681, %r2686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2692, %r811, %r2683, %r2673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2696, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2697, %r2673, %r2696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2700, %r2692, %r2697;
	// end inline asm
	// begin inline asm
	mov.b32 %r2708, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2719, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2707, %r16218, -2004318072;
	// begin inline asm
	lop3.b32 %r2705, %r800, %r2707, %r2708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2709, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2710, %r2708, %r2709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2713, %r2705, %r2710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2716, %r811, %r2707, %r2719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2720, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2721, %r2719, %r2720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2724, %r2716, %r2721;
	// end inline asm
	shr.u32 	%r2729, %r2707, 8;
	// begin inline asm
	lop3.b32 %r2727, %r800, %r2729, %r2708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2731, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2732, %r2708, %r2731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2735, %r2727, %r2732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2738, %r811, %r2729, %r2719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2742, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2743, %r2719, %r2742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2746, %r2738, %r2743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2884, %r344, %r2391, %r2191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2881, %r344, %r2402, %r2197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2893, %r344, %r2413, %r2203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2890, %r344, %r2424, %r2209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2902, %r344, %r2437, %r2215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2899, %r344, %r2448, %r2221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2911, %r344, %r2459, %r2227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2908, %r344, %r2470, %r2233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2920, %r344, %r2483, %r2239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2917, %r344, %r2494, %r2245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2929, %r344, %r2505, %r2251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2926, %r344, %r2516, %r2257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2938, %r344, %r2529, %r2263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2935, %r344, %r2540, %r2269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2947, %r344, %r2551, %r2275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2944, %r344, %r2562, %r2281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2956, %r362, %r2575, %r2287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2953, %r362, %r2586, %r2293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2965, %r362, %r2597, %r2299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2962, %r362, %r2608, %r2305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2974, %r362, %r2621, %r2311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2971, %r362, %r2632, %r2317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2983, %r362, %r2643, %r2323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2980, %r362, %r2654, %r2329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2992, %r362, %r2667, %r2335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2989, %r362, %r2678, %r2341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3001, %r362, %r2689, %r2347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2998, %r362, %r2700, %r2353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3010, %r362, %r2713, %r2359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3007, %r362, %r2724, %r2365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3019, %r362, %r2735, %r2371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3016, %r362, %r2746, %r2377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2877, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2879, %r2877, %r2881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2882, %r426, %r2884, %r2879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2886, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2888, %r2886, %r2890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2891, %r426, %r2893, %r2888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2895, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2897, %r2895, %r2899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2900, %r426, %r2902, %r2897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2904, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2906, %r2904, %r2908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2909, %r426, %r2911, %r2906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2913, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2915, %r2913, %r2917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2918, %r426, %r2920, %r2915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2922, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2924, %r2922, %r2926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2927, %r426, %r2929, %r2924;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2931, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2933, %r2931, %r2935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2936, %r426, %r2938, %r2933;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2940, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2942, %r2940, %r2944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2945, %r426, %r2947, %r2942;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2949, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2951, %r2949, %r2953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2954, %r429, %r2956, %r2951;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2958, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2960, %r2958, %r2962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2963, %r429, %r2965, %r2960;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2967, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2969, %r2967, %r2971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2972, %r429, %r2974, %r2969;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2976, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2978, %r2976, %r2980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2981, %r429, %r2983, %r2978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2985, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2987, %r2985, %r2989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2990, %r429, %r2992, %r2987;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2994, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2996, %r2994, %r2998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2999, %r429, %r3001, %r2996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3003, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3005, %r3003, %r3007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3008, %r429, %r3010, %r3005;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3012, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3014, %r3012, %r3016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3017, %r429, %r3019, %r3014;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3021, %r432, %r2884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3024, %r426, %r2881, %r3021;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3028, %r432, %r2893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3031, %r426, %r2890, %r3028;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3035, %r432, %r2902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r426, %r2899, %r3035;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3042, %r432, %r2911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3045, %r426, %r2908, %r3042;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3049, %r432, %r2920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3052, %r426, %r2917, %r3049;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3056, %r432, %r2929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3059, %r426, %r2926, %r3056;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3063, %r432, %r2938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3066, %r426, %r2935, %r3063;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3070, %r432, %r2947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3073, %r426, %r2944, %r3070;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3077, %r435, %r2956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3080, %r429, %r2953, %r3077;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3084, %r435, %r2965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3087, %r429, %r2962, %r3084;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3091, %r435, %r2974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3094, %r429, %r2971, %r3091;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3098, %r435, %r2983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3101, %r429, %r2980, %r3098;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3105, %r435, %r2992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3108, %r429, %r2989, %r3105;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3112, %r435, %r3001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3115, %r429, %r2998, %r3112;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3119, %r435, %r3010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3122, %r429, %r3007, %r3119;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3126, %r435, %r3019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3129, %r429, %r3016, %r3126;
	// end inline asm
	mov.u32 	%r15156, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3300, %r3297}, {%r474, %r480, %r477, %r483}, {%r2882, %r3024}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3309, %r3306}, {%r474, %r480, %r477, %r483}, {%r2891, %r3031}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3318, %r3315}, {%r474, %r480, %r477, %r483}, {%r2900, %r3038}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3327, %r3324}, {%r474, %r480, %r477, %r483}, {%r2909, %r3045}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3336, %r3333}, {%r474, %r480, %r477, %r483}, {%r2918, %r3052}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3345, %r3342}, {%r474, %r480, %r477, %r483}, {%r2927, %r3059}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3354, %r3351}, {%r474, %r480, %r477, %r483}, {%r2936, %r3066}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3363, %r3360}, {%r474, %r480, %r477, %r483}, {%r2945, %r3073}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3372, %r3369}, {%r474, %r480, %r477, %r483}, {%r2954, %r3080}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3381, %r3378}, {%r474, %r480, %r477, %r483}, {%r2963, %r3087}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3390, %r3387}, {%r474, %r480, %r477, %r483}, {%r2972, %r3094}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3399, %r3396}, {%r474, %r480, %r477, %r483}, {%r2981, %r3101}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3408, %r3405}, {%r474, %r480, %r477, %r483}, {%r2990, %r3108}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3417, %r3414}, {%r474, %r480, %r477, %r483}, {%r2999, %r3115}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3426, %r3423}, {%r474, %r480, %r477, %r483}, {%r3008, %r3122}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3435, %r3432}, {%r474, %r480, %r477, %r483}, {%r3017, %r3129}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3293, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3295, %r3293, %r3297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3298, %r521, %r3300, %r3295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3302, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3304, %r3302, %r3306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3307, %r521, %r3309, %r3304;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3311, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3313, %r3311, %r3315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3316, %r521, %r3318, %r3313;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3320, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3322, %r3320, %r3324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3325, %r521, %r3327, %r3322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3329, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3331, %r3329, %r3333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3334, %r521, %r3336, %r3331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3338, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3340, %r3338, %r3342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3343, %r521, %r3345, %r3340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3347, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3349, %r3347, %r3351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3352, %r521, %r3354, %r3349;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3356, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3358, %r3356, %r3360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3361, %r521, %r3363, %r3358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3365, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3367, %r3365, %r3369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3370, %r521, %r3372, %r3367;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3374, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3376, %r3374, %r3378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3379, %r521, %r3381, %r3376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3383, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3385, %r3383, %r3387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3388, %r521, %r3390, %r3385;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3392, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3394, %r3392, %r3396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3397, %r521, %r3399, %r3394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3401, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3403, %r3401, %r3405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3406, %r521, %r3408, %r3403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3410, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3412, %r3410, %r3414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3415, %r521, %r3417, %r3412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3419, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3421, %r3419, %r3423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3424, %r521, %r3426, %r3421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3428, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3430, %r3428, %r3432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3433, %r521, %r3435, %r3430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3437, %r524, %r3300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3440, %r521, %r3297, %r3437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3444, %r524, %r3309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3447, %r521, %r3306, %r3444;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3451, %r524, %r3318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3454, %r521, %r3315, %r3451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3458, %r524, %r3327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3461, %r521, %r3324, %r3458;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3465, %r524, %r3336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3468, %r521, %r3333, %r3465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3472, %r524, %r3345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3475, %r521, %r3342, %r3472;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3479, %r524, %r3354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3482, %r521, %r3351, %r3479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3486, %r524, %r3363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3489, %r521, %r3360, %r3486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3493, %r524, %r3372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3496, %r521, %r3369, %r3493;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3500, %r524, %r3381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3503, %r521, %r3378, %r3500;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3507, %r524, %r3390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3510, %r521, %r3387, %r3507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3514, %r524, %r3399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3517, %r521, %r3396, %r3514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3521, %r524, %r3408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3524, %r521, %r3405, %r3521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3528, %r524, %r3417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3531, %r521, %r3414, %r3528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3535, %r524, %r3426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3538, %r521, %r3423, %r3535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3542, %r524, %r3435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3545, %r521, %r3432, %r3542;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3838, %r3841}, {%r564, %r570, %r567, %r573}, {%r3298, %r3440}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3844, %r3847}, {%r564, %r570, %r567, %r573}, {%r3307, %r3447}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3850, %r3853}, {%r564, %r570, %r567, %r573}, {%r3316, %r3454}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3856, %r3859}, {%r564, %r570, %r567, %r573}, {%r3325, %r3461}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3862, %r3865}, {%r564, %r570, %r567, %r573}, {%r3334, %r3468}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3868, %r3871}, {%r564, %r570, %r567, %r573}, {%r3343, %r3475}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3874, %r3877}, {%r564, %r570, %r567, %r573}, {%r3352, %r3482}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3880, %r3883}, {%r564, %r570, %r567, %r573}, {%r3361, %r3489}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3839, %r3842}, {%r564, %r570, %r567, %r573}, {%r3370, %r3496}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3845, %r3848}, {%r564, %r570, %r567, %r573}, {%r3379, %r3503}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3851, %r3854}, {%r564, %r570, %r567, %r573}, {%r3388, %r3510}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3857, %r3860}, {%r564, %r570, %r567, %r573}, {%r3397, %r3517}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3863, %r3866}, {%r564, %r570, %r567, %r573}, {%r3406, %r3524}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3869, %r3872}, {%r564, %r570, %r567, %r573}, {%r3415, %r3531}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3875, %r3878}, {%r564, %r570, %r567, %r573}, {%r3424, %r3538}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3881, %r3884}, {%r564, %r570, %r567, %r573}, {%r3433, %r3545}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3837, %r3838, %r3839;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3840, %r3841, %r3842;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3843, %r3844, %r3845;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3846, %r3847, %r3848;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3849, %r3850, %r3851;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3852, %r3853, %r3854;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3855, %r3856, %r3857;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3858, %r3859, %r3860;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3861, %r3862, %r3863;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3864, %r3865, %r3866;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3867, %r3868, %r3869;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3870, %r3871, %r3872;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3873, %r3874, %r3875;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3876, %r3877, %r3878;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3879, %r3880, %r3881;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3882, %r3883, %r3884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3885, %r3838, %r3839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3888, %r3841, %r3842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3891, %r3844, %r3845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3894, %r3847, %r3848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3897, %r3850, %r3851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3900, %r3853, %r3854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3903, %r3856, %r3857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3906, %r3859, %r3860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3909, %r3862, %r3863;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3912, %r3865, %r3866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3915, %r3868, %r3869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3918, %r3871, %r3872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3921, %r3874, %r3875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3924, %r3877, %r3878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3927, %r3880, %r3881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3930, %r3883, %r3884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3933, %r14, %r3837;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3936, %r14, %r3840;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3939, %r14, %r3843;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3942, %r14, %r3846;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3945, %r14, %r3849;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3948, %r14, %r3852;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3951, %r14, %r3855;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3954, %r14, %r3858;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3957, %r14, %r3861;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3960, %r14, %r3864;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3963, %r14, %r3867;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3966, %r14, %r3870;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3969, %r14, %r3873;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3972, %r14, %r3876;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3975, %r14, %r3879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3978, %r14, %r3882;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3981, %r15, %r3885;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3984, %r15, %r3888;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3987, %r15, %r3891;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3990, %r15, %r3894;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3993, %r15, %r3897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3996, %r15, %r3900;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3999, %r15, %r3903;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4002, %r15, %r3906;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4005, %r15, %r3909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4008, %r15, %r3912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4011, %r15, %r3915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4014, %r15, %r3918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4017, %r15, %r3921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4020, %r15, %r3924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4023, %r15, %r3927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4026, %r15, %r3930;
	// end inline asm
	// begin inline asm
	mov.b32 %r4029, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4030, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4031, %r3933, %r4029;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4034, %r4031, %r4030;
	// end inline asm
	// begin inline asm
	mov.b32 %r4037, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4038, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4039, %r3936, %r4037;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4042, %r4039, %r4038;
	// end inline asm
	// begin inline asm
	mov.b32 %r4045, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4046, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4047, %r3939, %r4045;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4050, %r4047, %r4046;
	// end inline asm
	// begin inline asm
	mov.b32 %r4053, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4054, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4055, %r3942, %r4053;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4058, %r4055, %r4054;
	// end inline asm
	// begin inline asm
	mov.b32 %r4061, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4062, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4063, %r3945, %r4061;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4066, %r4063, %r4062;
	// end inline asm
	// begin inline asm
	mov.b32 %r4069, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4070, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4071, %r3948, %r4069;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4074, %r4071, %r4070;
	// end inline asm
	// begin inline asm
	mov.b32 %r4077, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4078, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4079, %r3951, %r4077;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4082, %r4079, %r4078;
	// end inline asm
	// begin inline asm
	mov.b32 %r4085, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4086, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4087, %r3954, %r4085;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4090, %r4087, %r4086;
	// end inline asm
	// begin inline asm
	mov.b32 %r4093, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4094, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4095, %r3957, %r4093;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4098, %r4095, %r4094;
	// end inline asm
	// begin inline asm
	mov.b32 %r4101, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4102, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4103, %r3960, %r4101;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4106, %r4103, %r4102;
	// end inline asm
	// begin inline asm
	mov.b32 %r4109, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4110, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4111, %r3963, %r4109;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4114, %r4111, %r4110;
	// end inline asm
	// begin inline asm
	mov.b32 %r4117, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4118, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4119, %r3966, %r4117;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4122, %r4119, %r4118;
	// end inline asm
	// begin inline asm
	mov.b32 %r4125, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4126, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4127, %r3969, %r4125;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4130, %r4127, %r4126;
	// end inline asm
	// begin inline asm
	mov.b32 %r4133, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4134, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4135, %r3972, %r4133;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4138, %r4135, %r4134;
	// end inline asm
	// begin inline asm
	mov.b32 %r4141, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4142, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4143, %r3975, %r4141;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4146, %r4143, %r4142;
	// end inline asm
	// begin inline asm
	mov.b32 %r4149, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4150, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4151, %r3978, %r4149;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4154, %r4151, %r4150;
	// end inline asm
	// begin inline asm
	mov.b32 %r4157, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4158, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4159, %r3981, %r4157;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4162, %r4159, %r4158;
	// end inline asm
	// begin inline asm
	mov.b32 %r4165, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4166, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4167, %r3984, %r4165;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4170, %r4167, %r4166;
	// end inline asm
	// begin inline asm
	mov.b32 %r4173, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4174, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4175, %r3987, %r4173;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4178, %r4175, %r4174;
	// end inline asm
	// begin inline asm
	mov.b32 %r4181, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4182, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4183, %r3990, %r4181;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4186, %r4183, %r4182;
	// end inline asm
	// begin inline asm
	mov.b32 %r4189, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4190, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4191, %r3993, %r4189;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4194, %r4191, %r4190;
	// end inline asm
	// begin inline asm
	mov.b32 %r4197, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4198, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4199, %r3996, %r4197;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4202, %r4199, %r4198;
	// end inline asm
	// begin inline asm
	mov.b32 %r4205, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4206, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4207, %r3999, %r4205;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4210, %r4207, %r4206;
	// end inline asm
	// begin inline asm
	mov.b32 %r4213, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4214, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4215, %r4002, %r4213;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4218, %r4215, %r4214;
	// end inline asm
	// begin inline asm
	mov.b32 %r4221, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4222, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4223, %r4005, %r4221;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4226, %r4223, %r4222;
	// end inline asm
	// begin inline asm
	mov.b32 %r4229, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4230, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4231, %r4008, %r4229;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4234, %r4231, %r4230;
	// end inline asm
	// begin inline asm
	mov.b32 %r4237, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4238, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4239, %r4011, %r4237;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4242, %r4239, %r4238;
	// end inline asm
	// begin inline asm
	mov.b32 %r4245, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4246, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4247, %r4014, %r4245;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4250, %r4247, %r4246;
	// end inline asm
	// begin inline asm
	mov.b32 %r4253, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4254, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4255, %r4017, %r4253;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4258, %r4255, %r4254;
	// end inline asm
	// begin inline asm
	mov.b32 %r4261, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4262, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4263, %r4020, %r4261;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4266, %r4263, %r4262;
	// end inline asm
	// begin inline asm
	mov.b32 %r4269, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4270, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4271, %r4023, %r4269;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4274, %r4271, %r4270;
	// end inline asm
	// begin inline asm
	mov.b32 %r4277, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4278, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4279, %r4026, %r4277;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4282, %r4279, %r4278;
	// end inline asm
	// begin inline asm
	mov.b32 %r4288, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4286, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4287, %r4288, %r4286;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4290, %r4034, %r4287;
	// end inline asm
	// begin inline asm
	mov.b32 %r4293, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4294, %r4288, %r4293;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4297, %r4042, %r4294;
	// end inline asm
	// begin inline asm
	mov.b32 %r4300, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4301, %r4288, %r4300;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4304, %r4050, %r4301;
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4308, %r4288, %r4307;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4311, %r4058, %r4308;
	// end inline asm
	mov.u32 	%r4317, 25152;
	// begin inline asm
	prmt.b32 %r4314, %r4290, %r4304, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4318, %r4297, %r4311, %r4317;
	// end inline asm
	shl.b32 	%r4325, %r4318, 4;
	mov.u32 	%r4323, 252645135;
	// begin inline asm
	lop3.b32 %r4322, %r4323, %r4314, %r4325, 202;
	// end inline asm
	xor.b32  	%r16069, %r4322, -2004318072;
	// begin inline asm
	mov.b32 %r4329, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4328, %r4329, %r4327;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4331, %r4066, %r4328;
	// end inline asm
	// begin inline asm
	mov.b32 %r4334, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4335, %r4329, %r4334;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4338, %r4074, %r4335;
	// end inline asm
	// begin inline asm
	mov.b32 %r4341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4342, %r4329, %r4341;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4345, %r4082, %r4342;
	// end inline asm
	// begin inline asm
	mov.b32 %r4348, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4349, %r4329, %r4348;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4352, %r4090, %r4349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4355, %r4331, %r4345, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4359, %r4338, %r4352, %r4317;
	// end inline asm
	shl.b32 	%r4366, %r4359, 4;
	// begin inline asm
	lop3.b32 %r4363, %r4323, %r4355, %r4366, 202;
	// end inline asm
	xor.b32  	%r16070, %r4363, -2004318072;
	// begin inline asm
	mov.b32 %r4370, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4368, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4369, %r4370, %r4368;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4372, %r4098, %r4369;
	// end inline asm
	// begin inline asm
	mov.b32 %r4375, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4376, %r4370, %r4375;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4379, %r4106, %r4376;
	// end inline asm
	// begin inline asm
	mov.b32 %r4382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4383, %r4370, %r4382;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4386, %r4114, %r4383;
	// end inline asm
	// begin inline asm
	mov.b32 %r4389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4390, %r4370, %r4389;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4393, %r4122, %r4390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4396, %r4372, %r4386, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4400, %r4379, %r4393, %r4317;
	// end inline asm
	shl.b32 	%r4407, %r4400, 4;
	// begin inline asm
	lop3.b32 %r4404, %r4323, %r4396, %r4407, 202;
	// end inline asm
	xor.b32  	%r16071, %r4404, -2004318072;
	// begin inline asm
	mov.b32 %r4411, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4410, %r4411, %r4409;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4413, %r4130, %r4410;
	// end inline asm
	// begin inline asm
	mov.b32 %r4416, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4417, %r4411, %r4416;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4420, %r4138, %r4417;
	// end inline asm
	// begin inline asm
	mov.b32 %r4423, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4424, %r4411, %r4423;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4427, %r4146, %r4424;
	// end inline asm
	// begin inline asm
	mov.b32 %r4430, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4431, %r4411, %r4430;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4434, %r4154, %r4431;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4437, %r4413, %r4427, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4441, %r4420, %r4434, %r4317;
	// end inline asm
	shl.b32 	%r4448, %r4441, 4;
	// begin inline asm
	lop3.b32 %r4445, %r4323, %r4437, %r4448, 202;
	// end inline asm
	xor.b32  	%r16072, %r4445, -2004318072;
	// begin inline asm
	mov.b32 %r4452, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4450, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4451, %r4452, %r4450;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4454, %r4162, %r4451;
	// end inline asm
	// begin inline asm
	mov.b32 %r4457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4458, %r4452, %r4457;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4461, %r4170, %r4458;
	// end inline asm
	// begin inline asm
	mov.b32 %r4464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4465, %r4452, %r4464;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4468, %r4178, %r4465;
	// end inline asm
	// begin inline asm
	mov.b32 %r4471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4472, %r4452, %r4471;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4475, %r4186, %r4472;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4478, %r4454, %r4468, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4482, %r4461, %r4475, %r4317;
	// end inline asm
	shl.b32 	%r4489, %r4482, 4;
	// begin inline asm
	lop3.b32 %r4486, %r4323, %r4478, %r4489, 202;
	// end inline asm
	xor.b32  	%r16073, %r4486, -2004318072;
	// begin inline asm
	mov.b32 %r4493, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4492, %r4493, %r4491;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4495, %r4194, %r4492;
	// end inline asm
	// begin inline asm
	mov.b32 %r4498, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4499, %r4493, %r4498;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4502, %r4202, %r4499;
	// end inline asm
	// begin inline asm
	mov.b32 %r4505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4506, %r4493, %r4505;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4509, %r4210, %r4506;
	// end inline asm
	// begin inline asm
	mov.b32 %r4512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4513, %r4493, %r4512;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4516, %r4218, %r4513;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4519, %r4495, %r4509, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4523, %r4502, %r4516, %r4317;
	// end inline asm
	shl.b32 	%r4530, %r4523, 4;
	// begin inline asm
	lop3.b32 %r4527, %r4323, %r4519, %r4530, 202;
	// end inline asm
	xor.b32  	%r16074, %r4527, -2004318072;
	// begin inline asm
	mov.b32 %r4534, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4533, %r4534, %r4532;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4536, %r4226, %r4533;
	// end inline asm
	// begin inline asm
	mov.b32 %r4539, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4540, %r4534, %r4539;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4543, %r4234, %r4540;
	// end inline asm
	// begin inline asm
	mov.b32 %r4546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4547, %r4534, %r4546;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4550, %r4242, %r4547;
	// end inline asm
	// begin inline asm
	mov.b32 %r4553, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4554, %r4534, %r4553;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4557, %r4250, %r4554;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4560, %r4536, %r4550, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4564, %r4543, %r4557, %r4317;
	// end inline asm
	shl.b32 	%r4571, %r4564, 4;
	// begin inline asm
	lop3.b32 %r4568, %r4323, %r4560, %r4571, 202;
	// end inline asm
	xor.b32  	%r16075, %r4568, -2004318072;
	// begin inline asm
	mov.b32 %r4575, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4574, %r4575, %r4573;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4577, %r4258, %r4574;
	// end inline asm
	// begin inline asm
	mov.b32 %r4580, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4581, %r4575, %r4580;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4584, %r4266, %r4581;
	// end inline asm
	// begin inline asm
	mov.b32 %r4587, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4588, %r4575, %r4587;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4591, %r4274, %r4588;
	// end inline asm
	// begin inline asm
	mov.b32 %r4594, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4595, %r4575, %r4594;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4598, %r4282, %r4595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4601, %r4577, %r4591, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4605, %r4584, %r4598, %r4317;
	// end inline asm
	shl.b32 	%r4612, %r4605, 4;
	// begin inline asm
	lop3.b32 %r4609, %r4323, %r4601, %r4612, 202;
	// end inline asm
	xor.b32  	%r16076, %r4609, -2004318072;
	add.s64 	%rd82, %rd94, %rd24;
	st.shared.u32 	[%rd82], %r16069;
	add.s64 	%rd83, %rd94, %rd23;
	st.shared.u32 	[%rd83], %r16070;
	add.s64 	%rd84, %rd94, %rd22;
	st.shared.u32 	[%rd84], %r16071;
	add.s64 	%rd85, %rd94, %rd21;
	st.shared.u32 	[%rd85], %r16072;
	add.s64 	%rd86, %rd94, %rd20;
	st.shared.u32 	[%rd86], %r16073;
	add.s64 	%rd87, %rd94, %rd19;
	st.shared.u32 	[%rd87], %r16074;
	add.s64 	%rd88, %rd94, %rd18;
	st.shared.u32 	[%rd88], %r16075;
	add.s64 	%rd89, %rd94, %rd17;
	st.shared.u32 	[%rd89], %r16076;
	ld.shared.u32 	%r16195, [%rd74];
	ld.shared.u32 	%r16196, [%rd75];
	ld.shared.u32 	%r16197, [%rd76];
	ld.shared.u32 	%r16198, [%rd77];
	ld.shared.u32 	%r16207, [%rd78];
	ld.shared.u32 	%r16208, [%rd79];
	ld.shared.u32 	%r16209, [%rd80];
	ld.shared.u32 	%r16210, [%rd81];
	// begin inline asm
	mov.b32 %r4618, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4629, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4617, %r16195, -2004318072;
	// begin inline asm
	lop3.b32 %r4615, %r800, %r4617, %r4618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4620, %r4618, %r4619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4623, %r4615, %r4620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4626, %r811, %r4617, %r4629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4631, %r4629, %r4630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4634, %r4626, %r4631;
	// end inline asm
	shr.u32 	%r4639, %r4617, 8;
	// begin inline asm
	lop3.b32 %r4637, %r800, %r4639, %r4618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4641, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4642, %r4618, %r4641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4645, %r4637, %r4642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4648, %r811, %r4639, %r4629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4653, %r4629, %r4652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4656, %r4648, %r4653;
	// end inline asm
	// begin inline asm
	mov.b32 %r4664, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4675, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4663, %r16196, -2004318072;
	// begin inline asm
	lop3.b32 %r4661, %r800, %r4663, %r4664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4666, %r4664, %r4665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4669, %r4661, %r4666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4672, %r811, %r4663, %r4675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4676, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4677, %r4675, %r4676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4680, %r4672, %r4677;
	// end inline asm
	shr.u32 	%r4685, %r4663, 8;
	// begin inline asm
	lop3.b32 %r4683, %r800, %r4685, %r4664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4687, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4688, %r4664, %r4687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4691, %r4683, %r4688;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4694, %r811, %r4685, %r4675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4698, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4699, %r4675, %r4698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4702, %r4694, %r4699;
	// end inline asm
	// begin inline asm
	mov.b32 %r4710, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4721, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4709, %r16197, -2004318072;
	// begin inline asm
	lop3.b32 %r4707, %r800, %r4709, %r4710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4711, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4712, %r4710, %r4711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4715, %r4707, %r4712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4718, %r811, %r4709, %r4721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4722, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4723, %r4721, %r4722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4726, %r4718, %r4723;
	// end inline asm
	shr.u32 	%r4731, %r4709, 8;
	// begin inline asm
	lop3.b32 %r4729, %r800, %r4731, %r4710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4733, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4734, %r4710, %r4733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4737, %r4729, %r4734;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4740, %r811, %r4731, %r4721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4744, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4745, %r4721, %r4744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4748, %r4740, %r4745;
	// end inline asm
	// begin inline asm
	mov.b32 %r4756, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4767, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4755, %r16198, -2004318072;
	// begin inline asm
	lop3.b32 %r4753, %r800, %r4755, %r4756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4757, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4758, %r4756, %r4757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4761, %r4753, %r4758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4764, %r811, %r4755, %r4767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4768, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4769, %r4767, %r4768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4772, %r4764, %r4769;
	// end inline asm
	shr.u32 	%r4777, %r4755, 8;
	// begin inline asm
	lop3.b32 %r4775, %r800, %r4777, %r4756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4779, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4780, %r4756, %r4779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4783, %r4775, %r4780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4786, %r811, %r4777, %r4767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4790, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4791, %r4767, %r4790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4794, %r4786, %r4791;
	// end inline asm
	// begin inline asm
	mov.b32 %r4802, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4813, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4801, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r4799, %r800, %r4801, %r4802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4803, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4804, %r4802, %r4803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4807, %r4799, %r4804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4810, %r811, %r4801, %r4813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4815, %r4813, %r4814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4818, %r4810, %r4815;
	// end inline asm
	shr.u32 	%r4823, %r4801, 8;
	// begin inline asm
	lop3.b32 %r4821, %r800, %r4823, %r4802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4825, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4826, %r4802, %r4825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4829, %r4821, %r4826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4832, %r811, %r4823, %r4813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4837, %r4813, %r4836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4840, %r4832, %r4837;
	// end inline asm
	// begin inline asm
	mov.b32 %r4848, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4859, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4847, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r4845, %r800, %r4847, %r4848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4849, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4850, %r4848, %r4849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4853, %r4845, %r4850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4856, %r811, %r4847, %r4859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4860, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4861, %r4859, %r4860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4864, %r4856, %r4861;
	// end inline asm
	shr.u32 	%r4869, %r4847, 8;
	// begin inline asm
	lop3.b32 %r4867, %r800, %r4869, %r4848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4871, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4872, %r4848, %r4871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4875, %r4867, %r4872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4878, %r811, %r4869, %r4859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4882, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4883, %r4859, %r4882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4886, %r4878, %r4883;
	// end inline asm
	// begin inline asm
	mov.b32 %r4894, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4905, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4893, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r4891, %r800, %r4893, %r4894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4896, %r4894, %r4895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4899, %r4891, %r4896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4902, %r811, %r4893, %r4905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4907, %r4905, %r4906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4910, %r4902, %r4907;
	// end inline asm
	shr.u32 	%r4915, %r4893, 8;
	// begin inline asm
	lop3.b32 %r4913, %r800, %r4915, %r4894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4918, %r4894, %r4917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4921, %r4913, %r4918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4924, %r811, %r4915, %r4905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4929, %r4905, %r4928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4932, %r4924, %r4929;
	// end inline asm
	// begin inline asm
	mov.b32 %r4940, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4951, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4939, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r4937, %r800, %r4939, %r4940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4942, %r4940, %r4941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4945, %r4937, %r4942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4948, %r811, %r4939, %r4951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4952, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4953, %r4951, %r4952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4956, %r4948, %r4953;
	// end inline asm
	shr.u32 	%r4961, %r4939, 8;
	// begin inline asm
	lop3.b32 %r4959, %r800, %r4961, %r4940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4963, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4964, %r4940, %r4963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4967, %r4959, %r4964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4970, %r811, %r4961, %r4951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4975, %r4951, %r4974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4978, %r4970, %r4975;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4981, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4983, %r4981, %r4623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4986, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4988, %r4986, %r4634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4991, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4993, %r4991, %r4645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4996, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4998, %r4996, %r4656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5001, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5003, %r5001, %r4669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5006, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5008, %r5006, %r4680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5011, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5013, %r5011, %r4691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5016, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5018, %r5016, %r4702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5021, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5023, %r5021, %r4715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5026, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5028, %r5026, %r4726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5031, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5033, %r5031, %r4737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5036, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5038, %r5036, %r4748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5041, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5043, %r5041, %r4761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5046, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5048, %r5046, %r4772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5051, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5053, %r5051, %r4783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5056, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5058, %r5056, %r4794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5061, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5063, %r5061, %r4807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5066, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5068, %r5066, %r4818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5071, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5073, %r5071, %r4829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5076, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5078, %r5076, %r4840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5081, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5083, %r5081, %r4853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5086, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5088, %r5086, %r4864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5091, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5093, %r5091, %r4875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5096, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5098, %r5096, %r4886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5101, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5103, %r5101, %r4899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5106, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5108, %r5106, %r4910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5111, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5113, %r5111, %r4921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5116, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5118, %r5116, %r4932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5121, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5123, %r5121, %r4945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5126, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5128, %r5126, %r4956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5131, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5133, %r5131, %r4967;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5136, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5138, %r5136, %r4978;
	// end inline asm
	// begin inline asm
	mov.b32 %r5146, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5157, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5143, %r800, %r1825, %r5146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5148, %r5146, %r5147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5151, %r5143, %r5148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5154, %r811, %r1825, %r5157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5159, %r5157, %r5158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5162, %r5154, %r5159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5165, %r800, %r1847, %r5146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5170, %r5146, %r5169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5173, %r5165, %r5170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5176, %r811, %r1847, %r5157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5181, %r5157, %r5180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5184, %r5176, %r5181;
	// end inline asm
	// begin inline asm
	mov.b32 %r5192, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5203, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5189, %r800, %r1871, %r5192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5193, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5194, %r5192, %r5193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5197, %r5189, %r5194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5200, %r811, %r1871, %r5203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5205, %r5203, %r5204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5208, %r5200, %r5205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5211, %r800, %r1893, %r5192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5215, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5216, %r5192, %r5215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5219, %r5211, %r5216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5222, %r811, %r1893, %r5203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5227, %r5203, %r5226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5230, %r5222, %r5227;
	// end inline asm
	// begin inline asm
	mov.b32 %r5238, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5249, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5235, %r800, %r1917, %r5238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5239, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5240, %r5238, %r5239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5243, %r5235, %r5240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5246, %r811, %r1917, %r5249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5251, %r5249, %r5250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5254, %r5246, %r5251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5257, %r800, %r1939, %r5238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5261, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5262, %r5238, %r5261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5265, %r5257, %r5262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5268, %r811, %r1939, %r5249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5272, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5273, %r5249, %r5272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5276, %r5268, %r5273;
	// end inline asm
	// begin inline asm
	mov.b32 %r5284, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5295, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5281, %r800, %r1963, %r5284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5286, %r5284, %r5285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5289, %r5281, %r5286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5292, %r811, %r1963, %r5295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5296, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5297, %r5295, %r5296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5300, %r5292, %r5297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5303, %r800, %r1985, %r5284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5307, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5308, %r5284, %r5307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5311, %r5303, %r5308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5314, %r811, %r1985, %r5295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5318, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5319, %r5295, %r5318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5322, %r5314, %r5319;
	// end inline asm
	// begin inline asm
	mov.b32 %r5330, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5341, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5327, %r800, %r2009, %r5330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5331, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5332, %r5330, %r5331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5335, %r5327, %r5332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5338, %r811, %r2009, %r5341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5343, %r5341, %r5342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5346, %r5338, %r5343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5349, %r800, %r2031, %r5330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5354, %r5330, %r5353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5357, %r5349, %r5354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5360, %r811, %r2031, %r5341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5364, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5365, %r5341, %r5364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5368, %r5360, %r5365;
	// end inline asm
	// begin inline asm
	mov.b32 %r5376, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5387, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5373, %r800, %r2055, %r5376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5377, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5378, %r5376, %r5377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5381, %r5373, %r5378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5384, %r811, %r2055, %r5387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5389, %r5387, %r5388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5392, %r5384, %r5389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5395, %r800, %r2077, %r5376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5400, %r5376, %r5399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5403, %r5395, %r5400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5406, %r811, %r2077, %r5387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5411, %r5387, %r5410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5414, %r5406, %r5411;
	// end inline asm
	// begin inline asm
	mov.b32 %r5422, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5433, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5419, %r800, %r2101, %r5422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5423, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5424, %r5422, %r5423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5427, %r5419, %r5424;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5430, %r811, %r2101, %r5433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5435, %r5433, %r5434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5438, %r5430, %r5435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5441, %r800, %r2123, %r5422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5446, %r5422, %r5445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5449, %r5441, %r5446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5452, %r811, %r2123, %r5433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5457, %r5433, %r5456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5460, %r5452, %r5457;
	// end inline asm
	// begin inline asm
	mov.b32 %r5468, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5479, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5465, %r800, %r2147, %r5468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5470, %r5468, %r5469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5473, %r5465, %r5470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5476, %r811, %r2147, %r5479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5481, %r5479, %r5480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5484, %r5476, %r5481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5487, %r800, %r2169, %r5468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5492, %r5468, %r5491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5495, %r5487, %r5492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5498, %r811, %r2169, %r5479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5502, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5503, %r5479, %r5502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5506, %r5498, %r5503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5509, %r272, %r5151, %r4983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5513, %r272, %r5162, %r4988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5517, %r272, %r5173, %r4993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5521, %r272, %r5184, %r4998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5525, %r272, %r5197, %r5003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5529, %r272, %r5208, %r5008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5533, %r272, %r5219, %r5013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5537, %r272, %r5230, %r5018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5541, %r272, %r5243, %r5023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5545, %r272, %r5254, %r5028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5549, %r272, %r5265, %r5033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5553, %r272, %r5276, %r5038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5557, %r272, %r5289, %r5043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5561, %r272, %r5300, %r5048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5565, %r272, %r5311, %r5053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5569, %r272, %r5322, %r5058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5573, %r290, %r5335, %r5063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5577, %r290, %r5346, %r5068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5581, %r290, %r5357, %r5073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5585, %r290, %r5368, %r5078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5589, %r290, %r5381, %r5083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5593, %r290, %r5392, %r5088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5597, %r290, %r5403, %r5093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5601, %r290, %r5414, %r5098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5605, %r290, %r5427, %r5103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5609, %r290, %r5438, %r5108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5613, %r290, %r5449, %r5113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5617, %r290, %r5460, %r5118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5621, %r290, %r5473, %r5123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5625, %r290, %r5484, %r5128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5629, %r290, %r5495, %r5133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5633, %r290, %r5506, %r5138;
	// end inline asm
	// begin inline asm
	mov.b32 %r5642, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5653, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5639, %r800, %r2385, %r5642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5644, %r5642, %r5643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5647, %r5639, %r5644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5650, %r811, %r2385, %r5653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5655, %r5653, %r5654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5658, %r5650, %r5655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5661, %r800, %r2407, %r5642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5666, %r5642, %r5665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5669, %r5661, %r5666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5672, %r811, %r2407, %r5653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5676, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5677, %r5653, %r5676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5680, %r5672, %r5677;
	// end inline asm
	// begin inline asm
	mov.b32 %r5688, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5699, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5685, %r800, %r2431, %r5688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5690, %r5688, %r5689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5693, %r5685, %r5690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5696, %r811, %r2431, %r5699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5701, %r5699, %r5700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5704, %r5696, %r5701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5707, %r800, %r2453, %r5688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5711, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5712, %r5688, %r5711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5715, %r5707, %r5712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5718, %r811, %r2453, %r5699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5722, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5723, %r5699, %r5722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5726, %r5718, %r5723;
	// end inline asm
	// begin inline asm
	mov.b32 %r5734, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5745, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5731, %r800, %r2477, %r5734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5736, %r5734, %r5735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5739, %r5731, %r5736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5742, %r811, %r2477, %r5745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5747, %r5745, %r5746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5750, %r5742, %r5747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5753, %r800, %r2499, %r5734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5757, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5758, %r5734, %r5757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5761, %r5753, %r5758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5764, %r811, %r2499, %r5745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5768, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5769, %r5745, %r5768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5772, %r5764, %r5769;
	// end inline asm
	// begin inline asm
	mov.b32 %r5780, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5791, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5777, %r800, %r2523, %r5780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5782, %r5780, %r5781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5785, %r5777, %r5782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5788, %r811, %r2523, %r5791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5792, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5793, %r5791, %r5792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5796, %r5788, %r5793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5799, %r800, %r2545, %r5780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5803, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5804, %r5780, %r5803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5807, %r5799, %r5804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5810, %r811, %r2545, %r5791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5815, %r5791, %r5814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5818, %r5810, %r5815;
	// end inline asm
	// begin inline asm
	mov.b32 %r5826, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5837, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5823, %r800, %r2569, %r5826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5828, %r5826, %r5827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5831, %r5823, %r5828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5834, %r811, %r2569, %r5837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5839, %r5837, %r5838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5842, %r5834, %r5839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5845, %r800, %r2591, %r5826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5849, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5850, %r5826, %r5849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5853, %r5845, %r5850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5856, %r811, %r2591, %r5837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5860, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5861, %r5837, %r5860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5864, %r5856, %r5861;
	// end inline asm
	// begin inline asm
	mov.b32 %r5872, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5883, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5869, %r800, %r2615, %r5872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5874, %r5872, %r5873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5877, %r5869, %r5874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5880, %r811, %r2615, %r5883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5885, %r5883, %r5884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5888, %r5880, %r5885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5891, %r800, %r2637, %r5872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5896, %r5872, %r5895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5899, %r5891, %r5896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5902, %r811, %r2637, %r5883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5907, %r5883, %r5906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5910, %r5902, %r5907;
	// end inline asm
	// begin inline asm
	mov.b32 %r5918, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5929, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5915, %r800, %r2661, %r5918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5920, %r5918, %r5919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5923, %r5915, %r5920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5926, %r811, %r2661, %r5929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5931, %r5929, %r5930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5934, %r5926, %r5931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5937, %r800, %r2683, %r5918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5942, %r5918, %r5941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5945, %r5937, %r5942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5948, %r811, %r2683, %r5929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5952, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5953, %r5929, %r5952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5956, %r5948, %r5953;
	// end inline asm
	// begin inline asm
	mov.b32 %r5964, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5975, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5961, %r800, %r2707, %r5964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5966, %r5964, %r5965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5969, %r5961, %r5966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5972, %r811, %r2707, %r5975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5977, %r5975, %r5976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5980, %r5972, %r5977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5983, %r800, %r2729, %r5964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5988, %r5964, %r5987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5991, %r5983, %r5988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5994, %r811, %r2729, %r5975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5999, %r5975, %r5998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6002, %r5994, %r5999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6005, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6007, %r6005, %r5647, %r5509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6011, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6013, %r6011, %r5658, %r5513;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6017, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6019, %r6017, %r5669, %r5517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6023, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6025, %r6023, %r5680, %r5521;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6029, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6031, %r6029, %r5693, %r5525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6035, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6037, %r6035, %r5704, %r5529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6041, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6043, %r6041, %r5715, %r5533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6047, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6049, %r6047, %r5726, %r5537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6053, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6055, %r6053, %r5739, %r5541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6059, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6061, %r6059, %r5750, %r5545;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6065, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6067, %r6065, %r5761, %r5549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6071, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6073, %r6071, %r5772, %r5553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6077, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6079, %r6077, %r5785, %r5557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6083, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6085, %r6083, %r5796, %r5561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6089, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6091, %r6089, %r5807, %r5565;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6095, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6097, %r6095, %r5818, %r5569;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6101, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6103, %r6101, %r5831, %r5573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6107, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6109, %r6107, %r5842, %r5577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6113, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6115, %r6113, %r5853, %r5581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6119, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6121, %r6119, %r5864, %r5585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6125, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6127, %r6125, %r5877, %r5589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6131, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6133, %r6131, %r5888, %r5593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6137, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6139, %r6137, %r5899, %r5597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6143, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6145, %r6143, %r5910, %r5601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6149, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6151, %r6149, %r5923, %r5605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6155, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6157, %r6155, %r5934, %r5609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6161, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6163, %r6161, %r5945, %r5613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6167, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6169, %r6167, %r5956, %r5617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6173, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6175, %r6173, %r5969, %r5621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6179, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6181, %r6179, %r5980, %r5625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6185, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6187, %r6185, %r5991, %r5629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6191, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6193, %r6191, %r6002, %r5633;
	// end inline asm
	// begin inline asm
	mov.b32 %r6202, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6213, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6199, %r800, %r801, %r6202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6204, %r6202, %r6203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6207, %r6199, %r6204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6210, %r811, %r801, %r6213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6214, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6215, %r6213, %r6214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6218, %r6210, %r6215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6221, %r800, %r823, %r6202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6225, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6226, %r6202, %r6225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6229, %r6221, %r6226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6232, %r811, %r823, %r6213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6236, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6237, %r6213, %r6236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6240, %r6232, %r6237;
	// end inline asm
	// begin inline asm
	mov.b32 %r6248, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6259, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6245, %r800, %r847, %r6248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6250, %r6248, %r6249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6253, %r6245, %r6250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6256, %r811, %r847, %r6259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6260, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6261, %r6259, %r6260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6264, %r6256, %r6261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6267, %r800, %r869, %r6248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6272, %r6248, %r6271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6275, %r6267, %r6272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6278, %r811, %r869, %r6259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6282, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6283, %r6259, %r6282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6286, %r6278, %r6283;
	// end inline asm
	// begin inline asm
	mov.b32 %r6294, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6305, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6291, %r800, %r893, %r6294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6296, %r6294, %r6295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6299, %r6291, %r6296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6302, %r811, %r893, %r6305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6307, %r6305, %r6306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6310, %r6302, %r6307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6313, %r800, %r915, %r6294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6317, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6318, %r6294, %r6317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6321, %r6313, %r6318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6324, %r811, %r915, %r6305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6328, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6329, %r6305, %r6328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6332, %r6324, %r6329;
	// end inline asm
	// begin inline asm
	mov.b32 %r6340, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6351, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6337, %r800, %r939, %r6340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6342, %r6340, %r6341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6345, %r6337, %r6342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6348, %r811, %r939, %r6351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6353, %r6351, %r6352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6356, %r6348, %r6353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6359, %r800, %r961, %r6340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6364, %r6340, %r6363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6367, %r6359, %r6364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6370, %r811, %r961, %r6351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6375, %r6351, %r6374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6378, %r6370, %r6375;
	// end inline asm
	// begin inline asm
	mov.b32 %r6386, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6397, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6383, %r800, %r985, %r6386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6388, %r6386, %r6387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6391, %r6383, %r6388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6394, %r811, %r985, %r6397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6399, %r6397, %r6398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6402, %r6394, %r6399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6405, %r800, %r1007, %r6386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6410, %r6386, %r6409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6413, %r6405, %r6410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6416, %r811, %r1007, %r6397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6420, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6421, %r6397, %r6420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6424, %r6416, %r6421;
	// end inline asm
	// begin inline asm
	mov.b32 %r6432, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6443, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6429, %r800, %r1031, %r6432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6434, %r6432, %r6433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6437, %r6429, %r6434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6440, %r811, %r1031, %r6443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6445, %r6443, %r6444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6448, %r6440, %r6445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6451, %r800, %r1053, %r6432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6456, %r6432, %r6455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6459, %r6451, %r6456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6462, %r811, %r1053, %r6443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6466, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6467, %r6443, %r6466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6470, %r6462, %r6467;
	// end inline asm
	// begin inline asm
	mov.b32 %r6478, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6489, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6475, %r800, %r1077, %r6478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6480, %r6478, %r6479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6483, %r6475, %r6480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6486, %r811, %r1077, %r6489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6491, %r6489, %r6490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6494, %r6486, %r6491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6497, %r800, %r1099, %r6478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6502, %r6478, %r6501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6505, %r6497, %r6502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6508, %r811, %r1099, %r6489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6513, %r6489, %r6512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6516, %r6508, %r6513;
	// end inline asm
	// begin inline asm
	mov.b32 %r6524, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6535, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6521, %r800, %r1123, %r6524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6526, %r6524, %r6525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6529, %r6521, %r6526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6532, %r811, %r1123, %r6535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6537, %r6535, %r6536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6540, %r6532, %r6537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6543, %r800, %r1145, %r6524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6548, %r6524, %r6547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6551, %r6543, %r6548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6554, %r811, %r1145, %r6535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6559, %r6535, %r6558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6562, %r6554, %r6559;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6700, %r344, %r6207, %r6007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6697, %r344, %r6218, %r6013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6709, %r344, %r6229, %r6019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6706, %r344, %r6240, %r6025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6718, %r344, %r6253, %r6031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6715, %r344, %r6264, %r6037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6727, %r344, %r6275, %r6043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6724, %r344, %r6286, %r6049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6736, %r344, %r6299, %r6055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6733, %r344, %r6310, %r6061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6745, %r344, %r6321, %r6067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6742, %r344, %r6332, %r6073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6754, %r344, %r6345, %r6079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6751, %r344, %r6356, %r6085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6763, %r344, %r6367, %r6091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6760, %r344, %r6378, %r6097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6772, %r362, %r6391, %r6103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6769, %r362, %r6402, %r6109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6781, %r362, %r6413, %r6115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6778, %r362, %r6424, %r6121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6790, %r362, %r6437, %r6127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6787, %r362, %r6448, %r6133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6799, %r362, %r6459, %r6139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6796, %r362, %r6470, %r6145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6808, %r362, %r6483, %r6151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6805, %r362, %r6494, %r6157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6817, %r362, %r6505, %r6163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6814, %r362, %r6516, %r6169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6826, %r362, %r6529, %r6175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6823, %r362, %r6540, %r6181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6835, %r362, %r6551, %r6187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6832, %r362, %r6562, %r6193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6693, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6695, %r6693, %r6697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6698, %r426, %r6700, %r6695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6702, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6704, %r6702, %r6706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6707, %r426, %r6709, %r6704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6711, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6713, %r6711, %r6715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6716, %r426, %r6718, %r6713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6720, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6722, %r6720, %r6724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6725, %r426, %r6727, %r6722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6729, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6731, %r6729, %r6733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6734, %r426, %r6736, %r6731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6738, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6740, %r6738, %r6742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6743, %r426, %r6745, %r6740;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6747, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6749, %r6747, %r6751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6752, %r426, %r6754, %r6749;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6756, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6758, %r6756, %r6760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6761, %r426, %r6763, %r6758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6765, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6767, %r6765, %r6769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6770, %r429, %r6772, %r6767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6774, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6776, %r6774, %r6778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6779, %r429, %r6781, %r6776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6783, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6785, %r6783, %r6787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6788, %r429, %r6790, %r6785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6792, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6794, %r6792, %r6796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6797, %r429, %r6799, %r6794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6801, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6803, %r6801, %r6805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6806, %r429, %r6808, %r6803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6810, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6812, %r6810, %r6814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6815, %r429, %r6817, %r6812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6819, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6821, %r6819, %r6823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6824, %r429, %r6826, %r6821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6828, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6830, %r6828, %r6832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6833, %r429, %r6835, %r6830;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6837, %r432, %r6700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6840, %r426, %r6697, %r6837;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6844, %r432, %r6709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6847, %r426, %r6706, %r6844;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6851, %r432, %r6718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6854, %r426, %r6715, %r6851;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6858, %r432, %r6727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6861, %r426, %r6724, %r6858;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6865, %r432, %r6736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6868, %r426, %r6733, %r6865;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6872, %r432, %r6745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6875, %r426, %r6742, %r6872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6879, %r432, %r6754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6882, %r426, %r6751, %r6879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6886, %r432, %r6763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6889, %r426, %r6760, %r6886;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6893, %r435, %r6772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6896, %r429, %r6769, %r6893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6900, %r435, %r6781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6903, %r429, %r6778, %r6900;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6907, %r435, %r6790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6910, %r429, %r6787, %r6907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6914, %r435, %r6799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6917, %r429, %r6796, %r6914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6921, %r435, %r6808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6924, %r429, %r6805, %r6921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6928, %r435, %r6817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6931, %r429, %r6814, %r6928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6935, %r435, %r6826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6938, %r429, %r6823, %r6935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6942, %r435, %r6835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6945, %r429, %r6832, %r6942;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7116, %r7113}, {%r474, %r480, %r477, %r483}, {%r6698, %r6840}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7125, %r7122}, {%r474, %r480, %r477, %r483}, {%r6707, %r6847}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7134, %r7131}, {%r474, %r480, %r477, %r483}, {%r6716, %r6854}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7143, %r7140}, {%r474, %r480, %r477, %r483}, {%r6725, %r6861}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7152, %r7149}, {%r474, %r480, %r477, %r483}, {%r6734, %r6868}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7161, %r7158}, {%r474, %r480, %r477, %r483}, {%r6743, %r6875}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7170, %r7167}, {%r474, %r480, %r477, %r483}, {%r6752, %r6882}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7179, %r7176}, {%r474, %r480, %r477, %r483}, {%r6761, %r6889}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7188, %r7185}, {%r474, %r480, %r477, %r483}, {%r6770, %r6896}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7197, %r7194}, {%r474, %r480, %r477, %r483}, {%r6779, %r6903}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7206, %r7203}, {%r474, %r480, %r477, %r483}, {%r6788, %r6910}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7215, %r7212}, {%r474, %r480, %r477, %r483}, {%r6797, %r6917}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7224, %r7221}, {%r474, %r480, %r477, %r483}, {%r6806, %r6924}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7233, %r7230}, {%r474, %r480, %r477, %r483}, {%r6815, %r6931}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7242, %r7239}, {%r474, %r480, %r477, %r483}, {%r6824, %r6938}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7251, %r7248}, {%r474, %r480, %r477, %r483}, {%r6833, %r6945}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7109, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7111, %r7109, %r7113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7114, %r521, %r7116, %r7111;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7118, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7120, %r7118, %r7122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7123, %r521, %r7125, %r7120;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7127, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7129, %r7127, %r7131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7132, %r521, %r7134, %r7129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7136, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7138, %r7136, %r7140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7141, %r521, %r7143, %r7138;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7145, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7147, %r7145, %r7149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7150, %r521, %r7152, %r7147;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7154, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7156, %r7154, %r7158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7159, %r521, %r7161, %r7156;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7163, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7165, %r7163, %r7167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7168, %r521, %r7170, %r7165;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7172, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7174, %r7172, %r7176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7177, %r521, %r7179, %r7174;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7181, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7183, %r7181, %r7185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7186, %r521, %r7188, %r7183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7190, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7192, %r7190, %r7194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7195, %r521, %r7197, %r7192;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7199, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7201, %r7199, %r7203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7204, %r521, %r7206, %r7201;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7208, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7210, %r7208, %r7212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7213, %r521, %r7215, %r7210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7217, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7219, %r7217, %r7221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7222, %r521, %r7224, %r7219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7226, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7228, %r7226, %r7230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7231, %r521, %r7233, %r7228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7235, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7237, %r7235, %r7239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7240, %r521, %r7242, %r7237;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7244, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7246, %r7244, %r7248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7249, %r521, %r7251, %r7246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7253, %r524, %r7116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7256, %r521, %r7113, %r7253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7260, %r524, %r7125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7263, %r521, %r7122, %r7260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7267, %r524, %r7134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7270, %r521, %r7131, %r7267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7274, %r524, %r7143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7277, %r521, %r7140, %r7274;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7281, %r524, %r7152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7284, %r521, %r7149, %r7281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7288, %r524, %r7161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7291, %r521, %r7158, %r7288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7295, %r524, %r7170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7298, %r521, %r7167, %r7295;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7302, %r524, %r7179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7305, %r521, %r7176, %r7302;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7309, %r524, %r7188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7312, %r521, %r7185, %r7309;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7316, %r524, %r7197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7319, %r521, %r7194, %r7316;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7323, %r524, %r7206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7326, %r521, %r7203, %r7323;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7330, %r524, %r7215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7333, %r521, %r7212, %r7330;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7337, %r524, %r7224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7340, %r521, %r7221, %r7337;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7344, %r524, %r7233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7347, %r521, %r7230, %r7344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7351, %r524, %r7242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7354, %r521, %r7239, %r7351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7358, %r524, %r7251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7361, %r521, %r7248, %r7358;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7654, %r7657}, {%r564, %r570, %r567, %r573}, {%r7114, %r7256}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7660, %r7663}, {%r564, %r570, %r567, %r573}, {%r7123, %r7263}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7666, %r7669}, {%r564, %r570, %r567, %r573}, {%r7132, %r7270}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7672, %r7675}, {%r564, %r570, %r567, %r573}, {%r7141, %r7277}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7678, %r7681}, {%r564, %r570, %r567, %r573}, {%r7150, %r7284}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7684, %r7687}, {%r564, %r570, %r567, %r573}, {%r7159, %r7291}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7690, %r7693}, {%r564, %r570, %r567, %r573}, {%r7168, %r7298}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7696, %r7699}, {%r564, %r570, %r567, %r573}, {%r7177, %r7305}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7655, %r7658}, {%r564, %r570, %r567, %r573}, {%r7186, %r7312}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7661, %r7664}, {%r564, %r570, %r567, %r573}, {%r7195, %r7319}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7667, %r7670}, {%r564, %r570, %r567, %r573}, {%r7204, %r7326}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7673, %r7676}, {%r564, %r570, %r567, %r573}, {%r7213, %r7333}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7679, %r7682}, {%r564, %r570, %r567, %r573}, {%r7222, %r7340}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7685, %r7688}, {%r564, %r570, %r567, %r573}, {%r7231, %r7347}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7691, %r7694}, {%r564, %r570, %r567, %r573}, {%r7240, %r7354}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7697, %r7700}, {%r564, %r570, %r567, %r573}, {%r7249, %r7361}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7653, %r7654, %r7655;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7656, %r7657, %r7658;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7659, %r7660, %r7661;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7662, %r7663, %r7664;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7665, %r7666, %r7667;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7668, %r7669, %r7670;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7671, %r7672, %r7673;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7674, %r7675, %r7676;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7677, %r7678, %r7679;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7680, %r7681, %r7682;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7683, %r7684, %r7685;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7686, %r7687, %r7688;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7689, %r7690, %r7691;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7692, %r7693, %r7694;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7695, %r7696, %r7697;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7698, %r7699, %r7700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7701, %r7654, %r7655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7704, %r7657, %r7658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7707, %r7660, %r7661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7710, %r7663, %r7664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7713, %r7666, %r7667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7716, %r7669, %r7670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7719, %r7672, %r7673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7722, %r7675, %r7676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7725, %r7678, %r7679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7728, %r7681, %r7682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7731, %r7684, %r7685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7734, %r7687, %r7688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7737, %r7690, %r7691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7740, %r7693, %r7694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7743, %r7696, %r7697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7746, %r7699, %r7700;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7749, %r14, %r7653;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7752, %r14, %r7656;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7755, %r14, %r7659;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7758, %r14, %r7662;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7761, %r14, %r7665;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7764, %r14, %r7668;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7767, %r14, %r7671;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7770, %r14, %r7674;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7773, %r14, %r7677;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7776, %r14, %r7680;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7779, %r14, %r7683;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7782, %r14, %r7686;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7785, %r14, %r7689;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7788, %r14, %r7692;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7791, %r14, %r7695;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7794, %r14, %r7698;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7797, %r15, %r7701;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7800, %r15, %r7704;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7803, %r15, %r7707;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7806, %r15, %r7710;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7809, %r15, %r7713;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7812, %r15, %r7716;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7815, %r15, %r7719;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7818, %r15, %r7722;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7821, %r15, %r7725;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7824, %r15, %r7728;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7827, %r15, %r7731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7830, %r15, %r7734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7833, %r15, %r7737;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7836, %r15, %r7740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7839, %r15, %r7743;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7842, %r15, %r7746;
	// end inline asm
	// begin inline asm
	mov.b32 %r7845, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7846, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7847, %r7749, %r7845;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7850, %r7847, %r7846;
	// end inline asm
	// begin inline asm
	mov.b32 %r7853, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7854, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7855, %r7752, %r7853;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7858, %r7855, %r7854;
	// end inline asm
	// begin inline asm
	mov.b32 %r7861, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7862, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7863, %r7755, %r7861;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7866, %r7863, %r7862;
	// end inline asm
	// begin inline asm
	mov.b32 %r7869, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7870, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7871, %r7758, %r7869;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7874, %r7871, %r7870;
	// end inline asm
	// begin inline asm
	mov.b32 %r7877, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7878, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7879, %r7761, %r7877;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7882, %r7879, %r7878;
	// end inline asm
	// begin inline asm
	mov.b32 %r7885, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7886, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7887, %r7764, %r7885;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7890, %r7887, %r7886;
	// end inline asm
	// begin inline asm
	mov.b32 %r7893, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7894, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7895, %r7767, %r7893;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7898, %r7895, %r7894;
	// end inline asm
	// begin inline asm
	mov.b32 %r7901, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7902, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7903, %r7770, %r7901;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7906, %r7903, %r7902;
	// end inline asm
	// begin inline asm
	mov.b32 %r7909, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7910, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7911, %r7773, %r7909;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7914, %r7911, %r7910;
	// end inline asm
	// begin inline asm
	mov.b32 %r7917, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7918, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7919, %r7776, %r7917;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7922, %r7919, %r7918;
	// end inline asm
	// begin inline asm
	mov.b32 %r7925, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7926, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7927, %r7779, %r7925;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7930, %r7927, %r7926;
	// end inline asm
	// begin inline asm
	mov.b32 %r7933, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7934, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7935, %r7782, %r7933;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7938, %r7935, %r7934;
	// end inline asm
	// begin inline asm
	mov.b32 %r7941, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7942, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7943, %r7785, %r7941;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7946, %r7943, %r7942;
	// end inline asm
	// begin inline asm
	mov.b32 %r7949, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7950, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7951, %r7788, %r7949;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7954, %r7951, %r7950;
	// end inline asm
	// begin inline asm
	mov.b32 %r7957, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7958, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7959, %r7791, %r7957;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7962, %r7959, %r7958;
	// end inline asm
	// begin inline asm
	mov.b32 %r7965, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7966, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7967, %r7794, %r7965;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7970, %r7967, %r7966;
	// end inline asm
	// begin inline asm
	mov.b32 %r7973, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7974, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7975, %r7797, %r7973;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7978, %r7975, %r7974;
	// end inline asm
	// begin inline asm
	mov.b32 %r7981, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7982, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7983, %r7800, %r7981;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7986, %r7983, %r7982;
	// end inline asm
	// begin inline asm
	mov.b32 %r7989, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7990, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7991, %r7803, %r7989;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7994, %r7991, %r7990;
	// end inline asm
	// begin inline asm
	mov.b32 %r7997, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7998, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7999, %r7806, %r7997;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8002, %r7999, %r7998;
	// end inline asm
	// begin inline asm
	mov.b32 %r8005, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8006, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8007, %r7809, %r8005;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8010, %r8007, %r8006;
	// end inline asm
	// begin inline asm
	mov.b32 %r8013, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8014, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8015, %r7812, %r8013;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8018, %r8015, %r8014;
	// end inline asm
	// begin inline asm
	mov.b32 %r8021, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8022, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8023, %r7815, %r8021;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8026, %r8023, %r8022;
	// end inline asm
	// begin inline asm
	mov.b32 %r8029, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8030, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8031, %r7818, %r8029;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8034, %r8031, %r8030;
	// end inline asm
	// begin inline asm
	mov.b32 %r8037, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8038, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8039, %r7821, %r8037;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8042, %r8039, %r8038;
	// end inline asm
	// begin inline asm
	mov.b32 %r8045, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8046, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8047, %r7824, %r8045;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8050, %r8047, %r8046;
	// end inline asm
	// begin inline asm
	mov.b32 %r8053, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8054, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8055, %r7827, %r8053;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8058, %r8055, %r8054;
	// end inline asm
	// begin inline asm
	mov.b32 %r8061, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8062, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8063, %r7830, %r8061;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8066, %r8063, %r8062;
	// end inline asm
	// begin inline asm
	mov.b32 %r8069, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8070, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8071, %r7833, %r8069;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8074, %r8071, %r8070;
	// end inline asm
	// begin inline asm
	mov.b32 %r8077, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8078, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8079, %r7836, %r8077;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8082, %r8079, %r8078;
	// end inline asm
	// begin inline asm
	mov.b32 %r8085, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8086, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8087, %r7839, %r8085;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8090, %r8087, %r8086;
	// end inline asm
	// begin inline asm
	mov.b32 %r8093, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8094, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8095, %r7842, %r8093;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8098, %r8095, %r8094;
	// end inline asm
	// begin inline asm
	mov.b32 %r8104, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8102, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8103, %r8104, %r8102;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8106, %r7850, %r8103;
	// end inline asm
	// begin inline asm
	mov.b32 %r8109, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8110, %r8104, %r8109;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8113, %r7858, %r8110;
	// end inline asm
	// begin inline asm
	mov.b32 %r8116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8117, %r8104, %r8116;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8120, %r7866, %r8117;
	// end inline asm
	// begin inline asm
	mov.b32 %r8123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8124, %r8104, %r8123;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8127, %r7874, %r8124;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8130, %r8106, %r8120, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8134, %r8113, %r8127, %r4317;
	// end inline asm
	shl.b32 	%r8141, %r8134, 4;
	// begin inline asm
	lop3.b32 %r8138, %r4323, %r8130, %r8141, 202;
	// end inline asm
	xor.b32  	%r16077, %r8138, -2004318072;
	// begin inline asm
	mov.b32 %r8145, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8144, %r8145, %r8143;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8147, %r7882, %r8144;
	// end inline asm
	// begin inline asm
	mov.b32 %r8150, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8151, %r8145, %r8150;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8154, %r7890, %r8151;
	// end inline asm
	// begin inline asm
	mov.b32 %r8157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8158, %r8145, %r8157;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8161, %r7898, %r8158;
	// end inline asm
	// begin inline asm
	mov.b32 %r8164, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8165, %r8145, %r8164;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8168, %r7906, %r8165;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8171, %r8147, %r8161, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8175, %r8154, %r8168, %r4317;
	// end inline asm
	shl.b32 	%r8182, %r8175, 4;
	// begin inline asm
	lop3.b32 %r8179, %r4323, %r8171, %r8182, 202;
	// end inline asm
	xor.b32  	%r16078, %r8179, -2004318072;
	// begin inline asm
	mov.b32 %r8186, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8185, %r8186, %r8184;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8188, %r7914, %r8185;
	// end inline asm
	// begin inline asm
	mov.b32 %r8191, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8192, %r8186, %r8191;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8195, %r7922, %r8192;
	// end inline asm
	// begin inline asm
	mov.b32 %r8198, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8199, %r8186, %r8198;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8202, %r7930, %r8199;
	// end inline asm
	// begin inline asm
	mov.b32 %r8205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8206, %r8186, %r8205;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8209, %r7938, %r8206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8212, %r8188, %r8202, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8216, %r8195, %r8209, %r4317;
	// end inline asm
	shl.b32 	%r8223, %r8216, 4;
	// begin inline asm
	lop3.b32 %r8220, %r4323, %r8212, %r8223, 202;
	// end inline asm
	xor.b32  	%r16079, %r8220, -2004318072;
	// begin inline asm
	mov.b32 %r8227, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8225, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8226, %r8227, %r8225;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8229, %r7946, %r8226;
	// end inline asm
	// begin inline asm
	mov.b32 %r8232, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8233, %r8227, %r8232;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8236, %r7954, %r8233;
	// end inline asm
	// begin inline asm
	mov.b32 %r8239, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8240, %r8227, %r8239;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8243, %r7962, %r8240;
	// end inline asm
	// begin inline asm
	mov.b32 %r8246, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8247, %r8227, %r8246;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8250, %r7970, %r8247;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8253, %r8229, %r8243, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8257, %r8236, %r8250, %r4317;
	// end inline asm
	shl.b32 	%r8264, %r8257, 4;
	// begin inline asm
	lop3.b32 %r8261, %r4323, %r8253, %r8264, 202;
	// end inline asm
	xor.b32  	%r16080, %r8261, -2004318072;
	// begin inline asm
	mov.b32 %r8268, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8266, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8267, %r8268, %r8266;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8270, %r7978, %r8267;
	// end inline asm
	// begin inline asm
	mov.b32 %r8273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8274, %r8268, %r8273;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8277, %r7986, %r8274;
	// end inline asm
	// begin inline asm
	mov.b32 %r8280, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8281, %r8268, %r8280;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8284, %r7994, %r8281;
	// end inline asm
	// begin inline asm
	mov.b32 %r8287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8288, %r8268, %r8287;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8291, %r8002, %r8288;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8294, %r8270, %r8284, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8298, %r8277, %r8291, %r4317;
	// end inline asm
	shl.b32 	%r8305, %r8298, 4;
	// begin inline asm
	lop3.b32 %r8302, %r4323, %r8294, %r8305, 202;
	// end inline asm
	xor.b32  	%r16081, %r8302, -2004318072;
	// begin inline asm
	mov.b32 %r8309, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8307, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8308, %r8309, %r8307;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8311, %r8010, %r8308;
	// end inline asm
	// begin inline asm
	mov.b32 %r8314, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8315, %r8309, %r8314;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8318, %r8018, %r8315;
	// end inline asm
	// begin inline asm
	mov.b32 %r8321, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8322, %r8309, %r8321;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8325, %r8026, %r8322;
	// end inline asm
	// begin inline asm
	mov.b32 %r8328, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8329, %r8309, %r8328;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8332, %r8034, %r8329;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8335, %r8311, %r8325, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8339, %r8318, %r8332, %r4317;
	// end inline asm
	shl.b32 	%r8346, %r8339, 4;
	// begin inline asm
	lop3.b32 %r8343, %r4323, %r8335, %r8346, 202;
	// end inline asm
	xor.b32  	%r16082, %r8343, -2004318072;
	// begin inline asm
	mov.b32 %r8350, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8348, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8349, %r8350, %r8348;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8352, %r8042, %r8349;
	// end inline asm
	// begin inline asm
	mov.b32 %r8355, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8356, %r8350, %r8355;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8359, %r8050, %r8356;
	// end inline asm
	// begin inline asm
	mov.b32 %r8362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8363, %r8350, %r8362;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8366, %r8058, %r8363;
	// end inline asm
	// begin inline asm
	mov.b32 %r8369, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8370, %r8350, %r8369;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8373, %r8066, %r8370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8376, %r8352, %r8366, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8380, %r8359, %r8373, %r4317;
	// end inline asm
	shl.b32 	%r8387, %r8380, 4;
	// begin inline asm
	lop3.b32 %r8384, %r4323, %r8376, %r8387, 202;
	// end inline asm
	xor.b32  	%r16083, %r8384, -2004318072;
	// begin inline asm
	mov.b32 %r8391, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8390, %r8391, %r8389;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8393, %r8074, %r8390;
	// end inline asm
	// begin inline asm
	mov.b32 %r8396, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8397, %r8391, %r8396;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8400, %r8082, %r8397;
	// end inline asm
	// begin inline asm
	mov.b32 %r8403, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8404, %r8391, %r8403;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8407, %r8090, %r8404;
	// end inline asm
	// begin inline asm
	mov.b32 %r8410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8411, %r8391, %r8410;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8414, %r8098, %r8411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8417, %r8393, %r8407, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8421, %r8400, %r8414, %r4317;
	// end inline asm
	shl.b32 	%r8428, %r8421, 4;
	// begin inline asm
	lop3.b32 %r8425, %r4323, %r8417, %r8428, 202;
	// end inline asm
	xor.b32  	%r16084, %r8425, -2004318072;
	st.shared.u32 	[%rd82], %r16077;
	st.shared.u32 	[%rd83], %r16078;
	st.shared.u32 	[%rd84], %r16079;
	st.shared.u32 	[%rd85], %r16080;
	st.shared.u32 	[%rd86], %r16081;
	st.shared.u32 	[%rd87], %r16082;
	st.shared.u32 	[%rd88], %r16083;
	st.shared.u32 	[%rd89], %r16084;
	ld.shared.u32 	%r16199, [%rd74];
	ld.shared.u32 	%r16200, [%rd75];
	ld.shared.u32 	%r16201, [%rd76];
	ld.shared.u32 	%r16202, [%rd77];
	ld.shared.u32 	%r16211, [%rd78];
	ld.shared.u32 	%r16212, [%rd79];
	ld.shared.u32 	%r16213, [%rd80];
	ld.shared.u32 	%r16214, [%rd81];
	// begin inline asm
	mov.b32 %r8434, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8445, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8433, %r16199, -2004318072;
	// begin inline asm
	lop3.b32 %r8431, %r800, %r8433, %r8434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8436, %r8434, %r8435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8439, %r8431, %r8436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8442, %r811, %r8433, %r8445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8447, %r8445, %r8446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8450, %r8442, %r8447;
	// end inline asm
	shr.u32 	%r8455, %r8433, 8;
	// begin inline asm
	lop3.b32 %r8453, %r800, %r8455, %r8434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8458, %r8434, %r8457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8461, %r8453, %r8458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8464, %r811, %r8455, %r8445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8469, %r8445, %r8468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8472, %r8464, %r8469;
	// end inline asm
	// begin inline asm
	mov.b32 %r8480, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8491, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8479, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r8477, %r800, %r8479, %r8480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8482, %r8480, %r8481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8485, %r8477, %r8482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8488, %r811, %r8479, %r8491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8493, %r8491, %r8492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8496, %r8488, %r8493;
	// end inline asm
	shr.u32 	%r8501, %r8479, 8;
	// begin inline asm
	lop3.b32 %r8499, %r800, %r8501, %r8480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8504, %r8480, %r8503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8507, %r8499, %r8504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8510, %r811, %r8501, %r8491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8515, %r8491, %r8514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8518, %r8510, %r8515;
	// end inline asm
	// begin inline asm
	mov.b32 %r8526, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8537, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8525, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r8523, %r800, %r8525, %r8526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8528, %r8526, %r8527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8531, %r8523, %r8528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8534, %r811, %r8525, %r8537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8539, %r8537, %r8538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8542, %r8534, %r8539;
	// end inline asm
	shr.u32 	%r8547, %r8525, 8;
	// begin inline asm
	lop3.b32 %r8545, %r800, %r8547, %r8526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8550, %r8526, %r8549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8553, %r8545, %r8550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8556, %r811, %r8547, %r8537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8561, %r8537, %r8560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8564, %r8556, %r8561;
	// end inline asm
	// begin inline asm
	mov.b32 %r8572, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8583, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8571, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r8569, %r800, %r8571, %r8572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8574, %r8572, %r8573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8577, %r8569, %r8574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8580, %r811, %r8571, %r8583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8585, %r8583, %r8584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8588, %r8580, %r8585;
	// end inline asm
	shr.u32 	%r8593, %r8571, 8;
	// begin inline asm
	lop3.b32 %r8591, %r800, %r8593, %r8572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8596, %r8572, %r8595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8599, %r8591, %r8596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8602, %r811, %r8593, %r8583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8607, %r8583, %r8606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8610, %r8602, %r8607;
	// end inline asm
	// begin inline asm
	mov.b32 %r8618, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8629, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8617, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r8615, %r800, %r8617, %r8618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8620, %r8618, %r8619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8623, %r8615, %r8620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8626, %r811, %r8617, %r8629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8631, %r8629, %r8630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8634, %r8626, %r8631;
	// end inline asm
	shr.u32 	%r8639, %r8617, 8;
	// begin inline asm
	lop3.b32 %r8637, %r800, %r8639, %r8618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8641, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8642, %r8618, %r8641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8645, %r8637, %r8642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8648, %r811, %r8639, %r8629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8653, %r8629, %r8652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8656, %r8648, %r8653;
	// end inline asm
	// begin inline asm
	mov.b32 %r8664, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8675, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8663, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r8661, %r800, %r8663, %r8664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8666, %r8664, %r8665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8669, %r8661, %r8666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8672, %r811, %r8663, %r8675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8676, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8677, %r8675, %r8676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8680, %r8672, %r8677;
	// end inline asm
	shr.u32 	%r8685, %r8663, 8;
	// begin inline asm
	lop3.b32 %r8683, %r800, %r8685, %r8664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8687, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8688, %r8664, %r8687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8691, %r8683, %r8688;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8694, %r811, %r8685, %r8675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8698, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8699, %r8675, %r8698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8702, %r8694, %r8699;
	// end inline asm
	// begin inline asm
	mov.b32 %r8710, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8721, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8709, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r8707, %r800, %r8709, %r8710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8711, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8712, %r8710, %r8711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8715, %r8707, %r8712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8718, %r811, %r8709, %r8721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8722, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8723, %r8721, %r8722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8726, %r8718, %r8723;
	// end inline asm
	shr.u32 	%r8731, %r8709, 8;
	// begin inline asm
	lop3.b32 %r8729, %r800, %r8731, %r8710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8733, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8734, %r8710, %r8733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8737, %r8729, %r8734;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8740, %r811, %r8731, %r8721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8744, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8745, %r8721, %r8744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8748, %r8740, %r8745;
	// end inline asm
	// begin inline asm
	mov.b32 %r8756, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8767, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8755, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r8753, %r800, %r8755, %r8756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8757, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8758, %r8756, %r8757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8761, %r8753, %r8758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8764, %r811, %r8755, %r8767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8768, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8769, %r8767, %r8768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8772, %r8764, %r8769;
	// end inline asm
	shr.u32 	%r8777, %r8755, 8;
	// begin inline asm
	lop3.b32 %r8775, %r800, %r8777, %r8756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8779, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8780, %r8756, %r8779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8783, %r8775, %r8780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8786, %r811, %r8777, %r8767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8790, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8791, %r8767, %r8790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8794, %r8786, %r8791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8797, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8799, %r8797, %r8439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8802, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8804, %r8802, %r8450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8807, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8809, %r8807, %r8461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8812, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8814, %r8812, %r8472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8817, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8819, %r8817, %r8485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8822, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8824, %r8822, %r8496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8827, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8829, %r8827, %r8507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8832, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8834, %r8832, %r8518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8837, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8839, %r8837, %r8531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8842, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8844, %r8842, %r8542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8847, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8849, %r8847, %r8553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8852, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8854, %r8852, %r8564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8857, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8859, %r8857, %r8577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8862, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8864, %r8862, %r8588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8867, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8869, %r8867, %r8599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8872, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8874, %r8872, %r8610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8877, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8879, %r8877, %r8623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8882, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8884, %r8882, %r8634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8887, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8889, %r8887, %r8645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8892, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8894, %r8892, %r8656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8897, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8899, %r8897, %r8669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8902, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8904, %r8902, %r8680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8907, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8909, %r8907, %r8691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8912, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8914, %r8912, %r8702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8917, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8919, %r8917, %r8715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8922, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8924, %r8922, %r8726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8927, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8929, %r8927, %r8737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8932, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8934, %r8932, %r8748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8937, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8939, %r8937, %r8761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8942, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8944, %r8942, %r8772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8947, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8949, %r8947, %r8783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8952, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8954, %r8952, %r8794;
	// end inline asm
	// begin inline asm
	mov.b32 %r8962, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8973, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8959, %r800, %r2385, %r8962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8963, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8964, %r8962, %r8963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8967, %r8959, %r8964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8970, %r811, %r2385, %r8973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8975, %r8973, %r8974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8978, %r8970, %r8975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8981, %r800, %r2407, %r8962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8986, %r8962, %r8985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8989, %r8981, %r8986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8992, %r811, %r2407, %r8973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8997, %r8973, %r8996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9000, %r8992, %r8997;
	// end inline asm
	// begin inline asm
	mov.b32 %r9008, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9019, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9005, %r800, %r2431, %r9008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9009, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9010, %r9008, %r9009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9013, %r9005, %r9010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9016, %r811, %r2431, %r9019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9021, %r9019, %r9020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9024, %r9016, %r9021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9027, %r800, %r2453, %r9008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9032, %r9008, %r9031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9035, %r9027, %r9032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9038, %r811, %r2453, %r9019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9043, %r9019, %r9042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9046, %r9038, %r9043;
	// end inline asm
	// begin inline asm
	mov.b32 %r9054, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9065, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9051, %r800, %r2477, %r9054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9055, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9056, %r9054, %r9055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9059, %r9051, %r9056;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9062, %r811, %r2477, %r9065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9067, %r9065, %r9066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9070, %r9062, %r9067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9073, %r800, %r2499, %r9054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9078, %r9054, %r9077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9081, %r9073, %r9078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9084, %r811, %r2499, %r9065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9089, %r9065, %r9088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9092, %r9084, %r9089;
	// end inline asm
	// begin inline asm
	mov.b32 %r9100, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9111, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9097, %r800, %r2523, %r9100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9102, %r9100, %r9101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9105, %r9097, %r9102;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9108, %r811, %r2523, %r9111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9113, %r9111, %r9112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9116, %r9108, %r9113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9119, %r800, %r2545, %r9100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9124, %r9100, %r9123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9127, %r9119, %r9124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9130, %r811, %r2545, %r9111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9135, %r9111, %r9134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9138, %r9130, %r9135;
	// end inline asm
	// begin inline asm
	mov.b32 %r9146, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9157, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9143, %r800, %r2569, %r9146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9148, %r9146, %r9147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9151, %r9143, %r9148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9154, %r811, %r2569, %r9157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9159, %r9157, %r9158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9162, %r9154, %r9159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9165, %r800, %r2591, %r9146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9170, %r9146, %r9169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9173, %r9165, %r9170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9176, %r811, %r2591, %r9157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9181, %r9157, %r9180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9184, %r9176, %r9181;
	// end inline asm
	// begin inline asm
	mov.b32 %r9192, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9203, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9189, %r800, %r2615, %r9192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9193, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9194, %r9192, %r9193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9197, %r9189, %r9194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9200, %r811, %r2615, %r9203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9205, %r9203, %r9204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9208, %r9200, %r9205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9211, %r800, %r2637, %r9192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9215, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9216, %r9192, %r9215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9219, %r9211, %r9216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9222, %r811, %r2637, %r9203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9227, %r9203, %r9226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9230, %r9222, %r9227;
	// end inline asm
	// begin inline asm
	mov.b32 %r9238, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9249, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9235, %r800, %r2661, %r9238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9239, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9240, %r9238, %r9239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9243, %r9235, %r9240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9246, %r811, %r2661, %r9249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9251, %r9249, %r9250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9254, %r9246, %r9251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9257, %r800, %r2683, %r9238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9261, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9262, %r9238, %r9261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9265, %r9257, %r9262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9268, %r811, %r2683, %r9249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9272, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9273, %r9249, %r9272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9276, %r9268, %r9273;
	// end inline asm
	// begin inline asm
	mov.b32 %r9284, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9295, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9281, %r800, %r2707, %r9284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9286, %r9284, %r9285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9289, %r9281, %r9286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9292, %r811, %r2707, %r9295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9296, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9297, %r9295, %r9296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9300, %r9292, %r9297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9303, %r800, %r2729, %r9284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9307, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9308, %r9284, %r9307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9311, %r9303, %r9308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9314, %r811, %r2729, %r9295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9318, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9319, %r9295, %r9318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9322, %r9314, %r9319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9325, %r272, %r8967, %r8799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9329, %r272, %r8978, %r8804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9333, %r272, %r8989, %r8809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9337, %r272, %r9000, %r8814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9341, %r272, %r9013, %r8819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9345, %r272, %r9024, %r8824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9349, %r272, %r9035, %r8829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9353, %r272, %r9046, %r8834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9357, %r272, %r9059, %r8839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9361, %r272, %r9070, %r8844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9365, %r272, %r9081, %r8849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9369, %r272, %r9092, %r8854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9373, %r272, %r9105, %r8859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9377, %r272, %r9116, %r8864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9381, %r272, %r9127, %r8869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9385, %r272, %r9138, %r8874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9389, %r290, %r9151, %r8879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9393, %r290, %r9162, %r8884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9397, %r290, %r9173, %r8889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9401, %r290, %r9184, %r8894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9405, %r290, %r9197, %r8899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9409, %r290, %r9208, %r8904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9413, %r290, %r9219, %r8909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9417, %r290, %r9230, %r8914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9421, %r290, %r9243, %r8919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9425, %r290, %r9254, %r8924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9429, %r290, %r9265, %r8929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9433, %r290, %r9276, %r8934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9437, %r290, %r9289, %r8939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9441, %r290, %r9300, %r8944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9445, %r290, %r9311, %r8949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9449, %r290, %r9322, %r8954;
	// end inline asm
	// begin inline asm
	mov.b32 %r9458, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9469, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9455, %r800, %r801, %r9458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9460, %r9458, %r9459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9463, %r9455, %r9460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9466, %r811, %r801, %r9469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9471, %r9469, %r9470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9474, %r9466, %r9471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9477, %r800, %r823, %r9458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9482, %r9458, %r9481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9485, %r9477, %r9482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9488, %r811, %r823, %r9469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9493, %r9469, %r9492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9496, %r9488, %r9493;
	// end inline asm
	// begin inline asm
	mov.b32 %r9504, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9515, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9501, %r800, %r847, %r9504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9506, %r9504, %r9505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9509, %r9501, %r9506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9512, %r811, %r847, %r9515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9517, %r9515, %r9516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9520, %r9512, %r9517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9523, %r800, %r869, %r9504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9528, %r9504, %r9527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9531, %r9523, %r9528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9534, %r811, %r869, %r9515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9539, %r9515, %r9538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9542, %r9534, %r9539;
	// end inline asm
	// begin inline asm
	mov.b32 %r9550, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9561, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9547, %r800, %r893, %r9550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9552, %r9550, %r9551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9555, %r9547, %r9552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9558, %r811, %r893, %r9561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9563, %r9561, %r9562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9566, %r9558, %r9563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9569, %r800, %r915, %r9550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9574, %r9550, %r9573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9577, %r9569, %r9574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9580, %r811, %r915, %r9561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9585, %r9561, %r9584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9588, %r9580, %r9585;
	// end inline asm
	// begin inline asm
	mov.b32 %r9596, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9607, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9593, %r800, %r939, %r9596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9598, %r9596, %r9597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9601, %r9593, %r9598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9604, %r811, %r939, %r9607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9609, %r9607, %r9608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9612, %r9604, %r9609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9615, %r800, %r961, %r9596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9620, %r9596, %r9619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9623, %r9615, %r9620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9626, %r811, %r961, %r9607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9631, %r9607, %r9630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9634, %r9626, %r9631;
	// end inline asm
	// begin inline asm
	mov.b32 %r9642, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9653, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9639, %r800, %r985, %r9642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9644, %r9642, %r9643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9647, %r9639, %r9644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9650, %r811, %r985, %r9653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9655, %r9653, %r9654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9658, %r9650, %r9655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9661, %r800, %r1007, %r9642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9666, %r9642, %r9665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9669, %r9661, %r9666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9672, %r811, %r1007, %r9653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9676, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9677, %r9653, %r9676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9680, %r9672, %r9677;
	// end inline asm
	// begin inline asm
	mov.b32 %r9688, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9699, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9685, %r800, %r1031, %r9688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9690, %r9688, %r9689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9693, %r9685, %r9690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9696, %r811, %r1031, %r9699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9701, %r9699, %r9700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9704, %r9696, %r9701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9707, %r800, %r1053, %r9688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9711, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9712, %r9688, %r9711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9715, %r9707, %r9712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9718, %r811, %r1053, %r9699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9722, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9723, %r9699, %r9722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9726, %r9718, %r9723;
	// end inline asm
	// begin inline asm
	mov.b32 %r9734, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9745, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9731, %r800, %r1077, %r9734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9736, %r9734, %r9735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9739, %r9731, %r9736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9742, %r811, %r1077, %r9745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9747, %r9745, %r9746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9750, %r9742, %r9747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9753, %r800, %r1099, %r9734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9757, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9758, %r9734, %r9757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9761, %r9753, %r9758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9764, %r811, %r1099, %r9745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9768, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9769, %r9745, %r9768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9772, %r9764, %r9769;
	// end inline asm
	// begin inline asm
	mov.b32 %r9780, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9791, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9777, %r800, %r1123, %r9780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9782, %r9780, %r9781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9785, %r9777, %r9782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9788, %r811, %r1123, %r9791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9792, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9793, %r9791, %r9792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9796, %r9788, %r9793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9799, %r800, %r1145, %r9780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9803, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9804, %r9780, %r9803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9807, %r9799, %r9804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9810, %r811, %r1145, %r9791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9815, %r9791, %r9814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9818, %r9810, %r9815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9821, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9823, %r9821, %r9463, %r9325;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9827, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9829, %r9827, %r9474, %r9329;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9833, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9835, %r9833, %r9485, %r9333;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9839, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9841, %r9839, %r9496, %r9337;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9845, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9847, %r9845, %r9509, %r9341;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9851, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9853, %r9851, %r9520, %r9345;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9857, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9859, %r9857, %r9531, %r9349;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9863, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9865, %r9863, %r9542, %r9353;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9869, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9871, %r9869, %r9555, %r9357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9875, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9877, %r9875, %r9566, %r9361;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9881, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9883, %r9881, %r9577, %r9365;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9887, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9889, %r9887, %r9588, %r9369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9893, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9895, %r9893, %r9601, %r9373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9899, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9901, %r9899, %r9612, %r9377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9905, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9907, %r9905, %r9623, %r9381;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9911, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9913, %r9911, %r9634, %r9385;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9917, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9919, %r9917, %r9647, %r9389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9923, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9925, %r9923, %r9658, %r9393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9929, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9931, %r9929, %r9669, %r9397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9935, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9937, %r9935, %r9680, %r9401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9941, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9943, %r9941, %r9693, %r9405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9947, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9949, %r9947, %r9704, %r9409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9953, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9955, %r9953, %r9715, %r9413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9959, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9961, %r9959, %r9726, %r9417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9965, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9967, %r9965, %r9739, %r9421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9971, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9973, %r9971, %r9750, %r9425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9977, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9979, %r9977, %r9761, %r9429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9983, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9985, %r9983, %r9772, %r9433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9989, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9991, %r9989, %r9785, %r9437;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9995, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9997, %r9995, %r9796, %r9441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10001, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10003, %r10001, %r9807, %r9445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10007, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10009, %r10007, %r9818, %r9449;
	// end inline asm
	// begin inline asm
	mov.b32 %r10018, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10029, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10015, %r800, %r4617, %r10018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10020, %r10018, %r10019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10023, %r10015, %r10020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10026, %r811, %r4617, %r10029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10031, %r10029, %r10030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10034, %r10026, %r10031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10037, %r800, %r4639, %r10018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10041, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10042, %r10018, %r10041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10045, %r10037, %r10042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10048, %r811, %r4639, %r10029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10052, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10053, %r10029, %r10052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10056, %r10048, %r10053;
	// end inline asm
	// begin inline asm
	mov.b32 %r10064, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10075, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10061, %r800, %r4663, %r10064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10066, %r10064, %r10065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10069, %r10061, %r10066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10072, %r811, %r4663, %r10075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10077, %r10075, %r10076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10080, %r10072, %r10077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10083, %r800, %r4685, %r10064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10088, %r10064, %r10087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10091, %r10083, %r10088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10094, %r811, %r4685, %r10075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10098, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10099, %r10075, %r10098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10102, %r10094, %r10099;
	// end inline asm
	// begin inline asm
	mov.b32 %r10110, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10121, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10107, %r800, %r4709, %r10110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10112, %r10110, %r10111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10115, %r10107, %r10112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10118, %r811, %r4709, %r10121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10123, %r10121, %r10122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10126, %r10118, %r10123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10129, %r800, %r4731, %r10110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10133, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10134, %r10110, %r10133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10137, %r10129, %r10134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10140, %r811, %r4731, %r10121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10145, %r10121, %r10144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10148, %r10140, %r10145;
	// end inline asm
	// begin inline asm
	mov.b32 %r10156, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10167, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10153, %r800, %r4755, %r10156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10158, %r10156, %r10157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10161, %r10153, %r10158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10164, %r811, %r4755, %r10167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10168, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10169, %r10167, %r10168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10172, %r10164, %r10169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10175, %r800, %r4777, %r10156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10180, %r10156, %r10179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10183, %r10175, %r10180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10186, %r811, %r4777, %r10167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10190, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10191, %r10167, %r10190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10194, %r10186, %r10191;
	// end inline asm
	// begin inline asm
	mov.b32 %r10202, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10213, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10199, %r800, %r4801, %r10202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10204, %r10202, %r10203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10207, %r10199, %r10204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10210, %r811, %r4801, %r10213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10214, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10215, %r10213, %r10214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10218, %r10210, %r10215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10221, %r800, %r4823, %r10202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10225, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10226, %r10202, %r10225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10229, %r10221, %r10226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10232, %r811, %r4823, %r10213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10236, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10237, %r10213, %r10236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10240, %r10232, %r10237;
	// end inline asm
	// begin inline asm
	mov.b32 %r10248, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10259, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10245, %r800, %r4847, %r10248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10250, %r10248, %r10249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10253, %r10245, %r10250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10256, %r811, %r4847, %r10259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10260, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10261, %r10259, %r10260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10264, %r10256, %r10261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10267, %r800, %r4869, %r10248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10272, %r10248, %r10271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10275, %r10267, %r10272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10278, %r811, %r4869, %r10259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10282, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10283, %r10259, %r10282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10286, %r10278, %r10283;
	// end inline asm
	// begin inline asm
	mov.b32 %r10294, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10305, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10291, %r800, %r4893, %r10294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10296, %r10294, %r10295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10299, %r10291, %r10296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10302, %r811, %r4893, %r10305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10307, %r10305, %r10306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10310, %r10302, %r10307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10313, %r800, %r4915, %r10294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10317, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10318, %r10294, %r10317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10321, %r10313, %r10318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10324, %r811, %r4915, %r10305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10328, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10329, %r10305, %r10328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10332, %r10324, %r10329;
	// end inline asm
	// begin inline asm
	mov.b32 %r10340, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10351, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10337, %r800, %r4939, %r10340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10342, %r10340, %r10341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10345, %r10337, %r10342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10348, %r811, %r4939, %r10351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10353, %r10351, %r10352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10356, %r10348, %r10353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10359, %r800, %r4961, %r10340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10364, %r10340, %r10363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10367, %r10359, %r10364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10370, %r811, %r4961, %r10351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10375, %r10351, %r10374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10378, %r10370, %r10375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10516, %r344, %r10023, %r9823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10513, %r344, %r10034, %r9829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10525, %r344, %r10045, %r9835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10522, %r344, %r10056, %r9841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10534, %r344, %r10069, %r9847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10531, %r344, %r10080, %r9853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10543, %r344, %r10091, %r9859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10540, %r344, %r10102, %r9865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10552, %r344, %r10115, %r9871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10549, %r344, %r10126, %r9877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10561, %r344, %r10137, %r9883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10558, %r344, %r10148, %r9889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10570, %r344, %r10161, %r9895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10567, %r344, %r10172, %r9901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10579, %r344, %r10183, %r9907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10576, %r344, %r10194, %r9913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10588, %r362, %r10207, %r9919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10585, %r362, %r10218, %r9925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10597, %r362, %r10229, %r9931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10594, %r362, %r10240, %r9937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10606, %r362, %r10253, %r9943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10603, %r362, %r10264, %r9949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10615, %r362, %r10275, %r9955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10612, %r362, %r10286, %r9961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10624, %r362, %r10299, %r9967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10621, %r362, %r10310, %r9973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10633, %r362, %r10321, %r9979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10630, %r362, %r10332, %r9985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10642, %r362, %r10345, %r9991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10639, %r362, %r10356, %r9997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10651, %r362, %r10367, %r10003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10648, %r362, %r10378, %r10009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10509, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10511, %r10509, %r10513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10514, %r426, %r10516, %r10511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10518, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10520, %r10518, %r10522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10523, %r426, %r10525, %r10520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10527, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10529, %r10527, %r10531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10532, %r426, %r10534, %r10529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10536, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10538, %r10536, %r10540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10541, %r426, %r10543, %r10538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10545, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10547, %r10545, %r10549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10550, %r426, %r10552, %r10547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10554, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10556, %r10554, %r10558;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10559, %r426, %r10561, %r10556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10563, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10565, %r10563, %r10567;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10568, %r426, %r10570, %r10565;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10572, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10574, %r10572, %r10576;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10577, %r426, %r10579, %r10574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10581, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10583, %r10581, %r10585;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10586, %r429, %r10588, %r10583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10590, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10592, %r10590, %r10594;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10595, %r429, %r10597, %r10592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10599, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10601, %r10599, %r10603;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10604, %r429, %r10606, %r10601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10608, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10610, %r10608, %r10612;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10613, %r429, %r10615, %r10610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10617, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10619, %r10617, %r10621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10622, %r429, %r10624, %r10619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10626, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10628, %r10626, %r10630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10631, %r429, %r10633, %r10628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10635, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10637, %r10635, %r10639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10640, %r429, %r10642, %r10637;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10644, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10646, %r10644, %r10648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10649, %r429, %r10651, %r10646;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10653, %r432, %r10516;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10656, %r426, %r10513, %r10653;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10660, %r432, %r10525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10663, %r426, %r10522, %r10660;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10667, %r432, %r10534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10670, %r426, %r10531, %r10667;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10674, %r432, %r10543;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10677, %r426, %r10540, %r10674;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10681, %r432, %r10552;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10684, %r426, %r10549, %r10681;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10688, %r432, %r10561;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10691, %r426, %r10558, %r10688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10695, %r432, %r10570;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10698, %r426, %r10567, %r10695;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10702, %r432, %r10579;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10705, %r426, %r10576, %r10702;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10709, %r435, %r10588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10712, %r429, %r10585, %r10709;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10716, %r435, %r10597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10719, %r429, %r10594, %r10716;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10723, %r435, %r10606;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10726, %r429, %r10603, %r10723;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10730, %r435, %r10615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10733, %r429, %r10612, %r10730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10737, %r435, %r10624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10740, %r429, %r10621, %r10737;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10744, %r435, %r10633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10747, %r429, %r10630, %r10744;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10751, %r435, %r10642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10754, %r429, %r10639, %r10751;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10758, %r435, %r10651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10761, %r429, %r10648, %r10758;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10932, %r10929}, {%r474, %r480, %r477, %r483}, {%r10514, %r10656}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10941, %r10938}, {%r474, %r480, %r477, %r483}, {%r10523, %r10663}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10950, %r10947}, {%r474, %r480, %r477, %r483}, {%r10532, %r10670}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10959, %r10956}, {%r474, %r480, %r477, %r483}, {%r10541, %r10677}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10968, %r10965}, {%r474, %r480, %r477, %r483}, {%r10550, %r10684}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10977, %r10974}, {%r474, %r480, %r477, %r483}, {%r10559, %r10691}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10986, %r10983}, {%r474, %r480, %r477, %r483}, {%r10568, %r10698}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10995, %r10992}, {%r474, %r480, %r477, %r483}, {%r10577, %r10705}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11004, %r11001}, {%r474, %r480, %r477, %r483}, {%r10586, %r10712}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11013, %r11010}, {%r474, %r480, %r477, %r483}, {%r10595, %r10719}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11022, %r11019}, {%r474, %r480, %r477, %r483}, {%r10604, %r10726}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11031, %r11028}, {%r474, %r480, %r477, %r483}, {%r10613, %r10733}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11040, %r11037}, {%r474, %r480, %r477, %r483}, {%r10622, %r10740}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11049, %r11046}, {%r474, %r480, %r477, %r483}, {%r10631, %r10747}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11058, %r11055}, {%r474, %r480, %r477, %r483}, {%r10640, %r10754}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11067, %r11064}, {%r474, %r480, %r477, %r483}, {%r10649, %r10761}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10925, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10927, %r10925, %r10929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10930, %r521, %r10932, %r10927;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10934, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10936, %r10934, %r10938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10939, %r521, %r10941, %r10936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10943, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10945, %r10943, %r10947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10948, %r521, %r10950, %r10945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10952, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10954, %r10952, %r10956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10957, %r521, %r10959, %r10954;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10961, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10963, %r10961, %r10965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10966, %r521, %r10968, %r10963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10970, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10972, %r10970, %r10974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10975, %r521, %r10977, %r10972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10979, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10981, %r10979, %r10983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10984, %r521, %r10986, %r10981;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10988, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10990, %r10988, %r10992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10993, %r521, %r10995, %r10990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10997, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10999, %r10997, %r11001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11002, %r521, %r11004, %r10999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11006, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11008, %r11006, %r11010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11011, %r521, %r11013, %r11008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11015, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11017, %r11015, %r11019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11020, %r521, %r11022, %r11017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11024, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11026, %r11024, %r11028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11029, %r521, %r11031, %r11026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11033, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11035, %r11033, %r11037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11038, %r521, %r11040, %r11035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11042, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11044, %r11042, %r11046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11047, %r521, %r11049, %r11044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11051, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11053, %r11051, %r11055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11056, %r521, %r11058, %r11053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11060, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11062, %r11060, %r11064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11065, %r521, %r11067, %r11062;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11069, %r524, %r10932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11072, %r521, %r10929, %r11069;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11076, %r524, %r10941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11079, %r521, %r10938, %r11076;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11083, %r524, %r10950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11086, %r521, %r10947, %r11083;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11090, %r524, %r10959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11093, %r521, %r10956, %r11090;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11097, %r524, %r10968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11100, %r521, %r10965, %r11097;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11104, %r524, %r10977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11107, %r521, %r10974, %r11104;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11111, %r524, %r10986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11114, %r521, %r10983, %r11111;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11118, %r524, %r10995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11121, %r521, %r10992, %r11118;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11125, %r524, %r11004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11128, %r521, %r11001, %r11125;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11132, %r524, %r11013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11135, %r521, %r11010, %r11132;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11139, %r524, %r11022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11142, %r521, %r11019, %r11139;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11146, %r524, %r11031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11149, %r521, %r11028, %r11146;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11153, %r524, %r11040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11156, %r521, %r11037, %r11153;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11160, %r524, %r11049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11163, %r521, %r11046, %r11160;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11167, %r524, %r11058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11170, %r521, %r11055, %r11167;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11174, %r524, %r11067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11177, %r521, %r11064, %r11174;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11470, %r11473}, {%r564, %r570, %r567, %r573}, {%r10930, %r11072}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11476, %r11479}, {%r564, %r570, %r567, %r573}, {%r10939, %r11079}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11482, %r11485}, {%r564, %r570, %r567, %r573}, {%r10948, %r11086}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11488, %r11491}, {%r564, %r570, %r567, %r573}, {%r10957, %r11093}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11494, %r11497}, {%r564, %r570, %r567, %r573}, {%r10966, %r11100}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11500, %r11503}, {%r564, %r570, %r567, %r573}, {%r10975, %r11107}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11506, %r11509}, {%r564, %r570, %r567, %r573}, {%r10984, %r11114}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11512, %r11515}, {%r564, %r570, %r567, %r573}, {%r10993, %r11121}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11471, %r11474}, {%r564, %r570, %r567, %r573}, {%r11002, %r11128}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11477, %r11480}, {%r564, %r570, %r567, %r573}, {%r11011, %r11135}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11483, %r11486}, {%r564, %r570, %r567, %r573}, {%r11020, %r11142}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11489, %r11492}, {%r564, %r570, %r567, %r573}, {%r11029, %r11149}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11495, %r11498}, {%r564, %r570, %r567, %r573}, {%r11038, %r11156}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11501, %r11504}, {%r564, %r570, %r567, %r573}, {%r11047, %r11163}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11507, %r11510}, {%r564, %r570, %r567, %r573}, {%r11056, %r11170}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11513, %r11516}, {%r564, %r570, %r567, %r573}, {%r11065, %r11177}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11469, %r11470, %r11471;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11472, %r11473, %r11474;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11475, %r11476, %r11477;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11478, %r11479, %r11480;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11481, %r11482, %r11483;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11484, %r11485, %r11486;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11487, %r11488, %r11489;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11490, %r11491, %r11492;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11493, %r11494, %r11495;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11496, %r11497, %r11498;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11499, %r11500, %r11501;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11502, %r11503, %r11504;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11505, %r11506, %r11507;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11508, %r11509, %r11510;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11511, %r11512, %r11513;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11514, %r11515, %r11516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11517, %r11470, %r11471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11520, %r11473, %r11474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11523, %r11476, %r11477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11526, %r11479, %r11480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11529, %r11482, %r11483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11532, %r11485, %r11486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11535, %r11488, %r11489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11538, %r11491, %r11492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11541, %r11494, %r11495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11544, %r11497, %r11498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11547, %r11500, %r11501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11550, %r11503, %r11504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11553, %r11506, %r11507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11556, %r11509, %r11510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11559, %r11512, %r11513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11562, %r11515, %r11516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11565, %r14, %r11469;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11568, %r14, %r11472;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11571, %r14, %r11475;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11574, %r14, %r11478;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11577, %r14, %r11481;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11580, %r14, %r11484;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11583, %r14, %r11487;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11586, %r14, %r11490;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11589, %r14, %r11493;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11592, %r14, %r11496;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11595, %r14, %r11499;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11598, %r14, %r11502;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11601, %r14, %r11505;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11604, %r14, %r11508;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11607, %r14, %r11511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11610, %r14, %r11514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11613, %r15, %r11517;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11616, %r15, %r11520;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11619, %r15, %r11523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11622, %r15, %r11526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11625, %r15, %r11529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11628, %r15, %r11532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11631, %r15, %r11535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11634, %r15, %r11538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11637, %r15, %r11541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11640, %r15, %r11544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11643, %r15, %r11547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11646, %r15, %r11550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11649, %r15, %r11553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11652, %r15, %r11556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11655, %r15, %r11559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11658, %r15, %r11562;
	// end inline asm
	// begin inline asm
	mov.b32 %r11661, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11662, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11663, %r11565, %r11661;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11666, %r11663, %r11662;
	// end inline asm
	// begin inline asm
	mov.b32 %r11669, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11670, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11671, %r11568, %r11669;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11674, %r11671, %r11670;
	// end inline asm
	// begin inline asm
	mov.b32 %r11677, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11678, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11679, %r11571, %r11677;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11682, %r11679, %r11678;
	// end inline asm
	// begin inline asm
	mov.b32 %r11685, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11686, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11687, %r11574, %r11685;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11690, %r11687, %r11686;
	// end inline asm
	// begin inline asm
	mov.b32 %r11693, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11694, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11695, %r11577, %r11693;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11698, %r11695, %r11694;
	// end inline asm
	// begin inline asm
	mov.b32 %r11701, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11702, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11703, %r11580, %r11701;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11706, %r11703, %r11702;
	// end inline asm
	// begin inline asm
	mov.b32 %r11709, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11710, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11711, %r11583, %r11709;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11714, %r11711, %r11710;
	// end inline asm
	// begin inline asm
	mov.b32 %r11717, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11718, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11719, %r11586, %r11717;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11722, %r11719, %r11718;
	// end inline asm
	// begin inline asm
	mov.b32 %r11725, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11726, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11727, %r11589, %r11725;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11730, %r11727, %r11726;
	// end inline asm
	// begin inline asm
	mov.b32 %r11733, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11734, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11735, %r11592, %r11733;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11738, %r11735, %r11734;
	// end inline asm
	// begin inline asm
	mov.b32 %r11741, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11742, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11743, %r11595, %r11741;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11746, %r11743, %r11742;
	// end inline asm
	// begin inline asm
	mov.b32 %r11749, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11750, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11751, %r11598, %r11749;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11754, %r11751, %r11750;
	// end inline asm
	// begin inline asm
	mov.b32 %r11757, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11758, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11759, %r11601, %r11757;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11762, %r11759, %r11758;
	// end inline asm
	// begin inline asm
	mov.b32 %r11765, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11766, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11767, %r11604, %r11765;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11770, %r11767, %r11766;
	// end inline asm
	// begin inline asm
	mov.b32 %r11773, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11774, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11775, %r11607, %r11773;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11778, %r11775, %r11774;
	// end inline asm
	// begin inline asm
	mov.b32 %r11781, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11782, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11783, %r11610, %r11781;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11786, %r11783, %r11782;
	// end inline asm
	// begin inline asm
	mov.b32 %r11789, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11790, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11791, %r11613, %r11789;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11794, %r11791, %r11790;
	// end inline asm
	// begin inline asm
	mov.b32 %r11797, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11798, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11799, %r11616, %r11797;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11802, %r11799, %r11798;
	// end inline asm
	// begin inline asm
	mov.b32 %r11805, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11806, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11807, %r11619, %r11805;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11810, %r11807, %r11806;
	// end inline asm
	// begin inline asm
	mov.b32 %r11813, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11814, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11815, %r11622, %r11813;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11818, %r11815, %r11814;
	// end inline asm
	// begin inline asm
	mov.b32 %r11821, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11822, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11823, %r11625, %r11821;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11826, %r11823, %r11822;
	// end inline asm
	// begin inline asm
	mov.b32 %r11829, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11830, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11831, %r11628, %r11829;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11834, %r11831, %r11830;
	// end inline asm
	// begin inline asm
	mov.b32 %r11837, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11838, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11839, %r11631, %r11837;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11842, %r11839, %r11838;
	// end inline asm
	// begin inline asm
	mov.b32 %r11845, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11846, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11847, %r11634, %r11845;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11850, %r11847, %r11846;
	// end inline asm
	// begin inline asm
	mov.b32 %r11853, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11854, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11855, %r11637, %r11853;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11858, %r11855, %r11854;
	// end inline asm
	// begin inline asm
	mov.b32 %r11861, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11862, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11863, %r11640, %r11861;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11866, %r11863, %r11862;
	// end inline asm
	// begin inline asm
	mov.b32 %r11869, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11870, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11871, %r11643, %r11869;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11874, %r11871, %r11870;
	// end inline asm
	// begin inline asm
	mov.b32 %r11877, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11878, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11879, %r11646, %r11877;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11882, %r11879, %r11878;
	// end inline asm
	// begin inline asm
	mov.b32 %r11885, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11886, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11887, %r11649, %r11885;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11890, %r11887, %r11886;
	// end inline asm
	// begin inline asm
	mov.b32 %r11893, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11894, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11895, %r11652, %r11893;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11898, %r11895, %r11894;
	// end inline asm
	// begin inline asm
	mov.b32 %r11901, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11902, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11903, %r11655, %r11901;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11906, %r11903, %r11902;
	// end inline asm
	// begin inline asm
	mov.b32 %r11909, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11910, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11911, %r11658, %r11909;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11914, %r11911, %r11910;
	// end inline asm
	// begin inline asm
	mov.b32 %r11920, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11918, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11919, %r11920, %r11918;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11922, %r11666, %r11919;
	// end inline asm
	// begin inline asm
	mov.b32 %r11925, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11926, %r11920, %r11925;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11929, %r11674, %r11926;
	// end inline asm
	// begin inline asm
	mov.b32 %r11932, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11933, %r11920, %r11932;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11936, %r11682, %r11933;
	// end inline asm
	// begin inline asm
	mov.b32 %r11939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11940, %r11920, %r11939;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11943, %r11690, %r11940;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11946, %r11922, %r11936, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11950, %r11929, %r11943, %r4317;
	// end inline asm
	shl.b32 	%r11957, %r11950, 4;
	// begin inline asm
	lop3.b32 %r11954, %r4323, %r11946, %r11957, 202;
	// end inline asm
	xor.b32  	%r16085, %r11954, -2004318072;
	// begin inline asm
	mov.b32 %r11961, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11960, %r11961, %r11959;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11963, %r11698, %r11960;
	// end inline asm
	// begin inline asm
	mov.b32 %r11966, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11967, %r11961, %r11966;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11970, %r11706, %r11967;
	// end inline asm
	// begin inline asm
	mov.b32 %r11973, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11974, %r11961, %r11973;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11977, %r11714, %r11974;
	// end inline asm
	// begin inline asm
	mov.b32 %r11980, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11981, %r11961, %r11980;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11984, %r11722, %r11981;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11987, %r11963, %r11977, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11991, %r11970, %r11984, %r4317;
	// end inline asm
	shl.b32 	%r11998, %r11991, 4;
	// begin inline asm
	lop3.b32 %r11995, %r4323, %r11987, %r11998, 202;
	// end inline asm
	xor.b32  	%r16086, %r11995, -2004318072;
	// begin inline asm
	mov.b32 %r12002, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12001, %r12002, %r12000;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12004, %r11730, %r12001;
	// end inline asm
	// begin inline asm
	mov.b32 %r12007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12008, %r12002, %r12007;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12011, %r11738, %r12008;
	// end inline asm
	// begin inline asm
	mov.b32 %r12014, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12015, %r12002, %r12014;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12018, %r11746, %r12015;
	// end inline asm
	// begin inline asm
	mov.b32 %r12021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12022, %r12002, %r12021;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12025, %r11754, %r12022;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12028, %r12004, %r12018, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12032, %r12011, %r12025, %r4317;
	// end inline asm
	shl.b32 	%r12039, %r12032, 4;
	// begin inline asm
	lop3.b32 %r12036, %r4323, %r12028, %r12039, 202;
	// end inline asm
	xor.b32  	%r16087, %r12036, -2004318072;
	// begin inline asm
	mov.b32 %r12043, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12041, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12042, %r12043, %r12041;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12045, %r11762, %r12042;
	// end inline asm
	// begin inline asm
	mov.b32 %r12048, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12049, %r12043, %r12048;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12052, %r11770, %r12049;
	// end inline asm
	// begin inline asm
	mov.b32 %r12055, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12056, %r12043, %r12055;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12059, %r11778, %r12056;
	// end inline asm
	// begin inline asm
	mov.b32 %r12062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12063, %r12043, %r12062;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12066, %r11786, %r12063;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12069, %r12045, %r12059, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12073, %r12052, %r12066, %r4317;
	// end inline asm
	shl.b32 	%r12080, %r12073, 4;
	// begin inline asm
	lop3.b32 %r12077, %r4323, %r12069, %r12080, 202;
	// end inline asm
	xor.b32  	%r16088, %r12077, -2004318072;
	// begin inline asm
	mov.b32 %r12084, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12082, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12083, %r12084, %r12082;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12086, %r11794, %r12083;
	// end inline asm
	// begin inline asm
	mov.b32 %r12089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12090, %r12084, %r12089;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12093, %r11802, %r12090;
	// end inline asm
	// begin inline asm
	mov.b32 %r12096, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12097, %r12084, %r12096;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12100, %r11810, %r12097;
	// end inline asm
	// begin inline asm
	mov.b32 %r12103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12104, %r12084, %r12103;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12107, %r11818, %r12104;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12110, %r12086, %r12100, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12114, %r12093, %r12107, %r4317;
	// end inline asm
	shl.b32 	%r12121, %r12114, 4;
	// begin inline asm
	lop3.b32 %r12118, %r4323, %r12110, %r12121, 202;
	// end inline asm
	xor.b32  	%r16089, %r12118, -2004318072;
	// begin inline asm
	mov.b32 %r12125, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12124, %r12125, %r12123;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12127, %r11826, %r12124;
	// end inline asm
	// begin inline asm
	mov.b32 %r12130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12131, %r12125, %r12130;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12134, %r11834, %r12131;
	// end inline asm
	// begin inline asm
	mov.b32 %r12137, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12138, %r12125, %r12137;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12141, %r11842, %r12138;
	// end inline asm
	// begin inline asm
	mov.b32 %r12144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12145, %r12125, %r12144;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12148, %r11850, %r12145;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12151, %r12127, %r12141, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12155, %r12134, %r12148, %r4317;
	// end inline asm
	shl.b32 	%r12162, %r12155, 4;
	// begin inline asm
	lop3.b32 %r12159, %r4323, %r12151, %r12162, 202;
	// end inline asm
	xor.b32  	%r16090, %r12159, -2004318072;
	// begin inline asm
	mov.b32 %r12166, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12164, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12165, %r12166, %r12164;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12168, %r11858, %r12165;
	// end inline asm
	// begin inline asm
	mov.b32 %r12171, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12172, %r12166, %r12171;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12175, %r11866, %r12172;
	// end inline asm
	// begin inline asm
	mov.b32 %r12178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12179, %r12166, %r12178;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12182, %r11874, %r12179;
	// end inline asm
	// begin inline asm
	mov.b32 %r12185, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12186, %r12166, %r12185;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12189, %r11882, %r12186;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12192, %r12168, %r12182, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12196, %r12175, %r12189, %r4317;
	// end inline asm
	shl.b32 	%r12203, %r12196, 4;
	// begin inline asm
	lop3.b32 %r12200, %r4323, %r12192, %r12203, 202;
	// end inline asm
	xor.b32  	%r16091, %r12200, -2004318072;
	// begin inline asm
	mov.b32 %r12207, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12206, %r12207, %r12205;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12209, %r11890, %r12206;
	// end inline asm
	// begin inline asm
	mov.b32 %r12212, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12213, %r12207, %r12212;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12216, %r11898, %r12213;
	// end inline asm
	// begin inline asm
	mov.b32 %r12219, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12220, %r12207, %r12219;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12223, %r11906, %r12220;
	// end inline asm
	// begin inline asm
	mov.b32 %r12226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12227, %r12207, %r12226;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12230, %r11914, %r12227;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12233, %r12209, %r12223, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12237, %r12216, %r12230, %r4317;
	// end inline asm
	shl.b32 	%r12244, %r12237, 4;
	// begin inline asm
	lop3.b32 %r12241, %r4323, %r12233, %r12244, 202;
	// end inline asm
	xor.b32  	%r16092, %r12241, -2004318072;
	st.shared.u32 	[%rd82], %r16085;
	st.shared.u32 	[%rd83], %r16086;
	st.shared.u32 	[%rd84], %r16087;
	st.shared.u32 	[%rd85], %r16088;
	st.shared.u32 	[%rd86], %r16089;
	st.shared.u32 	[%rd87], %r16090;
	st.shared.u32 	[%rd88], %r16091;
	st.shared.u32 	[%rd89], %r16092;
	ld.shared.u32 	%r16203, [%rd74];
	ld.shared.u32 	%r16204, [%rd75];
	ld.shared.u32 	%r16205, [%rd76];
	ld.shared.u32 	%r16206, [%rd77];
	ld.shared.u32 	%r16215, [%rd78];
	ld.shared.u32 	%r16216, [%rd79];
	ld.shared.u32 	%r16217, [%rd80];
	ld.shared.u32 	%r16218, [%rd81];
	// begin inline asm
	mov.b32 %r12250, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12261, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12249, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r12247, %r800, %r12249, %r12250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12252, %r12250, %r12251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12255, %r12247, %r12252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12258, %r811, %r12249, %r12261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12263, %r12261, %r12262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12266, %r12258, %r12263;
	// end inline asm
	shr.u32 	%r12271, %r12249, 8;
	// begin inline asm
	lop3.b32 %r12269, %r800, %r12271, %r12250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12274, %r12250, %r12273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12277, %r12269, %r12274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12280, %r811, %r12271, %r12261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12285, %r12261, %r12284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12288, %r12280, %r12285;
	// end inline asm
	// begin inline asm
	mov.b32 %r12296, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12307, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12295, %r16204, -2004318072;
	// begin inline asm
	lop3.b32 %r12293, %r800, %r12295, %r12296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12298, %r12296, %r12297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12301, %r12293, %r12298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12304, %r811, %r12295, %r12307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12309, %r12307, %r12308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12312, %r12304, %r12309;
	// end inline asm
	shr.u32 	%r12317, %r12295, 8;
	// begin inline asm
	lop3.b32 %r12315, %r800, %r12317, %r12296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12320, %r12296, %r12319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12323, %r12315, %r12320;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12326, %r811, %r12317, %r12307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12331, %r12307, %r12330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12334, %r12326, %r12331;
	// end inline asm
	// begin inline asm
	mov.b32 %r12342, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12353, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12341, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r12339, %r800, %r12341, %r12342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12344, %r12342, %r12343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12347, %r12339, %r12344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12350, %r811, %r12341, %r12353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12355, %r12353, %r12354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12358, %r12350, %r12355;
	// end inline asm
	shr.u32 	%r12363, %r12341, 8;
	// begin inline asm
	lop3.b32 %r12361, %r800, %r12363, %r12342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12366, %r12342, %r12365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12369, %r12361, %r12366;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12372, %r811, %r12363, %r12353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12377, %r12353, %r12376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12380, %r12372, %r12377;
	// end inline asm
	// begin inline asm
	mov.b32 %r12388, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12399, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12387, %r16206, -2004318072;
	// begin inline asm
	lop3.b32 %r12385, %r800, %r12387, %r12388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12390, %r12388, %r12389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12393, %r12385, %r12390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12396, %r811, %r12387, %r12399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12401, %r12399, %r12400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12404, %r12396, %r12401;
	// end inline asm
	shr.u32 	%r12409, %r12387, 8;
	// begin inline asm
	lop3.b32 %r12407, %r800, %r12409, %r12388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12412, %r12388, %r12411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12415, %r12407, %r12412;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12418, %r811, %r12409, %r12399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12423, %r12399, %r12422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12426, %r12418, %r12423;
	// end inline asm
	// begin inline asm
	mov.b32 %r12434, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12445, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12433, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r12431, %r800, %r12433, %r12434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12436, %r12434, %r12435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12439, %r12431, %r12436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12442, %r811, %r12433, %r12445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12447, %r12445, %r12446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12450, %r12442, %r12447;
	// end inline asm
	shr.u32 	%r12455, %r12433, 8;
	// begin inline asm
	lop3.b32 %r12453, %r800, %r12455, %r12434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12458, %r12434, %r12457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12461, %r12453, %r12458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12464, %r811, %r12455, %r12445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12469, %r12445, %r12468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12472, %r12464, %r12469;
	// end inline asm
	// begin inline asm
	mov.b32 %r12480, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12491, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12479, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r12477, %r800, %r12479, %r12480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12482, %r12480, %r12481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12485, %r12477, %r12482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12488, %r811, %r12479, %r12491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12493, %r12491, %r12492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12496, %r12488, %r12493;
	// end inline asm
	shr.u32 	%r12501, %r12479, 8;
	// begin inline asm
	lop3.b32 %r12499, %r800, %r12501, %r12480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12504, %r12480, %r12503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12507, %r12499, %r12504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12510, %r811, %r12501, %r12491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12515, %r12491, %r12514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12518, %r12510, %r12515;
	// end inline asm
	// begin inline asm
	mov.b32 %r12526, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12537, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12525, %r16217, -2004318072;
	// begin inline asm
	lop3.b32 %r12523, %r800, %r12525, %r12526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12528, %r12526, %r12527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12531, %r12523, %r12528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12534, %r811, %r12525, %r12537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12539, %r12537, %r12538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12542, %r12534, %r12539;
	// end inline asm
	shr.u32 	%r12547, %r12525, 8;
	// begin inline asm
	lop3.b32 %r12545, %r800, %r12547, %r12526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12550, %r12526, %r12549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12553, %r12545, %r12550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12556, %r811, %r12547, %r12537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12561, %r12537, %r12560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12564, %r12556, %r12561;
	// end inline asm
	// begin inline asm
	mov.b32 %r12572, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12583, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12571, %r16218, -2004318072;
	// begin inline asm
	lop3.b32 %r12569, %r800, %r12571, %r12572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12574, %r12572, %r12573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12577, %r12569, %r12574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12580, %r811, %r12571, %r12583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12585, %r12583, %r12584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12588, %r12580, %r12585;
	// end inline asm
	shr.u32 	%r12593, %r12571, 8;
	// begin inline asm
	lop3.b32 %r12591, %r800, %r12593, %r12572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12596, %r12572, %r12595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12599, %r12591, %r12596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12602, %r811, %r12593, %r12583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12607, %r12583, %r12606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12610, %r12602, %r12607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12613, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12615, %r12613, %r12255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12618, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12620, %r12618, %r12266;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12623, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12625, %r12623, %r12277;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12628, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12630, %r12628, %r12288;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12633, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12635, %r12633, %r12301;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12638, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12640, %r12638, %r12312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12643, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12645, %r12643, %r12323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12648, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12650, %r12648, %r12334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12653, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12655, %r12653, %r12347;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12658, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12660, %r12658, %r12358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12663, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12665, %r12663, %r12369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12668, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12670, %r12668, %r12380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12673, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12675, %r12673, %r12393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12678, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12680, %r12678, %r12404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12683, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12685, %r12683, %r12415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12688, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12690, %r12688, %r12426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12693, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12695, %r12693, %r12439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12698, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12700, %r12698, %r12450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12703, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12705, %r12703, %r12461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12708, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12710, %r12708, %r12472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12713, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12715, %r12713, %r12485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12718, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12720, %r12718, %r12496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12723, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12725, %r12723, %r12507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12728, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12730, %r12728, %r12518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12733, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12735, %r12733, %r12531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12738, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12740, %r12738, %r12542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12743, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12745, %r12743, %r12553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12748, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12750, %r12748, %r12564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12753, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12755, %r12753, %r12577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12758, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12760, %r12758, %r12588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12763, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12765, %r12763, %r12599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12768, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12770, %r12768, %r12610;
	// end inline asm
	// begin inline asm
	mov.b32 %r12778, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12789, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12775, %r800, %r801, %r12778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12779, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12780, %r12778, %r12779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12783, %r12775, %r12780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12786, %r811, %r801, %r12789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12790, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12791, %r12789, %r12790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12794, %r12786, %r12791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12797, %r800, %r823, %r12778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12801, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12802, %r12778, %r12801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12805, %r12797, %r12802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12808, %r811, %r823, %r12789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12812, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12813, %r12789, %r12812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12816, %r12808, %r12813;
	// end inline asm
	// begin inline asm
	mov.b32 %r12824, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12835, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12821, %r800, %r847, %r12824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12825, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12826, %r12824, %r12825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12829, %r12821, %r12826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12832, %r811, %r847, %r12835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12837, %r12835, %r12836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12840, %r12832, %r12837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12843, %r800, %r869, %r12824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12848, %r12824, %r12847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12851, %r12843, %r12848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12854, %r811, %r869, %r12835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12859, %r12835, %r12858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12862, %r12854, %r12859;
	// end inline asm
	// begin inline asm
	mov.b32 %r12870, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12881, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12867, %r800, %r893, %r12870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12871, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12872, %r12870, %r12871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12875, %r12867, %r12872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12878, %r811, %r893, %r12881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12882, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12883, %r12881, %r12882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12886, %r12878, %r12883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12889, %r800, %r915, %r12870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12893, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12894, %r12870, %r12893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12897, %r12889, %r12894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12900, %r811, %r915, %r12881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12904, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12905, %r12881, %r12904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12908, %r12900, %r12905;
	// end inline asm
	// begin inline asm
	mov.b32 %r12916, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12927, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12913, %r800, %r939, %r12916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12918, %r12916, %r12917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12921, %r12913, %r12918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12924, %r811, %r939, %r12927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12929, %r12927, %r12928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12932, %r12924, %r12929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12935, %r800, %r961, %r12916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12940, %r12916, %r12939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12943, %r12935, %r12940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12946, %r811, %r961, %r12927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12951, %r12927, %r12950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12954, %r12946, %r12951;
	// end inline asm
	// begin inline asm
	mov.b32 %r12962, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12973, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12959, %r800, %r985, %r12962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12963, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12964, %r12962, %r12963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12967, %r12959, %r12964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12970, %r811, %r985, %r12973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12975, %r12973, %r12974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12978, %r12970, %r12975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12981, %r800, %r1007, %r12962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12986, %r12962, %r12985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12989, %r12981, %r12986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12992, %r811, %r1007, %r12973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12997, %r12973, %r12996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13000, %r12992, %r12997;
	// end inline asm
	// begin inline asm
	mov.b32 %r13008, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13019, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13005, %r800, %r1031, %r13008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13009, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13010, %r13008, %r13009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13013, %r13005, %r13010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13016, %r811, %r1031, %r13019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13021, %r13019, %r13020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13024, %r13016, %r13021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13027, %r800, %r1053, %r13008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13032, %r13008, %r13031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13035, %r13027, %r13032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13038, %r811, %r1053, %r13019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13043, %r13019, %r13042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13046, %r13038, %r13043;
	// end inline asm
	// begin inline asm
	mov.b32 %r13054, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13065, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13051, %r800, %r1077, %r13054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13055, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13056, %r13054, %r13055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13059, %r13051, %r13056;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13062, %r811, %r1077, %r13065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13067, %r13065, %r13066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13070, %r13062, %r13067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13073, %r800, %r1099, %r13054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13078, %r13054, %r13077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13081, %r13073, %r13078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13084, %r811, %r1099, %r13065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13089, %r13065, %r13088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13092, %r13084, %r13089;
	// end inline asm
	// begin inline asm
	mov.b32 %r13100, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13111, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13097, %r800, %r1123, %r13100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13102, %r13100, %r13101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13105, %r13097, %r13102;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13108, %r811, %r1123, %r13111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13113, %r13111, %r13112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13116, %r13108, %r13113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13119, %r800, %r1145, %r13100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13124, %r13100, %r13123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13127, %r13119, %r13124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13130, %r811, %r1145, %r13111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13135, %r13111, %r13134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13138, %r13130, %r13135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13141, %r272, %r12783, %r12615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13145, %r272, %r12794, %r12620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13149, %r272, %r12805, %r12625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13153, %r272, %r12816, %r12630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13157, %r272, %r12829, %r12635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13161, %r272, %r12840, %r12640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13165, %r272, %r12851, %r12645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13169, %r272, %r12862, %r12650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13173, %r272, %r12875, %r12655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13177, %r272, %r12886, %r12660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13181, %r272, %r12897, %r12665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13185, %r272, %r12908, %r12670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13189, %r272, %r12921, %r12675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13193, %r272, %r12932, %r12680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13197, %r272, %r12943, %r12685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13201, %r272, %r12954, %r12690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13205, %r290, %r12967, %r12695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13209, %r290, %r12978, %r12700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13213, %r290, %r12989, %r12705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13217, %r290, %r13000, %r12710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13221, %r290, %r13013, %r12715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13225, %r290, %r13024, %r12720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13229, %r290, %r13035, %r12725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13233, %r290, %r13046, %r12730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13237, %r290, %r13059, %r12735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13241, %r290, %r13070, %r12740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13245, %r290, %r13081, %r12745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13249, %r290, %r13092, %r12750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13253, %r290, %r13105, %r12755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13257, %r290, %r13116, %r12760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13261, %r290, %r13127, %r12765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13265, %r290, %r13138, %r12770;
	// end inline asm
	// begin inline asm
	mov.b32 %r13274, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13285, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13271, %r800, %r4617, %r13274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13275, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13276, %r13274, %r13275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13279, %r13271, %r13276;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13282, %r811, %r4617, %r13285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13286, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13287, %r13285, %r13286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13290, %r13282, %r13287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13293, %r800, %r4639, %r13274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13298, %r13274, %r13297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13301, %r13293, %r13298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13304, %r811, %r4639, %r13285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13309, %r13285, %r13308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13312, %r13304, %r13309;
	// end inline asm
	// begin inline asm
	mov.b32 %r13320, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13331, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13317, %r800, %r4663, %r13320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13321, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13322, %r13320, %r13321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13325, %r13317, %r13322;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13328, %r811, %r4663, %r13331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13333, %r13331, %r13332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13336, %r13328, %r13333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13339, %r800, %r4685, %r13320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13344, %r13320, %r13343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13347, %r13339, %r13344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13350, %r811, %r4685, %r13331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13355, %r13331, %r13354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13358, %r13350, %r13355;
	// end inline asm
	// begin inline asm
	mov.b32 %r13366, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13377, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13363, %r800, %r4709, %r13366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13368, %r13366, %r13367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13371, %r13363, %r13368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13374, %r811, %r4709, %r13377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13379, %r13377, %r13378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13382, %r13374, %r13379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13385, %r800, %r4731, %r13366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13390, %r13366, %r13389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13393, %r13385, %r13390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13396, %r811, %r4731, %r13377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13401, %r13377, %r13400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13404, %r13396, %r13401;
	// end inline asm
	// begin inline asm
	mov.b32 %r13412, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13423, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13409, %r800, %r4755, %r13412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13414, %r13412, %r13413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13417, %r13409, %r13414;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13420, %r811, %r4755, %r13423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13425, %r13423, %r13424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13428, %r13420, %r13425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13431, %r800, %r4777, %r13412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13436, %r13412, %r13435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13439, %r13431, %r13436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13442, %r811, %r4777, %r13423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13447, %r13423, %r13446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13450, %r13442, %r13447;
	// end inline asm
	// begin inline asm
	mov.b32 %r13458, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13469, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13455, %r800, %r4801, %r13458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13460, %r13458, %r13459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13463, %r13455, %r13460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13466, %r811, %r4801, %r13469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13471, %r13469, %r13470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13474, %r13466, %r13471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13477, %r800, %r4823, %r13458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13482, %r13458, %r13481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13485, %r13477, %r13482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13488, %r811, %r4823, %r13469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13493, %r13469, %r13492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13496, %r13488, %r13493;
	// end inline asm
	// begin inline asm
	mov.b32 %r13504, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13515, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13501, %r800, %r4847, %r13504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13506, %r13504, %r13505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13509, %r13501, %r13506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13512, %r811, %r4847, %r13515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13517, %r13515, %r13516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13520, %r13512, %r13517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13523, %r800, %r4869, %r13504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13528, %r13504, %r13527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13531, %r13523, %r13528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13534, %r811, %r4869, %r13515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13539, %r13515, %r13538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13542, %r13534, %r13539;
	// end inline asm
	// begin inline asm
	mov.b32 %r13550, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13561, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13547, %r800, %r4893, %r13550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13552, %r13550, %r13551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13555, %r13547, %r13552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13558, %r811, %r4893, %r13561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13563, %r13561, %r13562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13566, %r13558, %r13563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13569, %r800, %r4915, %r13550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13574, %r13550, %r13573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13577, %r13569, %r13574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13580, %r811, %r4915, %r13561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13585, %r13561, %r13584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13588, %r13580, %r13585;
	// end inline asm
	// begin inline asm
	mov.b32 %r13596, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13607, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13593, %r800, %r4939, %r13596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13598, %r13596, %r13597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13601, %r13593, %r13598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13604, %r811, %r4939, %r13607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13609, %r13607, %r13608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13612, %r13604, %r13609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13615, %r800, %r4961, %r13596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13620, %r13596, %r13619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13623, %r13615, %r13620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13626, %r811, %r4961, %r13607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13631, %r13607, %r13630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13634, %r13626, %r13631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13637, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13639, %r13637, %r13279, %r13141;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13643, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13645, %r13643, %r13290, %r13145;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13649, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13651, %r13649, %r13301, %r13149;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13655, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13657, %r13655, %r13312, %r13153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13661, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13663, %r13661, %r13325, %r13157;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13667, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13669, %r13667, %r13336, %r13161;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13673, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13675, %r13673, %r13347, %r13165;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13679, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13681, %r13679, %r13358, %r13169;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13685, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13687, %r13685, %r13371, %r13173;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13691, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13693, %r13691, %r13382, %r13177;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13697, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13699, %r13697, %r13393, %r13181;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13703, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13705, %r13703, %r13404, %r13185;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13709, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13711, %r13709, %r13417, %r13189;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13715, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13717, %r13715, %r13428, %r13193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13721, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13723, %r13721, %r13439, %r13197;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13727, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13729, %r13727, %r13450, %r13201;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13733, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13735, %r13733, %r13463, %r13205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13739, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13741, %r13739, %r13474, %r13209;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13745, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13747, %r13745, %r13485, %r13213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13751, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13753, %r13751, %r13496, %r13217;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13757, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13759, %r13757, %r13509, %r13221;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13763, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13765, %r13763, %r13520, %r13225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13769, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13771, %r13769, %r13531, %r13229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13775, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13777, %r13775, %r13542, %r13233;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13781, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13783, %r13781, %r13555, %r13237;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13787, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13789, %r13787, %r13566, %r13241;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13793, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13795, %r13793, %r13577, %r13245;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13799, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13801, %r13799, %r13588, %r13249;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13805, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13807, %r13805, %r13601, %r13253;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13811, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13813, %r13811, %r13612, %r13257;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13817, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13819, %r13817, %r13623, %r13261;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13823, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13825, %r13823, %r13634, %r13265;
	// end inline asm
	// begin inline asm
	mov.b32 %r13834, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13845, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13831, %r800, %r8433, %r13834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13835, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13836, %r13834, %r13835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13839, %r13831, %r13836;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13842, %r811, %r8433, %r13845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13846, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13847, %r13845, %r13846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13850, %r13842, %r13847;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13853, %r800, %r8455, %r13834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13857, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13858, %r13834, %r13857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13861, %r13853, %r13858;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13864, %r811, %r8455, %r13845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13868, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13869, %r13845, %r13868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13872, %r13864, %r13869;
	// end inline asm
	// begin inline asm
	mov.b32 %r13880, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13891, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13877, %r800, %r8479, %r13880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13881, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13882, %r13880, %r13881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13885, %r13877, %r13882;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13888, %r811, %r8479, %r13891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13892, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13893, %r13891, %r13892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13896, %r13888, %r13893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13899, %r800, %r8501, %r13880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13903, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13904, %r13880, %r13903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13907, %r13899, %r13904;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13910, %r811, %r8501, %r13891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13914, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13915, %r13891, %r13914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13918, %r13910, %r13915;
	// end inline asm
	// begin inline asm
	mov.b32 %r13926, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13937, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13923, %r800, %r8525, %r13926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13927, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13928, %r13926, %r13927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13931, %r13923, %r13928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13934, %r811, %r8525, %r13937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13938, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13939, %r13937, %r13938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13942, %r13934, %r13939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13945, %r800, %r8547, %r13926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13949, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13950, %r13926, %r13949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13953, %r13945, %r13950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13956, %r811, %r8547, %r13937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13960, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13961, %r13937, %r13960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13964, %r13956, %r13961;
	// end inline asm
	// begin inline asm
	mov.b32 %r13972, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13983, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13969, %r800, %r8571, %r13972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13973, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13974, %r13972, %r13973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13977, %r13969, %r13974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13980, %r811, %r8571, %r13983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13984, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13985, %r13983, %r13984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13988, %r13980, %r13985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13991, %r800, %r8593, %r13972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13995, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13996, %r13972, %r13995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13999, %r13991, %r13996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14002, %r811, %r8593, %r13983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14006, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14007, %r13983, %r14006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14010, %r14002, %r14007;
	// end inline asm
	// begin inline asm
	mov.b32 %r14018, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14029, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14015, %r800, %r8617, %r14018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14020, %r14018, %r14019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14023, %r14015, %r14020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14026, %r811, %r8617, %r14029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14031, %r14029, %r14030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14034, %r14026, %r14031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14037, %r800, %r8639, %r14018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14041, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14042, %r14018, %r14041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14045, %r14037, %r14042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14048, %r811, %r8639, %r14029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14052, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14053, %r14029, %r14052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14056, %r14048, %r14053;
	// end inline asm
	// begin inline asm
	mov.b32 %r14064, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14075, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14061, %r800, %r8663, %r14064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14066, %r14064, %r14065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14069, %r14061, %r14066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14072, %r811, %r8663, %r14075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14077, %r14075, %r14076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14080, %r14072, %r14077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14083, %r800, %r8685, %r14064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14088, %r14064, %r14087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14091, %r14083, %r14088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14094, %r811, %r8685, %r14075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14098, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14099, %r14075, %r14098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14102, %r14094, %r14099;
	// end inline asm
	// begin inline asm
	mov.b32 %r14110, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14121, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14107, %r800, %r8709, %r14110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14112, %r14110, %r14111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14115, %r14107, %r14112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14118, %r811, %r8709, %r14121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14123, %r14121, %r14122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14126, %r14118, %r14123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14129, %r800, %r8731, %r14110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14133, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14134, %r14110, %r14133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14137, %r14129, %r14134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14140, %r811, %r8731, %r14121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14145, %r14121, %r14144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14148, %r14140, %r14145;
	// end inline asm
	// begin inline asm
	mov.b32 %r14156, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14167, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14153, %r800, %r8755, %r14156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14158, %r14156, %r14157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14161, %r14153, %r14158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14164, %r811, %r8755, %r14167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14168, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14169, %r14167, %r14168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14172, %r14164, %r14169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14175, %r800, %r8777, %r14156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14180, %r14156, %r14179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14183, %r14175, %r14180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14186, %r811, %r8777, %r14167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14190, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14191, %r14167, %r14190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14194, %r14186, %r14191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14332, %r344, %r13839, %r13639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14329, %r344, %r13850, %r13645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14341, %r344, %r13861, %r13651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14338, %r344, %r13872, %r13657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14350, %r344, %r13885, %r13663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14347, %r344, %r13896, %r13669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14359, %r344, %r13907, %r13675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14356, %r344, %r13918, %r13681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14368, %r344, %r13931, %r13687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14365, %r344, %r13942, %r13693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14377, %r344, %r13953, %r13699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14374, %r344, %r13964, %r13705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14386, %r344, %r13977, %r13711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14383, %r344, %r13988, %r13717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14395, %r344, %r13999, %r13723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14392, %r344, %r14010, %r13729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14404, %r362, %r14023, %r13735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14401, %r362, %r14034, %r13741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14413, %r362, %r14045, %r13747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14410, %r362, %r14056, %r13753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14422, %r362, %r14069, %r13759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14419, %r362, %r14080, %r13765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14431, %r362, %r14091, %r13771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14428, %r362, %r14102, %r13777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14440, %r362, %r14115, %r13783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14437, %r362, %r14126, %r13789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14449, %r362, %r14137, %r13795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14446, %r362, %r14148, %r13801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14458, %r362, %r14161, %r13807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14455, %r362, %r14172, %r13813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14467, %r362, %r14183, %r13819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14464, %r362, %r14194, %r13825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14325, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14327, %r14325, %r14329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14330, %r426, %r14332, %r14327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14334, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14336, %r14334, %r14338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14339, %r426, %r14341, %r14336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14343, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14345, %r14343, %r14347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14348, %r426, %r14350, %r14345;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14352, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14354, %r14352, %r14356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14357, %r426, %r14359, %r14354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14361, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14363, %r14361, %r14365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14366, %r426, %r14368, %r14363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14370, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14372, %r14370, %r14374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14375, %r426, %r14377, %r14372;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14379, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14381, %r14379, %r14383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14384, %r426, %r14386, %r14381;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14388, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14390, %r14388, %r14392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14393, %r426, %r14395, %r14390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14397, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14399, %r14397, %r14401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14402, %r429, %r14404, %r14399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14406, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14408, %r14406, %r14410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14411, %r429, %r14413, %r14408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14415, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14417, %r14415, %r14419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14420, %r429, %r14422, %r14417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14424, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14426, %r14424, %r14428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14429, %r429, %r14431, %r14426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14433, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14435, %r14433, %r14437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14438, %r429, %r14440, %r14435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14442, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14444, %r14442, %r14446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14447, %r429, %r14449, %r14444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14451, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14453, %r14451, %r14455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14456, %r429, %r14458, %r14453;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14460, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14462, %r14460, %r14464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14465, %r429, %r14467, %r14462;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14469, %r432, %r14332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14472, %r426, %r14329, %r14469;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14476, %r432, %r14341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14479, %r426, %r14338, %r14476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14483, %r432, %r14350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14486, %r426, %r14347, %r14483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14490, %r432, %r14359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14493, %r426, %r14356, %r14490;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14497, %r432, %r14368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14500, %r426, %r14365, %r14497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14504, %r432, %r14377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14507, %r426, %r14374, %r14504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14511, %r432, %r14386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14514, %r426, %r14383, %r14511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14518, %r432, %r14395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14521, %r426, %r14392, %r14518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14525, %r435, %r14404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14528, %r429, %r14401, %r14525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14532, %r435, %r14413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14535, %r429, %r14410, %r14532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14539, %r435, %r14422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14542, %r429, %r14419, %r14539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14546, %r435, %r14431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14549, %r429, %r14428, %r14546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14553, %r435, %r14440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14556, %r429, %r14437, %r14553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14560, %r435, %r14449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14563, %r429, %r14446, %r14560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14567, %r435, %r14458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14570, %r429, %r14455, %r14567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14574, %r435, %r14467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14577, %r429, %r14464, %r14574;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14748, %r14745}, {%r474, %r480, %r477, %r483}, {%r14330, %r14472}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14757, %r14754}, {%r474, %r480, %r477, %r483}, {%r14339, %r14479}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14766, %r14763}, {%r474, %r480, %r477, %r483}, {%r14348, %r14486}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14775, %r14772}, {%r474, %r480, %r477, %r483}, {%r14357, %r14493}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14784, %r14781}, {%r474, %r480, %r477, %r483}, {%r14366, %r14500}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14793, %r14790}, {%r474, %r480, %r477, %r483}, {%r14375, %r14507}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14802, %r14799}, {%r474, %r480, %r477, %r483}, {%r14384, %r14514}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14811, %r14808}, {%r474, %r480, %r477, %r483}, {%r14393, %r14521}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14820, %r14817}, {%r474, %r480, %r477, %r483}, {%r14402, %r14528}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14829, %r14826}, {%r474, %r480, %r477, %r483}, {%r14411, %r14535}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14838, %r14835}, {%r474, %r480, %r477, %r483}, {%r14420, %r14542}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14847, %r14844}, {%r474, %r480, %r477, %r483}, {%r14429, %r14549}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14856, %r14853}, {%r474, %r480, %r477, %r483}, {%r14438, %r14556}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14865, %r14862}, {%r474, %r480, %r477, %r483}, {%r14447, %r14563}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14874, %r14871}, {%r474, %r480, %r477, %r483}, {%r14456, %r14570}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14883, %r14880}, {%r474, %r480, %r477, %r483}, {%r14465, %r14577}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14741, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14743, %r14741, %r14745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14746, %r521, %r14748, %r14743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14750, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14752, %r14750, %r14754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14755, %r521, %r14757, %r14752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14759, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14761, %r14759, %r14763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14764, %r521, %r14766, %r14761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14768, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14770, %r14768, %r14772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14773, %r521, %r14775, %r14770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14777, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14779, %r14777, %r14781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14782, %r521, %r14784, %r14779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14786, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14788, %r14786, %r14790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14791, %r521, %r14793, %r14788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14795, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14797, %r14795, %r14799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14800, %r521, %r14802, %r14797;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14804, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14806, %r14804, %r14808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14809, %r521, %r14811, %r14806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14813, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14815, %r14813, %r14817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14818, %r521, %r14820, %r14815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14822, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14824, %r14822, %r14826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14827, %r521, %r14829, %r14824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14831, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14833, %r14831, %r14835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14836, %r521, %r14838, %r14833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14840, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14842, %r14840, %r14844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14845, %r521, %r14847, %r14842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14849, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14851, %r14849, %r14853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14854, %r521, %r14856, %r14851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14858, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14860, %r14858, %r14862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14863, %r521, %r14865, %r14860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14867, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14869, %r14867, %r14871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14872, %r521, %r14874, %r14869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14876, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14878, %r14876, %r14880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14881, %r521, %r14883, %r14878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14885, %r524, %r14748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14888, %r521, %r14745, %r14885;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14892, %r524, %r14757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14895, %r521, %r14754, %r14892;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14899, %r524, %r14766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14902, %r521, %r14763, %r14899;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14906, %r524, %r14775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14909, %r521, %r14772, %r14906;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14913, %r524, %r14784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14916, %r521, %r14781, %r14913;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14920, %r524, %r14793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14923, %r521, %r14790, %r14920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14927, %r524, %r14802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14930, %r521, %r14799, %r14927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14934, %r524, %r14811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14937, %r521, %r14808, %r14934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14941, %r524, %r14820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14944, %r521, %r14817, %r14941;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14948, %r524, %r14829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14951, %r521, %r14826, %r14948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14955, %r524, %r14838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14958, %r521, %r14835, %r14955;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14962, %r524, %r14847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14965, %r521, %r14844, %r14962;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14969, %r524, %r14856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14972, %r521, %r14853, %r14969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14976, %r524, %r14865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14979, %r521, %r14862, %r14976;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14983, %r524, %r14874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14986, %r521, %r14871, %r14983;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14990, %r524, %r14883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14993, %r521, %r14880, %r14990;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15286, %r15289}, {%r564, %r570, %r567, %r573}, {%r14746, %r14888}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15292, %r15295}, {%r564, %r570, %r567, %r573}, {%r14755, %r14895}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15298, %r15301}, {%r564, %r570, %r567, %r573}, {%r14764, %r14902}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15304, %r15307}, {%r564, %r570, %r567, %r573}, {%r14773, %r14909}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15310, %r15313}, {%r564, %r570, %r567, %r573}, {%r14782, %r14916}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15316, %r15319}, {%r564, %r570, %r567, %r573}, {%r14791, %r14923}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15322, %r15325}, {%r564, %r570, %r567, %r573}, {%r14800, %r14930}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15328, %r15331}, {%r564, %r570, %r567, %r573}, {%r14809, %r14937}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15287, %r15290}, {%r564, %r570, %r567, %r573}, {%r14818, %r14944}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15293, %r15296}, {%r564, %r570, %r567, %r573}, {%r14827, %r14951}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15299, %r15302}, {%r564, %r570, %r567, %r573}, {%r14836, %r14958}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15305, %r15308}, {%r564, %r570, %r567, %r573}, {%r14845, %r14965}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15311, %r15314}, {%r564, %r570, %r567, %r573}, {%r14854, %r14972}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15317, %r15320}, {%r564, %r570, %r567, %r573}, {%r14863, %r14979}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15323, %r15326}, {%r564, %r570, %r567, %r573}, {%r14872, %r14986}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15329, %r15332}, {%r564, %r570, %r567, %r573}, {%r14881, %r14993}, {%r15156, %r15156};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15285, %r15286, %r15287;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15288, %r15289, %r15290;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15291, %r15292, %r15293;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15294, %r15295, %r15296;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15297, %r15298, %r15299;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15300, %r15301, %r15302;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15303, %r15304, %r15305;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15306, %r15307, %r15308;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15309, %r15310, %r15311;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15312, %r15313, %r15314;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15315, %r15316, %r15317;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15318, %r15319, %r15320;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15321, %r15322, %r15323;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15324, %r15325, %r15326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15327, %r15328, %r15329;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15330, %r15331, %r15332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15333, %r15286, %r15287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15336, %r15289, %r15290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15339, %r15292, %r15293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15342, %r15295, %r15296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15345, %r15298, %r15299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15348, %r15301, %r15302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15351, %r15304, %r15305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15354, %r15307, %r15308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15357, %r15310, %r15311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15360, %r15313, %r15314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15363, %r15316, %r15317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15366, %r15319, %r15320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15369, %r15322, %r15323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15372, %r15325, %r15326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15375, %r15328, %r15329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15378, %r15331, %r15332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15381, %r14, %r15285;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15384, %r14, %r15288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15387, %r14, %r15291;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15390, %r14, %r15294;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15393, %r14, %r15297;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15396, %r14, %r15300;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15399, %r14, %r15303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15402, %r14, %r15306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15405, %r14, %r15309;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15408, %r14, %r15312;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15411, %r14, %r15315;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15414, %r14, %r15318;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15417, %r14, %r15321;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15420, %r14, %r15324;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15423, %r14, %r15327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15426, %r14, %r15330;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15429, %r15, %r15333;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15432, %r15, %r15336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15435, %r15, %r15339;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15438, %r15, %r15342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15441, %r15, %r15345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15444, %r15, %r15348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15447, %r15, %r15351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15450, %r15, %r15354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15453, %r15, %r15357;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15456, %r15, %r15360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15459, %r15, %r15363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15462, %r15, %r15366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15465, %r15, %r15369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15468, %r15, %r15372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15471, %r15, %r15375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15474, %r15, %r15378;
	// end inline asm
	// begin inline asm
	mov.b32 %r15477, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15478, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15479, %r15381, %r15477;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15482, %r15479, %r15478;
	// end inline asm
	// begin inline asm
	mov.b32 %r15485, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15486, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15487, %r15384, %r15485;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15490, %r15487, %r15486;
	// end inline asm
	// begin inline asm
	mov.b32 %r15493, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15494, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15495, %r15387, %r15493;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15498, %r15495, %r15494;
	// end inline asm
	// begin inline asm
	mov.b32 %r15501, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15502, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15503, %r15390, %r15501;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15506, %r15503, %r15502;
	// end inline asm
	// begin inline asm
	mov.b32 %r15509, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15510, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15511, %r15393, %r15509;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15514, %r15511, %r15510;
	// end inline asm
	// begin inline asm
	mov.b32 %r15517, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15518, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15519, %r15396, %r15517;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15522, %r15519, %r15518;
	// end inline asm
	// begin inline asm
	mov.b32 %r15525, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15526, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15527, %r15399, %r15525;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15530, %r15527, %r15526;
	// end inline asm
	// begin inline asm
	mov.b32 %r15533, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15534, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15535, %r15402, %r15533;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15538, %r15535, %r15534;
	// end inline asm
	// begin inline asm
	mov.b32 %r15541, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15542, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15543, %r15405, %r15541;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15546, %r15543, %r15542;
	// end inline asm
	// begin inline asm
	mov.b32 %r15549, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15550, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15551, %r15408, %r15549;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15554, %r15551, %r15550;
	// end inline asm
	// begin inline asm
	mov.b32 %r15557, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15558, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15559, %r15411, %r15557;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15562, %r15559, %r15558;
	// end inline asm
	// begin inline asm
	mov.b32 %r15565, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15566, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15567, %r15414, %r15565;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15570, %r15567, %r15566;
	// end inline asm
	// begin inline asm
	mov.b32 %r15573, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15574, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15575, %r15417, %r15573;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15578, %r15575, %r15574;
	// end inline asm
	// begin inline asm
	mov.b32 %r15581, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15582, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15583, %r15420, %r15581;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15586, %r15583, %r15582;
	// end inline asm
	// begin inline asm
	mov.b32 %r15589, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15590, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15591, %r15423, %r15589;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15594, %r15591, %r15590;
	// end inline asm
	// begin inline asm
	mov.b32 %r15597, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15598, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15599, %r15426, %r15597;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15602, %r15599, %r15598;
	// end inline asm
	// begin inline asm
	mov.b32 %r15605, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15606, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15607, %r15429, %r15605;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15610, %r15607, %r15606;
	// end inline asm
	// begin inline asm
	mov.b32 %r15613, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15614, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15615, %r15432, %r15613;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15618, %r15615, %r15614;
	// end inline asm
	// begin inline asm
	mov.b32 %r15621, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15622, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15623, %r15435, %r15621;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15626, %r15623, %r15622;
	// end inline asm
	// begin inline asm
	mov.b32 %r15629, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15630, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15631, %r15438, %r15629;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15634, %r15631, %r15630;
	// end inline asm
	// begin inline asm
	mov.b32 %r15637, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15638, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15639, %r15441, %r15637;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15642, %r15639, %r15638;
	// end inline asm
	// begin inline asm
	mov.b32 %r15645, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15646, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15647, %r15444, %r15645;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15650, %r15647, %r15646;
	// end inline asm
	// begin inline asm
	mov.b32 %r15653, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15654, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15655, %r15447, %r15653;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15658, %r15655, %r15654;
	// end inline asm
	// begin inline asm
	mov.b32 %r15661, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15662, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15663, %r15450, %r15661;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15666, %r15663, %r15662;
	// end inline asm
	// begin inline asm
	mov.b32 %r15669, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15670, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15671, %r15453, %r15669;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15674, %r15671, %r15670;
	// end inline asm
	// begin inline asm
	mov.b32 %r15677, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15678, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15679, %r15456, %r15677;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15682, %r15679, %r15678;
	// end inline asm
	// begin inline asm
	mov.b32 %r15685, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15686, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15687, %r15459, %r15685;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15690, %r15687, %r15686;
	// end inline asm
	// begin inline asm
	mov.b32 %r15693, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15694, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15695, %r15462, %r15693;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15698, %r15695, %r15694;
	// end inline asm
	// begin inline asm
	mov.b32 %r15701, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15702, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15703, %r15465, %r15701;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15706, %r15703, %r15702;
	// end inline asm
	// begin inline asm
	mov.b32 %r15709, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15710, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15711, %r15468, %r15709;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15714, %r15711, %r15710;
	// end inline asm
	// begin inline asm
	mov.b32 %r15717, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15718, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15719, %r15471, %r15717;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15722, %r15719, %r15718;
	// end inline asm
	// begin inline asm
	mov.b32 %r15725, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15726, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15727, %r15474, %r15725;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15730, %r15727, %r15726;
	// end inline asm
	// begin inline asm
	mov.b32 %r15736, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15734, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15735, %r15736, %r15734;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15738, %r15482, %r15735;
	// end inline asm
	// begin inline asm
	mov.b32 %r15741, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15742, %r15736, %r15741;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15745, %r15490, %r15742;
	// end inline asm
	// begin inline asm
	mov.b32 %r15748, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15749, %r15736, %r15748;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15752, %r15498, %r15749;
	// end inline asm
	// begin inline asm
	mov.b32 %r15755, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15756, %r15736, %r15755;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15759, %r15506, %r15756;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15762, %r15738, %r15752, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15766, %r15745, %r15759, %r4317;
	// end inline asm
	shl.b32 	%r15773, %r15766, 4;
	// begin inline asm
	lop3.b32 %r15770, %r4323, %r15762, %r15773, 202;
	// end inline asm
	xor.b32  	%r16093, %r15770, -2004318072;
	// begin inline asm
	mov.b32 %r15777, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15775, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15776, %r15777, %r15775;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15779, %r15514, %r15776;
	// end inline asm
	// begin inline asm
	mov.b32 %r15782, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15783, %r15777, %r15782;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15786, %r15522, %r15783;
	// end inline asm
	// begin inline asm
	mov.b32 %r15789, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15790, %r15777, %r15789;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15793, %r15530, %r15790;
	// end inline asm
	// begin inline asm
	mov.b32 %r15796, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15797, %r15777, %r15796;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15800, %r15538, %r15797;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15803, %r15779, %r15793, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15807, %r15786, %r15800, %r4317;
	// end inline asm
	shl.b32 	%r15814, %r15807, 4;
	// begin inline asm
	lop3.b32 %r15811, %r4323, %r15803, %r15814, 202;
	// end inline asm
	xor.b32  	%r16094, %r15811, -2004318072;
	// begin inline asm
	mov.b32 %r15818, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15817, %r15818, %r15816;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15820, %r15546, %r15817;
	// end inline asm
	// begin inline asm
	mov.b32 %r15823, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15824, %r15818, %r15823;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15827, %r15554, %r15824;
	// end inline asm
	// begin inline asm
	mov.b32 %r15830, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15831, %r15818, %r15830;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15834, %r15562, %r15831;
	// end inline asm
	// begin inline asm
	mov.b32 %r15837, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15838, %r15818, %r15837;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15841, %r15570, %r15838;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15844, %r15820, %r15834, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15848, %r15827, %r15841, %r4317;
	// end inline asm
	shl.b32 	%r15855, %r15848, 4;
	// begin inline asm
	lop3.b32 %r15852, %r4323, %r15844, %r15855, 202;
	// end inline asm
	xor.b32  	%r16095, %r15852, -2004318072;
	// begin inline asm
	mov.b32 %r15859, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15857, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15858, %r15859, %r15857;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15861, %r15578, %r15858;
	// end inline asm
	// begin inline asm
	mov.b32 %r15864, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15865, %r15859, %r15864;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15868, %r15586, %r15865;
	// end inline asm
	// begin inline asm
	mov.b32 %r15871, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15872, %r15859, %r15871;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15875, %r15594, %r15872;
	// end inline asm
	// begin inline asm
	mov.b32 %r15878, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15879, %r15859, %r15878;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15882, %r15602, %r15879;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15885, %r15861, %r15875, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15889, %r15868, %r15882, %r4317;
	// end inline asm
	shl.b32 	%r15896, %r15889, 4;
	// begin inline asm
	lop3.b32 %r15893, %r4323, %r15885, %r15896, 202;
	// end inline asm
	xor.b32  	%r16096, %r15893, -2004318072;
	// begin inline asm
	mov.b32 %r15900, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15898, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15899, %r15900, %r15898;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15902, %r15610, %r15899;
	// end inline asm
	// begin inline asm
	mov.b32 %r15905, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15906, %r15900, %r15905;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15909, %r15618, %r15906;
	// end inline asm
	// begin inline asm
	mov.b32 %r15912, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15913, %r15900, %r15912;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15916, %r15626, %r15913;
	// end inline asm
	// begin inline asm
	mov.b32 %r15919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15920, %r15900, %r15919;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15923, %r15634, %r15920;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15926, %r15902, %r15916, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15930, %r15909, %r15923, %r4317;
	// end inline asm
	shl.b32 	%r15937, %r15930, 4;
	// begin inline asm
	lop3.b32 %r15934, %r4323, %r15926, %r15937, 202;
	// end inline asm
	xor.b32  	%r16097, %r15934, -2004318072;
	// begin inline asm
	mov.b32 %r15941, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15940, %r15941, %r15939;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15943, %r15642, %r15940;
	// end inline asm
	// begin inline asm
	mov.b32 %r15946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15947, %r15941, %r15946;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15950, %r15650, %r15947;
	// end inline asm
	// begin inline asm
	mov.b32 %r15953, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15954, %r15941, %r15953;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15957, %r15658, %r15954;
	// end inline asm
	// begin inline asm
	mov.b32 %r15960, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15961, %r15941, %r15960;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15964, %r15666, %r15961;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15967, %r15943, %r15957, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15971, %r15950, %r15964, %r4317;
	// end inline asm
	shl.b32 	%r15978, %r15971, 4;
	// begin inline asm
	lop3.b32 %r15975, %r4323, %r15967, %r15978, 202;
	// end inline asm
	xor.b32  	%r16098, %r15975, -2004318072;
	// begin inline asm
	mov.b32 %r15982, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15980, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15981, %r15982, %r15980;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15984, %r15674, %r15981;
	// end inline asm
	// begin inline asm
	mov.b32 %r15987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15988, %r15982, %r15987;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15991, %r15682, %r15988;
	// end inline asm
	// begin inline asm
	mov.b32 %r15994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15995, %r15982, %r15994;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15998, %r15690, %r15995;
	// end inline asm
	// begin inline asm
	mov.b32 %r16001, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16002, %r15982, %r16001;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16005, %r15698, %r16002;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16008, %r15984, %r15998, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16012, %r15991, %r16005, %r4317;
	// end inline asm
	shl.b32 	%r16019, %r16012, 4;
	// begin inline asm
	lop3.b32 %r16016, %r4323, %r16008, %r16019, 202;
	// end inline asm
	xor.b32  	%r16099, %r16016, -2004318072;
	// begin inline asm
	mov.b32 %r16023, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16022, %r16023, %r16021;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16025, %r15706, %r16022;
	// end inline asm
	// begin inline asm
	mov.b32 %r16028, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16029, %r16023, %r16028;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16032, %r15714, %r16029;
	// end inline asm
	// begin inline asm
	mov.b32 %r16035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16036, %r16023, %r16035;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16039, %r15722, %r16036;
	// end inline asm
	// begin inline asm
	mov.b32 %r16042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16043, %r16023, %r16042;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16046, %r15730, %r16043;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16049, %r16025, %r16039, %r4317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16053, %r16032, %r16046, %r4317;
	// end inline asm
	shl.b32 	%r16060, %r16053, 4;
	// begin inline asm
	lop3.b32 %r16057, %r4323, %r16049, %r16060, 202;
	// end inline asm
	xor.b32  	%r16100, %r16057, -2004318072;
	st.shared.u32 	[%rd82], %r16093;
	st.shared.u32 	[%rd83], %r16094;
	st.shared.u32 	[%rd84], %r16095;
	st.shared.u32 	[%rd85], %r16096;
	st.shared.u32 	[%rd86], %r16097;
	st.shared.u32 	[%rd87], %r16098;
	st.shared.u32 	[%rd88], %r16099;
	st.shared.u32 	[%rd89], %r16100;
	add.s32 	%r16194, %r16194, -128;
	add.s64 	%rd94, %rd94, 16644;
	setp.eq.s32 	%p300, %r16194, 0;
	@%p300 bra 	LBB0_179;
	bra.uni 	LBB0_178;
LBB0_179:                               // %guard_pass22984
                                        //   in Loop: Header=BB0_177 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16106, [%rd13];
	ld.shared.u32 	%r16107, [%rd14+128];
	ld.shared.u32 	%r16114, [%rd14+4];
	ld.shared.u32 	%r16115, [%rd14+132];
	ld.shared.u32 	%r16122, [%rd15];
	ld.shared.u32 	%r16123, [%rd16+128];
	ld.shared.u32 	%r16130, [%rd16+4];
	ld.shared.u32 	%r16131, [%rd16+132];
	// begin inline asm
	prmt.b32 %r16101, %r16106, %r16107, %r769;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16105, %r16106, %r16107, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16109, %r16114, %r16115, %r769;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16113, %r16114, %r16115, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16117, %r16122, %r16123, %r769;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16121, %r16122, %r16123, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16125, %r16130, %r16131, %r769;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16129, %r16130, %r16131, %r773;
	// end inline asm
	selp.b32 	%r16133, %r16105, %r16101, %p299;
	shfl.sync.bfly.b32	%r236, %r16133, 8, 31, -1;
	selp.b32 	%r16134, %r16113, %r16109, %p299;
	shfl.sync.bfly.b32	%r237, %r16134, 8, 31, -1;
	selp.b32 	%r16135, %r16121, %r16117, %p299;
	shfl.sync.bfly.b32	%r238, %r16135, 8, 31, -1;
	selp.b32 	%r16136, %r16129, %r16125, %p299;
	shfl.sync.bfly.b32	%r239, %r16136, 8, 31, -1;
	setp.lt.u32 	%p302, %r176, 384;
	@%p302 bra 	LBB0_181;
// %bb.180:                             // %L63189
                                        //   in Loop: Header=BB0_177 Depth=1
	selp.b32 	%r16137, %r239, %r16129, %p299;
	selp.b32 	%r16138, %r16125, %r239, %p299;
	selp.b32 	%r16139, %r238, %r16121, %p299;
	selp.b32 	%r16140, %r16117, %r238, %p299;
	selp.b32 	%r16141, %r237, %r16113, %p299;
	selp.b32 	%r16142, %r16109, %r237, %p299;
	selp.b32 	%r16143, %r236, %r16105, %p299;
	selp.b32 	%r16144, %r16101, %r236, %p299;
	shl.b32 	%r16145, %r176, 12;
	add.s32 	%r16146, %r150, %r16145;
	mul.wide.s32 	%rd90, %r16146, 4;
	add.s64 	%rd91, %rd3, %rd90;
	st.global.v4.u32 	[%rd91], {%r16144, %r16142, %r16143, %r16141};
	add.s32 	%r16147, %r151, %r16145;
	mul.wide.s32 	%rd92, %r16147, 4;
	add.s64 	%rd93, %rd3, %rd92;
	st.global.v4.u32 	[%rd93], {%r16140, %r16138, %r16139, %r16137};
	bra.uni 	LBB0_181;
LBB0_182:                               // %L63611
	st.global.u32 	[%rd4], %r15156;
	ret;
LBB0_1:                                 // %L8
	mov.u64 	%rd44, exception1;
	cvta.global.u64 	%rd45, %rd44;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd45;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd35;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L163
	mov.u32 	%r245, 2;
	st.global.u32 	[%rd4], %r245;
	mov.u64 	%rd47, exception5095;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd35;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
