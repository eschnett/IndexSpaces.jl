// PTX CompilerJob of upchan(CuDeviceVector{Int32, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int32, 1}) in world 33600 for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z17julia_upchan_407413CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z17julia_upchan_407413CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[8]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5095[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z17julia_upchan_407413CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z17julia_upchan_407413CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z17julia_upchan_407413CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[8],
	.param .align 8 .b8 _Z17julia_upchan_407413CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z17julia_upchan_407413CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z17julia_upchan_407413CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z17julia_upchan_407413CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z17julia_upchan_407413CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<305>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16212>;
	.reg .f32 	%f<1404>;
	.reg .b64 	%rd<95>;

// %bb.0:                               // %conversion
	ld.param.u64 	%rd35, [_Z17julia_upchan_407413CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r228, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r228, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd40, [_Z17julia_upchan_407413CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd36, [_Z17julia_upchan_407413CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r5, %r4, 9;
	or.b32  	%r229, %r3, %r1;
	or.b32  	%r230, %r229, %r5;
	mul.wide.u32 	%rd46, %r230, 4;
	add.s64 	%rd4, %rd40, %rd46;
	mov.u32 	%r231, 1;
	st.global.u32 	[%rd4], %r231;
	ld.global.u32 	%r6, [%rd36];
	and.b32  	%r232, %r6, -32513;
	setp.eq.s32 	%p2, %r232, 0;
	@%p2 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %pass71
	bfe.u32 	%r218, %r1, 1, 1;
	and.b32  	%r219, %r1, 1;
	bfe.u32 	%r221, %r1, 2, 1;
	shr.u32 	%r222, %r1, 4;
	shl.b32 	%r238, %r222, 2;
	shl.b32 	%r239, %r221, 3;
	shl.b32 	%r240, %r219, 4;
	shl.b32 	%r241, %r218, 5;
	or.b32  	%r242, %r240, %r241;
	or.b32  	%r243, %r239, %r242;
	or.b32  	%r244, %r238, %r243;
	bfe.u32 	%r224, %r1, 3, 1;
	shl.b32 	%r245, %r224, 1;
	or.b32  	%r225, %r245, %r244;
	or.b32  	%r226, %r225, 64;
	mov.f32 	%f255, 0f40000000;
	mov.f32 	%f256, 0f43FF8000;
	div.approx.f32 	%f251, %f256, %f255;
	cvt.rn.f32.s32 	%f257, %r225;
	sub.f32 	%f258, %f257, %f251;
	mov.f32 	%f287, 0f43000000;
	div.approx.f32 	%f253, %f258, %f287;
	setp.ne.f32 	%p8, %f253, 0f00000000;
	mov.f32 	%f1363, 0f3F800000;
	mov.f32 	%f1348, %f1363;
	@%p8 bra 	LBB0_5;
	bra.uni 	LBB0_6;
LBB0_5:                                 // %L607
	sin.approx.f32 	%f288, %f253;
	div.approx.f32 	%f1348, %f288, %f253;
LBB0_6:                                 // %L610
	cvt.rn.f32.s32 	%f291, %r226;
	sub.f32 	%f292, %f291, %f251;
	div.approx.f32 	%f5, %f292, %f287;
	setp.eq.f32 	%p14, %f5, 0f00000000;
	mov.f32 	%f1349, %f1363;
	@%p14 bra 	LBB0_8;
// %bb.7:                               // %L627
	sin.approx.f32 	%f322, %f5;
	div.approx.f32 	%f1349, %f322, %f5;
LBB0_8:                                 // %L630
	or.b32  	%r263, %r225, 1;
	or.b32  	%r8, %r225, 65;
	cvt.rn.f32.s32 	%f326, %r263;
	sub.f32 	%f327, %f326, %f251;
	div.approx.f32 	%f9, %f327, %f287;
	setp.eq.f32 	%p20, %f9, 0f00000000;
	mov.f32 	%f1350, %f1363;
	@%p20 bra 	LBB0_10;
// %bb.9:                               // %L709
	sin.approx.f32 	%f357, %f9;
	div.approx.f32 	%f1350, %f357, %f9;
LBB0_10:                                // %L712
	cvt.rn.f32.s32 	%f360, %r8;
	sub.f32 	%f361, %f360, %f251;
	div.approx.f32 	%f14, %f361, %f287;
	setp.eq.f32 	%p26, %f14, 0f00000000;
	mov.f32 	%f1351, %f1363;
	@%p26 bra 	LBB0_12;
// %bb.11:                              // %L729
	sin.approx.f32 	%f391, %f14;
	div.approx.f32 	%f1351, %f391, %f14;
LBB0_12:                                // %L732
	or.b32  	%r281, %r225, 128;
	or.b32  	%r10, %r225, 192;
	cvt.rn.f32.s32 	%f395, %r281;
	sub.f32 	%f396, %f395, %f251;
	div.approx.f32 	%f18, %f396, %f287;
	setp.eq.f32 	%p32, %f18, 0f00000000;
	mov.f32 	%f1352, %f1363;
	@%p32 bra 	LBB0_14;
// %bb.13:                              // %L811
	sin.approx.f32 	%f426, %f18;
	div.approx.f32 	%f1352, %f426, %f18;
LBB0_14:                                // %L814
	cvt.rn.f32.s32 	%f429, %r10;
	sub.f32 	%f430, %f429, %f251;
	div.approx.f32 	%f23, %f430, %f287;
	setp.eq.f32 	%p38, %f23, 0f00000000;
	mov.f32 	%f1353, %f1363;
	@%p38 bra 	LBB0_16;
// %bb.15:                              // %L831
	sin.approx.f32 	%f460, %f23;
	div.approx.f32 	%f1353, %f460, %f23;
LBB0_16:                                // %L834
	or.b32  	%r299, %r225, 129;
	or.b32  	%r12, %r225, 193;
	cvt.rn.f32.s32 	%f464, %r299;
	sub.f32 	%f465, %f464, %f251;
	div.approx.f32 	%f27, %f465, %f287;
	setp.eq.f32 	%p44, %f27, 0f00000000;
	mov.f32 	%f1354, %f1363;
	@%p44 bra 	LBB0_18;
// %bb.17:                              // %L913
	sin.approx.f32 	%f495, %f27;
	div.approx.f32 	%f1354, %f495, %f27;
LBB0_18:                                // %L916
	cvt.rn.f32.s32 	%f498, %r12;
	sub.f32 	%f499, %f498, %f251;
	div.approx.f32 	%f32, %f499, %f287;
	setp.eq.f32 	%p50, %f32, 0f00000000;
	mov.f32 	%f1355, %f1363;
	@%p50 bra 	LBB0_20;
// %bb.19:                              // %L933
	sin.approx.f32 	%f529, %f32;
	div.approx.f32 	%f1355, %f529, %f32;
LBB0_20:                                // %L936
	or.b32  	%r317, %r225, 256;
	or.b32  	%r14, %r225, 320;
	cvt.rn.f32.s32 	%f533, %r317;
	sub.f32 	%f534, %f533, %f251;
	div.approx.f32 	%f36, %f534, %f287;
	setp.eq.f32 	%p56, %f36, 0f00000000;
	mov.f32 	%f1356, %f1363;
	@%p56 bra 	LBB0_22;
// %bb.21:                              // %L1015
	sin.approx.f32 	%f564, %f36;
	div.approx.f32 	%f1356, %f564, %f36;
LBB0_22:                                // %L1018
	mov.f32 	%f259, 0f44004000;
	cvt.rn.f32.s32 	%f567, %r14;
	sub.f32 	%f568, %f567, %f251;
	div.approx.f32 	%f41, %f568, %f287;
	setp.eq.f32 	%p62, %f41, 0f00000000;
	mov.f32 	%f1357, %f1363;
	@%p62 bra 	LBB0_24;
// %bb.23:                              // %L1035
	sin.approx.f32 	%f598, %f41;
	div.approx.f32 	%f1357, %f598, %f41;
LBB0_24:                                // %L1038
	div.approx.f32 	%f260, %f258, %f259;
	div.approx.f32 	%f294, %f292, %f259;
	div.approx.f32 	%f329, %f327, %f259;
	div.approx.f32 	%f363, %f361, %f259;
	div.approx.f32 	%f398, %f396, %f259;
	div.approx.f32 	%f432, %f430, %f259;
	div.approx.f32 	%f467, %f465, %f259;
	div.approx.f32 	%f501, %f499, %f259;
	div.approx.f32 	%f536, %f534, %f259;
	div.approx.f32 	%f570, %f568, %f259;
	or.b32  	%r335, %r225, 257;
	or.b32  	%r16, %r225, 321;
	cvt.rn.f32.s32 	%f602, %r335;
	sub.f32 	%f603, %f602, %f251;
	div.approx.f32 	%f605, %f603, %f259;
	div.approx.f32 	%f45, %f603, %f287;
	setp.eq.f32 	%p68, %f45, 0f00000000;
	mov.f32 	%f1358, %f1363;
	@%p68 bra 	LBB0_26;
// %bb.25:                              // %L1117
	sin.approx.f32 	%f633, %f45;
	div.approx.f32 	%f1358, %f633, %f45;
LBB0_26:                                // %L1120
	abs.f32 	%f261, %f260;
	abs.f32 	%f295, %f294;
	abs.f32 	%f330, %f329;
	abs.f32 	%f364, %f363;
	abs.f32 	%f399, %f398;
	abs.f32 	%f433, %f432;
	abs.f32 	%f468, %f467;
	abs.f32 	%f502, %f501;
	abs.f32 	%f537, %f536;
	abs.f32 	%f571, %f570;
	abs.f32 	%f606, %f605;
	cvt.rn.f32.s32 	%f636, %r16;
	sub.f32 	%f637, %f636, %f251;
	div.approx.f32 	%f639, %f637, %f259;
	abs.f32 	%f640, %f639;
	div.approx.f32 	%f50, %f637, %f287;
	setp.eq.f32 	%p74, %f50, 0f00000000;
	mov.f32 	%f1359, %f1363;
	@%p74 bra 	LBB0_28;
// %bb.27:                              // %L1137
	sin.approx.f32 	%f667, %f50;
	div.approx.f32 	%f1359, %f667, %f50;
LBB0_28:                                // %L1140
	setp.gt.f32 	%p3, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p9, %f295, 0f4B800000;
	mul.f32 	%f296, %f294, 0f00000000;
	setp.gt.f32 	%p15, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p21, %f364, 0f4B800000;
	mul.f32 	%f365, %f363, 0f00000000;
	setp.gt.f32 	%p27, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p33, %f433, 0f4B800000;
	mul.f32 	%f434, %f432, 0f00000000;
	setp.gt.f32 	%p39, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	setp.gt.f32 	%p45, %f502, 0f4B800000;
	mul.f32 	%f503, %f501, 0f00000000;
	setp.gt.f32 	%p51, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	setp.gt.f32 	%p57, %f571, 0f4B800000;
	mul.f32 	%f572, %f570, 0f00000000;
	setp.gt.f32 	%p63, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	setp.gt.f32 	%p69, %f640, 0f4B800000;
	mul.f32 	%f641, %f639, 0f00000000;
	or.b32  	%r353, %r225, 384;
	or.b32  	%r18, %r225, 448;
	cvt.rn.f32.s32 	%f671, %r353;
	sub.f32 	%f672, %f671, %f251;
	div.approx.f32 	%f674, %f672, %f259;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p75, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	div.approx.f32 	%f54, %f672, %f287;
	setp.eq.f32 	%p80, %f54, 0f00000000;
	mov.f32 	%f1360, %f1363;
	@%p80 bra 	LBB0_30;
// %bb.29:                              // %L1219
	sin.approx.f32 	%f702, %f54;
	div.approx.f32 	%f1360, %f702, %f54;
LBB0_30:                                // %L1222
	selp.f32 	%f263, %f262, %f260, %p3;
	selp.f32 	%f297, %f296, %f294, %p9;
	selp.f32 	%f332, %f331, %f329, %p15;
	selp.f32 	%f366, %f365, %f363, %p21;
	selp.f32 	%f401, %f400, %f398, %p27;
	selp.f32 	%f435, %f434, %f432, %p33;
	selp.f32 	%f470, %f469, %f467, %p39;
	selp.f32 	%f504, %f503, %f501, %p45;
	selp.f32 	%f539, %f538, %f536, %p51;
	selp.f32 	%f573, %f572, %f570, %p57;
	selp.f32 	%f608, %f607, %f605, %p63;
	selp.f32 	%f642, %f641, %f639, %p69;
	selp.f32 	%f677, %f676, %f674, %p75;
	cvt.rn.f32.s32 	%f705, %r18;
	sub.f32 	%f706, %f705, %f251;
	div.approx.f32 	%f708, %f706, %f259;
	abs.f32 	%f709, %f708;
	setp.gt.f32 	%p81, %f709, 0f4B800000;
	mul.f32 	%f710, %f708, 0f00000000;
	selp.f32 	%f711, %f710, %f708, %p81;
	div.approx.f32 	%f59, %f706, %f287;
	setp.eq.f32 	%p86, %f59, 0f00000000;
	mov.f32 	%f1361, %f1363;
	@%p86 bra 	LBB0_32;
// %bb.31:                              // %L1239
	sin.approx.f32 	%f736, %f59;
	div.approx.f32 	%f1361, %f736, %f59;
LBB0_32:                                // %L1242
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f298, %f297, %f297;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f367, %f366, %f366;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f436, %f435, %f435;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f505, %f504, %f504;
	add.f32 	%f540, %f539, %f539;
	add.f32 	%f574, %f573, %f573;
	add.f32 	%f609, %f608, %f608;
	add.f32 	%f643, %f642, %f642;
	add.f32 	%f678, %f677, %f677;
	add.f32 	%f712, %f711, %f711;
	or.b32  	%r371, %r225, 385;
	or.b32  	%r20, %r225, 449;
	cvt.rn.f32.s32 	%f740, %r371;
	sub.f32 	%f741, %f740, %f251;
	div.approx.f32 	%f743, %f741, %f259;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p87, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p87;
	add.f32 	%f747, %f746, %f746;
	div.approx.f32 	%f63, %f741, %f287;
	setp.eq.f32 	%p92, %f63, 0f00000000;
	mov.f32 	%f1362, %f1363;
	@%p92 bra 	LBB0_34;
// %bb.33:                              // %L1321
	sin.approx.f32 	%f771, %f63;
	div.approx.f32 	%f1362, %f771, %f63;
LBB0_34:                                // %L1324
	mov.b32 	%r246, %f264;
	mov.b32 	%r253, %f298;
	mov.b32 	%r264, %f333;
	mov.b32 	%r271, %f367;
	mov.b32 	%r282, %f402;
	mov.b32 	%r289, %f436;
	mov.b32 	%r300, %f471;
	mov.b32 	%r307, %f505;
	mov.b32 	%r318, %f540;
	mov.b32 	%r325, %f574;
	mov.b32 	%r336, %f609;
	mov.b32 	%r343, %f643;
	mov.b32 	%r354, %f678;
	mov.b32 	%r361, %f712;
	mov.b32 	%r372, %f747;
	cvt.rn.f32.s32 	%f774, %r20;
	sub.f32 	%f775, %f774, %f251;
	div.approx.f32 	%f777, %f775, %f259;
	abs.f32 	%f778, %f777;
	setp.gt.f32 	%p93, %f778, 0f4B800000;
	mul.f32 	%f779, %f777, 0f00000000;
	selp.f32 	%f780, %f779, %f777, %p93;
	add.f32 	%f781, %f780, %f780;
	mov.b32 	%r379, %f781;
	div.approx.f32 	%f68, %f775, %f287;
	setp.eq.f32 	%p98, %f68, 0f00000000;
	@%p98 bra 	LBB0_36;
// %bb.35:                              // %L1341
	sin.approx.f32 	%f805, %f68;
	div.approx.f32 	%f1363, %f805, %f68;
LBB0_36:                                // %L1344
	and.b32  	%r247, %r246, -2147483648;
	and.b32  	%r254, %r253, -2147483648;
	and.b32  	%r265, %r264, -2147483648;
	and.b32  	%r272, %r271, -2147483648;
	and.b32  	%r283, %r282, -2147483648;
	and.b32  	%r290, %r289, -2147483648;
	and.b32  	%r301, %r300, -2147483648;
	and.b32  	%r308, %r307, -2147483648;
	and.b32  	%r319, %r318, -2147483648;
	and.b32  	%r326, %r325, -2147483648;
	and.b32  	%r337, %r336, -2147483648;
	and.b32  	%r344, %r343, -2147483648;
	and.b32  	%r355, %r354, -2147483648;
	and.b32  	%r362, %r361, -2147483648;
	and.b32  	%r373, %r372, -2147483648;
	and.b32  	%r380, %r379, -2147483648;
	mul.lo.s32 	%r22, %r225, 127;
	cvt.rn.f32.s32 	%f808, %r22;
	div.approx.f32 	%f71, %f808, %f287;
	abs.f32 	%f1366, %f71;
	setp.lt.f32 	%p99, %f1366, 0f40000000;
	@%p99 bra 	LBB0_48;
// %bb.37:
	setp.gtu.f32 	%p100, %f1366, 0f4B800000;
	@%p100 bra 	LBB0_44;
	bra.uni 	LBB0_38;
LBB0_44:
	mov.b32 	%r24, %f1366;
	and.b32  	%r389, %r24, 8388607;
	or.b32  	%r16142, %r389, 1065353216;
	mov.b32 	%f1365, %r16142;
	add.s32 	%r390, %r24, -1073741824;
	and.b32  	%r16143, %r390, -8388608;
	setp.eq.s32 	%p106, %r16143, 0;
	@%p106 bra 	LBB0_47;
// %bb.45:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f819, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f818,%f819;
	// end inline asm
LBB0_46:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r391, %r16143, 192937984;
	add.s32 	%r392, %r391, %r16142;
	mov.b32 	%f820, %r392;
	mul.f32 	%f821, %f818, %f820;
	sub.f32 	%f822, %f820, %f821;
	fma.rn.f32 	%f823, %f822, %f818, %f821;
	sub.f32 	%f824, %f820, %f823;
	fma.rz.f32 	%f825, %f824, %f818, %f823;
	cvt.rzi.f32.f32 	%f826, %f825;
	sub.f32 	%f1365, %f820, %f826;
	sub.s32 	%r16143, %r16143, %r391;
	mov.b32 	%r16142, %f1365;
	setp.ne.s32 	%p107, %r16143, 0;
	setp.ne.s32 	%p108, %r16142, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	LBB0_46;
LBB0_47:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r24, 2139095039;
	selp.f32 	%f827, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f828, %f1365, 0f34000000;
	mul.f32 	%f1366, %f827, %f828;
	bra.uni 	LBB0_48;
LBB0_38:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f811, %f1366, %f255;
	cvt.rzi.f32.f32 	%f1364, %f811;
	fma.rn.f32 	%f74, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r23, %f74;
	setp.lt.u32 	%p101, %r23, 1073741824;
	@%p101 bra 	LBB0_43;
// %bb.39:
	setp.lt.u32 	%p102, %r23, -2147483647;
	@%p102 bra 	LBB0_41;
// %bb.40:
	add.f32 	%f816, %f1364, 0fBF800000;
	setp.lt.f32 	%p105, %f74, 0fC0000000;
	add.f32 	%f817, %f816, 0fBF800000;
	selp.f32 	%f1364, %f817, %f816, %p105;
	bra.uni 	LBB0_43;
LBB0_41:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p103, %f74, 0f40800000;
	@%p103 bra 	LBB0_43;
// %bb.42:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f812, %f1364, 0f3F800000;
	fma.rn.f32 	%f814, %f255, 0fC0400000, %f74;
	setp.ge.f32 	%p104, %f814, 0f00000000;
	add.f32 	%f815, %f812, 0f3F800000;
	selp.f32 	%f1364, %f815, %f812, %p104;
LBB0_43:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
LBB0_48:                                // %__internal_fmodf_kernel.exit.i
	or.b32  	%r248, %r247, 1056964608;
	or.b32  	%r255, %r254, 1056964608;
	or.b32  	%r266, %r265, 1056964608;
	or.b32  	%r273, %r272, 1056964608;
	or.b32  	%r284, %r283, 1056964608;
	or.b32  	%r291, %r290, 1056964608;
	or.b32  	%r302, %r301, 1056964608;
	or.b32  	%r309, %r308, 1056964608;
	or.b32  	%r320, %r319, 1056964608;
	or.b32  	%r327, %r326, 1056964608;
	or.b32  	%r338, %r337, 1056964608;
	or.b32  	%r345, %r344, 1056964608;
	or.b32  	%r356, %r355, 1056964608;
	or.b32  	%r363, %r362, 1056964608;
	or.b32  	%r374, %r373, 1056964608;
	or.b32  	%r381, %r380, 1056964608;
	abs.f32 	%f829, %f1366;
	setp.gtu.f32 	%p111, %f829, 0f7F800000;
	@%p111 bra 	LBB0_50;
// %bb.49:
	mov.b32 	%r393, %f71;
	and.b32  	%r394, %r393, -2147483648;
	mov.b32 	%r395, %f1366;
	or.b32  	%r396, %r394, %r395;
	mov.b32 	%f1366, %r396;
LBB0_50:                                // %__nv_fmodf.exit
	mov.b32 	%f265, %r248;
	mov.b32 	%f299, %r255;
	mov.b32 	%f334, %r266;
	mov.b32 	%f368, %r273;
	mov.b32 	%f403, %r284;
	mov.b32 	%f437, %r291;
	mov.b32 	%f472, %r302;
	mov.b32 	%f506, %r309;
	mov.b32 	%f541, %r320;
	mov.b32 	%f575, %r327;
	mov.b32 	%f610, %r338;
	mov.b32 	%f644, %r345;
	mov.b32 	%f679, %r356;
	mov.b32 	%f713, %r363;
	mov.b32 	%f748, %r374;
	mov.b32 	%f782, %r381;
	add.f32 	%f830, %f1366, %f1366;
	mov.b32 	%r397, %f830;
	and.b32  	%r398, %r397, -2147483648;
	or.b32  	%r399, %r398, 1056964608;
	mov.b32 	%f831, %r399;
	add.f32 	%f832, %f830, %f831;
	cvt.rzi.f32.f32 	%f833, %f832;
	abs.f32 	%f834, %f830;
	setp.gt.f32 	%p112, %f834, 0f4B000000;
	selp.f32 	%f835, %f830, %f833, %p112;
	cvt.rzi.f32.f32 	%f836, %f830;
	setp.lt.f32 	%p113, %f834, 0f3F000000;
	add.s32 	%r405, %r22, 8128;
	cvt.rn.f32.s32 	%f861, %r405;
	div.approx.f32 	%f90, %f861, %f287;
	abs.f32 	%f1370, %f90;
	setp.lt.f32 	%p119, %f1370, 0f40000000;
	@%p119 bra 	LBB0_62;
// %bb.51:
	setp.gtu.f32 	%p120, %f1370, 0f4B800000;
	@%p120 bra 	LBB0_58;
	bra.uni 	LBB0_52;
LBB0_58:
	mov.b32 	%r32, %f1370;
	and.b32  	%r406, %r32, 8388607;
	or.b32  	%r16144, %r406, 1065353216;
	mov.b32 	%f1369, %r16144;
	add.s32 	%r407, %r32, -1073741824;
	and.b32  	%r16145, %r407, -8388608;
	setp.eq.s32 	%p126, %r16145, 0;
	@%p126 bra 	LBB0_61;
// %bb.59:                              // %__nv_fmaf_rn.exit4.i.i.i2229.preheader
	mov.f32 	%f872, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f871,%f872;
	// end inline asm
LBB0_60:                                // %__nv_fmaf_rn.exit4.i.i.i2229
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r408, %r16145, 192937984;
	add.s32 	%r409, %r408, %r16144;
	mov.b32 	%f873, %r409;
	mul.f32 	%f874, %f871, %f873;
	sub.f32 	%f875, %f873, %f874;
	fma.rn.f32 	%f876, %f875, %f871, %f874;
	sub.f32 	%f877, %f873, %f876;
	fma.rz.f32 	%f878, %f877, %f871, %f876;
	cvt.rzi.f32.f32 	%f879, %f878;
	sub.f32 	%f1369, %f873, %f879;
	sub.s32 	%r16145, %r16145, %r408;
	mov.b32 	%r16144, %f1369;
	setp.ne.s32 	%p127, %r16145, 0;
	setp.ne.s32 	%p128, %r16144, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	LBB0_60;
LBB0_61:                                // %__internal_fmodf_slowpath_mod.exit.i.i2231
	setp.gt.u32 	%p130, %r32, 2139095039;
	selp.f32 	%f880, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f881, %f1369, 0f34000000;
	mul.f32 	%f1370, %f880, %f881;
	bra.uni 	LBB0_62;
LBB0_52:                                // %__nv_fast_fdividef.exit.i.i.i2201
	div.approx.f32 	%f864, %f1370, %f255;
	cvt.rzi.f32.f32 	%f1368, %f864;
	fma.rn.f32 	%f93, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r31, %f93;
	setp.lt.u32 	%p121, %r31, 1073741824;
	@%p121 bra 	LBB0_57;
// %bb.53:
	setp.lt.u32 	%p122, %r31, -2147483647;
	@%p122 bra 	LBB0_55;
// %bb.54:
	add.f32 	%f869, %f1368, 0fBF800000;
	setp.lt.f32 	%p125, %f93, 0fC0000000;
	add.f32 	%f870, %f869, 0fBF800000;
	selp.f32 	%f1368, %f870, %f869, %p125;
	bra.uni 	LBB0_57;
LBB0_55:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p123, %f93, 0f40800000;
	@%p123 bra 	LBB0_57;
// %bb.56:                              // %__nv_fmaf_rn.exit.i.i.i2206
	add.f32 	%f865, %f1368, 0f3F800000;
	fma.rn.f32 	%f867, %f255, 0fC0400000, %f93;
	setp.ge.f32 	%p124, %f867, 0f00000000;
	add.f32 	%f868, %f865, 0f3F800000;
	selp.f32 	%f1368, %f868, %f865, %p124;
LBB0_57:                                // %__internal_fmodf_fastpath_quot.exit.i.i2210
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
LBB0_62:                                // %__internal_fmodf_kernel.exit.i2235
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f300, %f298, %f299;
	abs.f32 	%f302, %f298;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f369, %f367, %f368;
	abs.f32 	%f371, %f367;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f438, %f436, %f437;
	abs.f32 	%f440, %f436;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f507, %f505, %f506;
	abs.f32 	%f509, %f505;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f576, %f574, %f575;
	abs.f32 	%f578, %f574;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f714, %f712, %f713;
	abs.f32 	%f716, %f712;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	add.f32 	%f783, %f781, %f782;
	abs.f32 	%f785, %f781;
	selp.f32 	%f837, %f836, %f835, %p113;
	shr.u32 	%r220, %r1, 2;
	abs.f32 	%f882, %f1370;
	setp.gtu.f32 	%p131, %f882, 0f7F800000;
	@%p131 bra 	LBB0_64;
// %bb.63:
	mov.b32 	%r410, %f90;
	and.b32  	%r411, %r410, -2147483648;
	mov.b32 	%r412, %f1370;
	or.b32  	%r413, %r411, %r412;
	mov.b32 	%f1370, %r413;
LBB0_64:                                // %__nv_fmodf.exit2236
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p4, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f301, %f300;
	setp.gt.f32 	%p10, %f302, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p16, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f370, %f369;
	setp.gt.f32 	%p22, %f371, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p28, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f439, %f438;
	setp.gt.f32 	%p34, %f440, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p40, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f508, %f507;
	setp.gt.f32 	%p46, %f509, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p52, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f577, %f576;
	setp.gt.f32 	%p58, %f578, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p64, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p70, %f647, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p76, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f715, %f714;
	setp.gt.f32 	%p82, %f716, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p88, %f751, 0f4B000000;
	cvt.rzi.f32.f32 	%f784, %f783;
	setp.gt.f32 	%p94, %f785, 0f4B000000;
	fma.rn.f32 	%f838, %f837, 0fBF000000, %f1366;
	add.f32 	%f883, %f1370, %f1370;
	mov.b32 	%r426, %f883;
	and.b32  	%r427, %r426, -2147483648;
	or.b32  	%r428, %r427, 1056964608;
	mov.b32 	%f884, %r428;
	add.f32 	%f885, %f883, %f884;
	cvt.rzi.f32.f32 	%f886, %f885;
	abs.f32 	%f887, %f883;
	setp.gt.f32 	%p132, %f887, 0f4B000000;
	selp.f32 	%f888, %f883, %f886, %p132;
	cvt.rzi.f32.f32 	%f889, %f883;
	setp.lt.f32 	%p133, %f887, 0f3F000000;
	selp.f32 	%f890, %f889, %f888, %p133;
	fma.rn.f32 	%f891, %f890, 0fBF000000, %f1370;
	and.b32  	%r434, %r1, 3;
	mul.lo.s32 	%r435, %r434, %r220;
	shl.b32 	%r436, %r435, 1;
	neg.s32 	%r43, %r436;
	cvt.rn.f32.s32 	%f916, %r43;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f107, %f916, %f917;
	abs.f32 	%f1374, %f107;
	setp.lt.f32 	%p139, %f1374, 0f40000000;
	@%p139 bra 	LBB0_76;
// %bb.65:
	setp.gtu.f32 	%p140, %f1374, 0f4B800000;
	@%p140 bra 	LBB0_72;
	bra.uni 	LBB0_66;
LBB0_72:
	mov.b32 	%r45, %f1374;
	and.b32  	%r437, %r45, 8388607;
	or.b32  	%r16146, %r437, 1065353216;
	mov.b32 	%f1373, %r16146;
	add.s32 	%r438, %r45, -1073741824;
	and.b32  	%r16147, %r438, -8388608;
	setp.eq.s32 	%p146, %r16147, 0;
	@%p146 bra 	LBB0_75;
// %bb.73:                              // %__nv_fmaf_rn.exit4.i.i.i2275.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
LBB0_74:                                // %__nv_fmaf_rn.exit4.i.i.i2275
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r439, %r16147, 192937984;
	add.s32 	%r440, %r439, %r16146;
	mov.b32 	%f928, %r440;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1373, %f928, %f934;
	sub.s32 	%r16147, %r16147, %r439;
	mov.b32 	%r16146, %f1373;
	setp.ne.s32 	%p147, %r16147, 0;
	setp.ne.s32 	%p148, %r16146, 0;
	and.pred  	%p149, %p147, %p148;
	@%p149 bra 	LBB0_74;
LBB0_75:                                // %__internal_fmodf_slowpath_mod.exit.i.i2277
	setp.gt.u32 	%p150, %r45, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p150;
	mul.f32 	%f936, %f1373, 0f34000000;
	mul.f32 	%f1374, %f935, %f936;
	bra.uni 	LBB0_76;
LBB0_66:                                // %__nv_fast_fdividef.exit.i.i.i2247
	div.approx.f32 	%f919, %f1374, %f255;
	cvt.rzi.f32.f32 	%f1372, %f919;
	fma.rn.f32 	%f110, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r44, %f110;
	setp.lt.u32 	%p141, %r44, 1073741824;
	@%p141 bra 	LBB0_71;
// %bb.67:
	setp.lt.u32 	%p142, %r44, -2147483647;
	@%p142 bra 	LBB0_69;
// %bb.68:
	add.f32 	%f924, %f1372, 0fBF800000;
	setp.lt.f32 	%p145, %f110, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1372, %f925, %f924, %p145;
	bra.uni 	LBB0_71;
LBB0_69:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p143, %f110, 0f40800000;
	@%p143 bra 	LBB0_71;
// %bb.70:                              // %__nv_fmaf_rn.exit.i.i.i2252
	add.f32 	%f920, %f1372, 0f3F800000;
	fma.rn.f32 	%f922, %f255, 0fC0400000, %f110;
	setp.ge.f32 	%p144, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1372, %f923, %f920, %p144;
LBB0_71:                                // %__internal_fmodf_fastpath_quot.exit.i.i2256
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
LBB0_76:                                // %__internal_fmodf_kernel.exit.i2281
	selp.f32 	%f269, %f264, %f267, %p4;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p5, %f268, 0f3F000000;
	selp.f32 	%f303, %f298, %f301, %p10;
	cvt.rzi.f32.f32 	%f304, %f298;
	setp.lt.f32 	%p11, %f302, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p16;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p17, %f337, 0f3F000000;
	selp.f32 	%f372, %f367, %f370, %p22;
	cvt.rzi.f32.f32 	%f373, %f367;
	setp.lt.f32 	%p23, %f371, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p28;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p29, %f406, 0f3F000000;
	selp.f32 	%f441, %f436, %f439, %p34;
	cvt.rzi.f32.f32 	%f442, %f436;
	setp.lt.f32 	%p35, %f440, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p40;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p41, %f475, 0f3F000000;
	selp.f32 	%f510, %f505, %f508, %p46;
	cvt.rzi.f32.f32 	%f511, %f505;
	setp.lt.f32 	%p47, %f509, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p52;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p53, %f544, 0f3F000000;
	selp.f32 	%f579, %f574, %f577, %p58;
	cvt.rzi.f32.f32 	%f580, %f574;
	setp.lt.f32 	%p59, %f578, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p64;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p65, %f613, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p70;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p71, %f647, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p76;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p77, %f682, 0f3F000000;
	selp.f32 	%f717, %f712, %f715, %p82;
	cvt.rzi.f32.f32 	%f718, %f712;
	setp.lt.f32 	%p83, %f716, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p88;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p89, %f751, 0f3F000000;
	selp.f32 	%f786, %f781, %f784, %p94;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p95, %f785, 0f3F000000;
	mul.f32 	%f839, %f838, 0f34222169;
	mul.f32 	%f892, %f891, 0f34222169;
	abs.f32 	%f937, %f1374;
	setp.gtu.f32 	%p151, %f937, 0f7F800000;
	@%p151 bra 	LBB0_78;
// %bb.77:
	mov.b32 	%r441, %f107;
	and.b32  	%r442, %r441, -2147483648;
	mov.b32 	%r443, %f1374;
	or.b32  	%r444, %r442, %r443;
	mov.b32 	%f1374, %r444;
LBB0_78:                                // %__nv_fmodf.exit2282
	selp.f32 	%f271, %f270, %f269, %p5;
	selp.f32 	%f305, %f304, %f303, %p11;
	selp.f32 	%f340, %f339, %f338, %p17;
	selp.f32 	%f374, %f373, %f372, %p23;
	selp.f32 	%f409, %f408, %f407, %p29;
	selp.f32 	%f443, %f442, %f441, %p35;
	selp.f32 	%f478, %f477, %f476, %p41;
	selp.f32 	%f512, %f511, %f510, %p47;
	selp.f32 	%f547, %f546, %f545, %p53;
	selp.f32 	%f581, %f580, %f579, %p59;
	selp.f32 	%f616, %f615, %f614, %p65;
	selp.f32 	%f650, %f649, %f648, %p71;
	selp.f32 	%f685, %f684, %f683, %p77;
	selp.f32 	%f719, %f718, %f717, %p83;
	selp.f32 	%f754, %f753, %f752, %p89;
	selp.f32 	%f788, %f787, %f786, %p95;
	fma.rn.f32 	%f840, %f838, 0f40490FDA, %f839;
	fma.rn.f32 	%f893, %f891, 0f40490FDA, %f892;
	add.f32 	%f938, %f1374, %f1374;
	mov.b32 	%r445, %f938;
	and.b32  	%r446, %r445, -2147483648;
	or.b32  	%r447, %r446, 1056964608;
	mov.b32 	%f939, %r447;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p152, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p152;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p153, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p153;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1374;
	mul.f32 	%f947, %f946, 0f34222169;
	fma.rn.f32 	%f948, %f946, 0f40490FDA, %f947;
	shl.b32 	%r52, %r220, 3;
	sub.s32 	%r453, %r43, %r52;
	cvt.rn.f32.s32 	%f969, %r453;
	div.approx.f32 	%f126, %f969, %f917;
	abs.f32 	%f1378, %f126;
	setp.lt.f32 	%p159, %f1378, 0f40000000;
	@%p159 bra 	LBB0_90;
// %bb.79:
	setp.gtu.f32 	%p160, %f1378, 0f4B800000;
	@%p160 bra 	LBB0_86;
	bra.uni 	LBB0_80;
LBB0_86:
	mov.b32 	%r54, %f1378;
	and.b32  	%r454, %r54, 8388607;
	or.b32  	%r16148, %r454, 1065353216;
	mov.b32 	%f1377, %r16148;
	add.s32 	%r455, %r54, -1073741824;
	and.b32  	%r16149, %r455, -8388608;
	setp.eq.s32 	%p166, %r16149, 0;
	@%p166 bra 	LBB0_89;
// %bb.87:                              // %__nv_fmaf_rn.exit4.i.i.i2321.preheader
	mov.f32 	%f980, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f979,%f980;
	// end inline asm
LBB0_88:                                // %__nv_fmaf_rn.exit4.i.i.i2321
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r456, %r16149, 192937984;
	add.s32 	%r457, %r456, %r16148;
	mov.b32 	%f981, %r457;
	mul.f32 	%f982, %f979, %f981;
	sub.f32 	%f983, %f981, %f982;
	fma.rn.f32 	%f984, %f983, %f979, %f982;
	sub.f32 	%f985, %f981, %f984;
	fma.rz.f32 	%f986, %f985, %f979, %f984;
	cvt.rzi.f32.f32 	%f987, %f986;
	sub.f32 	%f1377, %f981, %f987;
	sub.s32 	%r16149, %r16149, %r456;
	mov.b32 	%r16148, %f1377;
	setp.ne.s32 	%p167, %r16149, 0;
	setp.ne.s32 	%p168, %r16148, 0;
	and.pred  	%p169, %p167, %p168;
	@%p169 bra 	LBB0_88;
LBB0_89:                                // %__internal_fmodf_slowpath_mod.exit.i.i2323
	setp.gt.u32 	%p170, %r54, 2139095039;
	selp.f32 	%f988, 0f7FFFFFFF, 0f4B800000, %p170;
	mul.f32 	%f989, %f1377, 0f34000000;
	mul.f32 	%f1378, %f988, %f989;
	bra.uni 	LBB0_90;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i2293
	div.approx.f32 	%f972, %f1378, %f255;
	cvt.rzi.f32.f32 	%f1376, %f972;
	fma.rn.f32 	%f129, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r53, %f129;
	setp.lt.u32 	%p161, %r53, 1073741824;
	@%p161 bra 	LBB0_85;
// %bb.81:
	setp.lt.u32 	%p162, %r53, -2147483647;
	@%p162 bra 	LBB0_83;
// %bb.82:
	add.f32 	%f977, %f1376, 0fBF800000;
	setp.lt.f32 	%p165, %f129, 0fC0000000;
	add.f32 	%f978, %f977, 0fBF800000;
	selp.f32 	%f1376, %f978, %f977, %p165;
	bra.uni 	LBB0_85;
LBB0_83:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p163, %f129, 0f40800000;
	@%p163 bra 	LBB0_85;
// %bb.84:                              // %__nv_fmaf_rn.exit.i.i.i2298
	add.f32 	%f973, %f1376, 0f3F800000;
	fma.rn.f32 	%f975, %f255, 0fC0400000, %f129;
	setp.ge.f32 	%p164, %f975, 0f00000000;
	add.f32 	%f976, %f973, 0f3F800000;
	selp.f32 	%f1376, %f976, %f973, %p164;
LBB0_85:                                // %__internal_fmodf_fastpath_quot.exit.i.i2302
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
LBB0_90:                                // %__internal_fmodf_kernel.exit.i2327
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f306, %f305, 0fBF000000, %f297;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f375, %f374, 0fBF000000, %f366;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f444, %f443, 0fBF000000, %f435;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f513, %f512, 0fBF000000, %f504;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f582, %f581, 0fBF000000, %f573;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f642;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f720, %f719, 0fBF000000, %f711;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f780;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f894, %f893, %f893;
	mul.f32 	%f949, %f948, %f948;
	shl.b32 	%r208, %r1, 1;
	abs.f32 	%f990, %f1378;
	setp.gtu.f32 	%p171, %f990, 0f7F800000;
	@%p171 bra 	LBB0_92;
// %bb.91:
	mov.b32 	%r458, %f126;
	and.b32  	%r459, %r458, -2147483648;
	mov.b32 	%r460, %f1378;
	or.b32  	%r461, %r459, %r460;
	mov.b32 	%f1378, %r461;
LBB0_92:                                // %__nv_fmodf.exit2328
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f307, %f306, %f306;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f376, %f375, %f375;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f445, %f444, %f444;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f514, %f513, %f513;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f583, %f582, %f582;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f652, %f651, %f651;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f721, %f720, %f720;
	mul.f32 	%f756, %f755, %f755;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f842, %f841, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f895, %f894, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f950, %f949, 0f37CBAC00, 0fBAB607ED;
	add.f32 	%f991, %f1378, %f1378;
	mov.b32 	%r474, %f991;
	and.b32  	%r475, %r474, -2147483648;
	or.b32  	%r476, %r475, 1056964608;
	mov.b32 	%f992, %r476;
	add.f32 	%f993, %f991, %f992;
	cvt.rzi.f32.f32 	%f994, %f993;
	abs.f32 	%f995, %f991;
	setp.gt.f32 	%p172, %f995, 0f4B000000;
	selp.f32 	%f996, %f991, %f994, %p172;
	cvt.rzi.f32.f32 	%f997, %f991;
	setp.lt.f32 	%p173, %f995, 0f3F000000;
	selp.f32 	%f998, %f997, %f996, %p173;
	fma.rn.f32 	%f999, %f998, 0fBF000000, %f1378;
	mul.f32 	%f1000, %f999, 0f34222169;
	fma.rn.f32 	%f1001, %f999, 0f40490FDA, %f1000;
	mul.f32 	%f1002, %f1001, %f1001;
	fma.rn.f32 	%f1003, %f1002, 0f37CBAC00, 0fBAB607ED;
	and.b32  	%r482, %r208, 6;
	shl.b32 	%r483, %r482, 1;
	neg.s32 	%r65, %r483;
	mul.lo.s32 	%r66, %r65, %r220;
	cvt.rn.f32.s32 	%f1024, %r66;
	div.approx.f32 	%f143, %f1024, %f287;
	abs.f32 	%f1382, %f143;
	setp.lt.f32 	%p179, %f1382, 0f40000000;
	@%p179 bra 	LBB0_104;
// %bb.93:
	setp.gtu.f32 	%p180, %f1382, 0f4B800000;
	@%p180 bra 	LBB0_100;
	bra.uni 	LBB0_94;
LBB0_100:
	mov.b32 	%r68, %f1382;
	and.b32  	%r484, %r68, 8388607;
	or.b32  	%r16150, %r484, 1065353216;
	mov.b32 	%f1381, %r16150;
	add.s32 	%r485, %r68, -1073741824;
	and.b32  	%r16151, %r485, -8388608;
	setp.eq.s32 	%p186, %r16151, 0;
	@%p186 bra 	LBB0_103;
// %bb.101:                             // %__nv_fmaf_rn.exit4.i.i.i2367.preheader
	mov.f32 	%f1035, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1034,%f1035;
	// end inline asm
LBB0_102:                               // %__nv_fmaf_rn.exit4.i.i.i2367
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r486, %r16151, 192937984;
	add.s32 	%r487, %r486, %r16150;
	mov.b32 	%f1036, %r487;
	mul.f32 	%f1037, %f1034, %f1036;
	sub.f32 	%f1038, %f1036, %f1037;
	fma.rn.f32 	%f1039, %f1038, %f1034, %f1037;
	sub.f32 	%f1040, %f1036, %f1039;
	fma.rz.f32 	%f1041, %f1040, %f1034, %f1039;
	cvt.rzi.f32.f32 	%f1042, %f1041;
	sub.f32 	%f1381, %f1036, %f1042;
	sub.s32 	%r16151, %r16151, %r486;
	mov.b32 	%r16150, %f1381;
	setp.ne.s32 	%p187, %r16151, 0;
	setp.ne.s32 	%p188, %r16150, 0;
	and.pred  	%p189, %p187, %p188;
	@%p189 bra 	LBB0_102;
LBB0_103:                               // %__internal_fmodf_slowpath_mod.exit.i.i2369
	setp.gt.u32 	%p190, %r68, 2139095039;
	selp.f32 	%f1043, 0f7FFFFFFF, 0f4B800000, %p190;
	mul.f32 	%f1044, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1043, %f1044;
	bra.uni 	LBB0_104;
LBB0_94:                                // %__nv_fast_fdividef.exit.i.i.i2339
	div.approx.f32 	%f1027, %f1382, %f255;
	cvt.rzi.f32.f32 	%f1380, %f1027;
	fma.rn.f32 	%f146, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r67, %f146;
	setp.lt.u32 	%p181, %r67, 1073741824;
	@%p181 bra 	LBB0_99;
// %bb.95:
	setp.lt.u32 	%p182, %r67, -2147483647;
	@%p182 bra 	LBB0_97;
// %bb.96:
	add.f32 	%f1032, %f1380, 0fBF800000;
	setp.lt.f32 	%p185, %f146, 0fC0000000;
	add.f32 	%f1033, %f1032, 0fBF800000;
	selp.f32 	%f1380, %f1033, %f1032, %p185;
	bra.uni 	LBB0_99;
LBB0_97:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p183, %f146, 0f40800000;
	@%p183 bra 	LBB0_99;
// %bb.98:                              // %__nv_fmaf_rn.exit.i.i.i2344
	add.f32 	%f1028, %f1380, 0f3F800000;
	fma.rn.f32 	%f1030, %f255, 0fC0400000, %f146;
	setp.ge.f32 	%p184, %f1030, 0f00000000;
	add.f32 	%f1031, %f1028, 0f3F800000;
	selp.f32 	%f1380, %f1031, %f1028, %p184;
LBB0_99:                                // %__internal_fmodf_fastpath_quot.exit.i.i2348
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
LBB0_104:                               // %__internal_fmodf_kernel.exit.i2373
	cvt.rzi.s32.f32 	%r249, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r256, %f305;
	fma.rn.f32 	%f308, %f307, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f309, %f307, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r267, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r274, %f374;
	fma.rn.f32 	%f377, %f376, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f378, %f376, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r285, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r292, %f443;
	fma.rn.f32 	%f446, %f445, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f447, %f445, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r303, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r310, %f512;
	fma.rn.f32 	%f515, %f514, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f516, %f514, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r321, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r328, %f581;
	fma.rn.f32 	%f584, %f583, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f585, %f583, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r339, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r346, %f650;
	fma.rn.f32 	%f653, %f652, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f654, %f652, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r357, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r364, %f719;
	fma.rn.f32 	%f722, %f721, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f723, %f721, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r375, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r382, %f788;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r400, %f837;
	fma.rn.f32 	%f843, %f842, %f841, 0f3D2AAABB;
	fma.rn.f32 	%f847, %f841, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r429, %f890;
	fma.rn.f32 	%f896, %f895, %f894, 0f3D2AAABB;
	fma.rn.f32 	%f900, %f894, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r448, %f945;
	fma.rn.f32 	%f951, %f950, %f949, 0f3D2AAABB;
	fma.rn.f32 	%f955, %f949, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r477, %f998;
	fma.rn.f32 	%f1004, %f1003, %f1002, 0f3D2AAABB;
	fma.rn.f32 	%f1008, %f1002, 0fB94D4153, 0f3C0885E4;
	abs.f32 	%f1045, %f1382;
	setp.gtu.f32 	%p191, %f1045, 0f7F800000;
	@%p191 bra 	LBB0_106;
// %bb.105:
	mov.b32 	%r488, %f143;
	and.b32  	%r489, %r488, -2147483648;
	mov.b32 	%r490, %f1382;
	or.b32  	%r491, %r489, %r490;
	mov.b32 	%f1382, %r491;
LBB0_106:                               // %__nv_fmodf.exit2374
	add.s32 	%r250, %r249, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r257, %r256, 1;
	fma.rn.f32 	%f310, %f308, %f307, 0fC0A55DF6;
	fma.rn.f32 	%f311, %f309, %f307, 0f4081E0CF;
	fma.rn.f32 	%f312, %f307, %f306, 0f00000000;
	add.s32 	%r268, %r267, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r275, %r274, 1;
	fma.rn.f32 	%f379, %f377, %f376, 0fC0A55DF6;
	fma.rn.f32 	%f380, %f378, %f376, 0f4081E0CF;
	fma.rn.f32 	%f381, %f376, %f375, 0f00000000;
	add.s32 	%r286, %r285, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r293, %r292, 1;
	fma.rn.f32 	%f448, %f446, %f445, 0fC0A55DF6;
	fma.rn.f32 	%f449, %f447, %f445, 0f4081E0CF;
	fma.rn.f32 	%f450, %f445, %f444, 0f00000000;
	add.s32 	%r304, %r303, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r311, %r310, 1;
	fma.rn.f32 	%f517, %f515, %f514, 0fC0A55DF6;
	fma.rn.f32 	%f518, %f516, %f514, 0f4081E0CF;
	fma.rn.f32 	%f519, %f514, %f513, 0f00000000;
	add.s32 	%r322, %r321, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r329, %r328, 1;
	fma.rn.f32 	%f586, %f584, %f583, 0fC0A55DF6;
	fma.rn.f32 	%f587, %f585, %f583, 0f4081E0CF;
	fma.rn.f32 	%f588, %f583, %f582, 0f00000000;
	add.s32 	%r340, %r339, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r347, %r346, 1;
	fma.rn.f32 	%f655, %f653, %f652, 0fC0A55DF6;
	fma.rn.f32 	%f656, %f654, %f652, 0f4081E0CF;
	fma.rn.f32 	%f657, %f652, %f651, 0f00000000;
	add.s32 	%r358, %r357, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r365, %r364, 1;
	fma.rn.f32 	%f724, %f722, %f721, 0fC0A55DF6;
	fma.rn.f32 	%f725, %f723, %f721, 0f4081E0CF;
	fma.rn.f32 	%f726, %f721, %f720, 0f00000000;
	add.s32 	%r376, %r375, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	add.s32 	%r383, %r382, 1;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f844, %f843, %f841, 0fBEFFFFFF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	fma.rn.f32 	%f848, %f847, %f841, 0fBE2AAAA8;
	and.b32  	%r401, %r400, 1;
	fma.rn.f32 	%f897, %f896, %f894, 0fBEFFFFFF;
	fma.rn.f32 	%f899, %f894, %f893, 0f00000000;
	fma.rn.f32 	%f901, %f900, %f894, 0fBE2AAAA8;
	and.b32  	%r430, %r429, 1;
	fma.rn.f32 	%f952, %f951, %f949, 0fBEFFFFFF;
	fma.rn.f32 	%f954, %f949, %f948, 0f00000000;
	fma.rn.f32 	%f956, %f955, %f949, 0fBE2AAAA8;
	and.b32  	%r449, %r448, 1;
	fma.rn.f32 	%f1005, %f1004, %f1002, 0fBEFFFFFF;
	fma.rn.f32 	%f1007, %f1002, %f1001, 0f00000000;
	fma.rn.f32 	%f1009, %f1008, %f1002, 0fBE2AAAA8;
	and.b32  	%r478, %r477, 1;
	add.f32 	%f1046, %f1382, %f1382;
	mov.b32 	%r492, %f1046;
	and.b32  	%r493, %r492, -2147483648;
	or.b32  	%r494, %r493, 1056964608;
	mov.b32 	%f1047, %r494;
	add.f32 	%f1048, %f1046, %f1047;
	cvt.rzi.f32.f32 	%f1049, %f1048;
	abs.f32 	%f1050, %f1046;
	setp.gt.f32 	%p192, %f1050, 0f4B000000;
	selp.f32 	%f1051, %f1046, %f1049, %p192;
	cvt.rzi.f32.f32 	%f1052, %f1046;
	setp.lt.f32 	%p193, %f1050, 0f3F000000;
	selp.f32 	%f1053, %f1052, %f1051, %p193;
	cvt.rzi.s32.f32 	%r495, %f1053;
	fma.rn.f32 	%f1054, %f1053, 0fBF000000, %f1382;
	mul.f32 	%f1055, %f1054, 0f34222169;
	fma.rn.f32 	%f1056, %f1054, 0f40490FDA, %f1055;
	mul.f32 	%f1057, %f1056, %f1056;
	fma.rn.f32 	%f1058, %f1057, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1059, %f1058, %f1057, 0f3D2AAABB;
	fma.rn.f32 	%f1063, %f1057, 0fB94D4153, 0f3C0885E4;
	sub.s32 	%r500, %r66, %r52;
	cvt.rn.f32.s32 	%f1077, %r500;
	div.approx.f32 	%f162, %f1077, %f287;
	abs.f32 	%f1386, %f162;
	setp.lt.f32 	%p199, %f1386, 0f40000000;
	@%p199 bra 	LBB0_118;
// %bb.107:
	setp.gtu.f32 	%p200, %f1386, 0f4B800000;
	@%p200 bra 	LBB0_114;
	bra.uni 	LBB0_108;
LBB0_114:
	mov.b32 	%r76, %f1386;
	and.b32  	%r501, %r76, 8388607;
	or.b32  	%r16152, %r501, 1065353216;
	mov.b32 	%f1385, %r16152;
	add.s32 	%r502, %r76, -1073741824;
	and.b32  	%r16153, %r502, -8388608;
	setp.eq.s32 	%p206, %r16153, 0;
	@%p206 bra 	LBB0_117;
// %bb.115:                             // %__nv_fmaf_rn.exit4.i.i.i2413.preheader
	mov.f32 	%f1088, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1087,%f1088;
	// end inline asm
LBB0_116:                               // %__nv_fmaf_rn.exit4.i.i.i2413
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r503, %r16153, 192937984;
	add.s32 	%r504, %r503, %r16152;
	mov.b32 	%f1089, %r504;
	mul.f32 	%f1090, %f1087, %f1089;
	sub.f32 	%f1091, %f1089, %f1090;
	fma.rn.f32 	%f1092, %f1091, %f1087, %f1090;
	sub.f32 	%f1093, %f1089, %f1092;
	fma.rz.f32 	%f1094, %f1093, %f1087, %f1092;
	cvt.rzi.f32.f32 	%f1095, %f1094;
	sub.f32 	%f1385, %f1089, %f1095;
	sub.s32 	%r16153, %r16153, %r503;
	mov.b32 	%r16152, %f1385;
	setp.ne.s32 	%p207, %r16153, 0;
	setp.ne.s32 	%p208, %r16152, 0;
	and.pred  	%p209, %p207, %p208;
	@%p209 bra 	LBB0_116;
LBB0_117:                               // %__internal_fmodf_slowpath_mod.exit.i.i2415
	setp.gt.u32 	%p210, %r76, 2139095039;
	selp.f32 	%f1096, 0f7FFFFFFF, 0f4B800000, %p210;
	mul.f32 	%f1097, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1096, %f1097;
	bra.uni 	LBB0_118;
LBB0_108:                               // %__nv_fast_fdividef.exit.i.i.i2385
	div.approx.f32 	%f1080, %f1386, %f255;
	cvt.rzi.f32.f32 	%f1384, %f1080;
	fma.rn.f32 	%f165, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r75, %f165;
	setp.lt.u32 	%p201, %r75, 1073741824;
	@%p201 bra 	LBB0_113;
// %bb.109:
	setp.lt.u32 	%p202, %r75, -2147483647;
	@%p202 bra 	LBB0_111;
// %bb.110:
	add.f32 	%f1085, %f1384, 0fBF800000;
	setp.lt.f32 	%p205, %f165, 0fC0000000;
	add.f32 	%f1086, %f1085, 0fBF800000;
	selp.f32 	%f1384, %f1086, %f1085, %p205;
	bra.uni 	LBB0_113;
LBB0_111:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p203, %f165, 0f40800000;
	@%p203 bra 	LBB0_113;
// %bb.112:                             // %__nv_fmaf_rn.exit.i.i.i2390
	add.f32 	%f1081, %f1384, 0f3F800000;
	fma.rn.f32 	%f1083, %f255, 0fC0400000, %f165;
	setp.ge.f32 	%p204, %f1083, 0f00000000;
	add.f32 	%f1084, %f1081, 0f3F800000;
	selp.f32 	%f1384, %f1084, %f1081, %p204;
LBB0_113:                               // %__internal_fmodf_fastpath_quot.exit.i.i2394
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
LBB0_118:                               // %__internal_fmodf_kernel.exit.i2419
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r251, %r250, 1;
	fma.rn.f32 	%f313, %f311, %f307, 0fC09DE9E6;
	fma.rn.f32 	%f314, %f310, %f312, 0f00000000;
	and.b32  	%r258, %r257, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r269, %r268, 1;
	fma.rn.f32 	%f382, %f380, %f376, 0fC09DE9E6;
	fma.rn.f32 	%f383, %f379, %f381, 0f00000000;
	and.b32  	%r276, %r275, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r287, %r286, 1;
	fma.rn.f32 	%f451, %f449, %f445, 0fC09DE9E6;
	fma.rn.f32 	%f452, %f448, %f450, 0f00000000;
	and.b32  	%r294, %r293, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r305, %r304, 1;
	fma.rn.f32 	%f520, %f518, %f514, 0fC09DE9E6;
	fma.rn.f32 	%f521, %f517, %f519, 0f00000000;
	and.b32  	%r312, %r311, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r323, %r322, 1;
	fma.rn.f32 	%f589, %f587, %f583, 0fC09DE9E6;
	fma.rn.f32 	%f590, %f586, %f588, 0f00000000;
	and.b32  	%r330, %r329, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r341, %r340, 1;
	fma.rn.f32 	%f658, %f656, %f652, 0fC09DE9E6;
	fma.rn.f32 	%f659, %f655, %f657, 0f00000000;
	and.b32  	%r348, %r347, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r359, %r358, 1;
	fma.rn.f32 	%f727, %f725, %f721, 0fC09DE9E6;
	fma.rn.f32 	%f728, %f724, %f726, 0f00000000;
	and.b32  	%r366, %r365, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r377, %r376, 1;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	and.b32  	%r384, %r383, 1;
	fma.rn.f32 	%f845, %f844, %f841, 0f3F800000;
	fma.rn.f32 	%f849, %f848, %f846, %f840;
	setp.eq.b32 	%p114, %r401, 1;
	fma.rn.f32 	%f898, %f897, %f894, 0f3F800000;
	fma.rn.f32 	%f902, %f901, %f899, %f893;
	setp.eq.b32 	%p134, %r430, 1;
	fma.rn.f32 	%f953, %f952, %f949, 0f3F800000;
	fma.rn.f32 	%f957, %f956, %f954, %f948;
	setp.eq.b32 	%p154, %r449, 1;
	fma.rn.f32 	%f1006, %f1005, %f1002, 0f3F800000;
	fma.rn.f32 	%f1010, %f1009, %f1007, %f1001;
	setp.eq.b32 	%p174, %r478, 1;
	fma.rn.f32 	%f1060, %f1059, %f1057, 0fBEFFFFFF;
	fma.rn.f32 	%f1062, %f1057, %f1056, 0f00000000;
	fma.rn.f32 	%f1064, %f1063, %f1057, 0fBE2AAAA8;
	and.b32  	%r496, %r495, 1;
	shr.u32 	%r217, %r1, 1;
	shr.u32 	%r223, %r1, 3;
	abs.f32 	%f1098, %f1386;
	setp.gtu.f32 	%p211, %f1098, 0f7F800000;
	@%p211 bra 	LBB0_120;
// %bb.119:
	mov.b32 	%r505, %f162;
	and.b32  	%r506, %r505, -2147483648;
	mov.b32 	%r507, %f1386;
	or.b32  	%r508, %r506, %r507;
	mov.b32 	%f1386, %r508;
LBB0_120:                               // %__nv_fmodf.exit2420
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p6, %r251, 1;
	fma.rn.f32 	%f315, %f313, %f307, 0f3F800000;
	fma.rn.f32 	%f316, %f306, 0f40490FDB, %f314;
	setp.eq.b32 	%p12, %r258, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p18, %r269, 1;
	fma.rn.f32 	%f384, %f382, %f376, 0f3F800000;
	fma.rn.f32 	%f385, %f375, 0f40490FDB, %f383;
	setp.eq.b32 	%p24, %r276, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p30, %r287, 1;
	fma.rn.f32 	%f453, %f451, %f445, 0f3F800000;
	fma.rn.f32 	%f454, %f444, 0f40490FDB, %f452;
	setp.eq.b32 	%p36, %r294, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p42, %r305, 1;
	fma.rn.f32 	%f522, %f520, %f514, 0f3F800000;
	fma.rn.f32 	%f523, %f513, 0f40490FDB, %f521;
	setp.eq.b32 	%p48, %r312, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p54, %r323, 1;
	fma.rn.f32 	%f591, %f589, %f583, 0f3F800000;
	fma.rn.f32 	%f592, %f582, 0f40490FDB, %f590;
	setp.eq.b32 	%p60, %r330, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p66, %r341, 1;
	fma.rn.f32 	%f660, %f658, %f652, 0f3F800000;
	fma.rn.f32 	%f661, %f651, 0f40490FDB, %f659;
	setp.eq.b32 	%p72, %r348, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p78, %r359, 1;
	fma.rn.f32 	%f729, %f727, %f721, 0f3F800000;
	fma.rn.f32 	%f730, %f720, 0f40490FDB, %f728;
	setp.eq.b32 	%p84, %r366, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p90, %r377, 1;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	setp.eq.b32 	%p96, %r384, 1;
	selp.f32 	%f850, %f845, %f849, %p114;
	and.b32  	%r402, %r400, 2;
	selp.f32 	%f903, %f898, %f902, %p134;
	and.b32  	%r431, %r429, 2;
	selp.f32 	%f958, %f953, %f957, %p154;
	and.b32  	%r450, %r448, 2;
	selp.f32 	%f1011, %f1006, %f1010, %p174;
	and.b32  	%r479, %r477, 2;
	fma.rn.f32 	%f1061, %f1060, %f1057, 0f3F800000;
	fma.rn.f32 	%f1065, %f1064, %f1062, %f1056;
	setp.eq.b32 	%p194, %r496, 1;
	add.f32 	%f1099, %f1386, %f1386;
	mov.b32 	%r515, %f1099;
	and.b32  	%r516, %r515, -2147483648;
	or.b32  	%r517, %r516, 1056964608;
	mov.b32 	%f1100, %r517;
	add.f32 	%f1101, %f1099, %f1100;
	cvt.rzi.f32.f32 	%f1102, %f1101;
	abs.f32 	%f1103, %f1099;
	setp.gt.f32 	%p212, %f1103, 0f4B000000;
	selp.f32 	%f1104, %f1099, %f1102, %p212;
	cvt.rzi.f32.f32 	%f1105, %f1099;
	setp.lt.f32 	%p213, %f1103, 0f3F000000;
	selp.f32 	%f1106, %f1105, %f1104, %p213;
	cvt.rzi.s32.f32 	%r518, %f1106;
	fma.rn.f32 	%f1107, %f1106, 0fBF000000, %f1386;
	mul.f32 	%f1108, %f1107, 0f34222169;
	fma.rn.f32 	%f1109, %f1107, 0f40490FDA, %f1108;
	mul.f32 	%f1110, %f1109, %f1109;
	fma.rn.f32 	%f1111, %f1110, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1112, %f1111, %f1110, 0f3D2AAABB;
	fma.rn.f32 	%f1113, %f1112, %f1110, 0fBEFFFFFF;
	fma.rn.f32 	%f1114, %f1113, %f1110, 0f3F800000;
	fma.rn.f32 	%f1115, %f1110, %f1109, 0f00000000;
	fma.rn.f32 	%f1116, %f1110, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1117, %f1116, %f1110, 0fBE2AAAA8;
	fma.rn.f32 	%f1118, %f1117, %f1115, %f1109;
	and.b32  	%r519, %r518, 1;
	setp.eq.b32 	%p214, %r519, 1;
	and.b32  	%r523, %r223, 2;
	and.b32  	%r524, %r217, 4;
	or.b32  	%r525, %r221, %r523;
	or.b32  	%r85, %r525, %r524;
	mul.lo.s32 	%r86, %r65, %r85;
	cvt.rn.f32.s32 	%f1132, %r86;
	mov.f32 	%f1133, 0f41800000;
	div.approx.f32 	%f179, %f1132, %f1133;
	abs.f32 	%f1390, %f179;
	setp.lt.f32 	%p219, %f1390, 0f40000000;
	@%p219 bra 	LBB0_132;
// %bb.121:
	setp.gtu.f32 	%p220, %f1390, 0f4B800000;
	@%p220 bra 	LBB0_128;
	bra.uni 	LBB0_122;
LBB0_128:
	mov.b32 	%r88, %f1390;
	and.b32  	%r526, %r88, 8388607;
	or.b32  	%r16154, %r526, 1065353216;
	mov.b32 	%f1389, %r16154;
	add.s32 	%r527, %r88, -1073741824;
	and.b32  	%r16155, %r527, -8388608;
	setp.eq.s32 	%p226, %r16155, 0;
	@%p226 bra 	LBB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i2459.preheader
	mov.f32 	%f1143, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1142,%f1143;
	// end inline asm
LBB0_130:                               // %__nv_fmaf_rn.exit4.i.i.i2459
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r528, %r16155, 192937984;
	add.s32 	%r529, %r528, %r16154;
	mov.b32 	%f1144, %r529;
	mul.f32 	%f1145, %f1142, %f1144;
	sub.f32 	%f1146, %f1144, %f1145;
	fma.rn.f32 	%f1147, %f1146, %f1142, %f1145;
	sub.f32 	%f1148, %f1144, %f1147;
	fma.rz.f32 	%f1149, %f1148, %f1142, %f1147;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	sub.f32 	%f1389, %f1144, %f1150;
	sub.s32 	%r16155, %r16155, %r528;
	mov.b32 	%r16154, %f1389;
	setp.ne.s32 	%p227, %r16155, 0;
	setp.ne.s32 	%p228, %r16154, 0;
	and.pred  	%p229, %p227, %p228;
	@%p229 bra 	LBB0_130;
LBB0_131:                               // %__internal_fmodf_slowpath_mod.exit.i.i2461
	setp.gt.u32 	%p230, %r88, 2139095039;
	selp.f32 	%f1151, 0f7FFFFFFF, 0f4B800000, %p230;
	mul.f32 	%f1152, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1151, %f1152;
	bra.uni 	LBB0_132;
LBB0_122:                               // %__nv_fast_fdividef.exit.i.i.i2431
	div.approx.f32 	%f1135, %f1390, %f255;
	cvt.rzi.f32.f32 	%f1388, %f1135;
	fma.rn.f32 	%f182, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r87, %f182;
	setp.lt.u32 	%p221, %r87, 1073741824;
	@%p221 bra 	LBB0_127;
// %bb.123:
	setp.lt.u32 	%p222, %r87, -2147483647;
	@%p222 bra 	LBB0_125;
// %bb.124:
	add.f32 	%f1140, %f1388, 0fBF800000;
	setp.lt.f32 	%p225, %f182, 0fC0000000;
	add.f32 	%f1141, %f1140, 0fBF800000;
	selp.f32 	%f1388, %f1141, %f1140, %p225;
	bra.uni 	LBB0_127;
LBB0_125:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p223, %f182, 0f40800000;
	@%p223 bra 	LBB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i2436
	add.f32 	%f1136, %f1388, 0f3F800000;
	fma.rn.f32 	%f1138, %f255, 0fC0400000, %f182;
	setp.ge.f32 	%p224, %f1138, 0f00000000;
	add.f32 	%f1139, %f1136, 0f3F800000;
	selp.f32 	%f1388, %f1139, %f1136, %p224;
LBB0_127:                               // %__internal_fmodf_fastpath_quot.exit.i.i2440
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
LBB0_132:                               // %__internal_fmodf_kernel.exit.i2465
	and.b32  	%r209, %r208, 8;
	shl.b32 	%r210, %r1, 2;
	and.b32  	%r214, %r1, 18;
	selp.f32 	%f283, %f281, %f282, %p6;
	and.b32  	%r252, %r250, 2;
	mov.f32 	%f284, 0f00000000;
	selp.f32 	%f317, %f315, %f316, %p12;
	and.b32  	%r259, %r257, 2;
	selp.f32 	%f352, %f350, %f351, %p18;
	and.b32  	%r270, %r268, 2;
	selp.f32 	%f386, %f384, %f385, %p24;
	and.b32  	%r277, %r275, 2;
	selp.f32 	%f421, %f419, %f420, %p30;
	and.b32  	%r288, %r286, 2;
	selp.f32 	%f455, %f453, %f454, %p36;
	and.b32  	%r295, %r293, 2;
	selp.f32 	%f490, %f488, %f489, %p42;
	and.b32  	%r306, %r304, 2;
	selp.f32 	%f524, %f522, %f523, %p48;
	and.b32  	%r313, %r311, 2;
	selp.f32 	%f559, %f557, %f558, %p54;
	and.b32  	%r324, %r322, 2;
	selp.f32 	%f593, %f591, %f592, %p60;
	and.b32  	%r331, %r329, 2;
	selp.f32 	%f628, %f626, %f627, %p66;
	and.b32  	%r342, %r340, 2;
	selp.f32 	%f662, %f660, %f661, %p72;
	and.b32  	%r349, %r347, 2;
	selp.f32 	%f697, %f695, %f696, %p78;
	and.b32  	%r360, %r358, 2;
	selp.f32 	%f731, %f729, %f730, %p84;
	and.b32  	%r367, %r365, 2;
	selp.f32 	%f766, %f764, %f765, %p90;
	and.b32  	%r378, %r376, 2;
	selp.f32 	%f800, %f798, %f799, %p96;
	and.b32  	%r385, %r383, 2;
	setp.eq.s32 	%p115, %r402, 0;
	neg.f32 	%f852, %f850;
	add.s32 	%r403, %r400, 1;
	cvt.rzi.f32.f32 	%f857, %f1366;
	setp.eq.s32 	%p135, %r431, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r432, %r429, 1;
	cvt.rzi.f32.f32 	%f910, %f1370;
	setp.eq.s32 	%p155, %r450, 0;
	neg.f32 	%f960, %f958;
	add.s32 	%r451, %r448, 1;
	cvt.rzi.f32.f32 	%f965, %f1374;
	setp.eq.s32 	%p175, %r479, 0;
	neg.f32 	%f1013, %f1011;
	add.s32 	%r480, %r477, 1;
	cvt.rzi.f32.f32 	%f1018, %f1378;
	selp.f32 	%f1066, %f1061, %f1065, %p194;
	and.b32  	%r497, %r495, 2;
	selp.f32 	%f1119, %f1114, %f1118, %p214;
	and.b32  	%r520, %r518, 2;
	abs.f32 	%f1153, %f1390;
	setp.gtu.f32 	%p231, %f1153, 0f7F800000;
	@%p231 bra 	LBB0_134;
// %bb.133:
	mov.b32 	%r530, %f179;
	and.b32  	%r531, %r530, -2147483648;
	mov.b32 	%r532, %f1390;
	or.b32  	%r533, %r531, %r532;
	mov.b32 	%f1390, %r533;
LBB0_134:                               // %__nv_fmodf.exit2466
	and.b32  	%r211, %r210, 32;
	or.b32  	%r234, %r214, %r209;
	setp.eq.s32 	%p7, %r252, 0;
	sub.f32 	%f285, %f284, %f283;
	setp.eq.s32 	%p13, %r259, 0;
	sub.f32 	%f319, %f284, %f317;
	setp.eq.s32 	%p19, %r270, 0;
	sub.f32 	%f354, %f284, %f352;
	setp.eq.s32 	%p25, %r277, 0;
	sub.f32 	%f388, %f284, %f386;
	setp.eq.s32 	%p31, %r288, 0;
	sub.f32 	%f423, %f284, %f421;
	setp.eq.s32 	%p37, %r295, 0;
	sub.f32 	%f457, %f284, %f455;
	setp.eq.s32 	%p43, %r306, 0;
	sub.f32 	%f492, %f284, %f490;
	setp.eq.s32 	%p49, %r313, 0;
	sub.f32 	%f526, %f284, %f524;
	setp.eq.s32 	%p55, %r324, 0;
	sub.f32 	%f561, %f284, %f559;
	setp.eq.s32 	%p61, %r331, 0;
	sub.f32 	%f595, %f284, %f593;
	setp.eq.s32 	%p67, %r342, 0;
	sub.f32 	%f630, %f284, %f628;
	setp.eq.s32 	%p73, %r349, 0;
	sub.f32 	%f664, %f284, %f662;
	setp.eq.s32 	%p79, %r360, 0;
	sub.f32 	%f699, %f284, %f697;
	setp.eq.s32 	%p85, %r367, 0;
	sub.f32 	%f733, %f284, %f731;
	setp.eq.s32 	%p91, %r378, 0;
	sub.f32 	%f768, %f284, %f766;
	setp.eq.s32 	%p97, %r385, 0;
	sub.f32 	%f802, %f284, %f800;
	selp.f32 	%f851, %f849, %f845, %p114;
	selp.f32 	%f853, %f850, %f852, %p115;
	and.b32  	%r404, %r403, 2;
	setp.eq.f32 	%p117, %f857, %f1366;
	mul.f32 	%f858, %f1366, 0f00000000;
	selp.f32 	%f904, %f902, %f898, %p134;
	selp.f32 	%f906, %f903, %f905, %p135;
	and.b32  	%r433, %r432, 2;
	setp.eq.f32 	%p137, %f910, %f1370;
	mul.f32 	%f911, %f1370, 0f00000000;
	selp.f32 	%f959, %f957, %f953, %p154;
	selp.f32 	%f961, %f958, %f960, %p155;
	and.b32  	%r452, %r451, 2;
	setp.eq.f32 	%p157, %f965, %f1374;
	mul.f32 	%f966, %f1374, 0f00000000;
	selp.f32 	%f1012, %f1010, %f1006, %p174;
	selp.f32 	%f1014, %f1011, %f1013, %p175;
	and.b32  	%r481, %r480, 2;
	setp.eq.f32 	%p177, %f1018, %f1378;
	mul.f32 	%f1019, %f1378, 0f00000000;
	setp.eq.s32 	%p195, %r497, 0;
	neg.f32 	%f1068, %f1066;
	add.s32 	%r498, %r495, 1;
	cvt.rzi.f32.f32 	%f1073, %f1382;
	setp.eq.s32 	%p215, %r520, 0;
	neg.f32 	%f1121, %f1119;
	add.s32 	%r521, %r518, 1;
	cvt.rzi.f32.f32 	%f1126, %f1386;
	add.f32 	%f1154, %f1390, %f1390;
	mov.b32 	%r534, %f1154;
	and.b32  	%r535, %r534, -2147483648;
	or.b32  	%r536, %r535, 1056964608;
	mov.b32 	%f1155, %r536;
	add.f32 	%f1156, %f1154, %f1155;
	cvt.rzi.f32.f32 	%f1157, %f1156;
	abs.f32 	%f1158, %f1154;
	setp.gt.f32 	%p232, %f1158, 0f4B000000;
	selp.f32 	%f1159, %f1154, %f1157, %p232;
	cvt.rzi.f32.f32 	%f1160, %f1154;
	setp.lt.f32 	%p233, %f1158, 0f3F000000;
	selp.f32 	%f1161, %f1160, %f1159, %p233;
	cvt.rzi.s32.f32 	%r537, %f1161;
	fma.rn.f32 	%f1162, %f1161, 0fBF000000, %f1390;
	mul.f32 	%f1163, %f1162, 0f34222169;
	fma.rn.f32 	%f1164, %f1162, 0f40490FDA, %f1163;
	mul.f32 	%f1165, %f1164, %f1164;
	fma.rn.f32 	%f1166, %f1165, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1167, %f1166, %f1165, 0f3D2AAABB;
	fma.rn.f32 	%f1168, %f1167, %f1165, 0fBEFFFFFF;
	fma.rn.f32 	%f1169, %f1168, %f1165, 0f3F800000;
	fma.rn.f32 	%f1170, %f1165, %f1164, 0f00000000;
	fma.rn.f32 	%f1171, %f1165, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1172, %f1171, %f1165, 0fBE2AAAA8;
	fma.rn.f32 	%f1173, %f1172, %f1170, %f1164;
	and.b32  	%r538, %r537, 1;
	setp.eq.b32 	%p234, %r538, 1;
	selp.f32 	%f1174, %f1169, %f1173, %p234;
	selp.f32 	%f1175, %f1173, %f1169, %p234;
	and.b32  	%r539, %r537, 2;
	setp.eq.s32 	%p235, %r539, 0;
	neg.f32 	%f1176, %f1174;
	selp.f32 	%f1177, %f1174, %f1176, %p235;
	add.s32 	%r540, %r537, 1;
	and.b32  	%r541, %r540, 2;
	cvt.rzi.f32.f32 	%f1181, %f1390;
	setp.eq.f32 	%p237, %f1181, %f1390;
	mul.f32 	%f1182, %f1390, 0f00000000;
	shl.b32 	%r542, %r85, 3;
	sub.s32 	%r543, %r86, %r542;
	cvt.rn.f32.s32 	%f1185, %r543;
	div.approx.f32 	%f198, %f1185, %f1133;
	abs.f32 	%f1394, %f198;
	setp.lt.f32 	%p239, %f1394, 0f40000000;
	@%p239 bra 	LBB0_146;
// %bb.135:
	setp.gtu.f32 	%p240, %f1394, 0f4B800000;
	@%p240 bra 	LBB0_142;
	bra.uni 	LBB0_136;
LBB0_142:
	mov.b32 	%r96, %f1394;
	and.b32  	%r544, %r96, 8388607;
	or.b32  	%r16156, %r544, 1065353216;
	mov.b32 	%f1393, %r16156;
	add.s32 	%r545, %r96, -1073741824;
	and.b32  	%r16157, %r545, -8388608;
	setp.eq.s32 	%p246, %r16157, 0;
	@%p246 bra 	LBB0_145;
// %bb.143:                             // %__nv_fmaf_rn.exit4.i.i.i2505.preheader
	mov.f32 	%f1196, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1195,%f1196;
	// end inline asm
LBB0_144:                               // %__nv_fmaf_rn.exit4.i.i.i2505
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r546, %r16157, 192937984;
	add.s32 	%r547, %r546, %r16156;
	mov.b32 	%f1197, %r547;
	mul.f32 	%f1198, %f1195, %f1197;
	sub.f32 	%f1199, %f1197, %f1198;
	fma.rn.f32 	%f1200, %f1199, %f1195, %f1198;
	sub.f32 	%f1201, %f1197, %f1200;
	fma.rz.f32 	%f1202, %f1201, %f1195, %f1200;
	cvt.rzi.f32.f32 	%f1203, %f1202;
	sub.f32 	%f1393, %f1197, %f1203;
	sub.s32 	%r16157, %r16157, %r546;
	mov.b32 	%r16156, %f1393;
	setp.ne.s32 	%p247, %r16157, 0;
	setp.ne.s32 	%p248, %r16156, 0;
	and.pred  	%p249, %p247, %p248;
	@%p249 bra 	LBB0_144;
LBB0_145:                               // %__internal_fmodf_slowpath_mod.exit.i.i2507
	setp.gt.u32 	%p250, %r96, 2139095039;
	selp.f32 	%f1204, 0f7FFFFFFF, 0f4B800000, %p250;
	mul.f32 	%f1205, %f1393, 0f34000000;
	mul.f32 	%f1394, %f1204, %f1205;
	bra.uni 	LBB0_146;
LBB0_136:                               // %__nv_fast_fdividef.exit.i.i.i2477
	div.approx.f32 	%f1188, %f1394, %f255;
	cvt.rzi.f32.f32 	%f1392, %f1188;
	fma.rn.f32 	%f201, %f1392, 0fC0000000, %f1394;
	mov.b32 	%r95, %f201;
	setp.lt.u32 	%p241, %r95, 1073741824;
	@%p241 bra 	LBB0_141;
// %bb.137:
	setp.lt.u32 	%p242, %r95, -2147483647;
	@%p242 bra 	LBB0_139;
// %bb.138:
	add.f32 	%f1193, %f1392, 0fBF800000;
	setp.lt.f32 	%p245, %f201, 0fC0000000;
	add.f32 	%f1194, %f1193, 0fBF800000;
	selp.f32 	%f1392, %f1194, %f1193, %p245;
	bra.uni 	LBB0_141;
LBB0_139:
	add.f32 	%f1392, %f1392, 0f3F800000;
	setp.ltu.f32 	%p243, %f201, 0f40800000;
	@%p243 bra 	LBB0_141;
// %bb.140:                             // %__nv_fmaf_rn.exit.i.i.i2482
	add.f32 	%f1189, %f1392, 0f3F800000;
	fma.rn.f32 	%f1191, %f255, 0fC0400000, %f201;
	setp.ge.f32 	%p244, %f1191, 0f00000000;
	add.f32 	%f1192, %f1189, 0f3F800000;
	selp.f32 	%f1392, %f1192, %f1189, %p244;
LBB0_141:                               // %__internal_fmodf_fastpath_quot.exit.i.i2486
	fma.rn.f32 	%f1394, %f1392, 0fC0000000, %f1394;
LBB0_146:                               // %__internal_fmodf_kernel.exit.i2511
	and.b32  	%r212, %r210, 4;
	or.b32  	%r235, %r234, %r211;
	selp.f32 	%f286, %f283, %f285, %p7;
	selp.f32 	%f320, %f317, %f319, %p13;
	selp.f32 	%f355, %f352, %f354, %p19;
	selp.f32 	%f389, %f386, %f388, %p25;
	selp.f32 	%f424, %f421, %f423, %p31;
	selp.f32 	%f458, %f455, %f457, %p37;
	selp.f32 	%f493, %f490, %f492, %p43;
	selp.f32 	%f527, %f524, %f526, %p49;
	selp.f32 	%f562, %f559, %f561, %p55;
	selp.f32 	%f596, %f593, %f595, %p61;
	selp.f32 	%f631, %f628, %f630, %p67;
	selp.f32 	%f665, %f662, %f664, %p73;
	selp.f32 	%f700, %f697, %f699, %p79;
	selp.f32 	%f734, %f731, %f733, %p85;
	selp.f32 	%f769, %f766, %f768, %p91;
	selp.f32 	%f803, %f800, %f802, %p97;
	setp.eq.s32 	%p116, %r404, 0;
	sub.f32 	%f855, %f284, %f851;
	selp.f32 	%f88, %f858, %f853, %p117;
	abs.f32 	%f859, %f1366;
	setp.eq.s32 	%p136, %r433, 0;
	sub.f32 	%f908, %f284, %f904;
	selp.f32 	%f912, %f911, %f906, %p137;
	abs.f32 	%f913, %f1370;
	setp.eq.s32 	%p156, %r452, 0;
	sub.f32 	%f963, %f284, %f959;
	selp.f32 	%f124, %f966, %f961, %p157;
	abs.f32 	%f967, %f1374;
	setp.eq.s32 	%p176, %r481, 0;
	sub.f32 	%f1016, %f284, %f1012;
	selp.f32 	%f1020, %f1019, %f1014, %p177;
	abs.f32 	%f1021, %f1378;
	selp.f32 	%f1067, %f1065, %f1061, %p194;
	selp.f32 	%f1069, %f1066, %f1068, %p195;
	and.b32  	%r499, %r498, 2;
	setp.eq.f32 	%p197, %f1073, %f1382;
	mul.f32 	%f1074, %f1382, 0f00000000;
	selp.f32 	%f1120, %f1118, %f1114, %p214;
	selp.f32 	%f1122, %f1119, %f1121, %p215;
	and.b32  	%r522, %r521, 2;
	setp.eq.f32 	%p217, %f1126, %f1386;
	mul.f32 	%f1127, %f1386, 0f00000000;
	setp.eq.s32 	%p236, %r541, 0;
	sub.f32 	%f1179, %f284, %f1175;
	selp.f32 	%f196, %f1182, %f1177, %p237;
	abs.f32 	%f1183, %f1390;
	and.b32  	%r213, %r1, 16;
	abs.f32 	%f1206, %f1394;
	setp.gtu.f32 	%p251, %f1206, 0f7F800000;
	@%p251 bra 	LBB0_148;
// %bb.147:
	mov.b32 	%r548, %f198;
	and.b32  	%r549, %r548, -2147483648;
	mov.b32 	%r550, %f1394;
	or.b32  	%r551, %r549, %r550;
	mov.b32 	%f1394, %r551;
LBB0_148:                               // %__nv_fmodf.exit2512
	or.b32  	%r236, %r235, %r212;
	mul.f32 	%f252, %f286, %f286;
	mul.f32 	%f4, %f320, %f320;
	mul.f32 	%f8, %f355, %f355;
	mul.f32 	%f13, %f389, %f389;
	mul.f32 	%f17, %f424, %f424;
	mul.f32 	%f22, %f458, %f458;
	mul.f32 	%f26, %f493, %f493;
	mul.f32 	%f31, %f527, %f527;
	mul.f32 	%f35, %f562, %f562;
	mul.f32 	%f40, %f596, %f596;
	mul.f32 	%f44, %f631, %f631;
	mul.f32 	%f49, %f665, %f665;
	mul.f32 	%f53, %f700, %f700;
	mul.f32 	%f58, %f734, %f734;
	mul.f32 	%f62, %f769, %f769;
	mul.f32 	%f67, %f803, %f803;
	selp.f32 	%f856, %f851, %f855, %p116;
	setp.gt.f32 	%p118, %f859, 0f4B800000;
	add.f32 	%f860, %f88, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p136;
	setp.gt.f32 	%p138, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f964, %f959, %f963, %p156;
	setp.gt.f32 	%p158, %f967, 0f4B800000;
	add.f32 	%f968, %f124, 0f3F800000;
	selp.f32 	%f1017, %f1012, %f1016, %p176;
	setp.gt.f32 	%p178, %f1021, 0f4B800000;
	add.f32 	%f1022, %f1020, 0f3F800000;
	setp.eq.s32 	%p196, %r499, 0;
	sub.f32 	%f1071, %f284, %f1067;
	selp.f32 	%f160, %f1074, %f1069, %p197;
	abs.f32 	%f1075, %f1382;
	setp.eq.s32 	%p216, %r522, 0;
	sub.f32 	%f1124, %f284, %f1120;
	selp.f32 	%f1128, %f1127, %f1122, %p217;
	abs.f32 	%f1129, %f1386;
	selp.f32 	%f1180, %f1175, %f1179, %p236;
	setp.gt.f32 	%p238, %f1183, 0f4B800000;
	add.f32 	%f1184, %f196, 0f3F800000;
	add.f32 	%f1207, %f1394, %f1394;
	mov.b32 	%r564, %f1207;
	and.b32  	%r565, %r564, -2147483648;
	or.b32  	%r566, %r565, 1056964608;
	mov.b32 	%f1208, %r566;
	add.f32 	%f1209, %f1207, %f1208;
	cvt.rzi.f32.f32 	%f1210, %f1209;
	abs.f32 	%f1211, %f1207;
	setp.gt.f32 	%p252, %f1211, 0f4B000000;
	selp.f32 	%f1212, %f1207, %f1210, %p252;
	cvt.rzi.f32.f32 	%f1213, %f1207;
	setp.lt.f32 	%p253, %f1211, 0f3F000000;
	selp.f32 	%f1214, %f1213, %f1212, %p253;
	cvt.rzi.s32.f32 	%r567, %f1214;
	fma.rn.f32 	%f1215, %f1214, 0fBF000000, %f1394;
	mul.f32 	%f1216, %f1215, 0f34222169;
	fma.rn.f32 	%f1217, %f1215, 0f40490FDA, %f1216;
	mul.f32 	%f1218, %f1217, %f1217;
	fma.rn.f32 	%f1219, %f1218, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1220, %f1219, %f1218, 0f3D2AAABB;
	fma.rn.f32 	%f1221, %f1220, %f1218, 0fBEFFFFFF;
	fma.rn.f32 	%f1222, %f1221, %f1218, 0f3F800000;
	fma.rn.f32 	%f1223, %f1218, %f1217, 0f00000000;
	fma.rn.f32 	%f1224, %f1218, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1225, %f1224, %f1218, 0fBE2AAAA8;
	fma.rn.f32 	%f1226, %f1225, %f1223, %f1217;
	and.b32  	%r568, %r567, 1;
	setp.eq.b32 	%p254, %r568, 1;
	selp.f32 	%f1227, %f1222, %f1226, %p254;
	selp.f32 	%f1228, %f1226, %f1222, %p254;
	and.b32  	%r569, %r567, 2;
	setp.eq.s32 	%p255, %r569, 0;
	neg.f32 	%f1229, %f1227;
	selp.f32 	%f1230, %f1227, %f1229, %p255;
	add.s32 	%r570, %r567, 1;
	and.b32  	%r571, %r570, 2;
	setp.eq.s32 	%p256, %r571, 0;
	sub.f32 	%f1232, %f284, %f1228;
	selp.f32 	%f1233, %f1228, %f1232, %p256;
	cvt.rzi.f32.f32 	%f1234, %f1394;
	setp.eq.f32 	%p257, %f1234, %f1394;
	mul.f32 	%f1235, %f1394, 0f00000000;
	selp.f32 	%f1236, %f1235, %f1230, %p257;
	abs.f32 	%f1237, %f1394;
	setp.gt.f32 	%p258, %f1237, 0f4B800000;
	add.f32 	%f1238, %f1236, 0f3F800000;
	cvt.u16.u32 	%rs1, %r1;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	add.s32 	%r573, %r239, %r213;
	neg.s32 	%r574, %r573;
	mad.lo.s32 	%r575, %r224, -32, %r574;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r576, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r577, %rs21;
	sub.s32 	%r578, %r575, %r577;
	shl.b32 	%r579, %r578, 1;
	cvt.rn.f32.s32 	%f1240, %r579;
	div.approx.f32 	%f215, %f1240, %f287;
	abs.f32 	%f1398, %f215;
	setp.lt.f32 	%p259, %f1398, 0f40000000;
	@%p259 bra 	LBB0_160;
// %bb.149:
	setp.gtu.f32 	%p260, %f1398, 0f4B800000;
	@%p260 bra 	LBB0_156;
	bra.uni 	LBB0_150;
LBB0_156:
	mov.b32 	%r109, %f1398;
	and.b32  	%r580, %r109, 8388607;
	or.b32  	%r16158, %r580, 1065353216;
	mov.b32 	%f1397, %r16158;
	add.s32 	%r581, %r109, -1073741824;
	and.b32  	%r16159, %r581, -8388608;
	setp.eq.s32 	%p266, %r16159, 0;
	@%p266 bra 	LBB0_159;
// %bb.157:                             // %__nv_fmaf_rn.exit4.i.i.i2551.preheader
	mov.f32 	%f1251, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1250,%f1251;
	// end inline asm
LBB0_158:                               // %__nv_fmaf_rn.exit4.i.i.i2551
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r582, %r16159, 192937984;
	add.s32 	%r583, %r582, %r16158;
	mov.b32 	%f1252, %r583;
	mul.f32 	%f1253, %f1250, %f1252;
	sub.f32 	%f1254, %f1252, %f1253;
	fma.rn.f32 	%f1255, %f1254, %f1250, %f1253;
	sub.f32 	%f1256, %f1252, %f1255;
	fma.rz.f32 	%f1257, %f1256, %f1250, %f1255;
	cvt.rzi.f32.f32 	%f1258, %f1257;
	sub.f32 	%f1397, %f1252, %f1258;
	sub.s32 	%r16159, %r16159, %r582;
	mov.b32 	%r16158, %f1397;
	setp.ne.s32 	%p267, %r16159, 0;
	setp.ne.s32 	%p268, %r16158, 0;
	and.pred  	%p269, %p267, %p268;
	@%p269 bra 	LBB0_158;
LBB0_159:                               // %__internal_fmodf_slowpath_mod.exit.i.i2553
	setp.gt.u32 	%p270, %r109, 2139095039;
	selp.f32 	%f1259, 0f7FFFFFFF, 0f4B800000, %p270;
	mul.f32 	%f1260, %f1397, 0f34000000;
	mul.f32 	%f1398, %f1259, %f1260;
	bra.uni 	LBB0_160;
LBB0_150:                               // %__nv_fast_fdividef.exit.i.i.i2523
	div.approx.f32 	%f1243, %f1398, %f255;
	cvt.rzi.f32.f32 	%f1396, %f1243;
	fma.rn.f32 	%f218, %f1396, 0fC0000000, %f1398;
	mov.b32 	%r108, %f218;
	setp.lt.u32 	%p261, %r108, 1073741824;
	@%p261 bra 	LBB0_155;
// %bb.151:
	setp.lt.u32 	%p262, %r108, -2147483647;
	@%p262 bra 	LBB0_153;
// %bb.152:
	add.f32 	%f1248, %f1396, 0fBF800000;
	setp.lt.f32 	%p265, %f218, 0fC0000000;
	add.f32 	%f1249, %f1248, 0fBF800000;
	selp.f32 	%f1396, %f1249, %f1248, %p265;
	bra.uni 	LBB0_155;
LBB0_153:
	add.f32 	%f1396, %f1396, 0f3F800000;
	setp.ltu.f32 	%p263, %f218, 0f40800000;
	@%p263 bra 	LBB0_155;
// %bb.154:                             // %__nv_fmaf_rn.exit.i.i.i2528
	add.f32 	%f1244, %f1396, 0f3F800000;
	fma.rn.f32 	%f1246, %f255, 0fC0400000, %f218;
	setp.ge.f32 	%p264, %f1246, 0f00000000;
	add.f32 	%f1247, %f1244, 0f3F800000;
	selp.f32 	%f1396, %f1247, %f1244, %p264;
LBB0_155:                               // %__internal_fmodf_fastpath_quot.exit.i.i2532
	fma.rn.f32 	%f1398, %f1396, 0fC0000000, %f1398;
LBB0_160:                               // %__internal_fmodf_kernel.exit.i2557
	shr.u32 	%r237, %r236, 1;
	mul.f32 	%f290, %f252, 0f3B8B2FF9;
	mul.f32 	%f324, %f4, 0f3B8B2FF9;
	mul.f32 	%f359, %f8, 0f3B8B2FF9;
	mul.f32 	%f393, %f13, 0f3B8B2FF9;
	mul.f32 	%f428, %f17, 0f3B8B2FF9;
	mul.f32 	%f462, %f22, 0f3B8B2FF9;
	mul.f32 	%f497, %f26, 0f3B8B2FF9;
	mul.f32 	%f531, %f31, 0f3B8B2FF9;
	mul.f32 	%f566, %f35, 0f3B8B2FF9;
	mul.f32 	%f600, %f40, 0f3B8B2FF9;
	mul.f32 	%f635, %f44, 0f3B8B2FF9;
	mul.f32 	%f669, %f49, 0f3B8B2FF9;
	mul.f32 	%f704, %f53, 0f3B8B2FF9;
	mul.f32 	%f738, %f58, 0f3B8B2FF9;
	mul.f32 	%f773, %f62, 0f3B8B2FF9;
	mul.f32 	%f806, %f67, 0f3B8B2FF9;
	selp.f32 	%f89, %f860, %f856, %p118;
	selp.f32 	%f915, %f914, %f909, %p138;
	selp.f32 	%f125, %f968, %f964, %p158;
	selp.f32 	%f1023, %f1022, %f1017, %p178;
	selp.f32 	%f1072, %f1067, %f1071, %p196;
	setp.gt.f32 	%p198, %f1075, 0f4B800000;
	add.f32 	%f1076, %f160, 0f3F800000;
	selp.f32 	%f1125, %f1120, %f1124, %p216;
	setp.gt.f32 	%p218, %f1129, 0f4B800000;
	add.f32 	%f1130, %f1128, 0f3F800000;
	selp.f32 	%f197, %f1184, %f1180, %p238;
	selp.f32 	%f1239, %f1238, %f1233, %p258;
	sub.s32 	%r107, %r575, %r576;
	abs.f32 	%f1261, %f1398;
	setp.gtu.f32 	%p271, %f1261, 0f7F800000;
	@%p271 bra 	LBB0_162;
// %bb.161:
	mov.b32 	%r584, %f215;
	and.b32  	%r585, %r584, -2147483648;
	mov.b32 	%r586, %f1398;
	or.b32  	%r587, %r585, %r586;
	mov.b32 	%f1398, %r587;
LBB0_162:                               // %__nv_fmodf.exit2558
	ld.param.u64 	%rd1, [_Z17julia_upchan_407413CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd49, %r237, 4;
	mul.f32 	%f3, %f290, %f1348;
	mul.f32 	%f325, %f324, %f1349;
	mul.f32 	%f12, %f359, %f1350;
	mul.f32 	%f394, %f393, %f1351;
	mul.f32 	%f21, %f428, %f1352;
	mul.f32 	%f463, %f462, %f1353;
	mul.f32 	%f30, %f497, %f1354;
	mul.f32 	%f532, %f531, %f1355;
	mul.f32 	%f39, %f566, %f1356;
	mul.f32 	%f601, %f600, %f1357;
	mul.f32 	%f48, %f635, %f1358;
	mul.f32 	%f670, %f669, %f1359;
	mul.f32 	%f57, %f704, %f1360;
	mul.f32 	%f739, %f738, %f1361;
	mul.f32 	%f66, %f773, %f1362;
	mul.f32 	%f807, %f806, %f1363;
	mov.b32 	%r416, %f915;
	mov.b32 	%r415, %f89;
	mov.b32 	%r422, %f912;
	mov.b32 	%r421, %f88;
	mov.b32 	%r464, %f1023;
	mov.b32 	%r463, %f125;
	mov.b32 	%r470, %f1020;
	mov.b32 	%r469, %f124;
	selp.f32 	%f161, %f1076, %f1072, %p198;
	selp.f32 	%f1131, %f1130, %f1125, %p218;
	mov.b32 	%r554, %f1239;
	mov.b32 	%r553, %f197;
	mov.b32 	%r560, %f1236;
	mov.b32 	%r559, %f196;
	add.f32 	%f1262, %f1398, %f1398;
	mov.b32 	%r588, %f1262;
	and.b32  	%r589, %r588, -2147483648;
	or.b32  	%r590, %r589, 1056964608;
	mov.b32 	%f1263, %r590;
	add.f32 	%f1264, %f1262, %f1263;
	cvt.rzi.f32.f32 	%f1265, %f1264;
	abs.f32 	%f1266, %f1262;
	setp.gt.f32 	%p272, %f1266, 0f4B000000;
	selp.f32 	%f1267, %f1262, %f1265, %p272;
	cvt.rzi.f32.f32 	%f1268, %f1262;
	setp.lt.f32 	%p273, %f1266, 0f3F000000;
	selp.f32 	%f1269, %f1268, %f1267, %p273;
	cvt.rzi.s32.f32 	%r591, %f1269;
	fma.rn.f32 	%f1270, %f1269, 0fBF000000, %f1398;
	mul.f32 	%f1271, %f1270, 0f34222169;
	fma.rn.f32 	%f1272, %f1270, 0f40490FDA, %f1271;
	mul.f32 	%f1273, %f1272, %f1272;
	fma.rn.f32 	%f1274, %f1273, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1275, %f1274, %f1273, 0f3D2AAABB;
	fma.rn.f32 	%f1276, %f1275, %f1273, 0fBEFFFFFF;
	fma.rn.f32 	%f1277, %f1276, %f1273, 0f3F800000;
	fma.rn.f32 	%f1278, %f1273, %f1272, 0f00000000;
	fma.rn.f32 	%f1279, %f1273, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1280, %f1279, %f1273, 0fBE2AAAA8;
	fma.rn.f32 	%f1281, %f1280, %f1278, %f1272;
	and.b32  	%r592, %r591, 1;
	setp.eq.b32 	%p274, %r592, 1;
	selp.f32 	%f1282, %f1277, %f1281, %p274;
	selp.f32 	%f1283, %f1281, %f1277, %p274;
	and.b32  	%r593, %r591, 2;
	setp.eq.s32 	%p275, %r593, 0;
	neg.f32 	%f1284, %f1282;
	selp.f32 	%f1285, %f1282, %f1284, %p275;
	add.s32 	%r594, %r591, 1;
	and.b32  	%r595, %r594, 2;
	setp.eq.s32 	%p276, %r595, 0;
	sub.f32 	%f1287, %f284, %f1283;
	selp.f32 	%f1288, %f1283, %f1287, %p276;
	cvt.rzi.f32.f32 	%f1289, %f1398;
	setp.eq.f32 	%p277, %f1289, %f1398;
	mul.f32 	%f1290, %f1398, 0f00000000;
	selp.f32 	%f232, %f1290, %f1285, %p277;
	abs.f32 	%f1291, %f1398;
	setp.gt.f32 	%p278, %f1291, 0f4B800000;
	add.f32 	%f1292, %f232, 0f3F800000;
	shl.b32 	%r596, %r107, 1;
	cvt.rn.f32.s32 	%f1293, %r596;
	div.approx.f32 	%f234, %f1293, %f287;
	abs.f32 	%f1402, %f234;
	setp.lt.f32 	%p279, %f1402, 0f40000000;
	@%p279 bra 	LBB0_174;
// %bb.163:
	setp.gtu.f32 	%p280, %f1402, 0f4B800000;
	@%p280 bra 	LBB0_170;
	bra.uni 	LBB0_164;
LBB0_170:
	mov.b32 	%r117, %f1402;
	and.b32  	%r597, %r117, 8388607;
	or.b32  	%r16160, %r597, 1065353216;
	mov.b32 	%f1401, %r16160;
	add.s32 	%r598, %r117, -1073741824;
	and.b32  	%r16161, %r598, -8388608;
	setp.eq.s32 	%p286, %r16161, 0;
	@%p286 bra 	LBB0_173;
// %bb.171:                             // %__nv_fmaf_rn.exit4.i.i.i2597.preheader
	mov.f32 	%f1304, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1303,%f1304;
	// end inline asm
LBB0_172:                               // %__nv_fmaf_rn.exit4.i.i.i2597
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r599, %r16161, 192937984;
	add.s32 	%r600, %r599, %r16160;
	mov.b32 	%f1305, %r600;
	mul.f32 	%f1306, %f1303, %f1305;
	sub.f32 	%f1307, %f1305, %f1306;
	fma.rn.f32 	%f1308, %f1307, %f1303, %f1306;
	sub.f32 	%f1309, %f1305, %f1308;
	fma.rz.f32 	%f1310, %f1309, %f1303, %f1308;
	cvt.rzi.f32.f32 	%f1311, %f1310;
	sub.f32 	%f1401, %f1305, %f1311;
	sub.s32 	%r16161, %r16161, %r599;
	mov.b32 	%r16160, %f1401;
	setp.ne.s32 	%p287, %r16161, 0;
	setp.ne.s32 	%p288, %r16160, 0;
	and.pred  	%p289, %p287, %p288;
	@%p289 bra 	LBB0_172;
LBB0_173:                               // %__internal_fmodf_slowpath_mod.exit.i.i2599
	setp.gt.u32 	%p290, %r117, 2139095039;
	selp.f32 	%f1312, 0f7FFFFFFF, 0f4B800000, %p290;
	mul.f32 	%f1313, %f1401, 0f34000000;
	mul.f32 	%f1402, %f1312, %f1313;
	bra.uni 	LBB0_174;
LBB0_164:                               // %__nv_fast_fdividef.exit.i.i.i2569
	div.approx.f32 	%f1296, %f1402, %f255;
	cvt.rzi.f32.f32 	%f1400, %f1296;
	fma.rn.f32 	%f237, %f1400, 0fC0000000, %f1402;
	mov.b32 	%r116, %f237;
	setp.lt.u32 	%p281, %r116, 1073741824;
	@%p281 bra 	LBB0_169;
// %bb.165:
	setp.lt.u32 	%p282, %r116, -2147483647;
	@%p282 bra 	LBB0_167;
// %bb.166:
	add.f32 	%f1301, %f1400, 0fBF800000;
	setp.lt.f32 	%p285, %f237, 0fC0000000;
	add.f32 	%f1302, %f1301, 0fBF800000;
	selp.f32 	%f1400, %f1302, %f1301, %p285;
	bra.uni 	LBB0_169;
LBB0_167:
	add.f32 	%f1400, %f1400, 0f3F800000;
	setp.ltu.f32 	%p283, %f237, 0f40800000;
	@%p283 bra 	LBB0_169;
// %bb.168:                             // %__nv_fmaf_rn.exit.i.i.i2574
	add.f32 	%f1297, %f1400, 0f3F800000;
	fma.rn.f32 	%f1299, %f255, 0fC0400000, %f237;
	setp.ge.f32 	%p284, %f1299, 0f00000000;
	add.f32 	%f1300, %f1297, 0f3F800000;
	selp.f32 	%f1400, %f1300, %f1297, %p284;
LBB0_169:                               // %__internal_fmodf_fastpath_quot.exit.i.i2578
	fma.rn.f32 	%f1402, %f1400, 0fC0000000, %f1402;
LBB0_174:                               // %__internal_fmodf_kernel.exit.i2603
	add.s64 	%rd50, %rd1, %rd49;
	mov.b32 	%r262, %f325;
	mov.b32 	%r261, %f3;
	mov.b32 	%r280, %f394;
	mov.b32 	%r279, %f12;
	mov.b32 	%r298, %f463;
	mov.b32 	%r297, %f21;
	mov.b32 	%r316, %f532;
	mov.b32 	%r315, %f30;
	mov.b32 	%r334, %f601;
	mov.b32 	%r333, %f39;
	mov.b32 	%r352, %f670;
	mov.b32 	%r351, %f48;
	mov.b32 	%r370, %f739;
	mov.b32 	%r369, %f57;
	mov.b32 	%r388, %f807;
	mov.b32 	%r387, %f66;
	xor.b32  	%r467, %r470, -2147483648;
	xor.b32  	%r466, %r469, -2147483648;
	mov.b32 	%r511, %f1131;
	mov.b32 	%r510, %f161;
	mov.b32 	%r514, %f1128;
	mov.b32 	%r513, %f160;
	xor.b32  	%r557, %r560, -2147483648;
	xor.b32  	%r556, %r559, -2147483648;
	selp.f32 	%f233, %f1292, %f1288, %p278;
	abs.f32 	%f1314, %f1402;
	setp.gtu.f32 	%p291, %f1314, 0f7F800000;
	@%p291 bra 	LBB0_176;
// %bb.175:
	mov.b32 	%r601, %f234;
	and.b32  	%r602, %r601, -2147483648;
	mov.b32 	%r603, %f1402;
	or.b32  	%r604, %r602, %r603;
	mov.b32 	%f1402, %r604;
LBB0_176:                               // %__nv_fmodf.exit2604
	ld.param.u64 	%rd2, [_Z17julia_upchan_407413CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z17julia_upchan_407413CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r215, [%rd50];
	ld.global.u32 	%r216, [%rd50+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r260, %r262, %r261;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r278, %r280, %r279;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r296, %r298, %r297;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r314, %r316, %r315;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r332, %r334, %r333;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r350, %r352, %r351;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r368, %r370, %r369;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r386, %r388, %r387;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r414, %r416, %r415;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r417, %r416, %r415;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r420, %r422, %r421;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r423, %r422, %r421;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r462, %r464, %r463;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r465, %r467, %r466;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r468, %r470, %r469;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r471, %r464, %r463;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r509, %r511, %r510;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r512, %r514, %r513;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r552, %r554, %r553;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r555, %r557, %r556;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r558, %r560, %r559;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r561, %r554, %r553;
	// end inline asm
	add.f32 	%f1315, %f1402, %f1402;
	mov.b32 	%r612, %f1315;
	and.b32  	%r613, %r612, -2147483648;
	or.b32  	%r614, %r613, 1056964608;
	mov.b32 	%f1316, %r614;
	add.f32 	%f1317, %f1315, %f1316;
	cvt.rzi.f32.f32 	%f1318, %f1317;
	abs.f32 	%f1319, %f1315;
	setp.gt.f32 	%p292, %f1319, 0f4B000000;
	selp.f32 	%f1320, %f1315, %f1318, %p292;
	cvt.rzi.f32.f32 	%f1321, %f1315;
	setp.lt.f32 	%p293, %f1319, 0f3F000000;
	selp.f32 	%f1322, %f1321, %f1320, %p293;
	cvt.rzi.s32.f32 	%r615, %f1322;
	fma.rn.f32 	%f1323, %f1322, 0fBF000000, %f1402;
	mul.f32 	%f1324, %f1323, 0f34222169;
	fma.rn.f32 	%f1325, %f1323, 0f40490FDA, %f1324;
	mul.f32 	%f1326, %f1325, %f1325;
	fma.rn.f32 	%f1327, %f1326, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1328, %f1327, %f1326, 0f3D2AAABB;
	fma.rn.f32 	%f1329, %f1328, %f1326, 0fBEFFFFFF;
	fma.rn.f32 	%f1330, %f1329, %f1326, 0f3F800000;
	fma.rn.f32 	%f1331, %f1326, %f1325, 0f00000000;
	fma.rn.f32 	%f1332, %f1326, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1333, %f1332, %f1326, 0fBE2AAAA8;
	fma.rn.f32 	%f1334, %f1333, %f1331, %f1325;
	and.b32  	%r616, %r615, 1;
	setp.eq.b32 	%p294, %r616, 1;
	selp.f32 	%f1335, %f1330, %f1334, %p294;
	selp.f32 	%f1336, %f1334, %f1330, %p294;
	and.b32  	%r617, %r615, 2;
	setp.eq.s32 	%p295, %r617, 0;
	neg.f32 	%f1337, %f1335;
	selp.f32 	%f1338, %f1335, %f1337, %p295;
	add.s32 	%r618, %r615, 1;
	and.b32  	%r619, %r618, 2;
	setp.eq.s32 	%p296, %r619, 0;
	sub.f32 	%f1340, %f284, %f1336;
	selp.f32 	%f1341, %f1336, %f1340, %p296;
	cvt.rzi.f32.f32 	%f1342, %f1402;
	setp.eq.f32 	%p297, %f1342, %f1402;
	mul.f32 	%f1343, %f1402, 0f00000000;
	selp.f32 	%f1344, %f1343, %f1338, %p297;
	abs.f32 	%f1345, %f1402;
	setp.gt.f32 	%p298, %f1345, 0f4B800000;
	add.f32 	%f1346, %f1344, 0f3F800000;
	selp.f32 	%f1347, %f1346, %f1341, %p298;
	mov.b32 	%r607, %f1347;
	mov.b32 	%r606, %f233;
	// begin inline asm
	cvt.rn.f16x2.f32 %r605, %r607, %r606;
	// end inline asm
	mov.b32 	%r610, %f1344;
	mov.b32 	%r609, %f232;
	// begin inline asm
	cvt.rn.f16x2.f32 %r608, %r610, %r609;
	// end inline asm
	shl.b32 	%r620, %r1, 3;
	and.b32  	%r621, %r620, 64;
	and.b32  	%r622, %r208, 32;
	or.b32  	%r623, %r621, %r2;
	or.b32  	%r126, %r623, %r622;
	and.b32  	%r127, %r5, 2048;
	and.b32  	%r624, %r210, 28;
	shl.b32 	%r625, %r4, 5;
	and.b32  	%r626, %r625, 96;
	or.b32  	%r128, %r624, %r626;
	shl.b32 	%r627, %r4, 4;
	and.b32  	%r129, %r627, 1920;
	and.b32  	%r130, %r1, 8;
	shr.u32 	%r628, %r2, 3;
	mul.lo.s32 	%r629, %r628, 260;
	shr.u32 	%r630, %r2, 1;
	bfe.u32 	%r631, %r2, 1, 1;
	bfe.u32 	%r632, %r2, 2, 1;
	shl.b32 	%r633, %r1, 4;
	or.b32  	%r634, %r633, %r130;
	shr.u32 	%r635, %r634, 2;
	and.b32  	%r636, %r635, 30;
	and.b32  	%r637, %r2, 1;
	mad.lo.s32 	%r638, %r637, 2080, %r629;
	mad.lo.s32 	%r639, %r222, 65, %r638;
	mad.lo.s32 	%r640, %r631, 1040, %r639;
	mad.lo.s32 	%r641, %r632, 520, %r640;
	add.s32 	%r642, %r641, %r636;
	mul.wide.u32 	%rd51, %r642, 4;
	mov.u64 	%rd52, shmem;
	add.s64 	%rd5, %rd52, %rd51;
	add.s32 	%r643, %r642, 32;
	mul.wide.u32 	%rd53, %r643, 4;
	add.s64 	%rd6, %rd52, %rd53;
	add.s32 	%r644, %r642, 1;
	mul.wide.u32 	%rd54, %r644, 4;
	add.s64 	%rd7, %rd52, %rd54;
	add.s32 	%r645, %r642, 33;
	mul.wide.u32 	%rd55, %r645, 4;
	add.s64 	%rd8, %rd52, %rd55;
	add.s32 	%r646, %r642, 130;
	mul.wide.u32 	%rd56, %r646, 4;
	add.s64 	%rd9, %rd52, %rd56;
	add.s32 	%r647, %r642, 162;
	mul.wide.u32 	%rd57, %r647, 4;
	add.s64 	%rd10, %rd52, %rd57;
	add.s32 	%r648, %r642, 131;
	mul.wide.u32 	%rd58, %r648, 4;
	add.s64 	%rd11, %rd52, %rd58;
	add.s32 	%r649, %r642, 163;
	mul.wide.u32 	%rd59, %r649, 4;
	add.s64 	%rd12, %rd52, %rd59;
	mul.lo.s32 	%r650, %r221, 260;
	and.b32  	%r651, %r3, 32;
	mul.lo.s32 	%r652, %r219, 130;
	mul.lo.s32 	%r653, %r224, 1040;
	mul.lo.s32 	%r654, %r222, 520;
	mul.lo.s32 	%r655, %r218, 65;
	or.b32  	%r656, %r651, %r630;
	add.s32 	%r657, %r656, %r652;
	add.s32 	%r658, %r657, %r654;
	add.s32 	%r659, %r658, %r650;
	add.s32 	%r660, %r659, %r653;
	add.s32 	%r661, %r660, %r655;
	or.b32  	%r662, %r630, 8;
	add.s32 	%r663, %r652, %r651;
	add.s32 	%r664, %r663, %r654;
	add.s32 	%r665, %r664, %r662;
	add.s32 	%r666, %r665, %r650;
	add.s32 	%r667, %r666, %r653;
	add.s32 	%r668, %r667, %r655;
	or.b32  	%r669, %r630, 16;
	add.s32 	%r670, %r664, %r669;
	add.s32 	%r671, %r670, %r650;
	add.s32 	%r672, %r671, %r653;
	add.s32 	%r673, %r672, %r655;
	or.b32  	%r674, %r630, 24;
	add.s32 	%r675, %r664, %r674;
	add.s32 	%r676, %r675, %r650;
	add.s32 	%r677, %r676, %r653;
	add.s32 	%r678, %r677, %r655;
	or.b32  	%r679, %r630, 2080;
	add.s32 	%r680, %r664, %r679;
	add.s32 	%r681, %r680, %r650;
	add.s32 	%r682, %r681, %r653;
	add.s32 	%r683, %r682, %r655;
	add.s32 	%r684, %r664, 2080;
	add.s32 	%r685, %r684, %r662;
	add.s32 	%r686, %r685, %r650;
	add.s32 	%r687, %r686, %r653;
	add.s32 	%r688, %r687, %r655;
	add.s32 	%r689, %r684, %r669;
	add.s32 	%r690, %r689, %r650;
	add.s32 	%r691, %r690, %r653;
	add.s32 	%r692, %r691, %r655;
	add.s32 	%r693, %r684, %r674;
	add.s32 	%r694, %r693, %r650;
	add.s32 	%r695, %r694, %r653;
	add.s32 	%r696, %r695, %r655;
	or.b32  	%r697, %r214, %r129;
	or.b32  	%r698, %r697, %r209;
	or.b32  	%r699, %r698, %r212;
	or.b32  	%r700, %r699, %r211;
	bfe.u32 	%r701, %r700, 1, 5;
	mul.lo.s32 	%r702, %r701, 65;
	add.s32 	%r703, %r656, %r702;
	or.b32  	%r704, %r662, %r651;
	add.s32 	%r705, %r704, %r702;
	or.b32  	%r706, %r669, %r651;
	add.s32 	%r707, %r706, %r702;
	or.b32  	%r708, %r674, %r651;
	add.s32 	%r709, %r708, %r702;
	or.b32  	%r710, %r701, 32;
	mul.lo.s32 	%r711, %r710, 65;
	add.s32 	%r712, %r656, %r711;
	add.s32 	%r713, %r704, %r711;
	add.s32 	%r714, %r706, %r711;
	add.s32 	%r715, %r708, %r711;
	shl.b32 	%r716, %r2, 1;
	or.b32  	%r717, %r222, %r716;
	mul.lo.s32 	%r718, %r717, 65;
	add.s32 	%r719, %r636, %r718;
	mul.wide.u32 	%rd60, %r719, 4;
	add.s64 	%rd13, %rd52, %rd60;
	cvt.u64.u32 	%rd61, %r636;
	cvt.u64.u32 	%rd62, %r718;
	add.s64 	%rd63, %rd62, %rd61;
	shl.b64 	%rd64, %rd63, 2;
	add.s64 	%rd14, %rd52, %rd64;
	or.b32  	%r720, %r717, 32;
	mul.lo.s32 	%r721, %r720, 65;
	add.s32 	%r722, %r636, %r721;
	mul.wide.u32 	%rd65, %r722, 4;
	add.s64 	%rd15, %rd52, %rd65;
	cvt.u64.u32 	%rd66, %r721;
	add.s64 	%rd67, %rd61, %rd66;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd16, %rd52, %rd68;
	or.b32  	%r723, %r129, %r223;
	shl.b32 	%r724, %r2, 9;
	shl.b32 	%r725, %r723, 7;
	shl.b32 	%r726, %r4, 16;
	and.b32  	%r727, %r726, 262144;
	or.b32  	%r728, %r727, %r724;
	or.b32  	%r131, %r728, %r725;
	or.b32  	%r132, %r131, 8192;
	mul.wide.u32 	%rd17, %r715, 4;
	mul.wide.u32 	%rd18, %r714, 4;
	mul.wide.u32 	%rd19, %r713, 4;
	mul.wide.u32 	%rd20, %r712, 4;
	mul.wide.u32 	%rd21, %r709, 4;
	mul.wide.u32 	%rd22, %r707, 4;
	mul.wide.u32 	%rd23, %r705, 4;
	mul.wide.u32 	%rd24, %r703, 4;
	mul.wide.u32 	%rd25, %r696, 4;
	mul.wide.u32 	%rd26, %r692, 4;
	mul.wide.u32 	%rd27, %r688, 4;
	mul.wide.u32 	%rd28, %r683, 4;
	mul.wide.u32 	%rd29, %r678, 4;
	mul.wide.u32 	%rd30, %r673, 4;
	mul.wide.u32 	%rd31, %r668, 4;
	mul.wide.u32 	%rd32, %r661, 4;
	mov.u32 	%r16188, 0;
	setp.eq.s32 	%p299, %r130, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16189, %r16188;
	mov.u32 	%r16190, %r16188;
	mov.u32 	%r16191, %r16188;
	mov.u32 	%r16192, %r16188;
	mov.u32 	%r16193, %r16188;
	mov.u32 	%r16194, %r16188;
	mov.u32 	%r16195, %r16188;
	mov.u32 	%r16196, %r16188;
	mov.u32 	%r16197, %r16188;
	mov.u32 	%r16198, %r16188;
	mov.u32 	%r16199, %r16188;
	mov.u32 	%r16200, %r16188;
	mov.u32 	%r16201, %r16188;
	mov.u32 	%r16202, %r16188;
	mov.u32 	%r16203, %r16188;
	mov.u32 	%r16204, %r16188;
	mov.u32 	%r16205, %r16188;
	mov.u32 	%r16206, %r16188;
	mov.u32 	%r16207, %r16188;
	mov.u32 	%r16208, %r16188;
	mov.u32 	%r16209, %r16188;
	mov.u32 	%r16210, %r16188;
	mov.u32 	%r16211, %r16188;
	mov.u32 	%r16186, %r16188;
LBB0_177:                               // %L2074
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_178 Depth 2
	or.b32  	%r762, %r126, %r16186;
	shl.b32 	%r763, %r762, 12;
	or.b32  	%r764, %r763, %r127;
	or.b32  	%r765, %r764, %r128;
	or.b32  	%r766, %r765, %r129;
	mul.wide.s32 	%rd70, %r766, 4;
	add.s64 	%rd71, %rd2, %rd70;
	ld.global.v4.u32 	{%r767, %r768, %r769, %r770}, [%rd71];
	or.b32  	%r771, %r766, 65536;
	mul.wide.s32 	%rd72, %r771, 4;
	add.s64 	%rd73, %rd2, %rd72;
	ld.global.v4.u32 	{%r772, %r773, %r774, %r775}, [%rd73];
	selp.b32 	%r776, %r769, %r767, %p299;
	shfl.sync.bfly.b32	%r777, %r776, 8, 31, -1;
	selp.b32 	%r730, %r767, %r777, %p299;
	selp.b32 	%r731, %r777, %r769, %p299;
	selp.b32 	%r778, %r770, %r768, %p299;
	shfl.sync.bfly.b32	%r779, %r778, 8, 31, -1;
	selp.b32 	%r738, %r768, %r779, %p299;
	selp.b32 	%r739, %r779, %r770, %p299;
	selp.b32 	%r780, %r774, %r772, %p299;
	shfl.sync.bfly.b32	%r781, %r780, 8, 31, -1;
	selp.b32 	%r746, %r772, %r781, %p299;
	selp.b32 	%r747, %r781, %r774, %p299;
	selp.b32 	%r782, %r775, %r773, %p299;
	shfl.sync.bfly.b32	%r783, %r782, 8, 31, -1;
	selp.b32 	%r754, %r773, %r783, %p299;
	selp.b32 	%r755, %r783, %r775, %p299;
	mov.u32 	%r756, 21520;
	// begin inline asm
	prmt.b32 %r729, %r730, %r731, %r756;
	// end inline asm
	mov.u32 	%r760, 30258;
	// begin inline asm
	prmt.b32 %r733, %r730, %r731, %r760;
	// end inline asm
	// begin inline asm
	prmt.b32 %r737, %r738, %r739, %r756;
	// end inline asm
	// begin inline asm
	prmt.b32 %r741, %r738, %r739, %r760;
	// end inline asm
	// begin inline asm
	prmt.b32 %r745, %r746, %r747, %r756;
	// end inline asm
	// begin inline asm
	prmt.b32 %r749, %r746, %r747, %r760;
	// end inline asm
	// begin inline asm
	prmt.b32 %r753, %r754, %r755, %r756;
	// end inline asm
	// begin inline asm
	prmt.b32 %r757, %r754, %r755, %r760;
	// end inline asm
	st.shared.u32 	[%rd5], %r729;
	st.shared.u32 	[%rd6], %r733;
	st.shared.u32 	[%rd7], %r737;
	st.shared.u32 	[%rd8], %r741;
	st.shared.u32 	[%rd9], %r745;
	st.shared.u32 	[%rd10], %r749;
	st.shared.u32 	[%rd11], %r753;
	st.shared.u32 	[%rd12], %r757;
	bar.sync 	0;
	mov.u32 	%r16187, 256;
	mov.u64 	%rd94, %rd52;
LBB0_178:                               // %L9074
                                        //   Parent Loop BB0_177 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd74, %rd94, %rd32;
	ld.shared.u32 	%r16048, [%rd74];
	add.s64 	%rd75, %rd94, %rd31;
	ld.shared.u32 	%r16049, [%rd75];
	add.s64 	%rd76, %rd94, %rd30;
	ld.shared.u32 	%r16050, [%rd76];
	add.s64 	%rd77, %rd94, %rd29;
	ld.shared.u32 	%r16051, [%rd77];
	add.s64 	%rd78, %rd94, %rd28;
	ld.shared.u32 	%r16052, [%rd78];
	add.s64 	%rd79, %rd94, %rd27;
	ld.shared.u32 	%r16053, [%rd79];
	add.s64 	%rd80, %rd94, %rd26;
	ld.shared.u32 	%r16054, [%rd80];
	add.s64 	%rd81, %rd94, %rd25;
	ld.shared.u32 	%r16055, [%rd81];
	// begin inline asm
	mov.b32 %r789, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r800, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r788, %r16048, -2004318072;
	mov.u32 	%r787, 983055;
	// begin inline asm
	lop3.b32 %r786, %r787, %r788, %r789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r790, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r791, %r789, %r790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r794, %r786, %r791;
	// end inline asm
	mov.u32 	%r798, 15728880;
	// begin inline asm
	lop3.b32 %r797, %r798, %r788, %r800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r801, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r802, %r800, %r801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r805, %r797, %r802;
	// end inline asm
	shr.u32 	%r810, %r788, 8;
	// begin inline asm
	lop3.b32 %r808, %r787, %r810, %r789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r812, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r813, %r789, %r812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r816, %r808, %r813;
	// end inline asm
	// begin inline asm
	lop3.b32 %r819, %r798, %r810, %r800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r823, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r824, %r800, %r823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r827, %r819, %r824;
	// end inline asm
	// begin inline asm
	mov.b32 %r835, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r846, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r834, %r16049, -2004318072;
	// begin inline asm
	lop3.b32 %r832, %r787, %r834, %r835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r837, %r835, %r836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r840, %r832, %r837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r843, %r798, %r834, %r846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r848, %r846, %r847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r851, %r843, %r848;
	// end inline asm
	shr.u32 	%r856, %r834, 8;
	// begin inline asm
	lop3.b32 %r854, %r787, %r856, %r835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r859, %r835, %r858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r862, %r854, %r859;
	// end inline asm
	// begin inline asm
	lop3.b32 %r865, %r798, %r856, %r846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r870, %r846, %r869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r873, %r865, %r870;
	// end inline asm
	// begin inline asm
	mov.b32 %r881, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r892, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r880, %r16050, -2004318072;
	// begin inline asm
	lop3.b32 %r878, %r787, %r880, %r881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r882, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r883, %r881, %r882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r886, %r878, %r883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r889, %r798, %r880, %r892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r893, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r894, %r892, %r893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r897, %r889, %r894;
	// end inline asm
	shr.u32 	%r902, %r880, 8;
	// begin inline asm
	lop3.b32 %r900, %r787, %r902, %r881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r904, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r905, %r881, %r904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r908, %r900, %r905;
	// end inline asm
	// begin inline asm
	lop3.b32 %r911, %r798, %r902, %r892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r915, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r916, %r892, %r915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r919, %r911, %r916;
	// end inline asm
	// begin inline asm
	mov.b32 %r927, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r938, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r926, %r16051, -2004318072;
	// begin inline asm
	lop3.b32 %r924, %r787, %r926, %r927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r929, %r927, %r928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r932, %r924, %r929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r935, %r798, %r926, %r938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r940, %r938, %r939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r943, %r935, %r940;
	// end inline asm
	shr.u32 	%r948, %r926, 8;
	// begin inline asm
	lop3.b32 %r946, %r787, %r948, %r927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r951, %r927, %r950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r954, %r946, %r951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r957, %r798, %r948, %r938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r962, %r938, %r961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r965, %r957, %r962;
	// end inline asm
	// begin inline asm
	mov.b32 %r973, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r984, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r972, %r16052, -2004318072;
	// begin inline asm
	lop3.b32 %r970, %r787, %r972, %r973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r975, %r973, %r974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r978, %r970, %r975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r981, %r798, %r972, %r984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r986, %r984, %r985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r989, %r981, %r986;
	// end inline asm
	shr.u32 	%r994, %r972, 8;
	// begin inline asm
	lop3.b32 %r992, %r787, %r994, %r973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r997, %r973, %r996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1000, %r992, %r997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1003, %r798, %r994, %r984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1008, %r984, %r1007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1011, %r1003, %r1008;
	// end inline asm
	// begin inline asm
	mov.b32 %r1019, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1030, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1018, %r16053, -2004318072;
	// begin inline asm
	lop3.b32 %r1016, %r787, %r1018, %r1019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1021, %r1019, %r1020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1024, %r1016, %r1021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1027, %r798, %r1018, %r1030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1032, %r1030, %r1031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1035, %r1027, %r1032;
	// end inline asm
	shr.u32 	%r1040, %r1018, 8;
	// begin inline asm
	lop3.b32 %r1038, %r787, %r1040, %r1019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1043, %r1019, %r1042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1046, %r1038, %r1043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1049, %r798, %r1040, %r1030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1054, %r1030, %r1053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1057, %r1049, %r1054;
	// end inline asm
	// begin inline asm
	mov.b32 %r1065, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1076, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1064, %r16054, -2004318072;
	// begin inline asm
	lop3.b32 %r1062, %r787, %r1064, %r1065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1067, %r1065, %r1066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1070, %r1062, %r1067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1073, %r798, %r1064, %r1076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1078, %r1076, %r1077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1081, %r1073, %r1078;
	// end inline asm
	shr.u32 	%r1086, %r1064, 8;
	// begin inline asm
	lop3.b32 %r1084, %r787, %r1086, %r1065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1089, %r1065, %r1088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1092, %r1084, %r1089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1095, %r798, %r1086, %r1076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1100, %r1076, %r1099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1103, %r1095, %r1100;
	// end inline asm
	// begin inline asm
	mov.b32 %r1111, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1122, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1110, %r16055, -2004318072;
	// begin inline asm
	lop3.b32 %r1108, %r787, %r1110, %r1111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1113, %r1111, %r1112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1116, %r1108, %r1113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1119, %r798, %r1110, %r1122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1124, %r1122, %r1123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1127, %r1119, %r1124;
	// end inline asm
	shr.u32 	%r1132, %r1110, 8;
	// begin inline asm
	lop3.b32 %r1130, %r787, %r1132, %r1111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1135, %r1111, %r1134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1138, %r1130, %r1135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1141, %r798, %r1132, %r1122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1146, %r1122, %r1145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1149, %r1141, %r1146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1152, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1154, %r1152, %r794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1157, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1159, %r1157, %r805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1162, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1164, %r1162, %r816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1167, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1169, %r1167, %r827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1172, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1174, %r1172, %r840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1177, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1179, %r1177, %r851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1182, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1184, %r1182, %r862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1187, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1189, %r1187, %r873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1192, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1194, %r1192, %r886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1197, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1199, %r1197, %r897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1202, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1204, %r1202, %r908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1207, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1209, %r1207, %r919;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1212, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1214, %r1212, %r932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1217, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1219, %r1217, %r943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1222, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1224, %r1222, %r954;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1227, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1229, %r1227, %r965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1232, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1234, %r1232, %r978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1237, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1239, %r1237, %r989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1242, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1244, %r1242, %r1000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1247, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1249, %r1247, %r1011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1252, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1254, %r1252, %r1024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1257, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1259, %r1257, %r1035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1262, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1264, %r1262, %r1046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1267, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1269, %r1267, %r1057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1272, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1274, %r1272, %r1070;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1277, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1279, %r1277, %r1081;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1282, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1284, %r1282, %r1092;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1287, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1289, %r1287, %r1103;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1292, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1294, %r1292, %r1116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1297, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1299, %r1297, %r1127;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1302, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1304, %r1302, %r1138;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1307, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1309, %r1307, %r1149;
	// end inline asm
	// begin inline asm
	mov.b32 %r1317, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1328, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1316, %r16188, -2004318072;
	// begin inline asm
	lop3.b32 %r1314, %r787, %r1316, %r1317, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1318, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1319, %r1317, %r1318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1322, %r1314, %r1319;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1325, %r798, %r1316, %r1328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1329, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1330, %r1328, %r1329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1333, %r1325, %r1330;
	// end inline asm
	shr.u32 	%r1338, %r1316, 8;
	// begin inline asm
	lop3.b32 %r1336, %r787, %r1338, %r1317, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1340, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1341, %r1317, %r1340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1344, %r1336, %r1341;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1347, %r798, %r1338, %r1328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1352, %r1328, %r1351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1355, %r1347, %r1352;
	// end inline asm
	// begin inline asm
	mov.b32 %r1363, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1374, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1362, %r16189, -2004318072;
	// begin inline asm
	lop3.b32 %r1360, %r787, %r1362, %r1363, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1364, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1365, %r1363, %r1364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1368, %r1360, %r1365;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1371, %r798, %r1362, %r1374, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1375, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1376, %r1374, %r1375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1379, %r1371, %r1376;
	// end inline asm
	shr.u32 	%r1384, %r1362, 8;
	// begin inline asm
	lop3.b32 %r1382, %r787, %r1384, %r1363, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1386, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1387, %r1363, %r1386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1390, %r1382, %r1387;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1393, %r798, %r1384, %r1374, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1398, %r1374, %r1397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1401, %r1393, %r1398;
	// end inline asm
	// begin inline asm
	mov.b32 %r1409, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1420, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1408, %r16190, -2004318072;
	// begin inline asm
	lop3.b32 %r1406, %r787, %r1408, %r1409, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1411, %r1409, %r1410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1414, %r1406, %r1411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1417, %r798, %r1408, %r1420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1422, %r1420, %r1421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1425, %r1417, %r1422;
	// end inline asm
	shr.u32 	%r1430, %r1408, 8;
	// begin inline asm
	lop3.b32 %r1428, %r787, %r1430, %r1409, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1432, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1433, %r1409, %r1432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1436, %r1428, %r1433;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1439, %r798, %r1430, %r1420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1443, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1444, %r1420, %r1443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1447, %r1439, %r1444;
	// end inline asm
	// begin inline asm
	mov.b32 %r1455, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1466, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1454, %r16191, -2004318072;
	// begin inline asm
	lop3.b32 %r1452, %r787, %r1454, %r1455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1457, %r1455, %r1456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1460, %r1452, %r1457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1463, %r798, %r1454, %r1466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1468, %r1466, %r1467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1471, %r1463, %r1468;
	// end inline asm
	shr.u32 	%r1476, %r1454, 8;
	// begin inline asm
	lop3.b32 %r1474, %r787, %r1476, %r1455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1478, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1479, %r1455, %r1478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1482, %r1474, %r1479;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1485, %r798, %r1476, %r1466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1490, %r1466, %r1489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1493, %r1485, %r1490;
	// end inline asm
	// begin inline asm
	mov.b32 %r1501, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1512, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1500, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r1498, %r787, %r1500, %r1501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1502, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1503, %r1501, %r1502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1506, %r1498, %r1503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1509, %r798, %r1500, %r1512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1513, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1514, %r1512, %r1513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1517, %r1509, %r1514;
	// end inline asm
	shr.u32 	%r1522, %r1500, 8;
	// begin inline asm
	lop3.b32 %r1520, %r787, %r1522, %r1501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1524, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1525, %r1501, %r1524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1528, %r1520, %r1525;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1531, %r798, %r1522, %r1512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1536, %r1512, %r1535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1539, %r1531, %r1536;
	// end inline asm
	// begin inline asm
	mov.b32 %r1547, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1558, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1546, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r1544, %r787, %r1546, %r1547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1548, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1549, %r1547, %r1548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1552, %r1544, %r1549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1555, %r798, %r1546, %r1558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1559, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1560, %r1558, %r1559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1563, %r1555, %r1560;
	// end inline asm
	shr.u32 	%r1568, %r1546, 8;
	// begin inline asm
	lop3.b32 %r1566, %r787, %r1568, %r1547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1570, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1571, %r1547, %r1570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1574, %r1566, %r1571;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1577, %r798, %r1568, %r1558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1581, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1582, %r1558, %r1581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1585, %r1577, %r1582;
	// end inline asm
	// begin inline asm
	mov.b32 %r1593, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1604, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1592, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r1590, %r787, %r1592, %r1593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1594, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1595, %r1593, %r1594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1598, %r1590, %r1595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1601, %r798, %r1592, %r1604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1605, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1606, %r1604, %r1605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1609, %r1601, %r1606;
	// end inline asm
	shr.u32 	%r1614, %r1592, 8;
	// begin inline asm
	lop3.b32 %r1612, %r787, %r1614, %r1593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1616, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1617, %r1593, %r1616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1620, %r1612, %r1617;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1623, %r798, %r1614, %r1604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1627, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1628, %r1604, %r1627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1631, %r1623, %r1628;
	// end inline asm
	// begin inline asm
	mov.b32 %r1639, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1650, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1638, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r1636, %r787, %r1638, %r1639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1640, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1641, %r1639, %r1640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1644, %r1636, %r1641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1647, %r798, %r1638, %r1650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1651, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1652, %r1650, %r1651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1655, %r1647, %r1652;
	// end inline asm
	shr.u32 	%r1660, %r1638, 8;
	// begin inline asm
	lop3.b32 %r1658, %r787, %r1660, %r1639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1662, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1663, %r1639, %r1662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1666, %r1658, %r1663;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1669, %r798, %r1660, %r1650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1673, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1674, %r1650, %r1673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1677, %r1669, %r1674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1680, %r260, %r1322, %r1154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1684, %r260, %r1333, %r1159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1688, %r260, %r1344, %r1164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1692, %r260, %r1355, %r1169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1696, %r260, %r1368, %r1174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1700, %r260, %r1379, %r1179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1704, %r260, %r1390, %r1184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1708, %r260, %r1401, %r1189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1712, %r260, %r1414, %r1194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1716, %r260, %r1425, %r1199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1720, %r260, %r1436, %r1204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1724, %r260, %r1447, %r1209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1728, %r260, %r1460, %r1214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1732, %r260, %r1471, %r1219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1736, %r260, %r1482, %r1224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1740, %r260, %r1493, %r1229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1744, %r278, %r1506, %r1234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1748, %r278, %r1517, %r1239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1752, %r278, %r1528, %r1244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1756, %r278, %r1539, %r1249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1760, %r278, %r1552, %r1254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1764, %r278, %r1563, %r1259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1768, %r278, %r1574, %r1264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1772, %r278, %r1585, %r1269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1776, %r278, %r1598, %r1274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1780, %r278, %r1609, %r1279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1784, %r278, %r1620, %r1284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1788, %r278, %r1631, %r1289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1792, %r278, %r1644, %r1294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1796, %r278, %r1655, %r1299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1800, %r278, %r1666, %r1304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1804, %r278, %r1677, %r1309;
	// end inline asm
	// begin inline asm
	mov.b32 %r1813, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1824, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1812, %r16192, -2004318072;
	// begin inline asm
	lop3.b32 %r1810, %r787, %r1812, %r1813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1815, %r1813, %r1814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1818, %r1810, %r1815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1821, %r798, %r1812, %r1824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1825, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1826, %r1824, %r1825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1829, %r1821, %r1826;
	// end inline asm
	shr.u32 	%r1834, %r1812, 8;
	// begin inline asm
	lop3.b32 %r1832, %r787, %r1834, %r1813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1837, %r1813, %r1836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1840, %r1832, %r1837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1843, %r798, %r1834, %r1824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1848, %r1824, %r1847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1851, %r1843, %r1848;
	// end inline asm
	// begin inline asm
	mov.b32 %r1859, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1870, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1858, %r16193, -2004318072;
	// begin inline asm
	lop3.b32 %r1856, %r787, %r1858, %r1859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1860, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1861, %r1859, %r1860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1864, %r1856, %r1861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1867, %r798, %r1858, %r1870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1871, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1872, %r1870, %r1871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1875, %r1867, %r1872;
	// end inline asm
	shr.u32 	%r1880, %r1858, 8;
	// begin inline asm
	lop3.b32 %r1878, %r787, %r1880, %r1859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1882, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1883, %r1859, %r1882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1886, %r1878, %r1883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1889, %r798, %r1880, %r1870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1893, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1894, %r1870, %r1893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1897, %r1889, %r1894;
	// end inline asm
	// begin inline asm
	mov.b32 %r1905, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1916, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1904, %r16194, -2004318072;
	// begin inline asm
	lop3.b32 %r1902, %r787, %r1904, %r1905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1907, %r1905, %r1906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1910, %r1902, %r1907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1913, %r798, %r1904, %r1916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1918, %r1916, %r1917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1921, %r1913, %r1918;
	// end inline asm
	shr.u32 	%r1926, %r1904, 8;
	// begin inline asm
	lop3.b32 %r1924, %r787, %r1926, %r1905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1929, %r1905, %r1928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1932, %r1924, %r1929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1935, %r798, %r1926, %r1916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1940, %r1916, %r1939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1943, %r1935, %r1940;
	// end inline asm
	// begin inline asm
	mov.b32 %r1951, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1962, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1950, %r16195, -2004318072;
	// begin inline asm
	lop3.b32 %r1948, %r787, %r1950, %r1951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1952, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1953, %r1951, %r1952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1956, %r1948, %r1953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1959, %r798, %r1950, %r1962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1963, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1964, %r1962, %r1963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1967, %r1959, %r1964;
	// end inline asm
	shr.u32 	%r1972, %r1950, 8;
	// begin inline asm
	lop3.b32 %r1970, %r787, %r1972, %r1951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1975, %r1951, %r1974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1978, %r1970, %r1975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1981, %r798, %r1972, %r1962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1986, %r1962, %r1985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1989, %r1981, %r1986;
	// end inline asm
	// begin inline asm
	mov.b32 %r1997, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2008, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1996, %r16204, -2004318072;
	// begin inline asm
	lop3.b32 %r1994, %r787, %r1996, %r1997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1999, %r1997, %r1998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2002, %r1994, %r1999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2005, %r798, %r1996, %r2008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2009, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2010, %r2008, %r2009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2013, %r2005, %r2010;
	// end inline asm
	shr.u32 	%r2018, %r1996, 8;
	// begin inline asm
	lop3.b32 %r2016, %r787, %r2018, %r1997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2021, %r1997, %r2020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2024, %r2016, %r2021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2027, %r798, %r2018, %r2008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2032, %r2008, %r2031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2035, %r2027, %r2032;
	// end inline asm
	// begin inline asm
	mov.b32 %r2043, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2054, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2042, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r2040, %r787, %r2042, %r2043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2045, %r2043, %r2044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2048, %r2040, %r2045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2051, %r798, %r2042, %r2054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2055, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2056, %r2054, %r2055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2059, %r2051, %r2056;
	// end inline asm
	shr.u32 	%r2064, %r2042, 8;
	// begin inline asm
	lop3.b32 %r2062, %r787, %r2064, %r2043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2067, %r2043, %r2066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2070, %r2062, %r2067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2073, %r798, %r2064, %r2054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2078, %r2054, %r2077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2081, %r2073, %r2078;
	// end inline asm
	// begin inline asm
	mov.b32 %r2089, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2100, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2088, %r16206, -2004318072;
	// begin inline asm
	lop3.b32 %r2086, %r787, %r2088, %r2089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2091, %r2089, %r2090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2094, %r2086, %r2091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2097, %r798, %r2088, %r2100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2102, %r2100, %r2101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2105, %r2097, %r2102;
	// end inline asm
	shr.u32 	%r2110, %r2088, 8;
	// begin inline asm
	lop3.b32 %r2108, %r787, %r2110, %r2089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2113, %r2089, %r2112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2116, %r2108, %r2113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2119, %r798, %r2110, %r2100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2124, %r2100, %r2123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2127, %r2119, %r2124;
	// end inline asm
	// begin inline asm
	mov.b32 %r2135, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2146, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2134, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r2132, %r787, %r2134, %r2135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2137, %r2135, %r2136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2140, %r2132, %r2137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2143, %r798, %r2134, %r2146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2148, %r2146, %r2147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2151, %r2143, %r2148;
	// end inline asm
	shr.u32 	%r2156, %r2134, 8;
	// begin inline asm
	lop3.b32 %r2154, %r787, %r2156, %r2135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2159, %r2135, %r2158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2162, %r2154, %r2159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2165, %r798, %r2156, %r2146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2170, %r2146, %r2169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2173, %r2165, %r2170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2176, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2178, %r2176, %r1818, %r1680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2182, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2184, %r2182, %r1829, %r1684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2188, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2190, %r2188, %r1840, %r1688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2194, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2196, %r2194, %r1851, %r1692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2200, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2202, %r2200, %r1864, %r1696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2206, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2208, %r2206, %r1875, %r1700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2212, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2214, %r2212, %r1886, %r1704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2218, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2220, %r2218, %r1897, %r1708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2224, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2226, %r2224, %r1910, %r1712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2230, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2232, %r2230, %r1921, %r1716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2236, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2238, %r2236, %r1932, %r1720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2242, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2244, %r2242, %r1943, %r1724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2248, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2250, %r2248, %r1956, %r1728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2254, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2256, %r2254, %r1967, %r1732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2260, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2262, %r2260, %r1978, %r1736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2266, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2268, %r2266, %r1989, %r1740;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2272, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2274, %r2272, %r2002, %r1744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2278, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2280, %r2278, %r2013, %r1748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2284, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2286, %r2284, %r2024, %r1752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2290, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2292, %r2290, %r2035, %r1756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2296, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2298, %r2296, %r2048, %r1760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2302, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2304, %r2302, %r2059, %r1764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2308, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2310, %r2308, %r2070, %r1768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2314, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2316, %r2314, %r2081, %r1772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2320, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2322, %r2320, %r2094, %r1776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2326, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2328, %r2326, %r2105, %r1780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2332, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2334, %r2332, %r2116, %r1784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2338, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2340, %r2338, %r2127, %r1788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2344, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2346, %r2344, %r2140, %r1792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2350, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2352, %r2350, %r2151, %r1796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2356, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2358, %r2356, %r2162, %r1800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2362, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2364, %r2362, %r2173, %r1804;
	// end inline asm
	// begin inline asm
	mov.b32 %r2373, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2384, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2372, %r16196, -2004318072;
	// begin inline asm
	lop3.b32 %r2370, %r787, %r2372, %r2373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2375, %r2373, %r2374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2378, %r2370, %r2375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2381, %r798, %r2372, %r2384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2385, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2386, %r2384, %r2385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2389, %r2381, %r2386;
	// end inline asm
	shr.u32 	%r2394, %r2372, 8;
	// begin inline asm
	lop3.b32 %r2392, %r787, %r2394, %r2373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2396, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2397, %r2373, %r2396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2400, %r2392, %r2397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2403, %r798, %r2394, %r2384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2408, %r2384, %r2407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2411, %r2403, %r2408;
	// end inline asm
	// begin inline asm
	mov.b32 %r2419, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2430, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2418, %r16197, -2004318072;
	// begin inline asm
	lop3.b32 %r2416, %r787, %r2418, %r2419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2420, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2421, %r2419, %r2420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2424, %r2416, %r2421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2427, %r798, %r2418, %r2430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2431, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2432, %r2430, %r2431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2435, %r2427, %r2432;
	// end inline asm
	shr.u32 	%r2440, %r2418, 8;
	// begin inline asm
	lop3.b32 %r2438, %r787, %r2440, %r2419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2443, %r2419, %r2442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2446, %r2438, %r2443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2449, %r798, %r2440, %r2430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2454, %r2430, %r2453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2457, %r2449, %r2454;
	// end inline asm
	// begin inline asm
	mov.b32 %r2465, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2476, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2464, %r16198, -2004318072;
	// begin inline asm
	lop3.b32 %r2462, %r787, %r2464, %r2465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2466, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2467, %r2465, %r2466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2470, %r2462, %r2467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2473, %r798, %r2464, %r2476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2477, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2478, %r2476, %r2477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2481, %r2473, %r2478;
	// end inline asm
	shr.u32 	%r2486, %r2464, 8;
	// begin inline asm
	lop3.b32 %r2484, %r787, %r2486, %r2465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2489, %r2465, %r2488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2492, %r2484, %r2489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2495, %r798, %r2486, %r2476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2500, %r2476, %r2499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2503, %r2495, %r2500;
	// end inline asm
	// begin inline asm
	mov.b32 %r2511, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2522, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2510, %r16199, -2004318072;
	// begin inline asm
	lop3.b32 %r2508, %r787, %r2510, %r2511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2513, %r2511, %r2512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2516, %r2508, %r2513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2519, %r798, %r2510, %r2522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2523, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2524, %r2522, %r2523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2527, %r2519, %r2524;
	// end inline asm
	shr.u32 	%r2532, %r2510, 8;
	// begin inline asm
	lop3.b32 %r2530, %r787, %r2532, %r2511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2534, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2535, %r2511, %r2534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2538, %r2530, %r2535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2541, %r798, %r2532, %r2522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2546, %r2522, %r2545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2549, %r2541, %r2546;
	// end inline asm
	// begin inline asm
	mov.b32 %r2557, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2568, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2556, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r2554, %r787, %r2556, %r2557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2559, %r2557, %r2558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2562, %r2554, %r2559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2565, %r798, %r2556, %r2568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2569, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2570, %r2568, %r2569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2573, %r2565, %r2570;
	// end inline asm
	shr.u32 	%r2578, %r2556, 8;
	// begin inline asm
	lop3.b32 %r2576, %r787, %r2578, %r2557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2580, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2581, %r2557, %r2580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2584, %r2576, %r2581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2587, %r798, %r2578, %r2568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2592, %r2568, %r2591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2595, %r2587, %r2592;
	// end inline asm
	// begin inline asm
	mov.b32 %r2603, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2614, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2602, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r2600, %r787, %r2602, %r2603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2604, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2605, %r2603, %r2604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2608, %r2600, %r2605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2611, %r798, %r2602, %r2614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2615, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2616, %r2614, %r2615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2619, %r2611, %r2616;
	// end inline asm
	shr.u32 	%r2624, %r2602, 8;
	// begin inline asm
	lop3.b32 %r2622, %r787, %r2624, %r2603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2626, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2627, %r2603, %r2626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2630, %r2622, %r2627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2633, %r798, %r2624, %r2614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2638, %r2614, %r2637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2641, %r2633, %r2638;
	// end inline asm
	// begin inline asm
	mov.b32 %r2649, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2660, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2648, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r2646, %r787, %r2648, %r2649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2650, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2651, %r2649, %r2650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2654, %r2646, %r2651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2657, %r798, %r2648, %r2660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2661, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2662, %r2660, %r2661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2665, %r2657, %r2662;
	// end inline asm
	shr.u32 	%r2670, %r2648, 8;
	// begin inline asm
	lop3.b32 %r2668, %r787, %r2670, %r2649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2672, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2673, %r2649, %r2672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2676, %r2668, %r2673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2679, %r798, %r2670, %r2660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2683, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2684, %r2660, %r2683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2687, %r2679, %r2684;
	// end inline asm
	// begin inline asm
	mov.b32 %r2695, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2706, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2694, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r2692, %r787, %r2694, %r2695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2696, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2697, %r2695, %r2696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2700, %r2692, %r2697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2703, %r798, %r2694, %r2706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2707, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2708, %r2706, %r2707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2711, %r2703, %r2708;
	// end inline asm
	shr.u32 	%r2716, %r2694, 8;
	// begin inline asm
	lop3.b32 %r2714, %r787, %r2716, %r2695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2718, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2719, %r2695, %r2718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2722, %r2714, %r2719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2725, %r798, %r2716, %r2706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2729, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2730, %r2706, %r2729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2733, %r2725, %r2730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2871, %r332, %r2378, %r2178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2868, %r332, %r2389, %r2184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2880, %r332, %r2400, %r2190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2877, %r332, %r2411, %r2196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2889, %r332, %r2424, %r2202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2886, %r332, %r2435, %r2208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2898, %r332, %r2446, %r2214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2895, %r332, %r2457, %r2220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2907, %r332, %r2470, %r2226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2904, %r332, %r2481, %r2232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2916, %r332, %r2492, %r2238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2913, %r332, %r2503, %r2244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2925, %r332, %r2516, %r2250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2922, %r332, %r2527, %r2256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2934, %r332, %r2538, %r2262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2931, %r332, %r2549, %r2268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2943, %r350, %r2562, %r2274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2940, %r350, %r2573, %r2280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2952, %r350, %r2584, %r2286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2949, %r350, %r2595, %r2292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2961, %r350, %r2608, %r2298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2958, %r350, %r2619, %r2304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2970, %r350, %r2630, %r2310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2967, %r350, %r2641, %r2316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2979, %r350, %r2654, %r2322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2976, %r350, %r2665, %r2328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2988, %r350, %r2676, %r2334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2985, %r350, %r2687, %r2340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2997, %r350, %r2700, %r2346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2994, %r350, %r2711, %r2352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3006, %r350, %r2722, %r2358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3003, %r350, %r2733, %r2364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2864, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2866, %r2864, %r2868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2869, %r414, %r2871, %r2866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2873, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2875, %r2873, %r2877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2878, %r414, %r2880, %r2875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2882, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2884, %r2882, %r2886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2887, %r414, %r2889, %r2884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2891, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2893, %r2891, %r2895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2896, %r414, %r2898, %r2893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2900, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2902, %r2900, %r2904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2905, %r414, %r2907, %r2902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2909, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2911, %r2909, %r2913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2914, %r414, %r2916, %r2911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2918, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2920, %r2918, %r2922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2923, %r414, %r2925, %r2920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2927, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2929, %r2927, %r2931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2932, %r414, %r2934, %r2929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2936, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2938, %r2936, %r2940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2941, %r417, %r2943, %r2938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2945, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2947, %r2945, %r2949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2950, %r417, %r2952, %r2947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2954, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2956, %r2954, %r2958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2959, %r417, %r2961, %r2956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2963, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2965, %r2963, %r2967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2968, %r417, %r2970, %r2965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2972, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2974, %r2972, %r2976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2977, %r417, %r2979, %r2974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2981, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2983, %r2981, %r2985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2986, %r417, %r2988, %r2983;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2990, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2992, %r2990, %r2994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2995, %r417, %r2997, %r2992;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2999, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3001, %r2999, %r3003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3004, %r417, %r3006, %r3001;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3008, %r420, %r2871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r414, %r2868, %r3008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3015, %r420, %r2880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3018, %r414, %r2877, %r3015;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3022, %r420, %r2889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3025, %r414, %r2886, %r3022;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3029, %r420, %r2898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3032, %r414, %r2895, %r3029;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3036, %r420, %r2907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3039, %r414, %r2904, %r3036;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3043, %r420, %r2916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3046, %r414, %r2913, %r3043;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3050, %r420, %r2925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3053, %r414, %r2922, %r3050;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3057, %r420, %r2934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3060, %r414, %r2931, %r3057;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3064, %r423, %r2943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3067, %r417, %r2940, %r3064;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3071, %r423, %r2952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r417, %r2949, %r3071;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3078, %r423, %r2961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3081, %r417, %r2958, %r3078;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3085, %r423, %r2970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3088, %r417, %r2967, %r3085;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3092, %r423, %r2979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3095, %r417, %r2976, %r3092;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3099, %r423, %r2988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3102, %r417, %r2985, %r3099;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3106, %r423, %r2997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3109, %r417, %r2994, %r3106;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3113, %r423, %r3006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3116, %r417, %r3003, %r3113;
	// end inline asm
	mov.u32 	%r15143, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3287, %r3284}, {%r462, %r468, %r465, %r471}, {%r2869, %r3011}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3296, %r3293}, {%r462, %r468, %r465, %r471}, {%r2878, %r3018}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3305, %r3302}, {%r462, %r468, %r465, %r471}, {%r2887, %r3025}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3314, %r3311}, {%r462, %r468, %r465, %r471}, {%r2896, %r3032}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3323, %r3320}, {%r462, %r468, %r465, %r471}, {%r2905, %r3039}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3332, %r3329}, {%r462, %r468, %r465, %r471}, {%r2914, %r3046}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3341, %r3338}, {%r462, %r468, %r465, %r471}, {%r2923, %r3053}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3350, %r3347}, {%r462, %r468, %r465, %r471}, {%r2932, %r3060}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3359, %r3356}, {%r462, %r468, %r465, %r471}, {%r2941, %r3067}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3368, %r3365}, {%r462, %r468, %r465, %r471}, {%r2950, %r3074}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3377, %r3374}, {%r462, %r468, %r465, %r471}, {%r2959, %r3081}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3386, %r3383}, {%r462, %r468, %r465, %r471}, {%r2968, %r3088}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3395, %r3392}, {%r462, %r468, %r465, %r471}, {%r2977, %r3095}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3404, %r3401}, {%r462, %r468, %r465, %r471}, {%r2986, %r3102}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3413, %r3410}, {%r462, %r468, %r465, %r471}, {%r2995, %r3109}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3422, %r3419}, {%r462, %r468, %r465, %r471}, {%r3004, %r3116}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3280, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3282, %r3280, %r3284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3285, %r509, %r3287, %r3282;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3289, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3291, %r3289, %r3293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3294, %r509, %r3296, %r3291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3298, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3300, %r3298, %r3302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3303, %r509, %r3305, %r3300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3307, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3309, %r3307, %r3311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3312, %r509, %r3314, %r3309;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3316, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3318, %r3316, %r3320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3321, %r509, %r3323, %r3318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3325, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3327, %r3325, %r3329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3330, %r509, %r3332, %r3327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3334, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3336, %r3334, %r3338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3339, %r509, %r3341, %r3336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3343, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3345, %r3343, %r3347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3348, %r509, %r3350, %r3345;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3352, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3354, %r3352, %r3356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3357, %r509, %r3359, %r3354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3361, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3363, %r3361, %r3365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3366, %r509, %r3368, %r3363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3370, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3372, %r3370, %r3374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3375, %r509, %r3377, %r3372;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3379, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3381, %r3379, %r3383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3384, %r509, %r3386, %r3381;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3388, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3390, %r3388, %r3392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3393, %r509, %r3395, %r3390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3397, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3399, %r3397, %r3401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3402, %r509, %r3404, %r3399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3406, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3408, %r3406, %r3410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3411, %r509, %r3413, %r3408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3415, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3417, %r3415, %r3419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3420, %r509, %r3422, %r3417;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3424, %r512, %r3287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3427, %r509, %r3284, %r3424;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3431, %r512, %r3296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3434, %r509, %r3293, %r3431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3438, %r512, %r3305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3441, %r509, %r3302, %r3438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3445, %r512, %r3314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3448, %r509, %r3311, %r3445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3452, %r512, %r3323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3455, %r509, %r3320, %r3452;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3459, %r512, %r3332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3462, %r509, %r3329, %r3459;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3466, %r512, %r3341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3469, %r509, %r3338, %r3466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3473, %r512, %r3350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3476, %r509, %r3347, %r3473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3480, %r512, %r3359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3483, %r509, %r3356, %r3480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3487, %r512, %r3368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3490, %r509, %r3365, %r3487;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3494, %r512, %r3377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3497, %r509, %r3374, %r3494;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3501, %r512, %r3386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3504, %r509, %r3383, %r3501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3508, %r512, %r3395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3511, %r509, %r3392, %r3508;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3515, %r512, %r3404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3518, %r509, %r3401, %r3515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3522, %r512, %r3413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3525, %r509, %r3410, %r3522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3529, %r512, %r3422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3532, %r509, %r3419, %r3529;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3825, %r3828}, {%r552, %r558, %r555, %r561}, {%r3285, %r3427}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3831, %r3834}, {%r552, %r558, %r555, %r561}, {%r3294, %r3434}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3837, %r3840}, {%r552, %r558, %r555, %r561}, {%r3303, %r3441}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3843, %r3846}, {%r552, %r558, %r555, %r561}, {%r3312, %r3448}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3849, %r3852}, {%r552, %r558, %r555, %r561}, {%r3321, %r3455}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3855, %r3858}, {%r552, %r558, %r555, %r561}, {%r3330, %r3462}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3861, %r3864}, {%r552, %r558, %r555, %r561}, {%r3339, %r3469}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3867, %r3870}, {%r552, %r558, %r555, %r561}, {%r3348, %r3476}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3826, %r3829}, {%r552, %r558, %r555, %r561}, {%r3357, %r3483}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3832, %r3835}, {%r552, %r558, %r555, %r561}, {%r3366, %r3490}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3838, %r3841}, {%r552, %r558, %r555, %r561}, {%r3375, %r3497}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3844, %r3847}, {%r552, %r558, %r555, %r561}, {%r3384, %r3504}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3850, %r3853}, {%r552, %r558, %r555, %r561}, {%r3393, %r3511}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3856, %r3859}, {%r552, %r558, %r555, %r561}, {%r3402, %r3518}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3862, %r3865}, {%r552, %r558, %r555, %r561}, {%r3411, %r3525}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3868, %r3871}, {%r552, %r558, %r555, %r561}, {%r3420, %r3532}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3824, %r3825, %r3826;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3827, %r3828, %r3829;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3830, %r3831, %r3832;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3833, %r3834, %r3835;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3836, %r3837, %r3838;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3839, %r3840, %r3841;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3842, %r3843, %r3844;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3845, %r3846, %r3847;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3848, %r3849, %r3850;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3851, %r3852, %r3853;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3854, %r3855, %r3856;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3857, %r3858, %r3859;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3860, %r3861, %r3862;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3863, %r3864, %r3865;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3866, %r3867, %r3868;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3869, %r3870, %r3871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3872, %r3825, %r3826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3875, %r3828, %r3829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3878, %r3831, %r3832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3881, %r3834, %r3835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3884, %r3837, %r3838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3887, %r3840, %r3841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3890, %r3843, %r3844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3893, %r3846, %r3847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3896, %r3849, %r3850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3899, %r3852, %r3853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3902, %r3855, %r3856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3905, %r3858, %r3859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3908, %r3861, %r3862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3911, %r3864, %r3865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3914, %r3867, %r3868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3917, %r3870, %r3871;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3920, %r215, %r3824;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3923, %r215, %r3827;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3926, %r215, %r3830;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3929, %r215, %r3833;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3932, %r215, %r3836;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3935, %r215, %r3839;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3938, %r215, %r3842;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3941, %r215, %r3845;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3944, %r215, %r3848;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3947, %r215, %r3851;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3950, %r215, %r3854;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3953, %r215, %r3857;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3956, %r215, %r3860;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3959, %r215, %r3863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3962, %r215, %r3866;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3965, %r215, %r3869;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3968, %r216, %r3872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3971, %r216, %r3875;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3974, %r216, %r3878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3977, %r216, %r3881;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3980, %r216, %r3884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3983, %r216, %r3887;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3986, %r216, %r3890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3989, %r216, %r3893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3992, %r216, %r3896;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3995, %r216, %r3899;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3998, %r216, %r3902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4001, %r216, %r3905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4004, %r216, %r3908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4007, %r216, %r3911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4010, %r216, %r3914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4013, %r216, %r3917;
	// end inline asm
	// begin inline asm
	mov.b32 %r4016, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4017, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4018, %r3920, %r4016;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4021, %r4018, %r4017;
	// end inline asm
	// begin inline asm
	mov.b32 %r4024, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4025, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4026, %r3923, %r4024;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4029, %r4026, %r4025;
	// end inline asm
	// begin inline asm
	mov.b32 %r4032, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4033, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4034, %r3926, %r4032;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4037, %r4034, %r4033;
	// end inline asm
	// begin inline asm
	mov.b32 %r4040, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4041, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4042, %r3929, %r4040;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4045, %r4042, %r4041;
	// end inline asm
	// begin inline asm
	mov.b32 %r4048, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4049, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4050, %r3932, %r4048;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4053, %r4050, %r4049;
	// end inline asm
	// begin inline asm
	mov.b32 %r4056, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4057, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4058, %r3935, %r4056;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4061, %r4058, %r4057;
	// end inline asm
	// begin inline asm
	mov.b32 %r4064, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4065, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4066, %r3938, %r4064;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4069, %r4066, %r4065;
	// end inline asm
	// begin inline asm
	mov.b32 %r4072, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4073, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4074, %r3941, %r4072;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4077, %r4074, %r4073;
	// end inline asm
	// begin inline asm
	mov.b32 %r4080, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4081, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4082, %r3944, %r4080;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4085, %r4082, %r4081;
	// end inline asm
	// begin inline asm
	mov.b32 %r4088, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4089, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4090, %r3947, %r4088;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4093, %r4090, %r4089;
	// end inline asm
	// begin inline asm
	mov.b32 %r4096, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4097, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4098, %r3950, %r4096;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4101, %r4098, %r4097;
	// end inline asm
	// begin inline asm
	mov.b32 %r4104, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4105, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4106, %r3953, %r4104;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4109, %r4106, %r4105;
	// end inline asm
	// begin inline asm
	mov.b32 %r4112, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4113, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4114, %r3956, %r4112;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4117, %r4114, %r4113;
	// end inline asm
	// begin inline asm
	mov.b32 %r4120, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4121, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4122, %r3959, %r4120;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4125, %r4122, %r4121;
	// end inline asm
	// begin inline asm
	mov.b32 %r4128, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4129, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4130, %r3962, %r4128;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4133, %r4130, %r4129;
	// end inline asm
	// begin inline asm
	mov.b32 %r4136, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4137, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4138, %r3965, %r4136;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4141, %r4138, %r4137;
	// end inline asm
	// begin inline asm
	mov.b32 %r4144, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4145, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4146, %r3968, %r4144;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4149, %r4146, %r4145;
	// end inline asm
	// begin inline asm
	mov.b32 %r4152, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4153, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4154, %r3971, %r4152;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4157, %r4154, %r4153;
	// end inline asm
	// begin inline asm
	mov.b32 %r4160, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4161, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4162, %r3974, %r4160;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4165, %r4162, %r4161;
	// end inline asm
	// begin inline asm
	mov.b32 %r4168, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4169, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4170, %r3977, %r4168;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4173, %r4170, %r4169;
	// end inline asm
	// begin inline asm
	mov.b32 %r4176, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4177, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4178, %r3980, %r4176;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4181, %r4178, %r4177;
	// end inline asm
	// begin inline asm
	mov.b32 %r4184, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4185, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4186, %r3983, %r4184;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4189, %r4186, %r4185;
	// end inline asm
	// begin inline asm
	mov.b32 %r4192, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4193, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4194, %r3986, %r4192;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4197, %r4194, %r4193;
	// end inline asm
	// begin inline asm
	mov.b32 %r4200, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4201, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4202, %r3989, %r4200;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4205, %r4202, %r4201;
	// end inline asm
	// begin inline asm
	mov.b32 %r4208, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4209, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4210, %r3992, %r4208;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4213, %r4210, %r4209;
	// end inline asm
	// begin inline asm
	mov.b32 %r4216, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4217, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4218, %r3995, %r4216;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4221, %r4218, %r4217;
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4225, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4226, %r3998, %r4224;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4229, %r4226, %r4225;
	// end inline asm
	// begin inline asm
	mov.b32 %r4232, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4233, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4234, %r4001, %r4232;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4237, %r4234, %r4233;
	// end inline asm
	// begin inline asm
	mov.b32 %r4240, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4241, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4242, %r4004, %r4240;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4245, %r4242, %r4241;
	// end inline asm
	// begin inline asm
	mov.b32 %r4248, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4249, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4250, %r4007, %r4248;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4253, %r4250, %r4249;
	// end inline asm
	// begin inline asm
	mov.b32 %r4256, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4257, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4258, %r4010, %r4256;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4261, %r4258, %r4257;
	// end inline asm
	// begin inline asm
	mov.b32 %r4264, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4265, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4266, %r4013, %r4264;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4269, %r4266, %r4265;
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4274, %r4275, %r4273;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4277, %r4021, %r4274;
	// end inline asm
	// begin inline asm
	mov.b32 %r4280, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4281, %r4275, %r4280;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4284, %r4029, %r4281;
	// end inline asm
	// begin inline asm
	mov.b32 %r4287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4288, %r4275, %r4287;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4291, %r4037, %r4288;
	// end inline asm
	// begin inline asm
	mov.b32 %r4294, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4295, %r4275, %r4294;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4298, %r4045, %r4295;
	// end inline asm
	mov.u32 	%r4304, 25152;
	// begin inline asm
	prmt.b32 %r4301, %r4277, %r4291, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4305, %r4284, %r4298, %r4304;
	// end inline asm
	shl.b32 	%r4312, %r4305, 4;
	mov.u32 	%r4310, 252645135;
	// begin inline asm
	lop3.b32 %r4309, %r4310, %r4301, %r4312, 202;
	// end inline asm
	xor.b32  	%r16056, %r4309, -2004318072;
	// begin inline asm
	mov.b32 %r4316, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4314, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4315, %r4316, %r4314;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4318, %r4053, %r4315;
	// end inline asm
	// begin inline asm
	mov.b32 %r4321, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4322, %r4316, %r4321;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4325, %r4061, %r4322;
	// end inline asm
	// begin inline asm
	mov.b32 %r4328, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4329, %r4316, %r4328;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4332, %r4069, %r4329;
	// end inline asm
	// begin inline asm
	mov.b32 %r4335, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4336, %r4316, %r4335;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4339, %r4077, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4342, %r4318, %r4332, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4346, %r4325, %r4339, %r4304;
	// end inline asm
	shl.b32 	%r4353, %r4346, 4;
	// begin inline asm
	lop3.b32 %r4350, %r4310, %r4342, %r4353, 202;
	// end inline asm
	xor.b32  	%r16057, %r4350, -2004318072;
	// begin inline asm
	mov.b32 %r4357, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4355, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4356, %r4357, %r4355;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4359, %r4085, %r4356;
	// end inline asm
	// begin inline asm
	mov.b32 %r4362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4363, %r4357, %r4362;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4366, %r4093, %r4363;
	// end inline asm
	// begin inline asm
	mov.b32 %r4369, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4370, %r4357, %r4369;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4373, %r4101, %r4370;
	// end inline asm
	// begin inline asm
	mov.b32 %r4376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4377, %r4357, %r4376;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4380, %r4109, %r4377;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4383, %r4359, %r4373, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4387, %r4366, %r4380, %r4304;
	// end inline asm
	shl.b32 	%r4394, %r4387, 4;
	// begin inline asm
	lop3.b32 %r4391, %r4310, %r4383, %r4394, 202;
	// end inline asm
	xor.b32  	%r16058, %r4391, -2004318072;
	// begin inline asm
	mov.b32 %r4398, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4396, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4397, %r4398, %r4396;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4400, %r4117, %r4397;
	// end inline asm
	// begin inline asm
	mov.b32 %r4403, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4404, %r4398, %r4403;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4407, %r4125, %r4404;
	// end inline asm
	// begin inline asm
	mov.b32 %r4410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4411, %r4398, %r4410;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4414, %r4133, %r4411;
	// end inline asm
	// begin inline asm
	mov.b32 %r4417, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4418, %r4398, %r4417;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4421, %r4141, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4424, %r4400, %r4414, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4428, %r4407, %r4421, %r4304;
	// end inline asm
	shl.b32 	%r4435, %r4428, 4;
	// begin inline asm
	lop3.b32 %r4432, %r4310, %r4424, %r4435, 202;
	// end inline asm
	xor.b32  	%r16059, %r4432, -2004318072;
	// begin inline asm
	mov.b32 %r4439, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4437, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4438, %r4439, %r4437;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4441, %r4149, %r4438;
	// end inline asm
	// begin inline asm
	mov.b32 %r4444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4445, %r4439, %r4444;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4448, %r4157, %r4445;
	// end inline asm
	// begin inline asm
	mov.b32 %r4451, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4452, %r4439, %r4451;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4455, %r4165, %r4452;
	// end inline asm
	// begin inline asm
	mov.b32 %r4458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4459, %r4439, %r4458;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4462, %r4173, %r4459;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4465, %r4441, %r4455, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4469, %r4448, %r4462, %r4304;
	// end inline asm
	shl.b32 	%r4476, %r4469, 4;
	// begin inline asm
	lop3.b32 %r4473, %r4310, %r4465, %r4476, 202;
	// end inline asm
	xor.b32  	%r16060, %r4473, -2004318072;
	// begin inline asm
	mov.b32 %r4480, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4478, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4479, %r4480, %r4478;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4482, %r4181, %r4479;
	// end inline asm
	// begin inline asm
	mov.b32 %r4485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4486, %r4480, %r4485;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4489, %r4189, %r4486;
	// end inline asm
	// begin inline asm
	mov.b32 %r4492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4493, %r4480, %r4492;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4496, %r4197, %r4493;
	// end inline asm
	// begin inline asm
	mov.b32 %r4499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4500, %r4480, %r4499;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4503, %r4205, %r4500;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4506, %r4482, %r4496, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4510, %r4489, %r4503, %r4304;
	// end inline asm
	shl.b32 	%r4517, %r4510, 4;
	// begin inline asm
	lop3.b32 %r4514, %r4310, %r4506, %r4517, 202;
	// end inline asm
	xor.b32  	%r16061, %r4514, -2004318072;
	// begin inline asm
	mov.b32 %r4521, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4519, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4520, %r4521, %r4519;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4523, %r4213, %r4520;
	// end inline asm
	// begin inline asm
	mov.b32 %r4526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4527, %r4521, %r4526;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4530, %r4221, %r4527;
	// end inline asm
	// begin inline asm
	mov.b32 %r4533, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4534, %r4521, %r4533;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4537, %r4229, %r4534;
	// end inline asm
	// begin inline asm
	mov.b32 %r4540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4541, %r4521, %r4540;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4544, %r4237, %r4541;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4547, %r4523, %r4537, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4551, %r4530, %r4544, %r4304;
	// end inline asm
	shl.b32 	%r4558, %r4551, 4;
	// begin inline asm
	lop3.b32 %r4555, %r4310, %r4547, %r4558, 202;
	// end inline asm
	xor.b32  	%r16062, %r4555, -2004318072;
	// begin inline asm
	mov.b32 %r4562, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4561, %r4562, %r4560;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4564, %r4245, %r4561;
	// end inline asm
	// begin inline asm
	mov.b32 %r4567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4568, %r4562, %r4567;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4571, %r4253, %r4568;
	// end inline asm
	// begin inline asm
	mov.b32 %r4574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4575, %r4562, %r4574;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4578, %r4261, %r4575;
	// end inline asm
	// begin inline asm
	mov.b32 %r4581, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4582, %r4562, %r4581;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4585, %r4269, %r4582;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4588, %r4564, %r4578, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4592, %r4571, %r4585, %r4304;
	// end inline asm
	shl.b32 	%r4599, %r4592, 4;
	// begin inline asm
	lop3.b32 %r4596, %r4310, %r4588, %r4599, 202;
	// end inline asm
	xor.b32  	%r16063, %r4596, -2004318072;
	add.s64 	%rd82, %rd94, %rd24;
	st.shared.u32 	[%rd82], %r16056;
	add.s64 	%rd83, %rd94, %rd23;
	st.shared.u32 	[%rd83], %r16057;
	add.s64 	%rd84, %rd94, %rd22;
	st.shared.u32 	[%rd84], %r16058;
	add.s64 	%rd85, %rd94, %rd21;
	st.shared.u32 	[%rd85], %r16059;
	add.s64 	%rd86, %rd94, %rd20;
	st.shared.u32 	[%rd86], %r16060;
	add.s64 	%rd87, %rd94, %rd19;
	st.shared.u32 	[%rd87], %r16061;
	add.s64 	%rd88, %rd94, %rd18;
	st.shared.u32 	[%rd88], %r16062;
	add.s64 	%rd89, %rd94, %rd17;
	st.shared.u32 	[%rd89], %r16063;
	ld.shared.u32 	%r16188, [%rd74];
	ld.shared.u32 	%r16189, [%rd75];
	ld.shared.u32 	%r16190, [%rd76];
	ld.shared.u32 	%r16191, [%rd77];
	ld.shared.u32 	%r16200, [%rd78];
	ld.shared.u32 	%r16201, [%rd79];
	ld.shared.u32 	%r16202, [%rd80];
	ld.shared.u32 	%r16203, [%rd81];
	// begin inline asm
	mov.b32 %r4605, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4616, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4604, %r16188, -2004318072;
	// begin inline asm
	lop3.b32 %r4602, %r787, %r4604, %r4605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4607, %r4605, %r4606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4610, %r4602, %r4607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4613, %r798, %r4604, %r4616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4618, %r4616, %r4617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4621, %r4613, %r4618;
	// end inline asm
	shr.u32 	%r4626, %r4604, 8;
	// begin inline asm
	lop3.b32 %r4624, %r787, %r4626, %r4605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4629, %r4605, %r4628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4632, %r4624, %r4629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4635, %r798, %r4626, %r4616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4640, %r4616, %r4639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4643, %r4635, %r4640;
	// end inline asm
	// begin inline asm
	mov.b32 %r4651, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4662, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4650, %r16189, -2004318072;
	// begin inline asm
	lop3.b32 %r4648, %r787, %r4650, %r4651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4653, %r4651, %r4652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4656, %r4648, %r4653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4659, %r798, %r4650, %r4662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4664, %r4662, %r4663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4667, %r4659, %r4664;
	// end inline asm
	shr.u32 	%r4672, %r4650, 8;
	// begin inline asm
	lop3.b32 %r4670, %r787, %r4672, %r4651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4675, %r4651, %r4674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4678, %r4670, %r4675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4681, %r798, %r4672, %r4662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4686, %r4662, %r4685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4689, %r4681, %r4686;
	// end inline asm
	// begin inline asm
	mov.b32 %r4697, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4708, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4696, %r16190, -2004318072;
	// begin inline asm
	lop3.b32 %r4694, %r787, %r4696, %r4697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4698, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4699, %r4697, %r4698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4702, %r4694, %r4699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4705, %r798, %r4696, %r4708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4709, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4710, %r4708, %r4709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4713, %r4705, %r4710;
	// end inline asm
	shr.u32 	%r4718, %r4696, 8;
	// begin inline asm
	lop3.b32 %r4716, %r787, %r4718, %r4697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4720, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4721, %r4697, %r4720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4724, %r4716, %r4721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4727, %r798, %r4718, %r4708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4731, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4732, %r4708, %r4731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4735, %r4727, %r4732;
	// end inline asm
	// begin inline asm
	mov.b32 %r4743, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4754, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4742, %r16191, -2004318072;
	// begin inline asm
	lop3.b32 %r4740, %r787, %r4742, %r4743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4744, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4745, %r4743, %r4744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4748, %r4740, %r4745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4751, %r798, %r4742, %r4754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4755, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4756, %r4754, %r4755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4759, %r4751, %r4756;
	// end inline asm
	shr.u32 	%r4764, %r4742, 8;
	// begin inline asm
	lop3.b32 %r4762, %r787, %r4764, %r4743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4766, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4767, %r4743, %r4766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4770, %r4762, %r4767;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4773, %r798, %r4764, %r4754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4777, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4778, %r4754, %r4777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4781, %r4773, %r4778;
	// end inline asm
	// begin inline asm
	mov.b32 %r4789, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4800, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4788, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r4786, %r787, %r4788, %r4789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4790, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4791, %r4789, %r4790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4794, %r4786, %r4791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4797, %r798, %r4788, %r4800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4801, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4802, %r4800, %r4801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4805, %r4797, %r4802;
	// end inline asm
	shr.u32 	%r4810, %r4788, 8;
	// begin inline asm
	lop3.b32 %r4808, %r787, %r4810, %r4789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4812, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4813, %r4789, %r4812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4816, %r4808, %r4813;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4819, %r798, %r4810, %r4800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4823, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4824, %r4800, %r4823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4827, %r4819, %r4824;
	// end inline asm
	// begin inline asm
	mov.b32 %r4835, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4846, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4834, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r4832, %r787, %r4834, %r4835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4837, %r4835, %r4836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4840, %r4832, %r4837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4843, %r798, %r4834, %r4846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4848, %r4846, %r4847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4851, %r4843, %r4848;
	// end inline asm
	shr.u32 	%r4856, %r4834, 8;
	// begin inline asm
	lop3.b32 %r4854, %r787, %r4856, %r4835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4859, %r4835, %r4858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4862, %r4854, %r4859;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4865, %r798, %r4856, %r4846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4870, %r4846, %r4869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4873, %r4865, %r4870;
	// end inline asm
	// begin inline asm
	mov.b32 %r4881, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4892, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4880, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r4878, %r787, %r4880, %r4881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4882, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4883, %r4881, %r4882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4886, %r4878, %r4883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4889, %r798, %r4880, %r4892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4893, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4894, %r4892, %r4893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4897, %r4889, %r4894;
	// end inline asm
	shr.u32 	%r4902, %r4880, 8;
	// begin inline asm
	lop3.b32 %r4900, %r787, %r4902, %r4881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4904, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4905, %r4881, %r4904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4908, %r4900, %r4905;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4911, %r798, %r4902, %r4892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4915, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4916, %r4892, %r4915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4919, %r4911, %r4916;
	// end inline asm
	// begin inline asm
	mov.b32 %r4927, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4938, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4926, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r4924, %r787, %r4926, %r4927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4929, %r4927, %r4928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4932, %r4924, %r4929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4935, %r798, %r4926, %r4938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4940, %r4938, %r4939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4943, %r4935, %r4940;
	// end inline asm
	shr.u32 	%r4948, %r4926, 8;
	// begin inline asm
	lop3.b32 %r4946, %r787, %r4948, %r4927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4951, %r4927, %r4950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4954, %r4946, %r4951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4957, %r798, %r4948, %r4938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4962, %r4938, %r4961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4965, %r4957, %r4962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4968, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4970, %r4968, %r4610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4973, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4975, %r4973, %r4621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4978, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4980, %r4978, %r4632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4983, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4985, %r4983, %r4643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4988, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4990, %r4988, %r4656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4993, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4995, %r4993, %r4667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4998, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5000, %r4998, %r4678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5003, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5005, %r5003, %r4689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5008, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5010, %r5008, %r4702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5013, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5015, %r5013, %r4713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5018, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5020, %r5018, %r4724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5023, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5025, %r5023, %r4735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5028, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5030, %r5028, %r4748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5033, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5035, %r5033, %r4759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5038, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5040, %r5038, %r4770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5043, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5045, %r5043, %r4781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5048, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5050, %r5048, %r4794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5053, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5055, %r5053, %r4805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5058, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5060, %r5058, %r4816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5063, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5065, %r5063, %r4827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5068, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5070, %r5068, %r4840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5073, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5075, %r5073, %r4851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5078, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5080, %r5078, %r4862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5083, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5085, %r5083, %r4873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5088, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5090, %r5088, %r4886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5093, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5095, %r5093, %r4897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5098, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5100, %r5098, %r4908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5103, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5105, %r5103, %r4919;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5108, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5110, %r5108, %r4932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5113, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5115, %r5113, %r4943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5118, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5120, %r5118, %r4954;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5123, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5125, %r5123, %r4965;
	// end inline asm
	// begin inline asm
	mov.b32 %r5133, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5144, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5130, %r787, %r1812, %r5133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5135, %r5133, %r5134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5138, %r5130, %r5135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5141, %r798, %r1812, %r5144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5146, %r5144, %r5145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5149, %r5141, %r5146;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5152, %r787, %r1834, %r5133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5156, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5157, %r5133, %r5156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5160, %r5152, %r5157;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5163, %r798, %r1834, %r5144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5168, %r5144, %r5167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5171, %r5163, %r5168;
	// end inline asm
	// begin inline asm
	mov.b32 %r5179, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5190, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5176, %r787, %r1858, %r5179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5181, %r5179, %r5180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5184, %r5176, %r5181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5187, %r798, %r1858, %r5190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5191, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5192, %r5190, %r5191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5195, %r5187, %r5192;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5198, %r787, %r1880, %r5179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5202, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5203, %r5179, %r5202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5206, %r5198, %r5203;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5209, %r798, %r1880, %r5190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5214, %r5190, %r5213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5217, %r5209, %r5214;
	// end inline asm
	// begin inline asm
	mov.b32 %r5225, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5236, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5222, %r787, %r1904, %r5225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5227, %r5225, %r5226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5230, %r5222, %r5227;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5233, %r798, %r1904, %r5236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5237, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5238, %r5236, %r5237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5241, %r5233, %r5238;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5244, %r787, %r1926, %r5225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5248, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5249, %r5225, %r5248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5252, %r5244, %r5249;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5255, %r798, %r1926, %r5236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5259, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5260, %r5236, %r5259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5263, %r5255, %r5260;
	// end inline asm
	// begin inline asm
	mov.b32 %r5271, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5282, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5268, %r787, %r1950, %r5271, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5272, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5273, %r5271, %r5272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5276, %r5268, %r5273;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5279, %r798, %r1950, %r5282, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5283, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5284, %r5282, %r5283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5287, %r5279, %r5284;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5290, %r787, %r1972, %r5271, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5294, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5295, %r5271, %r5294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5298, %r5290, %r5295;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5301, %r798, %r1972, %r5282, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5306, %r5282, %r5305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5309, %r5301, %r5306;
	// end inline asm
	// begin inline asm
	mov.b32 %r5317, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5328, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5314, %r787, %r1996, %r5317, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5318, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5319, %r5317, %r5318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5322, %r5314, %r5319;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5325, %r798, %r1996, %r5328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5329, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5330, %r5328, %r5329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5333, %r5325, %r5330;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5336, %r787, %r2018, %r5317, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5340, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5341, %r5317, %r5340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5344, %r5336, %r5341;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5347, %r798, %r2018, %r5328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5352, %r5328, %r5351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5355, %r5347, %r5352;
	// end inline asm
	// begin inline asm
	mov.b32 %r5363, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5374, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5360, %r787, %r2042, %r5363, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5364, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5365, %r5363, %r5364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5368, %r5360, %r5365;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5371, %r798, %r2042, %r5374, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5375, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5376, %r5374, %r5375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5379, %r5371, %r5376;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5382, %r787, %r2064, %r5363, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5386, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5387, %r5363, %r5386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5390, %r5382, %r5387;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5393, %r798, %r2064, %r5374, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5398, %r5374, %r5397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5401, %r5393, %r5398;
	// end inline asm
	// begin inline asm
	mov.b32 %r5409, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5420, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5406, %r787, %r2088, %r5409, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5411, %r5409, %r5410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5414, %r5406, %r5411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5417, %r798, %r2088, %r5420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5422, %r5420, %r5421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5425, %r5417, %r5422;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5428, %r787, %r2110, %r5409, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5432, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5433, %r5409, %r5432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5436, %r5428, %r5433;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5439, %r798, %r2110, %r5420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5443, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5444, %r5420, %r5443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5447, %r5439, %r5444;
	// end inline asm
	// begin inline asm
	mov.b32 %r5455, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5466, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5452, %r787, %r2134, %r5455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5457, %r5455, %r5456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5460, %r5452, %r5457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5463, %r798, %r2134, %r5466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5468, %r5466, %r5467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5471, %r5463, %r5468;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5474, %r787, %r2156, %r5455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5478, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5479, %r5455, %r5478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5482, %r5474, %r5479;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5485, %r798, %r2156, %r5466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5490, %r5466, %r5489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5493, %r5485, %r5490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5496, %r260, %r5138, %r4970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5500, %r260, %r5149, %r4975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5504, %r260, %r5160, %r4980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5508, %r260, %r5171, %r4985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5512, %r260, %r5184, %r4990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5516, %r260, %r5195, %r4995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5520, %r260, %r5206, %r5000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5524, %r260, %r5217, %r5005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5528, %r260, %r5230, %r5010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5532, %r260, %r5241, %r5015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5536, %r260, %r5252, %r5020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5540, %r260, %r5263, %r5025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5544, %r260, %r5276, %r5030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5548, %r260, %r5287, %r5035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5552, %r260, %r5298, %r5040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5556, %r260, %r5309, %r5045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5560, %r278, %r5322, %r5050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5564, %r278, %r5333, %r5055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5568, %r278, %r5344, %r5060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5572, %r278, %r5355, %r5065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5576, %r278, %r5368, %r5070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5580, %r278, %r5379, %r5075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5584, %r278, %r5390, %r5080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5588, %r278, %r5401, %r5085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5592, %r278, %r5414, %r5090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5596, %r278, %r5425, %r5095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5600, %r278, %r5436, %r5100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5604, %r278, %r5447, %r5105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5608, %r278, %r5460, %r5110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5612, %r278, %r5471, %r5115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5616, %r278, %r5482, %r5120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5620, %r278, %r5493, %r5125;
	// end inline asm
	// begin inline asm
	mov.b32 %r5629, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5640, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5626, %r787, %r2372, %r5629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5631, %r5629, %r5630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5634, %r5626, %r5631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5637, %r798, %r2372, %r5640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5641, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5642, %r5640, %r5641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5645, %r5637, %r5642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5648, %r787, %r2394, %r5629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5653, %r5629, %r5652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5656, %r5648, %r5653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5659, %r798, %r2394, %r5640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5664, %r5640, %r5663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5667, %r5659, %r5664;
	// end inline asm
	// begin inline asm
	mov.b32 %r5675, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5686, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5672, %r787, %r2418, %r5675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5676, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5677, %r5675, %r5676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5680, %r5672, %r5677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5683, %r798, %r2418, %r5686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5687, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5688, %r5686, %r5687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5691, %r5683, %r5688;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5694, %r787, %r2440, %r5675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5698, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5699, %r5675, %r5698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5702, %r5694, %r5699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5705, %r798, %r2440, %r5686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5709, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5710, %r5686, %r5709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5713, %r5705, %r5710;
	// end inline asm
	// begin inline asm
	mov.b32 %r5721, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5732, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5718, %r787, %r2464, %r5721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5722, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5723, %r5721, %r5722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5726, %r5718, %r5723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5729, %r798, %r2464, %r5732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5733, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5734, %r5732, %r5733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5737, %r5729, %r5734;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5740, %r787, %r2486, %r5721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5744, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5745, %r5721, %r5744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5748, %r5740, %r5745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5751, %r798, %r2486, %r5732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5755, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5756, %r5732, %r5755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5759, %r5751, %r5756;
	// end inline asm
	// begin inline asm
	mov.b32 %r5767, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5778, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5764, %r787, %r2510, %r5767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5768, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5769, %r5767, %r5768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5772, %r5764, %r5769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5775, %r798, %r2510, %r5778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5779, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5780, %r5778, %r5779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5783, %r5775, %r5780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5786, %r787, %r2532, %r5767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5790, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5791, %r5767, %r5790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5794, %r5786, %r5791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5797, %r798, %r2532, %r5778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5801, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5802, %r5778, %r5801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5805, %r5797, %r5802;
	// end inline asm
	// begin inline asm
	mov.b32 %r5813, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5824, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5810, %r787, %r2556, %r5813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5815, %r5813, %r5814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5818, %r5810, %r5815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5821, %r798, %r2556, %r5824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5825, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5826, %r5824, %r5825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5829, %r5821, %r5826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5832, %r787, %r2578, %r5813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5837, %r5813, %r5836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5840, %r5832, %r5837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5843, %r798, %r2578, %r5824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5848, %r5824, %r5847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5851, %r5843, %r5848;
	// end inline asm
	// begin inline asm
	mov.b32 %r5859, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5870, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5856, %r787, %r2602, %r5859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5860, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5861, %r5859, %r5860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5864, %r5856, %r5861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5867, %r798, %r2602, %r5870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5871, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5872, %r5870, %r5871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5875, %r5867, %r5872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5878, %r787, %r2624, %r5859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5882, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5883, %r5859, %r5882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5886, %r5878, %r5883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5889, %r798, %r2624, %r5870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5893, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5894, %r5870, %r5893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5897, %r5889, %r5894;
	// end inline asm
	// begin inline asm
	mov.b32 %r5905, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5916, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5902, %r787, %r2648, %r5905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5907, %r5905, %r5906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5910, %r5902, %r5907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5913, %r798, %r2648, %r5916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5918, %r5916, %r5917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5921, %r5913, %r5918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5924, %r787, %r2670, %r5905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5929, %r5905, %r5928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5932, %r5924, %r5929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5935, %r798, %r2670, %r5916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5940, %r5916, %r5939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5943, %r5935, %r5940;
	// end inline asm
	// begin inline asm
	mov.b32 %r5951, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5962, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5948, %r787, %r2694, %r5951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5952, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5953, %r5951, %r5952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5956, %r5948, %r5953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5959, %r798, %r2694, %r5962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5963, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5964, %r5962, %r5963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5967, %r5959, %r5964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5970, %r787, %r2716, %r5951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5975, %r5951, %r5974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5978, %r5970, %r5975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5981, %r798, %r2716, %r5962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5986, %r5962, %r5985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5989, %r5981, %r5986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5992, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5994, %r5992, %r5634, %r5496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5998, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6000, %r5998, %r5645, %r5500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6004, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6006, %r6004, %r5656, %r5504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6010, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6012, %r6010, %r5667, %r5508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6016, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6018, %r6016, %r5680, %r5512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6022, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6024, %r6022, %r5691, %r5516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6028, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6030, %r6028, %r5702, %r5520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6034, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6036, %r6034, %r5713, %r5524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6040, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6042, %r6040, %r5726, %r5528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6046, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6048, %r6046, %r5737, %r5532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6052, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6054, %r6052, %r5748, %r5536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6058, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6060, %r6058, %r5759, %r5540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6064, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6066, %r6064, %r5772, %r5544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6070, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6072, %r6070, %r5783, %r5548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6076, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6078, %r6076, %r5794, %r5552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6082, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6084, %r6082, %r5805, %r5556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6088, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6090, %r6088, %r5818, %r5560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6094, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6096, %r6094, %r5829, %r5564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6100, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6102, %r6100, %r5840, %r5568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6106, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6108, %r6106, %r5851, %r5572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6112, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6114, %r6112, %r5864, %r5576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6118, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6120, %r6118, %r5875, %r5580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6124, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6126, %r6124, %r5886, %r5584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6130, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6132, %r6130, %r5897, %r5588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6136, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6138, %r6136, %r5910, %r5592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6142, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6144, %r6142, %r5921, %r5596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6148, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6150, %r6148, %r5932, %r5600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6154, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6156, %r6154, %r5943, %r5604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6160, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6162, %r6160, %r5956, %r5608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6166, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6168, %r6166, %r5967, %r5612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6172, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6174, %r6172, %r5978, %r5616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6178, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6180, %r6178, %r5989, %r5620;
	// end inline asm
	// begin inline asm
	mov.b32 %r6189, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6200, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6186, %r787, %r788, %r6189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6190, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6191, %r6189, %r6190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6194, %r6186, %r6191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6197, %r798, %r788, %r6200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6201, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6202, %r6200, %r6201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6205, %r6197, %r6202;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6208, %r787, %r810, %r6189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6212, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6213, %r6189, %r6212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6216, %r6208, %r6213;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6219, %r798, %r810, %r6200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6223, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6224, %r6200, %r6223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6227, %r6219, %r6224;
	// end inline asm
	// begin inline asm
	mov.b32 %r6235, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6246, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6232, %r787, %r834, %r6235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6236, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6237, %r6235, %r6236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6240, %r6232, %r6237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6243, %r798, %r834, %r6246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6247, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6248, %r6246, %r6247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6251, %r6243, %r6248;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6254, %r787, %r856, %r6235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6258, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6259, %r6235, %r6258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6262, %r6254, %r6259;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6265, %r798, %r856, %r6246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6270, %r6246, %r6269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6273, %r6265, %r6270;
	// end inline asm
	// begin inline asm
	mov.b32 %r6281, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6292, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6278, %r787, %r880, %r6281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6282, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6283, %r6281, %r6282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6286, %r6278, %r6283;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6289, %r798, %r880, %r6292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6293, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6294, %r6292, %r6293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6297, %r6289, %r6294;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6300, %r787, %r902, %r6281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6304, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6305, %r6281, %r6304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6308, %r6300, %r6305;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6311, %r798, %r902, %r6292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6315, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6316, %r6292, %r6315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6319, %r6311, %r6316;
	// end inline asm
	// begin inline asm
	mov.b32 %r6327, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6338, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6324, %r787, %r926, %r6327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6328, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6329, %r6327, %r6328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6332, %r6324, %r6329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6335, %r798, %r926, %r6338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6339, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6340, %r6338, %r6339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6343, %r6335, %r6340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6346, %r787, %r948, %r6327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6350, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6351, %r6327, %r6350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6354, %r6346, %r6351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6357, %r798, %r948, %r6338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6361, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6362, %r6338, %r6361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6365, %r6357, %r6362;
	// end inline asm
	// begin inline asm
	mov.b32 %r6373, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6384, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6370, %r787, %r972, %r6373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6375, %r6373, %r6374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6378, %r6370, %r6375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6381, %r798, %r972, %r6384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6385, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6386, %r6384, %r6385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6389, %r6381, %r6386;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6392, %r787, %r994, %r6373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6396, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6397, %r6373, %r6396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6400, %r6392, %r6397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6403, %r798, %r994, %r6384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6408, %r6384, %r6407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6411, %r6403, %r6408;
	// end inline asm
	// begin inline asm
	mov.b32 %r6419, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6430, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6416, %r787, %r1018, %r6419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6420, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6421, %r6419, %r6420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6424, %r6416, %r6421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6427, %r798, %r1018, %r6430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6431, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6432, %r6430, %r6431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6435, %r6427, %r6432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6438, %r787, %r1040, %r6419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6443, %r6419, %r6442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6446, %r6438, %r6443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6449, %r798, %r1040, %r6430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6454, %r6430, %r6453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6457, %r6449, %r6454;
	// end inline asm
	// begin inline asm
	mov.b32 %r6465, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6476, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6462, %r787, %r1064, %r6465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6466, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6467, %r6465, %r6466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6470, %r6462, %r6467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6473, %r798, %r1064, %r6476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6477, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6478, %r6476, %r6477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6481, %r6473, %r6478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6484, %r787, %r1086, %r6465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6489, %r6465, %r6488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6492, %r6484, %r6489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6495, %r798, %r1086, %r6476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6500, %r6476, %r6499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6503, %r6495, %r6500;
	// end inline asm
	// begin inline asm
	mov.b32 %r6511, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6522, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6508, %r787, %r1110, %r6511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6513, %r6511, %r6512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6516, %r6508, %r6513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6519, %r798, %r1110, %r6522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6523, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6524, %r6522, %r6523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6527, %r6519, %r6524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6530, %r787, %r1132, %r6511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6534, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6535, %r6511, %r6534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6538, %r6530, %r6535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6541, %r798, %r1132, %r6522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6546, %r6522, %r6545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6549, %r6541, %r6546;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6687, %r332, %r6194, %r5994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6684, %r332, %r6205, %r6000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6696, %r332, %r6216, %r6006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6693, %r332, %r6227, %r6012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6705, %r332, %r6240, %r6018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6702, %r332, %r6251, %r6024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6714, %r332, %r6262, %r6030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6711, %r332, %r6273, %r6036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6723, %r332, %r6286, %r6042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6720, %r332, %r6297, %r6048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6732, %r332, %r6308, %r6054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6729, %r332, %r6319, %r6060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6741, %r332, %r6332, %r6066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6738, %r332, %r6343, %r6072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6750, %r332, %r6354, %r6078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6747, %r332, %r6365, %r6084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6759, %r350, %r6378, %r6090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6756, %r350, %r6389, %r6096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6768, %r350, %r6400, %r6102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6765, %r350, %r6411, %r6108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6777, %r350, %r6424, %r6114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6774, %r350, %r6435, %r6120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6786, %r350, %r6446, %r6126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6783, %r350, %r6457, %r6132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6795, %r350, %r6470, %r6138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6792, %r350, %r6481, %r6144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6804, %r350, %r6492, %r6150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6801, %r350, %r6503, %r6156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6813, %r350, %r6516, %r6162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6810, %r350, %r6527, %r6168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6822, %r350, %r6538, %r6174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6819, %r350, %r6549, %r6180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6680, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6682, %r6680, %r6684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6685, %r414, %r6687, %r6682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6689, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6691, %r6689, %r6693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6694, %r414, %r6696, %r6691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6698, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6700, %r6698, %r6702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6703, %r414, %r6705, %r6700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6707, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6709, %r6707, %r6711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6712, %r414, %r6714, %r6709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6716, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6718, %r6716, %r6720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6721, %r414, %r6723, %r6718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6725, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6727, %r6725, %r6729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6730, %r414, %r6732, %r6727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6734, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6736, %r6734, %r6738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6739, %r414, %r6741, %r6736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6743, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6745, %r6743, %r6747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6748, %r414, %r6750, %r6745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6752, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6754, %r6752, %r6756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6757, %r417, %r6759, %r6754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6761, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6763, %r6761, %r6765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6766, %r417, %r6768, %r6763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6770, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6772, %r6770, %r6774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6775, %r417, %r6777, %r6772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6779, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6781, %r6779, %r6783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6784, %r417, %r6786, %r6781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6788, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6790, %r6788, %r6792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6793, %r417, %r6795, %r6790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6797, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6799, %r6797, %r6801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6802, %r417, %r6804, %r6799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6806, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6808, %r6806, %r6810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6811, %r417, %r6813, %r6808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6815, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6817, %r6815, %r6819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6820, %r417, %r6822, %r6817;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6824, %r420, %r6687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r414, %r6684, %r6824;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6831, %r420, %r6696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6834, %r414, %r6693, %r6831;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6838, %r420, %r6705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6841, %r414, %r6702, %r6838;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6845, %r420, %r6714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6848, %r414, %r6711, %r6845;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6852, %r420, %r6723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6855, %r414, %r6720, %r6852;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6859, %r420, %r6732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6862, %r414, %r6729, %r6859;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6866, %r420, %r6741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6869, %r414, %r6738, %r6866;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6873, %r420, %r6750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6876, %r414, %r6747, %r6873;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6880, %r423, %r6759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6883, %r417, %r6756, %r6880;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6887, %r423, %r6768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6890, %r417, %r6765, %r6887;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6894, %r423, %r6777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6897, %r417, %r6774, %r6894;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6901, %r423, %r6786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6904, %r417, %r6783, %r6901;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6908, %r423, %r6795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6911, %r417, %r6792, %r6908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6915, %r423, %r6804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6918, %r417, %r6801, %r6915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6922, %r423, %r6813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6925, %r417, %r6810, %r6922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6929, %r423, %r6822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6932, %r417, %r6819, %r6929;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7103, %r7100}, {%r462, %r468, %r465, %r471}, {%r6685, %r6827}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7112, %r7109}, {%r462, %r468, %r465, %r471}, {%r6694, %r6834}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7121, %r7118}, {%r462, %r468, %r465, %r471}, {%r6703, %r6841}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7130, %r7127}, {%r462, %r468, %r465, %r471}, {%r6712, %r6848}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7139, %r7136}, {%r462, %r468, %r465, %r471}, {%r6721, %r6855}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7148, %r7145}, {%r462, %r468, %r465, %r471}, {%r6730, %r6862}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7157, %r7154}, {%r462, %r468, %r465, %r471}, {%r6739, %r6869}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7166, %r7163}, {%r462, %r468, %r465, %r471}, {%r6748, %r6876}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7175, %r7172}, {%r462, %r468, %r465, %r471}, {%r6757, %r6883}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7184, %r7181}, {%r462, %r468, %r465, %r471}, {%r6766, %r6890}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7193, %r7190}, {%r462, %r468, %r465, %r471}, {%r6775, %r6897}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7202, %r7199}, {%r462, %r468, %r465, %r471}, {%r6784, %r6904}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7211, %r7208}, {%r462, %r468, %r465, %r471}, {%r6793, %r6911}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7220, %r7217}, {%r462, %r468, %r465, %r471}, {%r6802, %r6918}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7229, %r7226}, {%r462, %r468, %r465, %r471}, {%r6811, %r6925}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7238, %r7235}, {%r462, %r468, %r465, %r471}, {%r6820, %r6932}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7096, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7098, %r7096, %r7100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7101, %r509, %r7103, %r7098;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7105, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7107, %r7105, %r7109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7110, %r509, %r7112, %r7107;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7114, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7116, %r7114, %r7118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7119, %r509, %r7121, %r7116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7123, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7125, %r7123, %r7127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7128, %r509, %r7130, %r7125;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7132, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7134, %r7132, %r7136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7137, %r509, %r7139, %r7134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7141, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7143, %r7141, %r7145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7146, %r509, %r7148, %r7143;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7150, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7152, %r7150, %r7154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7155, %r509, %r7157, %r7152;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7159, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7161, %r7159, %r7163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7164, %r509, %r7166, %r7161;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7168, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7170, %r7168, %r7172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7173, %r509, %r7175, %r7170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7177, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7179, %r7177, %r7181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7182, %r509, %r7184, %r7179;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7186, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7188, %r7186, %r7190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7191, %r509, %r7193, %r7188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7195, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7197, %r7195, %r7199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7200, %r509, %r7202, %r7197;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7204, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7206, %r7204, %r7208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7209, %r509, %r7211, %r7206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7213, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7215, %r7213, %r7217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7218, %r509, %r7220, %r7215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7222, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7224, %r7222, %r7226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7227, %r509, %r7229, %r7224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7231, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7233, %r7231, %r7235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7236, %r509, %r7238, %r7233;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7240, %r512, %r7103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7243, %r509, %r7100, %r7240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7247, %r512, %r7112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7250, %r509, %r7109, %r7247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7254, %r512, %r7121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7257, %r509, %r7118, %r7254;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7261, %r512, %r7130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7264, %r509, %r7127, %r7261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7268, %r512, %r7139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7271, %r509, %r7136, %r7268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7275, %r512, %r7148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7278, %r509, %r7145, %r7275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7282, %r512, %r7157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7285, %r509, %r7154, %r7282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7289, %r512, %r7166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7292, %r509, %r7163, %r7289;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7296, %r512, %r7175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7299, %r509, %r7172, %r7296;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7303, %r512, %r7184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7306, %r509, %r7181, %r7303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7310, %r512, %r7193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7313, %r509, %r7190, %r7310;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7317, %r512, %r7202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7320, %r509, %r7199, %r7317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7324, %r512, %r7211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7327, %r509, %r7208, %r7324;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7331, %r512, %r7220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7334, %r509, %r7217, %r7331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7338, %r512, %r7229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7341, %r509, %r7226, %r7338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7345, %r512, %r7238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7348, %r509, %r7235, %r7345;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7641, %r7644}, {%r552, %r558, %r555, %r561}, {%r7101, %r7243}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7647, %r7650}, {%r552, %r558, %r555, %r561}, {%r7110, %r7250}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7653, %r7656}, {%r552, %r558, %r555, %r561}, {%r7119, %r7257}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7659, %r7662}, {%r552, %r558, %r555, %r561}, {%r7128, %r7264}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7665, %r7668}, {%r552, %r558, %r555, %r561}, {%r7137, %r7271}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7671, %r7674}, {%r552, %r558, %r555, %r561}, {%r7146, %r7278}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7677, %r7680}, {%r552, %r558, %r555, %r561}, {%r7155, %r7285}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7683, %r7686}, {%r552, %r558, %r555, %r561}, {%r7164, %r7292}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7642, %r7645}, {%r552, %r558, %r555, %r561}, {%r7173, %r7299}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7648, %r7651}, {%r552, %r558, %r555, %r561}, {%r7182, %r7306}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7654, %r7657}, {%r552, %r558, %r555, %r561}, {%r7191, %r7313}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7660, %r7663}, {%r552, %r558, %r555, %r561}, {%r7200, %r7320}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7666, %r7669}, {%r552, %r558, %r555, %r561}, {%r7209, %r7327}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7672, %r7675}, {%r552, %r558, %r555, %r561}, {%r7218, %r7334}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7678, %r7681}, {%r552, %r558, %r555, %r561}, {%r7227, %r7341}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7684, %r7687}, {%r552, %r558, %r555, %r561}, {%r7236, %r7348}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7640, %r7641, %r7642;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7643, %r7644, %r7645;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7646, %r7647, %r7648;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7649, %r7650, %r7651;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7652, %r7653, %r7654;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7655, %r7656, %r7657;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7658, %r7659, %r7660;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7661, %r7662, %r7663;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7664, %r7665, %r7666;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7667, %r7668, %r7669;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7670, %r7671, %r7672;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7673, %r7674, %r7675;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7676, %r7677, %r7678;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7679, %r7680, %r7681;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7682, %r7683, %r7684;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7685, %r7686, %r7687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7688, %r7641, %r7642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7691, %r7644, %r7645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7694, %r7647, %r7648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7697, %r7650, %r7651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7700, %r7653, %r7654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7703, %r7656, %r7657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7706, %r7659, %r7660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7709, %r7662, %r7663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7712, %r7665, %r7666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7715, %r7668, %r7669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7718, %r7671, %r7672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7721, %r7674, %r7675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7724, %r7677, %r7678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7727, %r7680, %r7681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7730, %r7683, %r7684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7733, %r7686, %r7687;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7736, %r215, %r7640;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7739, %r215, %r7643;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7742, %r215, %r7646;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7745, %r215, %r7649;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7748, %r215, %r7652;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7751, %r215, %r7655;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7754, %r215, %r7658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7757, %r215, %r7661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7760, %r215, %r7664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7763, %r215, %r7667;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7766, %r215, %r7670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7769, %r215, %r7673;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7772, %r215, %r7676;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7775, %r215, %r7679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7778, %r215, %r7682;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7781, %r215, %r7685;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7784, %r216, %r7688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7787, %r216, %r7691;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7790, %r216, %r7694;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7793, %r216, %r7697;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7796, %r216, %r7700;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7799, %r216, %r7703;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7802, %r216, %r7706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7805, %r216, %r7709;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7808, %r216, %r7712;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7811, %r216, %r7715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7814, %r216, %r7718;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7817, %r216, %r7721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7820, %r216, %r7724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7823, %r216, %r7727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7826, %r216, %r7730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7829, %r216, %r7733;
	// end inline asm
	// begin inline asm
	mov.b32 %r7832, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7833, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7834, %r7736, %r7832;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7837, %r7834, %r7833;
	// end inline asm
	// begin inline asm
	mov.b32 %r7840, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7841, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7842, %r7739, %r7840;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7845, %r7842, %r7841;
	// end inline asm
	// begin inline asm
	mov.b32 %r7848, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7849, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7850, %r7742, %r7848;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7853, %r7850, %r7849;
	// end inline asm
	// begin inline asm
	mov.b32 %r7856, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7857, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7858, %r7745, %r7856;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7861, %r7858, %r7857;
	// end inline asm
	// begin inline asm
	mov.b32 %r7864, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7865, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7866, %r7748, %r7864;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7869, %r7866, %r7865;
	// end inline asm
	// begin inline asm
	mov.b32 %r7872, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7873, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7874, %r7751, %r7872;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7877, %r7874, %r7873;
	// end inline asm
	// begin inline asm
	mov.b32 %r7880, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7881, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7882, %r7754, %r7880;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7885, %r7882, %r7881;
	// end inline asm
	// begin inline asm
	mov.b32 %r7888, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7889, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7890, %r7757, %r7888;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7893, %r7890, %r7889;
	// end inline asm
	// begin inline asm
	mov.b32 %r7896, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7897, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7898, %r7760, %r7896;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7901, %r7898, %r7897;
	// end inline asm
	// begin inline asm
	mov.b32 %r7904, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7905, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7906, %r7763, %r7904;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7909, %r7906, %r7905;
	// end inline asm
	// begin inline asm
	mov.b32 %r7912, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7913, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7914, %r7766, %r7912;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7917, %r7914, %r7913;
	// end inline asm
	// begin inline asm
	mov.b32 %r7920, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7921, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7922, %r7769, %r7920;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7925, %r7922, %r7921;
	// end inline asm
	// begin inline asm
	mov.b32 %r7928, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7929, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7930, %r7772, %r7928;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7933, %r7930, %r7929;
	// end inline asm
	// begin inline asm
	mov.b32 %r7936, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7937, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7938, %r7775, %r7936;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7941, %r7938, %r7937;
	// end inline asm
	// begin inline asm
	mov.b32 %r7944, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7945, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7946, %r7778, %r7944;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7949, %r7946, %r7945;
	// end inline asm
	// begin inline asm
	mov.b32 %r7952, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7953, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7954, %r7781, %r7952;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7957, %r7954, %r7953;
	// end inline asm
	// begin inline asm
	mov.b32 %r7960, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7961, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7962, %r7784, %r7960;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7965, %r7962, %r7961;
	// end inline asm
	// begin inline asm
	mov.b32 %r7968, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7969, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7970, %r7787, %r7968;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7973, %r7970, %r7969;
	// end inline asm
	// begin inline asm
	mov.b32 %r7976, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7977, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7978, %r7790, %r7976;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7981, %r7978, %r7977;
	// end inline asm
	// begin inline asm
	mov.b32 %r7984, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7985, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7986, %r7793, %r7984;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7989, %r7986, %r7985;
	// end inline asm
	// begin inline asm
	mov.b32 %r7992, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7993, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7994, %r7796, %r7992;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7997, %r7994, %r7993;
	// end inline asm
	// begin inline asm
	mov.b32 %r8000, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8001, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8002, %r7799, %r8000;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8005, %r8002, %r8001;
	// end inline asm
	// begin inline asm
	mov.b32 %r8008, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8009, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8010, %r7802, %r8008;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8013, %r8010, %r8009;
	// end inline asm
	// begin inline asm
	mov.b32 %r8016, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8017, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8018, %r7805, %r8016;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8021, %r8018, %r8017;
	// end inline asm
	// begin inline asm
	mov.b32 %r8024, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8025, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8026, %r7808, %r8024;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8029, %r8026, %r8025;
	// end inline asm
	// begin inline asm
	mov.b32 %r8032, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8033, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8034, %r7811, %r8032;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8037, %r8034, %r8033;
	// end inline asm
	// begin inline asm
	mov.b32 %r8040, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8041, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8042, %r7814, %r8040;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8045, %r8042, %r8041;
	// end inline asm
	// begin inline asm
	mov.b32 %r8048, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8049, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8050, %r7817, %r8048;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8053, %r8050, %r8049;
	// end inline asm
	// begin inline asm
	mov.b32 %r8056, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8057, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8058, %r7820, %r8056;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8061, %r8058, %r8057;
	// end inline asm
	// begin inline asm
	mov.b32 %r8064, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8065, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8066, %r7823, %r8064;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8069, %r8066, %r8065;
	// end inline asm
	// begin inline asm
	mov.b32 %r8072, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8073, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8074, %r7826, %r8072;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8077, %r8074, %r8073;
	// end inline asm
	// begin inline asm
	mov.b32 %r8080, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8081, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8082, %r7829, %r8080;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8085, %r8082, %r8081;
	// end inline asm
	// begin inline asm
	mov.b32 %r8091, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8090, %r8091, %r8089;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8093, %r7837, %r8090;
	// end inline asm
	// begin inline asm
	mov.b32 %r8096, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8097, %r8091, %r8096;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8100, %r7845, %r8097;
	// end inline asm
	// begin inline asm
	mov.b32 %r8103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8104, %r8091, %r8103;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8107, %r7853, %r8104;
	// end inline asm
	// begin inline asm
	mov.b32 %r8110, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8111, %r8091, %r8110;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8114, %r7861, %r8111;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8117, %r8093, %r8107, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8121, %r8100, %r8114, %r4304;
	// end inline asm
	shl.b32 	%r8128, %r8121, 4;
	// begin inline asm
	lop3.b32 %r8125, %r4310, %r8117, %r8128, 202;
	// end inline asm
	xor.b32  	%r16064, %r8125, -2004318072;
	// begin inline asm
	mov.b32 %r8132, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8131, %r8132, %r8130;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8134, %r7869, %r8131;
	// end inline asm
	// begin inline asm
	mov.b32 %r8137, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8138, %r8132, %r8137;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8141, %r7877, %r8138;
	// end inline asm
	// begin inline asm
	mov.b32 %r8144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8145, %r8132, %r8144;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8148, %r7885, %r8145;
	// end inline asm
	// begin inline asm
	mov.b32 %r8151, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8152, %r8132, %r8151;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8155, %r7893, %r8152;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8158, %r8134, %r8148, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8162, %r8141, %r8155, %r4304;
	// end inline asm
	shl.b32 	%r8169, %r8162, 4;
	// begin inline asm
	lop3.b32 %r8166, %r4310, %r8158, %r8169, 202;
	// end inline asm
	xor.b32  	%r16065, %r8166, -2004318072;
	// begin inline asm
	mov.b32 %r8173, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8171, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8172, %r8173, %r8171;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8175, %r7901, %r8172;
	// end inline asm
	// begin inline asm
	mov.b32 %r8178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8179, %r8173, %r8178;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8182, %r7909, %r8179;
	// end inline asm
	// begin inline asm
	mov.b32 %r8185, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8186, %r8173, %r8185;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8189, %r7917, %r8186;
	// end inline asm
	// begin inline asm
	mov.b32 %r8192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8193, %r8173, %r8192;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8196, %r7925, %r8193;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8199, %r8175, %r8189, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8203, %r8182, %r8196, %r4304;
	// end inline asm
	shl.b32 	%r8210, %r8203, 4;
	// begin inline asm
	lop3.b32 %r8207, %r4310, %r8199, %r8210, 202;
	// end inline asm
	xor.b32  	%r16066, %r8207, -2004318072;
	// begin inline asm
	mov.b32 %r8214, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8212, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8213, %r8214, %r8212;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8216, %r7933, %r8213;
	// end inline asm
	// begin inline asm
	mov.b32 %r8219, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8220, %r8214, %r8219;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8223, %r7941, %r8220;
	// end inline asm
	// begin inline asm
	mov.b32 %r8226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8227, %r8214, %r8226;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8230, %r7949, %r8227;
	// end inline asm
	// begin inline asm
	mov.b32 %r8233, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8234, %r8214, %r8233;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8237, %r7957, %r8234;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8240, %r8216, %r8230, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8244, %r8223, %r8237, %r4304;
	// end inline asm
	shl.b32 	%r8251, %r8244, 4;
	// begin inline asm
	lop3.b32 %r8248, %r4310, %r8240, %r8251, 202;
	// end inline asm
	xor.b32  	%r16067, %r8248, -2004318072;
	// begin inline asm
	mov.b32 %r8255, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8253, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8254, %r8255, %r8253;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8257, %r7965, %r8254;
	// end inline asm
	// begin inline asm
	mov.b32 %r8260, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8261, %r8255, %r8260;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8264, %r7973, %r8261;
	// end inline asm
	// begin inline asm
	mov.b32 %r8267, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8268, %r8255, %r8267;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8271, %r7981, %r8268;
	// end inline asm
	// begin inline asm
	mov.b32 %r8274, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8275, %r8255, %r8274;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8278, %r7989, %r8275;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8281, %r8257, %r8271, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8285, %r8264, %r8278, %r4304;
	// end inline asm
	shl.b32 	%r8292, %r8285, 4;
	// begin inline asm
	lop3.b32 %r8289, %r4310, %r8281, %r8292, 202;
	// end inline asm
	xor.b32  	%r16068, %r8289, -2004318072;
	// begin inline asm
	mov.b32 %r8296, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8294, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8295, %r8296, %r8294;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8298, %r7997, %r8295;
	// end inline asm
	// begin inline asm
	mov.b32 %r8301, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8302, %r8296, %r8301;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8305, %r8005, %r8302;
	// end inline asm
	// begin inline asm
	mov.b32 %r8308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8309, %r8296, %r8308;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8312, %r8013, %r8309;
	// end inline asm
	// begin inline asm
	mov.b32 %r8315, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8316, %r8296, %r8315;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8319, %r8021, %r8316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8322, %r8298, %r8312, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8326, %r8305, %r8319, %r4304;
	// end inline asm
	shl.b32 	%r8333, %r8326, 4;
	// begin inline asm
	lop3.b32 %r8330, %r4310, %r8322, %r8333, 202;
	// end inline asm
	xor.b32  	%r16069, %r8330, -2004318072;
	// begin inline asm
	mov.b32 %r8337, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8335, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8336, %r8337, %r8335;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8339, %r8029, %r8336;
	// end inline asm
	// begin inline asm
	mov.b32 %r8342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8343, %r8337, %r8342;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8346, %r8037, %r8343;
	// end inline asm
	// begin inline asm
	mov.b32 %r8349, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8350, %r8337, %r8349;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8353, %r8045, %r8350;
	// end inline asm
	// begin inline asm
	mov.b32 %r8356, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8357, %r8337, %r8356;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8360, %r8053, %r8357;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8363, %r8339, %r8353, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8367, %r8346, %r8360, %r4304;
	// end inline asm
	shl.b32 	%r8374, %r8367, 4;
	// begin inline asm
	lop3.b32 %r8371, %r4310, %r8363, %r8374, 202;
	// end inline asm
	xor.b32  	%r16070, %r8371, -2004318072;
	// begin inline asm
	mov.b32 %r8378, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8377, %r8378, %r8376;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8380, %r8061, %r8377;
	// end inline asm
	// begin inline asm
	mov.b32 %r8383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8384, %r8378, %r8383;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8387, %r8069, %r8384;
	// end inline asm
	// begin inline asm
	mov.b32 %r8390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8391, %r8378, %r8390;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8394, %r8077, %r8391;
	// end inline asm
	// begin inline asm
	mov.b32 %r8397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8398, %r8378, %r8397;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8401, %r8085, %r8398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8404, %r8380, %r8394, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8408, %r8387, %r8401, %r4304;
	// end inline asm
	shl.b32 	%r8415, %r8408, 4;
	// begin inline asm
	lop3.b32 %r8412, %r4310, %r8404, %r8415, 202;
	// end inline asm
	xor.b32  	%r16071, %r8412, -2004318072;
	st.shared.u32 	[%rd82], %r16064;
	st.shared.u32 	[%rd83], %r16065;
	st.shared.u32 	[%rd84], %r16066;
	st.shared.u32 	[%rd85], %r16067;
	st.shared.u32 	[%rd86], %r16068;
	st.shared.u32 	[%rd87], %r16069;
	st.shared.u32 	[%rd88], %r16070;
	st.shared.u32 	[%rd89], %r16071;
	ld.shared.u32 	%r16192, [%rd74];
	ld.shared.u32 	%r16193, [%rd75];
	ld.shared.u32 	%r16194, [%rd76];
	ld.shared.u32 	%r16195, [%rd77];
	ld.shared.u32 	%r16204, [%rd78];
	ld.shared.u32 	%r16205, [%rd79];
	ld.shared.u32 	%r16206, [%rd80];
	ld.shared.u32 	%r16207, [%rd81];
	// begin inline asm
	mov.b32 %r8421, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8432, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8420, %r16192, -2004318072;
	// begin inline asm
	lop3.b32 %r8418, %r787, %r8420, %r8421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8423, %r8421, %r8422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8426, %r8418, %r8423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8429, %r798, %r8420, %r8432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8434, %r8432, %r8433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8437, %r8429, %r8434;
	// end inline asm
	shr.u32 	%r8442, %r8420, 8;
	// begin inline asm
	lop3.b32 %r8440, %r787, %r8442, %r8421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8445, %r8421, %r8444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8448, %r8440, %r8445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8451, %r798, %r8442, %r8432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8456, %r8432, %r8455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8459, %r8451, %r8456;
	// end inline asm
	// begin inline asm
	mov.b32 %r8467, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8478, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8466, %r16193, -2004318072;
	// begin inline asm
	lop3.b32 %r8464, %r787, %r8466, %r8467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8469, %r8467, %r8468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8472, %r8464, %r8469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8475, %r798, %r8466, %r8478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8480, %r8478, %r8479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8483, %r8475, %r8480;
	// end inline asm
	shr.u32 	%r8488, %r8466, 8;
	// begin inline asm
	lop3.b32 %r8486, %r787, %r8488, %r8467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8491, %r8467, %r8490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8494, %r8486, %r8491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8497, %r798, %r8488, %r8478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8502, %r8478, %r8501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8505, %r8497, %r8502;
	// end inline asm
	// begin inline asm
	mov.b32 %r8513, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8524, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8512, %r16194, -2004318072;
	// begin inline asm
	lop3.b32 %r8510, %r787, %r8512, %r8513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8515, %r8513, %r8514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8518, %r8510, %r8515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8521, %r798, %r8512, %r8524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8526, %r8524, %r8525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8529, %r8521, %r8526;
	// end inline asm
	shr.u32 	%r8534, %r8512, 8;
	// begin inline asm
	lop3.b32 %r8532, %r787, %r8534, %r8513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8537, %r8513, %r8536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8540, %r8532, %r8537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8543, %r798, %r8534, %r8524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8548, %r8524, %r8547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8551, %r8543, %r8548;
	// end inline asm
	// begin inline asm
	mov.b32 %r8559, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8570, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8558, %r16195, -2004318072;
	// begin inline asm
	lop3.b32 %r8556, %r787, %r8558, %r8559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8561, %r8559, %r8560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8564, %r8556, %r8561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8567, %r798, %r8558, %r8570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8572, %r8570, %r8571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8575, %r8567, %r8572;
	// end inline asm
	shr.u32 	%r8580, %r8558, 8;
	// begin inline asm
	lop3.b32 %r8578, %r787, %r8580, %r8559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8583, %r8559, %r8582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8586, %r8578, %r8583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8589, %r798, %r8580, %r8570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8594, %r8570, %r8593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8597, %r8589, %r8594;
	// end inline asm
	// begin inline asm
	mov.b32 %r8605, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8616, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8604, %r16204, -2004318072;
	// begin inline asm
	lop3.b32 %r8602, %r787, %r8604, %r8605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8607, %r8605, %r8606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8610, %r8602, %r8607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8613, %r798, %r8604, %r8616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8618, %r8616, %r8617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8621, %r8613, %r8618;
	// end inline asm
	shr.u32 	%r8626, %r8604, 8;
	// begin inline asm
	lop3.b32 %r8624, %r787, %r8626, %r8605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8629, %r8605, %r8628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8632, %r8624, %r8629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8635, %r798, %r8626, %r8616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8640, %r8616, %r8639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8643, %r8635, %r8640;
	// end inline asm
	// begin inline asm
	mov.b32 %r8651, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8662, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8650, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r8648, %r787, %r8650, %r8651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8653, %r8651, %r8652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8656, %r8648, %r8653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8659, %r798, %r8650, %r8662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8664, %r8662, %r8663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8667, %r8659, %r8664;
	// end inline asm
	shr.u32 	%r8672, %r8650, 8;
	// begin inline asm
	lop3.b32 %r8670, %r787, %r8672, %r8651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8675, %r8651, %r8674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8678, %r8670, %r8675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8681, %r798, %r8672, %r8662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8686, %r8662, %r8685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8689, %r8681, %r8686;
	// end inline asm
	// begin inline asm
	mov.b32 %r8697, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8708, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8696, %r16206, -2004318072;
	// begin inline asm
	lop3.b32 %r8694, %r787, %r8696, %r8697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8698, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8699, %r8697, %r8698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8702, %r8694, %r8699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8705, %r798, %r8696, %r8708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8709, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8710, %r8708, %r8709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8713, %r8705, %r8710;
	// end inline asm
	shr.u32 	%r8718, %r8696, 8;
	// begin inline asm
	lop3.b32 %r8716, %r787, %r8718, %r8697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8720, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8721, %r8697, %r8720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8724, %r8716, %r8721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8727, %r798, %r8718, %r8708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8731, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8732, %r8708, %r8731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8735, %r8727, %r8732;
	// end inline asm
	// begin inline asm
	mov.b32 %r8743, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8754, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8742, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r8740, %r787, %r8742, %r8743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8744, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8745, %r8743, %r8744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8748, %r8740, %r8745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8751, %r798, %r8742, %r8754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8755, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8756, %r8754, %r8755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8759, %r8751, %r8756;
	// end inline asm
	shr.u32 	%r8764, %r8742, 8;
	// begin inline asm
	lop3.b32 %r8762, %r787, %r8764, %r8743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8766, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8767, %r8743, %r8766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8770, %r8762, %r8767;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8773, %r798, %r8764, %r8754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8777, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8778, %r8754, %r8777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8781, %r8773, %r8778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8784, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8786, %r8784, %r8426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8789, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8791, %r8789, %r8437;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8794, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8796, %r8794, %r8448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8799, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8801, %r8799, %r8459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8804, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8806, %r8804, %r8472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8809, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8811, %r8809, %r8483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8814, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8816, %r8814, %r8494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8819, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8821, %r8819, %r8505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8824, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8826, %r8824, %r8518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8829, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8831, %r8829, %r8529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8834, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8836, %r8834, %r8540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8839, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8841, %r8839, %r8551;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8844, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8846, %r8844, %r8564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8849, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8851, %r8849, %r8575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8854, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8856, %r8854, %r8586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8859, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8861, %r8859, %r8597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8864, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8866, %r8864, %r8610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8869, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8871, %r8869, %r8621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8874, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8876, %r8874, %r8632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8879, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8881, %r8879, %r8643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8884, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8886, %r8884, %r8656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8889, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8891, %r8889, %r8667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8894, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8896, %r8894, %r8678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8899, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8901, %r8899, %r8689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8904, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8906, %r8904, %r8702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8909, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8911, %r8909, %r8713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8914, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8916, %r8914, %r8724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8919, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8921, %r8919, %r8735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8924, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8926, %r8924, %r8748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8929, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8931, %r8929, %r8759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8934, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8936, %r8934, %r8770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8939, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8941, %r8939, %r8781;
	// end inline asm
	// begin inline asm
	mov.b32 %r8949, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8960, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8946, %r787, %r2372, %r8949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8951, %r8949, %r8950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8954, %r8946, %r8951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8957, %r798, %r2372, %r8960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8962, %r8960, %r8961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8965, %r8957, %r8962;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8968, %r787, %r2394, %r8949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8973, %r8949, %r8972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8976, %r8968, %r8973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8979, %r798, %r2394, %r8960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8984, %r8960, %r8983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8987, %r8979, %r8984;
	// end inline asm
	// begin inline asm
	mov.b32 %r8995, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9006, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8992, %r787, %r2418, %r8995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8997, %r8995, %r8996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9000, %r8992, %r8997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9003, %r798, %r2418, %r9006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9008, %r9006, %r9007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9011, %r9003, %r9008;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9014, %r787, %r2440, %r8995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9019, %r8995, %r9018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9022, %r9014, %r9019;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9025, %r798, %r2440, %r9006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9030, %r9006, %r9029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9033, %r9025, %r9030;
	// end inline asm
	// begin inline asm
	mov.b32 %r9041, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9052, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9038, %r787, %r2464, %r9041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9043, %r9041, %r9042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9046, %r9038, %r9043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9049, %r798, %r2464, %r9052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9054, %r9052, %r9053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9057, %r9049, %r9054;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9060, %r787, %r2486, %r9041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9065, %r9041, %r9064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9068, %r9060, %r9065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9071, %r798, %r2486, %r9052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9076, %r9052, %r9075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9079, %r9071, %r9076;
	// end inline asm
	// begin inline asm
	mov.b32 %r9087, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9098, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9084, %r787, %r2510, %r9087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9089, %r9087, %r9088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9092, %r9084, %r9089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9095, %r798, %r2510, %r9098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9100, %r9098, %r9099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9103, %r9095, %r9100;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9106, %r787, %r2532, %r9087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9110, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9111, %r9087, %r9110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9114, %r9106, %r9111;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9117, %r798, %r2532, %r9098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9122, %r9098, %r9121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9125, %r9117, %r9122;
	// end inline asm
	// begin inline asm
	mov.b32 %r9133, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9144, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9130, %r787, %r2556, %r9133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9135, %r9133, %r9134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9138, %r9130, %r9135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9141, %r798, %r2556, %r9144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9146, %r9144, %r9145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9149, %r9141, %r9146;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9152, %r787, %r2578, %r9133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9156, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9157, %r9133, %r9156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9160, %r9152, %r9157;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9163, %r798, %r2578, %r9144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9168, %r9144, %r9167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9171, %r9163, %r9168;
	// end inline asm
	// begin inline asm
	mov.b32 %r9179, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9190, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9176, %r787, %r2602, %r9179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9181, %r9179, %r9180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9184, %r9176, %r9181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9187, %r798, %r2602, %r9190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9191, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9192, %r9190, %r9191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9195, %r9187, %r9192;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9198, %r787, %r2624, %r9179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9202, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9203, %r9179, %r9202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9206, %r9198, %r9203;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9209, %r798, %r2624, %r9190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9214, %r9190, %r9213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9217, %r9209, %r9214;
	// end inline asm
	// begin inline asm
	mov.b32 %r9225, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9236, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9222, %r787, %r2648, %r9225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9227, %r9225, %r9226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9230, %r9222, %r9227;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9233, %r798, %r2648, %r9236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9237, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9238, %r9236, %r9237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9241, %r9233, %r9238;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9244, %r787, %r2670, %r9225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9248, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9249, %r9225, %r9248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9252, %r9244, %r9249;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9255, %r798, %r2670, %r9236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9259, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9260, %r9236, %r9259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9263, %r9255, %r9260;
	// end inline asm
	// begin inline asm
	mov.b32 %r9271, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9282, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9268, %r787, %r2694, %r9271, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9272, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9273, %r9271, %r9272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9276, %r9268, %r9273;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9279, %r798, %r2694, %r9282, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9283, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9284, %r9282, %r9283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9287, %r9279, %r9284;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9290, %r787, %r2716, %r9271, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9294, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9295, %r9271, %r9294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9298, %r9290, %r9295;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9301, %r798, %r2716, %r9282, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9306, %r9282, %r9305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9309, %r9301, %r9306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9312, %r260, %r8954, %r8786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9316, %r260, %r8965, %r8791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9320, %r260, %r8976, %r8796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9324, %r260, %r8987, %r8801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9328, %r260, %r9000, %r8806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9332, %r260, %r9011, %r8811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9336, %r260, %r9022, %r8816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9340, %r260, %r9033, %r8821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9344, %r260, %r9046, %r8826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9348, %r260, %r9057, %r8831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9352, %r260, %r9068, %r8836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9356, %r260, %r9079, %r8841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9360, %r260, %r9092, %r8846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9364, %r260, %r9103, %r8851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9368, %r260, %r9114, %r8856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9372, %r260, %r9125, %r8861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9376, %r278, %r9138, %r8866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9380, %r278, %r9149, %r8871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9384, %r278, %r9160, %r8876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9388, %r278, %r9171, %r8881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9392, %r278, %r9184, %r8886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9396, %r278, %r9195, %r8891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9400, %r278, %r9206, %r8896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9404, %r278, %r9217, %r8901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9408, %r278, %r9230, %r8906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9412, %r278, %r9241, %r8911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9416, %r278, %r9252, %r8916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9420, %r278, %r9263, %r8921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9424, %r278, %r9276, %r8926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9428, %r278, %r9287, %r8931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9432, %r278, %r9298, %r8936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9436, %r278, %r9309, %r8941;
	// end inline asm
	// begin inline asm
	mov.b32 %r9445, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9456, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9442, %r787, %r788, %r9445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9447, %r9445, %r9446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9450, %r9442, %r9447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9453, %r798, %r788, %r9456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9458, %r9456, %r9457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9461, %r9453, %r9458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9464, %r787, %r810, %r9445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9469, %r9445, %r9468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9472, %r9464, %r9469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9475, %r798, %r810, %r9456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9480, %r9456, %r9479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9483, %r9475, %r9480;
	// end inline asm
	// begin inline asm
	mov.b32 %r9491, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9502, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9488, %r787, %r834, %r9491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9493, %r9491, %r9492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9496, %r9488, %r9493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9499, %r798, %r834, %r9502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9504, %r9502, %r9503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9507, %r9499, %r9504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9510, %r787, %r856, %r9491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9515, %r9491, %r9514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9518, %r9510, %r9515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9521, %r798, %r856, %r9502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9526, %r9502, %r9525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9529, %r9521, %r9526;
	// end inline asm
	// begin inline asm
	mov.b32 %r9537, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9548, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9534, %r787, %r880, %r9537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9539, %r9537, %r9538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9542, %r9534, %r9539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9545, %r798, %r880, %r9548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9550, %r9548, %r9549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9553, %r9545, %r9550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9556, %r787, %r902, %r9537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9561, %r9537, %r9560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9564, %r9556, %r9561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9567, %r798, %r902, %r9548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9572, %r9548, %r9571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9575, %r9567, %r9572;
	// end inline asm
	// begin inline asm
	mov.b32 %r9583, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9594, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9580, %r787, %r926, %r9583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9585, %r9583, %r9584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9588, %r9580, %r9585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9591, %r798, %r926, %r9594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9596, %r9594, %r9595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9599, %r9591, %r9596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9602, %r787, %r948, %r9583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9607, %r9583, %r9606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9610, %r9602, %r9607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9613, %r798, %r948, %r9594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9618, %r9594, %r9617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9621, %r9613, %r9618;
	// end inline asm
	// begin inline asm
	mov.b32 %r9629, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9640, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9626, %r787, %r972, %r9629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9631, %r9629, %r9630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9634, %r9626, %r9631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9637, %r798, %r972, %r9640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9641, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9642, %r9640, %r9641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9645, %r9637, %r9642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9648, %r787, %r994, %r9629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9653, %r9629, %r9652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9656, %r9648, %r9653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9659, %r798, %r994, %r9640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9664, %r9640, %r9663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9667, %r9659, %r9664;
	// end inline asm
	// begin inline asm
	mov.b32 %r9675, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9686, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9672, %r787, %r1018, %r9675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9676, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9677, %r9675, %r9676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9680, %r9672, %r9677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9683, %r798, %r1018, %r9686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9687, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9688, %r9686, %r9687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9691, %r9683, %r9688;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9694, %r787, %r1040, %r9675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9698, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9699, %r9675, %r9698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9702, %r9694, %r9699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9705, %r798, %r1040, %r9686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9709, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9710, %r9686, %r9709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9713, %r9705, %r9710;
	// end inline asm
	// begin inline asm
	mov.b32 %r9721, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9732, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9718, %r787, %r1064, %r9721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9722, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9723, %r9721, %r9722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9726, %r9718, %r9723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9729, %r798, %r1064, %r9732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9733, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9734, %r9732, %r9733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9737, %r9729, %r9734;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9740, %r787, %r1086, %r9721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9744, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9745, %r9721, %r9744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9748, %r9740, %r9745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9751, %r798, %r1086, %r9732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9755, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9756, %r9732, %r9755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9759, %r9751, %r9756;
	// end inline asm
	// begin inline asm
	mov.b32 %r9767, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9778, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9764, %r787, %r1110, %r9767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9768, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9769, %r9767, %r9768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9772, %r9764, %r9769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9775, %r798, %r1110, %r9778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9779, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9780, %r9778, %r9779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9783, %r9775, %r9780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9786, %r787, %r1132, %r9767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9790, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9791, %r9767, %r9790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9794, %r9786, %r9791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9797, %r798, %r1132, %r9778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9801, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9802, %r9778, %r9801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9805, %r9797, %r9802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9808, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9810, %r9808, %r9450, %r9312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9814, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9816, %r9814, %r9461, %r9316;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9820, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9822, %r9820, %r9472, %r9320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9826, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9828, %r9826, %r9483, %r9324;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9832, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9834, %r9832, %r9496, %r9328;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9838, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9840, %r9838, %r9507, %r9332;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9844, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9846, %r9844, %r9518, %r9336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9850, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9852, %r9850, %r9529, %r9340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9856, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9858, %r9856, %r9542, %r9344;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9862, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9864, %r9862, %r9553, %r9348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9868, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9870, %r9868, %r9564, %r9352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9874, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9876, %r9874, %r9575, %r9356;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9880, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9882, %r9880, %r9588, %r9360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9886, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9888, %r9886, %r9599, %r9364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9892, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9894, %r9892, %r9610, %r9368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9898, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9900, %r9898, %r9621, %r9372;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9904, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9906, %r9904, %r9634, %r9376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9910, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9912, %r9910, %r9645, %r9380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9916, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9918, %r9916, %r9656, %r9384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9922, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9924, %r9922, %r9667, %r9388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9928, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9930, %r9928, %r9680, %r9392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9934, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9936, %r9934, %r9691, %r9396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9940, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9942, %r9940, %r9702, %r9400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9946, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9948, %r9946, %r9713, %r9404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9952, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9954, %r9952, %r9726, %r9408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9958, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9960, %r9958, %r9737, %r9412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9964, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9966, %r9964, %r9748, %r9416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9970, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9972, %r9970, %r9759, %r9420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9976, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9978, %r9976, %r9772, %r9424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9982, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9984, %r9982, %r9783, %r9428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9988, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9990, %r9988, %r9794, %r9432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9994, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9996, %r9994, %r9805, %r9436;
	// end inline asm
	// begin inline asm
	mov.b32 %r10005, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10016, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10002, %r787, %r4604, %r10005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10006, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10007, %r10005, %r10006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10010, %r10002, %r10007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10013, %r798, %r4604, %r10016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10017, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10018, %r10016, %r10017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10021, %r10013, %r10018;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10024, %r787, %r4626, %r10005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10028, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10029, %r10005, %r10028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10032, %r10024, %r10029;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10035, %r798, %r4626, %r10016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10039, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10040, %r10016, %r10039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10043, %r10035, %r10040;
	// end inline asm
	// begin inline asm
	mov.b32 %r10051, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10062, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10048, %r787, %r4650, %r10051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10052, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10053, %r10051, %r10052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10056, %r10048, %r10053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10059, %r798, %r4650, %r10062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10063, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10064, %r10062, %r10063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10067, %r10059, %r10064;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10070, %r787, %r4672, %r10051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10074, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10075, %r10051, %r10074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10078, %r10070, %r10075;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10081, %r798, %r4672, %r10062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10086, %r10062, %r10085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10089, %r10081, %r10086;
	// end inline asm
	// begin inline asm
	mov.b32 %r10097, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10108, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10094, %r787, %r4696, %r10097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10098, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10099, %r10097, %r10098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10102, %r10094, %r10099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10105, %r798, %r4696, %r10108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10109, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10110, %r10108, %r10109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10113, %r10105, %r10110;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10116, %r787, %r4718, %r10097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10120, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10121, %r10097, %r10120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10124, %r10116, %r10121;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10127, %r798, %r4718, %r10108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10132, %r10108, %r10131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10135, %r10127, %r10132;
	// end inline asm
	// begin inline asm
	mov.b32 %r10143, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10154, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10140, %r787, %r4742, %r10143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10145, %r10143, %r10144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10148, %r10140, %r10145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10151, %r798, %r4742, %r10154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10155, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10156, %r10154, %r10155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10159, %r10151, %r10156;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10162, %r787, %r4764, %r10143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10166, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10167, %r10143, %r10166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10170, %r10162, %r10167;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10173, %r798, %r4764, %r10154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10177, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10178, %r10154, %r10177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10181, %r10173, %r10178;
	// end inline asm
	// begin inline asm
	mov.b32 %r10189, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10200, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10186, %r787, %r4788, %r10189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10190, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10191, %r10189, %r10190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10194, %r10186, %r10191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10197, %r798, %r4788, %r10200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10201, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10202, %r10200, %r10201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10205, %r10197, %r10202;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10208, %r787, %r4810, %r10189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10212, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10213, %r10189, %r10212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10216, %r10208, %r10213;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10219, %r798, %r4810, %r10200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10223, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10224, %r10200, %r10223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10227, %r10219, %r10224;
	// end inline asm
	// begin inline asm
	mov.b32 %r10235, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10246, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10232, %r787, %r4834, %r10235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10236, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10237, %r10235, %r10236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10240, %r10232, %r10237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10243, %r798, %r4834, %r10246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10247, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10248, %r10246, %r10247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10251, %r10243, %r10248;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10254, %r787, %r4856, %r10235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10258, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10259, %r10235, %r10258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10262, %r10254, %r10259;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10265, %r798, %r4856, %r10246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10270, %r10246, %r10269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10273, %r10265, %r10270;
	// end inline asm
	// begin inline asm
	mov.b32 %r10281, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10292, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10278, %r787, %r4880, %r10281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10282, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10283, %r10281, %r10282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10286, %r10278, %r10283;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10289, %r798, %r4880, %r10292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10293, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10294, %r10292, %r10293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10297, %r10289, %r10294;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10300, %r787, %r4902, %r10281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10304, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10305, %r10281, %r10304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10308, %r10300, %r10305;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10311, %r798, %r4902, %r10292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10315, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10316, %r10292, %r10315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10319, %r10311, %r10316;
	// end inline asm
	// begin inline asm
	mov.b32 %r10327, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10338, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10324, %r787, %r4926, %r10327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10328, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10329, %r10327, %r10328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10332, %r10324, %r10329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10335, %r798, %r4926, %r10338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10339, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10340, %r10338, %r10339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10343, %r10335, %r10340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10346, %r787, %r4948, %r10327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10350, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10351, %r10327, %r10350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10354, %r10346, %r10351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10357, %r798, %r4948, %r10338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10361, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10362, %r10338, %r10361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10365, %r10357, %r10362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10503, %r332, %r10010, %r9810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10500, %r332, %r10021, %r9816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10512, %r332, %r10032, %r9822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10509, %r332, %r10043, %r9828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10521, %r332, %r10056, %r9834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10518, %r332, %r10067, %r9840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10530, %r332, %r10078, %r9846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10527, %r332, %r10089, %r9852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10539, %r332, %r10102, %r9858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10536, %r332, %r10113, %r9864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10548, %r332, %r10124, %r9870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10545, %r332, %r10135, %r9876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10557, %r332, %r10148, %r9882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10554, %r332, %r10159, %r9888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10566, %r332, %r10170, %r9894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10563, %r332, %r10181, %r9900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10575, %r350, %r10194, %r9906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10572, %r350, %r10205, %r9912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10584, %r350, %r10216, %r9918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10581, %r350, %r10227, %r9924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10593, %r350, %r10240, %r9930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10590, %r350, %r10251, %r9936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10602, %r350, %r10262, %r9942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10599, %r350, %r10273, %r9948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10611, %r350, %r10286, %r9954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10608, %r350, %r10297, %r9960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10620, %r350, %r10308, %r9966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10617, %r350, %r10319, %r9972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10629, %r350, %r10332, %r9978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10626, %r350, %r10343, %r9984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10638, %r350, %r10354, %r9990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10635, %r350, %r10365, %r9996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10496, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10498, %r10496, %r10500;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10501, %r414, %r10503, %r10498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10505, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10507, %r10505, %r10509;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10510, %r414, %r10512, %r10507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10514, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10516, %r10514, %r10518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10519, %r414, %r10521, %r10516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10523, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10525, %r10523, %r10527;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10528, %r414, %r10530, %r10525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10532, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10534, %r10532, %r10536;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10537, %r414, %r10539, %r10534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10541, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10543, %r10541, %r10545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10546, %r414, %r10548, %r10543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10550, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10552, %r10550, %r10554;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10555, %r414, %r10557, %r10552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10559, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10561, %r10559, %r10563;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10564, %r414, %r10566, %r10561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10568, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10570, %r10568, %r10572;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10573, %r417, %r10575, %r10570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10577, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10579, %r10577, %r10581;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10582, %r417, %r10584, %r10579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10586, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10588, %r10586, %r10590;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10591, %r417, %r10593, %r10588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10595, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10597, %r10595, %r10599;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10600, %r417, %r10602, %r10597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10604, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10606, %r10604, %r10608;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10609, %r417, %r10611, %r10606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10613, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10615, %r10613, %r10617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10618, %r417, %r10620, %r10615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10622, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10624, %r10622, %r10626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10627, %r417, %r10629, %r10624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10631, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10633, %r10631, %r10635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10636, %r417, %r10638, %r10633;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10640, %r420, %r10503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r414, %r10500, %r10640;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10647, %r420, %r10512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10650, %r414, %r10509, %r10647;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10654, %r420, %r10521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10657, %r414, %r10518, %r10654;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10661, %r420, %r10530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10664, %r414, %r10527, %r10661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10668, %r420, %r10539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10671, %r414, %r10536, %r10668;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10675, %r420, %r10548;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10678, %r414, %r10545, %r10675;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10682, %r420, %r10557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10685, %r414, %r10554, %r10682;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10689, %r420, %r10566;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10692, %r414, %r10563, %r10689;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10696, %r423, %r10575;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10699, %r417, %r10572, %r10696;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10703, %r423, %r10584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10706, %r417, %r10581, %r10703;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10710, %r423, %r10593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10713, %r417, %r10590, %r10710;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10717, %r423, %r10602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10720, %r417, %r10599, %r10717;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10724, %r423, %r10611;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10727, %r417, %r10608, %r10724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10731, %r423, %r10620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10734, %r417, %r10617, %r10731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10738, %r423, %r10629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10741, %r417, %r10626, %r10738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10745, %r423, %r10638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10748, %r417, %r10635, %r10745;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10919, %r10916}, {%r462, %r468, %r465, %r471}, {%r10501, %r10643}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10928, %r10925}, {%r462, %r468, %r465, %r471}, {%r10510, %r10650}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10937, %r10934}, {%r462, %r468, %r465, %r471}, {%r10519, %r10657}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10946, %r10943}, {%r462, %r468, %r465, %r471}, {%r10528, %r10664}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10955, %r10952}, {%r462, %r468, %r465, %r471}, {%r10537, %r10671}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10964, %r10961}, {%r462, %r468, %r465, %r471}, {%r10546, %r10678}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10973, %r10970}, {%r462, %r468, %r465, %r471}, {%r10555, %r10685}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10982, %r10979}, {%r462, %r468, %r465, %r471}, {%r10564, %r10692}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10991, %r10988}, {%r462, %r468, %r465, %r471}, {%r10573, %r10699}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11000, %r10997}, {%r462, %r468, %r465, %r471}, {%r10582, %r10706}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11009, %r11006}, {%r462, %r468, %r465, %r471}, {%r10591, %r10713}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11018, %r11015}, {%r462, %r468, %r465, %r471}, {%r10600, %r10720}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11027, %r11024}, {%r462, %r468, %r465, %r471}, {%r10609, %r10727}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11036, %r11033}, {%r462, %r468, %r465, %r471}, {%r10618, %r10734}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11045, %r11042}, {%r462, %r468, %r465, %r471}, {%r10627, %r10741}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11054, %r11051}, {%r462, %r468, %r465, %r471}, {%r10636, %r10748}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10912, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10914, %r10912, %r10916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10917, %r509, %r10919, %r10914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10921, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10923, %r10921, %r10925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10926, %r509, %r10928, %r10923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10930, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10932, %r10930, %r10934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10935, %r509, %r10937, %r10932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10939, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10941, %r10939, %r10943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10944, %r509, %r10946, %r10941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10948, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10950, %r10948, %r10952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10953, %r509, %r10955, %r10950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10957, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10959, %r10957, %r10961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10962, %r509, %r10964, %r10959;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10966, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10968, %r10966, %r10970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10971, %r509, %r10973, %r10968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10975, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10977, %r10975, %r10979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10980, %r509, %r10982, %r10977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10984, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10986, %r10984, %r10988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10989, %r509, %r10991, %r10986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10993, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10995, %r10993, %r10997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10998, %r509, %r11000, %r10995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11002, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11004, %r11002, %r11006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11007, %r509, %r11009, %r11004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11011, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11013, %r11011, %r11015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11016, %r509, %r11018, %r11013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11020, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11022, %r11020, %r11024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11025, %r509, %r11027, %r11022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11029, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11031, %r11029, %r11033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11034, %r509, %r11036, %r11031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11038, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11040, %r11038, %r11042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11043, %r509, %r11045, %r11040;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11047, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11049, %r11047, %r11051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11052, %r509, %r11054, %r11049;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11056, %r512, %r10919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11059, %r509, %r10916, %r11056;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11063, %r512, %r10928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11066, %r509, %r10925, %r11063;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11070, %r512, %r10937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11073, %r509, %r10934, %r11070;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11077, %r512, %r10946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11080, %r509, %r10943, %r11077;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11084, %r512, %r10955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11087, %r509, %r10952, %r11084;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11091, %r512, %r10964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11094, %r509, %r10961, %r11091;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11098, %r512, %r10973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11101, %r509, %r10970, %r11098;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11105, %r512, %r10982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11108, %r509, %r10979, %r11105;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11112, %r512, %r10991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11115, %r509, %r10988, %r11112;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11119, %r512, %r11000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11122, %r509, %r10997, %r11119;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11126, %r512, %r11009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11129, %r509, %r11006, %r11126;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11133, %r512, %r11018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11136, %r509, %r11015, %r11133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11140, %r512, %r11027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11143, %r509, %r11024, %r11140;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11147, %r512, %r11036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11150, %r509, %r11033, %r11147;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11154, %r512, %r11045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11157, %r509, %r11042, %r11154;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11161, %r512, %r11054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11164, %r509, %r11051, %r11161;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11457, %r11460}, {%r552, %r558, %r555, %r561}, {%r10917, %r11059}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11463, %r11466}, {%r552, %r558, %r555, %r561}, {%r10926, %r11066}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11469, %r11472}, {%r552, %r558, %r555, %r561}, {%r10935, %r11073}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11475, %r11478}, {%r552, %r558, %r555, %r561}, {%r10944, %r11080}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11481, %r11484}, {%r552, %r558, %r555, %r561}, {%r10953, %r11087}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11487, %r11490}, {%r552, %r558, %r555, %r561}, {%r10962, %r11094}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11493, %r11496}, {%r552, %r558, %r555, %r561}, {%r10971, %r11101}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11499, %r11502}, {%r552, %r558, %r555, %r561}, {%r10980, %r11108}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11458, %r11461}, {%r552, %r558, %r555, %r561}, {%r10989, %r11115}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11464, %r11467}, {%r552, %r558, %r555, %r561}, {%r10998, %r11122}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11470, %r11473}, {%r552, %r558, %r555, %r561}, {%r11007, %r11129}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11476, %r11479}, {%r552, %r558, %r555, %r561}, {%r11016, %r11136}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11482, %r11485}, {%r552, %r558, %r555, %r561}, {%r11025, %r11143}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11488, %r11491}, {%r552, %r558, %r555, %r561}, {%r11034, %r11150}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11494, %r11497}, {%r552, %r558, %r555, %r561}, {%r11043, %r11157}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11500, %r11503}, {%r552, %r558, %r555, %r561}, {%r11052, %r11164}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11456, %r11457, %r11458;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11459, %r11460, %r11461;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11462, %r11463, %r11464;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11465, %r11466, %r11467;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11468, %r11469, %r11470;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11471, %r11472, %r11473;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11474, %r11475, %r11476;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11477, %r11478, %r11479;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11480, %r11481, %r11482;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11483, %r11484, %r11485;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11486, %r11487, %r11488;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11489, %r11490, %r11491;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11492, %r11493, %r11494;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11495, %r11496, %r11497;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11498, %r11499, %r11500;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11501, %r11502, %r11503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11504, %r11457, %r11458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11507, %r11460, %r11461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11510, %r11463, %r11464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11513, %r11466, %r11467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11516, %r11469, %r11470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11519, %r11472, %r11473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11522, %r11475, %r11476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11525, %r11478, %r11479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11528, %r11481, %r11482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11531, %r11484, %r11485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11534, %r11487, %r11488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11537, %r11490, %r11491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11540, %r11493, %r11494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11543, %r11496, %r11497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11546, %r11499, %r11500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11549, %r11502, %r11503;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11552, %r215, %r11456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11555, %r215, %r11459;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11558, %r215, %r11462;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11561, %r215, %r11465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11564, %r215, %r11468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11567, %r215, %r11471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11570, %r215, %r11474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11573, %r215, %r11477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11576, %r215, %r11480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11579, %r215, %r11483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11582, %r215, %r11486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11585, %r215, %r11489;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11588, %r215, %r11492;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11591, %r215, %r11495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11594, %r215, %r11498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11597, %r215, %r11501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11600, %r216, %r11504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11603, %r216, %r11507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11606, %r216, %r11510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11609, %r216, %r11513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11612, %r216, %r11516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11615, %r216, %r11519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11618, %r216, %r11522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11621, %r216, %r11525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11624, %r216, %r11528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11627, %r216, %r11531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11630, %r216, %r11534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11633, %r216, %r11537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11636, %r216, %r11540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11639, %r216, %r11543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11642, %r216, %r11546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11645, %r216, %r11549;
	// end inline asm
	// begin inline asm
	mov.b32 %r11648, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11649, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11650, %r11552, %r11648;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11653, %r11650, %r11649;
	// end inline asm
	// begin inline asm
	mov.b32 %r11656, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11657, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11658, %r11555, %r11656;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11661, %r11658, %r11657;
	// end inline asm
	// begin inline asm
	mov.b32 %r11664, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11665, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11666, %r11558, %r11664;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11669, %r11666, %r11665;
	// end inline asm
	// begin inline asm
	mov.b32 %r11672, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11673, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11674, %r11561, %r11672;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11677, %r11674, %r11673;
	// end inline asm
	// begin inline asm
	mov.b32 %r11680, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11681, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11682, %r11564, %r11680;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11685, %r11682, %r11681;
	// end inline asm
	// begin inline asm
	mov.b32 %r11688, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11689, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11690, %r11567, %r11688;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11693, %r11690, %r11689;
	// end inline asm
	// begin inline asm
	mov.b32 %r11696, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11697, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11698, %r11570, %r11696;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11701, %r11698, %r11697;
	// end inline asm
	// begin inline asm
	mov.b32 %r11704, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11705, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11706, %r11573, %r11704;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11709, %r11706, %r11705;
	// end inline asm
	// begin inline asm
	mov.b32 %r11712, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11713, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11714, %r11576, %r11712;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11717, %r11714, %r11713;
	// end inline asm
	// begin inline asm
	mov.b32 %r11720, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11721, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11722, %r11579, %r11720;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11725, %r11722, %r11721;
	// end inline asm
	// begin inline asm
	mov.b32 %r11728, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11729, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11730, %r11582, %r11728;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11733, %r11730, %r11729;
	// end inline asm
	// begin inline asm
	mov.b32 %r11736, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11737, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11738, %r11585, %r11736;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11741, %r11738, %r11737;
	// end inline asm
	// begin inline asm
	mov.b32 %r11744, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11745, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11746, %r11588, %r11744;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11749, %r11746, %r11745;
	// end inline asm
	// begin inline asm
	mov.b32 %r11752, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11753, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11754, %r11591, %r11752;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11757, %r11754, %r11753;
	// end inline asm
	// begin inline asm
	mov.b32 %r11760, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11761, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11762, %r11594, %r11760;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11765, %r11762, %r11761;
	// end inline asm
	// begin inline asm
	mov.b32 %r11768, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11769, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11770, %r11597, %r11768;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11773, %r11770, %r11769;
	// end inline asm
	// begin inline asm
	mov.b32 %r11776, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11777, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11778, %r11600, %r11776;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11781, %r11778, %r11777;
	// end inline asm
	// begin inline asm
	mov.b32 %r11784, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11785, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11786, %r11603, %r11784;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11789, %r11786, %r11785;
	// end inline asm
	// begin inline asm
	mov.b32 %r11792, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11793, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11794, %r11606, %r11792;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11797, %r11794, %r11793;
	// end inline asm
	// begin inline asm
	mov.b32 %r11800, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11801, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11802, %r11609, %r11800;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11805, %r11802, %r11801;
	// end inline asm
	// begin inline asm
	mov.b32 %r11808, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11809, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11810, %r11612, %r11808;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11813, %r11810, %r11809;
	// end inline asm
	// begin inline asm
	mov.b32 %r11816, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11817, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11818, %r11615, %r11816;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11821, %r11818, %r11817;
	// end inline asm
	// begin inline asm
	mov.b32 %r11824, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11825, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11826, %r11618, %r11824;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11829, %r11826, %r11825;
	// end inline asm
	// begin inline asm
	mov.b32 %r11832, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11833, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11834, %r11621, %r11832;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11837, %r11834, %r11833;
	// end inline asm
	// begin inline asm
	mov.b32 %r11840, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11841, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11842, %r11624, %r11840;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11845, %r11842, %r11841;
	// end inline asm
	// begin inline asm
	mov.b32 %r11848, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11849, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11850, %r11627, %r11848;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11853, %r11850, %r11849;
	// end inline asm
	// begin inline asm
	mov.b32 %r11856, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11857, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11858, %r11630, %r11856;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11861, %r11858, %r11857;
	// end inline asm
	// begin inline asm
	mov.b32 %r11864, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11865, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11866, %r11633, %r11864;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11869, %r11866, %r11865;
	// end inline asm
	// begin inline asm
	mov.b32 %r11872, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11873, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11874, %r11636, %r11872;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11877, %r11874, %r11873;
	// end inline asm
	// begin inline asm
	mov.b32 %r11880, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11881, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11882, %r11639, %r11880;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11885, %r11882, %r11881;
	// end inline asm
	// begin inline asm
	mov.b32 %r11888, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11889, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11890, %r11642, %r11888;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11893, %r11890, %r11889;
	// end inline asm
	// begin inline asm
	mov.b32 %r11896, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11897, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11898, %r11645, %r11896;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11901, %r11898, %r11897;
	// end inline asm
	// begin inline asm
	mov.b32 %r11907, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11905, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11906, %r11907, %r11905;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11909, %r11653, %r11906;
	// end inline asm
	// begin inline asm
	mov.b32 %r11912, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11913, %r11907, %r11912;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11916, %r11661, %r11913;
	// end inline asm
	// begin inline asm
	mov.b32 %r11919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11920, %r11907, %r11919;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11923, %r11669, %r11920;
	// end inline asm
	// begin inline asm
	mov.b32 %r11926, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11927, %r11907, %r11926;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11930, %r11677, %r11927;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11933, %r11909, %r11923, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11937, %r11916, %r11930, %r4304;
	// end inline asm
	shl.b32 	%r11944, %r11937, 4;
	// begin inline asm
	lop3.b32 %r11941, %r4310, %r11933, %r11944, 202;
	// end inline asm
	xor.b32  	%r16072, %r11941, -2004318072;
	// begin inline asm
	mov.b32 %r11948, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11947, %r11948, %r11946;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11950, %r11685, %r11947;
	// end inline asm
	// begin inline asm
	mov.b32 %r11953, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11954, %r11948, %r11953;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11957, %r11693, %r11954;
	// end inline asm
	// begin inline asm
	mov.b32 %r11960, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11961, %r11948, %r11960;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11964, %r11701, %r11961;
	// end inline asm
	// begin inline asm
	mov.b32 %r11967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11968, %r11948, %r11967;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11971, %r11709, %r11968;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11974, %r11950, %r11964, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11978, %r11957, %r11971, %r4304;
	// end inline asm
	shl.b32 	%r11985, %r11978, 4;
	// begin inline asm
	lop3.b32 %r11982, %r4310, %r11974, %r11985, 202;
	// end inline asm
	xor.b32  	%r16073, %r11982, -2004318072;
	// begin inline asm
	mov.b32 %r11989, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11988, %r11989, %r11987;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11991, %r11717, %r11988;
	// end inline asm
	// begin inline asm
	mov.b32 %r11994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11995, %r11989, %r11994;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11998, %r11725, %r11995;
	// end inline asm
	// begin inline asm
	mov.b32 %r12001, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12002, %r11989, %r12001;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12005, %r11733, %r12002;
	// end inline asm
	// begin inline asm
	mov.b32 %r12008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12009, %r11989, %r12008;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12012, %r11741, %r12009;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12015, %r11991, %r12005, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12019, %r11998, %r12012, %r4304;
	// end inline asm
	shl.b32 	%r12026, %r12019, 4;
	// begin inline asm
	lop3.b32 %r12023, %r4310, %r12015, %r12026, 202;
	// end inline asm
	xor.b32  	%r16074, %r12023, -2004318072;
	// begin inline asm
	mov.b32 %r12030, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12028, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12029, %r12030, %r12028;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12032, %r11749, %r12029;
	// end inline asm
	// begin inline asm
	mov.b32 %r12035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12036, %r12030, %r12035;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12039, %r11757, %r12036;
	// end inline asm
	// begin inline asm
	mov.b32 %r12042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12043, %r12030, %r12042;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12046, %r11765, %r12043;
	// end inline asm
	// begin inline asm
	mov.b32 %r12049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12050, %r12030, %r12049;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12053, %r11773, %r12050;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12056, %r12032, %r12046, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12060, %r12039, %r12053, %r4304;
	// end inline asm
	shl.b32 	%r12067, %r12060, 4;
	// begin inline asm
	lop3.b32 %r12064, %r4310, %r12056, %r12067, 202;
	// end inline asm
	xor.b32  	%r16075, %r12064, -2004318072;
	// begin inline asm
	mov.b32 %r12071, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12069, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12070, %r12071, %r12069;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12073, %r11781, %r12070;
	// end inline asm
	// begin inline asm
	mov.b32 %r12076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12077, %r12071, %r12076;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12080, %r11789, %r12077;
	// end inline asm
	// begin inline asm
	mov.b32 %r12083, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12084, %r12071, %r12083;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12087, %r11797, %r12084;
	// end inline asm
	// begin inline asm
	mov.b32 %r12090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12091, %r12071, %r12090;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12094, %r11805, %r12091;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12097, %r12073, %r12087, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12101, %r12080, %r12094, %r4304;
	// end inline asm
	shl.b32 	%r12108, %r12101, 4;
	// begin inline asm
	lop3.b32 %r12105, %r4310, %r12097, %r12108, 202;
	// end inline asm
	xor.b32  	%r16076, %r12105, -2004318072;
	// begin inline asm
	mov.b32 %r12112, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12110, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12111, %r12112, %r12110;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12114, %r11813, %r12111;
	// end inline asm
	// begin inline asm
	mov.b32 %r12117, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12118, %r12112, %r12117;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12121, %r11821, %r12118;
	// end inline asm
	// begin inline asm
	mov.b32 %r12124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12125, %r12112, %r12124;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12128, %r11829, %r12125;
	// end inline asm
	// begin inline asm
	mov.b32 %r12131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12132, %r12112, %r12131;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12135, %r11837, %r12132;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12138, %r12114, %r12128, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12142, %r12121, %r12135, %r4304;
	// end inline asm
	shl.b32 	%r12149, %r12142, 4;
	// begin inline asm
	lop3.b32 %r12146, %r4310, %r12138, %r12149, 202;
	// end inline asm
	xor.b32  	%r16077, %r12146, -2004318072;
	// begin inline asm
	mov.b32 %r12153, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12151, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12152, %r12153, %r12151;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12155, %r11845, %r12152;
	// end inline asm
	// begin inline asm
	mov.b32 %r12158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12159, %r12153, %r12158;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12162, %r11853, %r12159;
	// end inline asm
	// begin inline asm
	mov.b32 %r12165, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12166, %r12153, %r12165;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12169, %r11861, %r12166;
	// end inline asm
	// begin inline asm
	mov.b32 %r12172, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12173, %r12153, %r12172;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12176, %r11869, %r12173;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12179, %r12155, %r12169, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12183, %r12162, %r12176, %r4304;
	// end inline asm
	shl.b32 	%r12190, %r12183, 4;
	// begin inline asm
	lop3.b32 %r12187, %r4310, %r12179, %r12190, 202;
	// end inline asm
	xor.b32  	%r16078, %r12187, -2004318072;
	// begin inline asm
	mov.b32 %r12194, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12193, %r12194, %r12192;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12196, %r11877, %r12193;
	// end inline asm
	// begin inline asm
	mov.b32 %r12199, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12200, %r12194, %r12199;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12203, %r11885, %r12200;
	// end inline asm
	// begin inline asm
	mov.b32 %r12206, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12207, %r12194, %r12206;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12210, %r11893, %r12207;
	// end inline asm
	// begin inline asm
	mov.b32 %r12213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12214, %r12194, %r12213;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12217, %r11901, %r12214;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12220, %r12196, %r12210, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12224, %r12203, %r12217, %r4304;
	// end inline asm
	shl.b32 	%r12231, %r12224, 4;
	// begin inline asm
	lop3.b32 %r12228, %r4310, %r12220, %r12231, 202;
	// end inline asm
	xor.b32  	%r16079, %r12228, -2004318072;
	st.shared.u32 	[%rd82], %r16072;
	st.shared.u32 	[%rd83], %r16073;
	st.shared.u32 	[%rd84], %r16074;
	st.shared.u32 	[%rd85], %r16075;
	st.shared.u32 	[%rd86], %r16076;
	st.shared.u32 	[%rd87], %r16077;
	st.shared.u32 	[%rd88], %r16078;
	st.shared.u32 	[%rd89], %r16079;
	ld.shared.u32 	%r16196, [%rd74];
	ld.shared.u32 	%r16197, [%rd75];
	ld.shared.u32 	%r16198, [%rd76];
	ld.shared.u32 	%r16199, [%rd77];
	ld.shared.u32 	%r16208, [%rd78];
	ld.shared.u32 	%r16209, [%rd79];
	ld.shared.u32 	%r16210, [%rd80];
	ld.shared.u32 	%r16211, [%rd81];
	// begin inline asm
	mov.b32 %r12237, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12248, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12236, %r16196, -2004318072;
	// begin inline asm
	lop3.b32 %r12234, %r787, %r12236, %r12237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12239, %r12237, %r12238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12242, %r12234, %r12239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12245, %r798, %r12236, %r12248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12250, %r12248, %r12249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12253, %r12245, %r12250;
	// end inline asm
	shr.u32 	%r12258, %r12236, 8;
	// begin inline asm
	lop3.b32 %r12256, %r787, %r12258, %r12237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12260, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12261, %r12237, %r12260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12264, %r12256, %r12261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12267, %r798, %r12258, %r12248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12272, %r12248, %r12271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12275, %r12267, %r12272;
	// end inline asm
	// begin inline asm
	mov.b32 %r12283, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12294, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12282, %r16197, -2004318072;
	// begin inline asm
	lop3.b32 %r12280, %r787, %r12282, %r12283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12285, %r12283, %r12284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12288, %r12280, %r12285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12291, %r798, %r12282, %r12294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12296, %r12294, %r12295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12299, %r12291, %r12296;
	// end inline asm
	shr.u32 	%r12304, %r12282, 8;
	// begin inline asm
	lop3.b32 %r12302, %r787, %r12304, %r12283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12307, %r12283, %r12306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12310, %r12302, %r12307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12313, %r798, %r12304, %r12294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12317, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12318, %r12294, %r12317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12321, %r12313, %r12318;
	// end inline asm
	// begin inline asm
	mov.b32 %r12329, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12340, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12328, %r16198, -2004318072;
	// begin inline asm
	lop3.b32 %r12326, %r787, %r12328, %r12329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12331, %r12329, %r12330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12334, %r12326, %r12331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12337, %r798, %r12328, %r12340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12342, %r12340, %r12341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12345, %r12337, %r12342;
	// end inline asm
	shr.u32 	%r12350, %r12328, 8;
	// begin inline asm
	lop3.b32 %r12348, %r787, %r12350, %r12329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12353, %r12329, %r12352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12356, %r12348, %r12353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12359, %r798, %r12350, %r12340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12364, %r12340, %r12363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12367, %r12359, %r12364;
	// end inline asm
	// begin inline asm
	mov.b32 %r12375, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12386, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12374, %r16199, -2004318072;
	// begin inline asm
	lop3.b32 %r12372, %r787, %r12374, %r12375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12377, %r12375, %r12376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12380, %r12372, %r12377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12383, %r798, %r12374, %r12386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12388, %r12386, %r12387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12391, %r12383, %r12388;
	// end inline asm
	shr.u32 	%r12396, %r12374, 8;
	// begin inline asm
	lop3.b32 %r12394, %r787, %r12396, %r12375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12399, %r12375, %r12398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12402, %r12394, %r12399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12405, %r798, %r12396, %r12386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12410, %r12386, %r12409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12413, %r12405, %r12410;
	// end inline asm
	// begin inline asm
	mov.b32 %r12421, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12432, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12420, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r12418, %r787, %r12420, %r12421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12423, %r12421, %r12422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12426, %r12418, %r12423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12429, %r798, %r12420, %r12432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12434, %r12432, %r12433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12437, %r12429, %r12434;
	// end inline asm
	shr.u32 	%r12442, %r12420, 8;
	// begin inline asm
	lop3.b32 %r12440, %r787, %r12442, %r12421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12445, %r12421, %r12444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12448, %r12440, %r12445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12451, %r798, %r12442, %r12432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12456, %r12432, %r12455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12459, %r12451, %r12456;
	// end inline asm
	// begin inline asm
	mov.b32 %r12467, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12478, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12466, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r12464, %r787, %r12466, %r12467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12469, %r12467, %r12468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12472, %r12464, %r12469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12475, %r798, %r12466, %r12478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12480, %r12478, %r12479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12483, %r12475, %r12480;
	// end inline asm
	shr.u32 	%r12488, %r12466, 8;
	// begin inline asm
	lop3.b32 %r12486, %r787, %r12488, %r12467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12491, %r12467, %r12490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12494, %r12486, %r12491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12497, %r798, %r12488, %r12478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12502, %r12478, %r12501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12505, %r12497, %r12502;
	// end inline asm
	// begin inline asm
	mov.b32 %r12513, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12524, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12512, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r12510, %r787, %r12512, %r12513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12515, %r12513, %r12514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12518, %r12510, %r12515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12521, %r798, %r12512, %r12524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12526, %r12524, %r12525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12529, %r12521, %r12526;
	// end inline asm
	shr.u32 	%r12534, %r12512, 8;
	// begin inline asm
	lop3.b32 %r12532, %r787, %r12534, %r12513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12537, %r12513, %r12536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12540, %r12532, %r12537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12543, %r798, %r12534, %r12524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12548, %r12524, %r12547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12551, %r12543, %r12548;
	// end inline asm
	// begin inline asm
	mov.b32 %r12559, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12570, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12558, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r12556, %r787, %r12558, %r12559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12561, %r12559, %r12560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12564, %r12556, %r12561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12567, %r798, %r12558, %r12570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12572, %r12570, %r12571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12575, %r12567, %r12572;
	// end inline asm
	shr.u32 	%r12580, %r12558, 8;
	// begin inline asm
	lop3.b32 %r12578, %r787, %r12580, %r12559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12583, %r12559, %r12582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12586, %r12578, %r12583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12589, %r798, %r12580, %r12570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12594, %r12570, %r12593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12597, %r12589, %r12594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12600, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12602, %r12600, %r12242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12605, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12607, %r12605, %r12253;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12610, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12612, %r12610, %r12264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12615, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12617, %r12615, %r12275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12620, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12622, %r12620, %r12288;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12625, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12627, %r12625, %r12299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12630, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12632, %r12630, %r12310;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12635, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12637, %r12635, %r12321;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12640, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12642, %r12640, %r12334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12645, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12647, %r12645, %r12345;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12650, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12652, %r12650, %r12356;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12655, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12657, %r12655, %r12367;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12660, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12662, %r12660, %r12380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12665, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12667, %r12665, %r12391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12670, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12672, %r12670, %r12402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12675, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12677, %r12675, %r12413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12680, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12682, %r12680, %r12426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12685, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12687, %r12685, %r12437;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12690, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12692, %r12690, %r12448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12695, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12697, %r12695, %r12459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12700, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12702, %r12700, %r12472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12705, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12707, %r12705, %r12483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12710, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12712, %r12710, %r12494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12715, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12717, %r12715, %r12505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12720, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12722, %r12720, %r12518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12725, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12727, %r12725, %r12529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12730, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12732, %r12730, %r12540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12735, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12737, %r12735, %r12551;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12740, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12742, %r12740, %r12564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12745, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12747, %r12745, %r12575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12750, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12752, %r12750, %r12586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12755, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12757, %r12755, %r12597;
	// end inline asm
	// begin inline asm
	mov.b32 %r12765, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12776, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12762, %r787, %r788, %r12765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12766, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12767, %r12765, %r12766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12770, %r12762, %r12767;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12773, %r798, %r788, %r12776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12777, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12778, %r12776, %r12777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12781, %r12773, %r12778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12784, %r787, %r810, %r12765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12788, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12789, %r12765, %r12788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12792, %r12784, %r12789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12795, %r798, %r810, %r12776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12799, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12800, %r12776, %r12799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12803, %r12795, %r12800;
	// end inline asm
	// begin inline asm
	mov.b32 %r12811, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12822, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12808, %r787, %r834, %r12811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12812, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12813, %r12811, %r12812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12816, %r12808, %r12813;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12819, %r798, %r834, %r12822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12823, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12824, %r12822, %r12823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12827, %r12819, %r12824;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12830, %r787, %r856, %r12811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12834, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12835, %r12811, %r12834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12838, %r12830, %r12835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12841, %r798, %r856, %r12822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12845, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12846, %r12822, %r12845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12849, %r12841, %r12846;
	// end inline asm
	// begin inline asm
	mov.b32 %r12857, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12868, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12854, %r787, %r880, %r12857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12859, %r12857, %r12858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12862, %r12854, %r12859;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12865, %r798, %r880, %r12868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12870, %r12868, %r12869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12873, %r12865, %r12870;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12876, %r787, %r902, %r12857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12880, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12881, %r12857, %r12880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12884, %r12876, %r12881;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12887, %r798, %r902, %r12868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12891, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12892, %r12868, %r12891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12895, %r12887, %r12892;
	// end inline asm
	// begin inline asm
	mov.b32 %r12903, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12914, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12900, %r787, %r926, %r12903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12904, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12905, %r12903, %r12904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12908, %r12900, %r12905;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12911, %r798, %r926, %r12914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12915, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12916, %r12914, %r12915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12919, %r12911, %r12916;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12922, %r787, %r948, %r12903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12926, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12927, %r12903, %r12926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12930, %r12922, %r12927;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12933, %r798, %r948, %r12914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12938, %r12914, %r12937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12941, %r12933, %r12938;
	// end inline asm
	// begin inline asm
	mov.b32 %r12949, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12960, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12946, %r787, %r972, %r12949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12951, %r12949, %r12950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12954, %r12946, %r12951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12957, %r798, %r972, %r12960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12962, %r12960, %r12961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12965, %r12957, %r12962;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12968, %r787, %r994, %r12949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12973, %r12949, %r12972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12976, %r12968, %r12973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12979, %r798, %r994, %r12960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12984, %r12960, %r12983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12987, %r12979, %r12984;
	// end inline asm
	// begin inline asm
	mov.b32 %r12995, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13006, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12992, %r787, %r1018, %r12995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12997, %r12995, %r12996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13000, %r12992, %r12997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13003, %r798, %r1018, %r13006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13008, %r13006, %r13007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13011, %r13003, %r13008;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13014, %r787, %r1040, %r12995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13019, %r12995, %r13018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13022, %r13014, %r13019;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13025, %r798, %r1040, %r13006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13030, %r13006, %r13029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13033, %r13025, %r13030;
	// end inline asm
	// begin inline asm
	mov.b32 %r13041, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13052, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13038, %r787, %r1064, %r13041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13043, %r13041, %r13042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13046, %r13038, %r13043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13049, %r798, %r1064, %r13052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13054, %r13052, %r13053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13057, %r13049, %r13054;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13060, %r787, %r1086, %r13041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13065, %r13041, %r13064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13068, %r13060, %r13065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13071, %r798, %r1086, %r13052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13076, %r13052, %r13075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13079, %r13071, %r13076;
	// end inline asm
	// begin inline asm
	mov.b32 %r13087, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13098, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13084, %r787, %r1110, %r13087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13089, %r13087, %r13088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13092, %r13084, %r13089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13095, %r798, %r1110, %r13098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13100, %r13098, %r13099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13103, %r13095, %r13100;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13106, %r787, %r1132, %r13087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13110, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13111, %r13087, %r13110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13114, %r13106, %r13111;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13117, %r798, %r1132, %r13098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13122, %r13098, %r13121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13125, %r13117, %r13122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13128, %r260, %r12770, %r12602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13132, %r260, %r12781, %r12607;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13136, %r260, %r12792, %r12612;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13140, %r260, %r12803, %r12617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13144, %r260, %r12816, %r12622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13148, %r260, %r12827, %r12627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13152, %r260, %r12838, %r12632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13156, %r260, %r12849, %r12637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13160, %r260, %r12862, %r12642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13164, %r260, %r12873, %r12647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13168, %r260, %r12884, %r12652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13172, %r260, %r12895, %r12657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13176, %r260, %r12908, %r12662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13180, %r260, %r12919, %r12667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13184, %r260, %r12930, %r12672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13188, %r260, %r12941, %r12677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13192, %r278, %r12954, %r12682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13196, %r278, %r12965, %r12687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13200, %r278, %r12976, %r12692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13204, %r278, %r12987, %r12697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13208, %r278, %r13000, %r12702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13212, %r278, %r13011, %r12707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13216, %r278, %r13022, %r12712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13220, %r278, %r13033, %r12717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13224, %r278, %r13046, %r12722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13228, %r278, %r13057, %r12727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13232, %r278, %r13068, %r12732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13236, %r278, %r13079, %r12737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13240, %r278, %r13092, %r12742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13244, %r278, %r13103, %r12747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13248, %r278, %r13114, %r12752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13252, %r278, %r13125, %r12757;
	// end inline asm
	// begin inline asm
	mov.b32 %r13261, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13272, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13258, %r787, %r4604, %r13261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13263, %r13261, %r13262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13266, %r13258, %r13263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13269, %r798, %r4604, %r13272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13274, %r13272, %r13273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13277, %r13269, %r13274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13280, %r787, %r4626, %r13261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13285, %r13261, %r13284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13288, %r13280, %r13285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13291, %r798, %r4626, %r13272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13296, %r13272, %r13295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13299, %r13291, %r13296;
	// end inline asm
	// begin inline asm
	mov.b32 %r13307, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13318, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13304, %r787, %r4650, %r13307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13309, %r13307, %r13308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13312, %r13304, %r13309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13315, %r798, %r4650, %r13318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13320, %r13318, %r13319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13323, %r13315, %r13320;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13326, %r787, %r4672, %r13307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13331, %r13307, %r13330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13334, %r13326, %r13331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13337, %r798, %r4672, %r13318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13342, %r13318, %r13341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13345, %r13337, %r13342;
	// end inline asm
	// begin inline asm
	mov.b32 %r13353, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13364, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13350, %r787, %r4696, %r13353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13355, %r13353, %r13354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13358, %r13350, %r13355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13361, %r798, %r4696, %r13364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13366, %r13364, %r13365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13369, %r13361, %r13366;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13372, %r787, %r4718, %r13353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13377, %r13353, %r13376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13380, %r13372, %r13377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13383, %r798, %r4718, %r13364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13388, %r13364, %r13387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13391, %r13383, %r13388;
	// end inline asm
	// begin inline asm
	mov.b32 %r13399, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13410, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13396, %r787, %r4742, %r13399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13401, %r13399, %r13400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13404, %r13396, %r13401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13407, %r798, %r4742, %r13410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13412, %r13410, %r13411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13415, %r13407, %r13412;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13418, %r787, %r4764, %r13399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13423, %r13399, %r13422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13426, %r13418, %r13423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13429, %r798, %r4764, %r13410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13434, %r13410, %r13433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13437, %r13429, %r13434;
	// end inline asm
	// begin inline asm
	mov.b32 %r13445, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13456, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13442, %r787, %r4788, %r13445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13447, %r13445, %r13446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13450, %r13442, %r13447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13453, %r798, %r4788, %r13456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13458, %r13456, %r13457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13461, %r13453, %r13458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13464, %r787, %r4810, %r13445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13469, %r13445, %r13468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13472, %r13464, %r13469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13475, %r798, %r4810, %r13456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13480, %r13456, %r13479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13483, %r13475, %r13480;
	// end inline asm
	// begin inline asm
	mov.b32 %r13491, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13502, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13488, %r787, %r4834, %r13491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13493, %r13491, %r13492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13496, %r13488, %r13493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13499, %r798, %r4834, %r13502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13504, %r13502, %r13503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13507, %r13499, %r13504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13510, %r787, %r4856, %r13491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13515, %r13491, %r13514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13518, %r13510, %r13515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13521, %r798, %r4856, %r13502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13526, %r13502, %r13525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13529, %r13521, %r13526;
	// end inline asm
	// begin inline asm
	mov.b32 %r13537, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13548, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13534, %r787, %r4880, %r13537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13539, %r13537, %r13538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13542, %r13534, %r13539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13545, %r798, %r4880, %r13548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13550, %r13548, %r13549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13553, %r13545, %r13550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13556, %r787, %r4902, %r13537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13561, %r13537, %r13560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13564, %r13556, %r13561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13567, %r798, %r4902, %r13548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13572, %r13548, %r13571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13575, %r13567, %r13572;
	// end inline asm
	// begin inline asm
	mov.b32 %r13583, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13594, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13580, %r787, %r4926, %r13583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13585, %r13583, %r13584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13588, %r13580, %r13585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13591, %r798, %r4926, %r13594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13596, %r13594, %r13595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13599, %r13591, %r13596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13602, %r787, %r4948, %r13583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13607, %r13583, %r13606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13610, %r13602, %r13607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13613, %r798, %r4948, %r13594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13618, %r13594, %r13617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13621, %r13613, %r13618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13624, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13626, %r13624, %r13266, %r13128;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13630, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13632, %r13630, %r13277, %r13132;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13636, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13638, %r13636, %r13288, %r13136;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13642, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13644, %r13642, %r13299, %r13140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13648, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13650, %r13648, %r13312, %r13144;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13654, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13656, %r13654, %r13323, %r13148;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13660, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13662, %r13660, %r13334, %r13152;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13666, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13668, %r13666, %r13345, %r13156;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13672, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13674, %r13672, %r13358, %r13160;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13678, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13680, %r13678, %r13369, %r13164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13684, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13686, %r13684, %r13380, %r13168;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13690, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13692, %r13690, %r13391, %r13172;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13696, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13698, %r13696, %r13404, %r13176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13702, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13704, %r13702, %r13415, %r13180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13708, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13710, %r13708, %r13426, %r13184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13714, %r296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13716, %r13714, %r13437, %r13188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13720, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13722, %r13720, %r13450, %r13192;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13726, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13728, %r13726, %r13461, %r13196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13732, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13734, %r13732, %r13472, %r13200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13738, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13740, %r13738, %r13483, %r13204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13744, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13746, %r13744, %r13496, %r13208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13750, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13752, %r13750, %r13507, %r13212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13756, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13758, %r13756, %r13518, %r13216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13762, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13764, %r13762, %r13529, %r13220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13768, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13770, %r13768, %r13542, %r13224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13774, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13776, %r13774, %r13553, %r13228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13780, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13782, %r13780, %r13564, %r13232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13786, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13788, %r13786, %r13575, %r13236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13792, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13794, %r13792, %r13588, %r13240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13798, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13800, %r13798, %r13599, %r13244;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13804, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13806, %r13804, %r13610, %r13248;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13810, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13812, %r13810, %r13621, %r13252;
	// end inline asm
	// begin inline asm
	mov.b32 %r13821, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13832, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13818, %r787, %r8420, %r13821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13822, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13823, %r13821, %r13822;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13826, %r13818, %r13823;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13829, %r798, %r8420, %r13832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13833, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13834, %r13832, %r13833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13837, %r13829, %r13834;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13840, %r787, %r8442, %r13821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13844, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13845, %r13821, %r13844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13848, %r13840, %r13845;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13851, %r798, %r8442, %r13832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13855, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13856, %r13832, %r13855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13859, %r13851, %r13856;
	// end inline asm
	// begin inline asm
	mov.b32 %r13867, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13878, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13864, %r787, %r8466, %r13867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13868, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13869, %r13867, %r13868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13872, %r13864, %r13869;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13875, %r798, %r8466, %r13878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13879, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13880, %r13878, %r13879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13883, %r13875, %r13880;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13886, %r787, %r8488, %r13867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13890, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13891, %r13867, %r13890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13894, %r13886, %r13891;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13897, %r798, %r8488, %r13878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13901, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13902, %r13878, %r13901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13905, %r13897, %r13902;
	// end inline asm
	// begin inline asm
	mov.b32 %r13913, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13924, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13910, %r787, %r8512, %r13913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13914, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13915, %r13913, %r13914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13918, %r13910, %r13915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13921, %r798, %r8512, %r13924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13925, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13926, %r13924, %r13925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13929, %r13921, %r13926;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13932, %r787, %r8534, %r13913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13936, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13937, %r13913, %r13936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13940, %r13932, %r13937;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13943, %r798, %r8534, %r13924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13947, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13948, %r13924, %r13947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13951, %r13943, %r13948;
	// end inline asm
	// begin inline asm
	mov.b32 %r13959, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13970, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13956, %r787, %r8558, %r13959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13960, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13961, %r13959, %r13960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13964, %r13956, %r13961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13967, %r798, %r8558, %r13970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13971, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13972, %r13970, %r13971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13975, %r13967, %r13972;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13978, %r787, %r8580, %r13959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13982, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13983, %r13959, %r13982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13986, %r13978, %r13983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13989, %r798, %r8580, %r13970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13993, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13994, %r13970, %r13993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13997, %r13989, %r13994;
	// end inline asm
	// begin inline asm
	mov.b32 %r14005, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14016, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14002, %r787, %r8604, %r14005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14006, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14007, %r14005, %r14006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14010, %r14002, %r14007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14013, %r798, %r8604, %r14016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14017, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14018, %r14016, %r14017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14021, %r14013, %r14018;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14024, %r787, %r8626, %r14005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14028, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14029, %r14005, %r14028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14032, %r14024, %r14029;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14035, %r798, %r8626, %r14016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14039, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14040, %r14016, %r14039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14043, %r14035, %r14040;
	// end inline asm
	// begin inline asm
	mov.b32 %r14051, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14062, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14048, %r787, %r8650, %r14051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14052, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14053, %r14051, %r14052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14056, %r14048, %r14053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14059, %r798, %r8650, %r14062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14063, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14064, %r14062, %r14063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14067, %r14059, %r14064;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14070, %r787, %r8672, %r14051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14074, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14075, %r14051, %r14074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14078, %r14070, %r14075;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14081, %r798, %r8672, %r14062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14086, %r14062, %r14085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14089, %r14081, %r14086;
	// end inline asm
	// begin inline asm
	mov.b32 %r14097, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14108, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14094, %r787, %r8696, %r14097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14098, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14099, %r14097, %r14098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14102, %r14094, %r14099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14105, %r798, %r8696, %r14108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14109, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14110, %r14108, %r14109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14113, %r14105, %r14110;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14116, %r787, %r8718, %r14097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14120, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14121, %r14097, %r14120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14124, %r14116, %r14121;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14127, %r798, %r8718, %r14108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14132, %r14108, %r14131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14135, %r14127, %r14132;
	// end inline asm
	// begin inline asm
	mov.b32 %r14143, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14154, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14140, %r787, %r8742, %r14143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14145, %r14143, %r14144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14148, %r14140, %r14145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14151, %r798, %r8742, %r14154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14155, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14156, %r14154, %r14155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14159, %r14151, %r14156;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14162, %r787, %r8764, %r14143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14166, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14167, %r14143, %r14166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14170, %r14162, %r14167;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14173, %r798, %r8764, %r14154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14177, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14178, %r14154, %r14177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14181, %r14173, %r14178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14319, %r332, %r13826, %r13626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14316, %r332, %r13837, %r13632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14328, %r332, %r13848, %r13638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14325, %r332, %r13859, %r13644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14337, %r332, %r13872, %r13650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14334, %r332, %r13883, %r13656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14346, %r332, %r13894, %r13662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14343, %r332, %r13905, %r13668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14355, %r332, %r13918, %r13674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14352, %r332, %r13929, %r13680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14364, %r332, %r13940, %r13686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14361, %r332, %r13951, %r13692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14373, %r332, %r13964, %r13698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14370, %r332, %r13975, %r13704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14382, %r332, %r13986, %r13710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14379, %r332, %r13997, %r13716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14391, %r350, %r14010, %r13722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14388, %r350, %r14021, %r13728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14400, %r350, %r14032, %r13734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14397, %r350, %r14043, %r13740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14409, %r350, %r14056, %r13746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14406, %r350, %r14067, %r13752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14418, %r350, %r14078, %r13758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14415, %r350, %r14089, %r13764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14427, %r350, %r14102, %r13770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14424, %r350, %r14113, %r13776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14436, %r350, %r14124, %r13782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14433, %r350, %r14135, %r13788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14445, %r350, %r14148, %r13794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14442, %r350, %r14159, %r13800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14454, %r350, %r14170, %r13806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14451, %r350, %r14181, %r13812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14312, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14314, %r14312, %r14316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14317, %r414, %r14319, %r14314;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14321, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14323, %r14321, %r14325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14326, %r414, %r14328, %r14323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14330, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14332, %r14330, %r14334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14335, %r414, %r14337, %r14332;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14339, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14341, %r14339, %r14343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14344, %r414, %r14346, %r14341;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14348, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14350, %r14348, %r14352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14353, %r414, %r14355, %r14350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14357, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14359, %r14357, %r14361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14362, %r414, %r14364, %r14359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14366, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14368, %r14366, %r14370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14371, %r414, %r14373, %r14368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14375, %r420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14377, %r14375, %r14379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14380, %r414, %r14382, %r14377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14384, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14386, %r14384, %r14388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14389, %r417, %r14391, %r14386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14393, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14395, %r14393, %r14397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14398, %r417, %r14400, %r14395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14402, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14404, %r14402, %r14406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14407, %r417, %r14409, %r14404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14411, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14413, %r14411, %r14415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14416, %r417, %r14418, %r14413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14420, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14422, %r14420, %r14424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14425, %r417, %r14427, %r14422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14429, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14431, %r14429, %r14433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14434, %r417, %r14436, %r14431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14438, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14440, %r14438, %r14442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14443, %r417, %r14445, %r14440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14447, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14449, %r14447, %r14451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14452, %r417, %r14454, %r14449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14456, %r420, %r14319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r414, %r14316, %r14456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14463, %r420, %r14328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14466, %r414, %r14325, %r14463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14470, %r420, %r14337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14473, %r414, %r14334, %r14470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14477, %r420, %r14346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14480, %r414, %r14343, %r14477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14484, %r420, %r14355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14487, %r414, %r14352, %r14484;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14491, %r420, %r14364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14494, %r414, %r14361, %r14491;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14498, %r420, %r14373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14501, %r414, %r14370, %r14498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14505, %r420, %r14382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14508, %r414, %r14379, %r14505;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14512, %r423, %r14391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14515, %r417, %r14388, %r14512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14519, %r423, %r14400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14522, %r417, %r14397, %r14519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14526, %r423, %r14409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14529, %r417, %r14406, %r14526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14533, %r423, %r14418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14536, %r417, %r14415, %r14533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14540, %r423, %r14427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14543, %r417, %r14424, %r14540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14547, %r423, %r14436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14550, %r417, %r14433, %r14547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14554, %r423, %r14445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14557, %r417, %r14442, %r14554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14561, %r423, %r14454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14564, %r417, %r14451, %r14561;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14735, %r14732}, {%r462, %r468, %r465, %r471}, {%r14317, %r14459}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14744, %r14741}, {%r462, %r468, %r465, %r471}, {%r14326, %r14466}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14753, %r14750}, {%r462, %r468, %r465, %r471}, {%r14335, %r14473}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14762, %r14759}, {%r462, %r468, %r465, %r471}, {%r14344, %r14480}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14771, %r14768}, {%r462, %r468, %r465, %r471}, {%r14353, %r14487}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14780, %r14777}, {%r462, %r468, %r465, %r471}, {%r14362, %r14494}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14789, %r14786}, {%r462, %r468, %r465, %r471}, {%r14371, %r14501}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14798, %r14795}, {%r462, %r468, %r465, %r471}, {%r14380, %r14508}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14807, %r14804}, {%r462, %r468, %r465, %r471}, {%r14389, %r14515}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14816, %r14813}, {%r462, %r468, %r465, %r471}, {%r14398, %r14522}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14825, %r14822}, {%r462, %r468, %r465, %r471}, {%r14407, %r14529}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14834, %r14831}, {%r462, %r468, %r465, %r471}, {%r14416, %r14536}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14843, %r14840}, {%r462, %r468, %r465, %r471}, {%r14425, %r14543}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14852, %r14849}, {%r462, %r468, %r465, %r471}, {%r14434, %r14550}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14861, %r14858}, {%r462, %r468, %r465, %r471}, {%r14443, %r14557}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14870, %r14867}, {%r462, %r468, %r465, %r471}, {%r14452, %r14564}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14728, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14730, %r14728, %r14732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14733, %r509, %r14735, %r14730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14737, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14739, %r14737, %r14741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14742, %r509, %r14744, %r14739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14746, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14748, %r14746, %r14750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14751, %r509, %r14753, %r14748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14755, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14757, %r14755, %r14759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14760, %r509, %r14762, %r14757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14764, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14766, %r14764, %r14768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14769, %r509, %r14771, %r14766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14773, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14775, %r14773, %r14777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14778, %r509, %r14780, %r14775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14782, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14784, %r14782, %r14786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14787, %r509, %r14789, %r14784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14791, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14793, %r14791, %r14795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14796, %r509, %r14798, %r14793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14800, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14802, %r14800, %r14804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14805, %r509, %r14807, %r14802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14809, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14811, %r14809, %r14813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14814, %r509, %r14816, %r14811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14818, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14820, %r14818, %r14822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14823, %r509, %r14825, %r14820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14827, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14829, %r14827, %r14831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14832, %r509, %r14834, %r14829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14836, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14838, %r14836, %r14840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14841, %r509, %r14843, %r14838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14845, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14847, %r14845, %r14849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14850, %r509, %r14852, %r14847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14854, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14856, %r14854, %r14858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14859, %r509, %r14861, %r14856;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14863, %r512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14865, %r14863, %r14867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14868, %r509, %r14870, %r14865;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14872, %r512, %r14735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14875, %r509, %r14732, %r14872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14879, %r512, %r14744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14882, %r509, %r14741, %r14879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14886, %r512, %r14753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14889, %r509, %r14750, %r14886;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14893, %r512, %r14762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14896, %r509, %r14759, %r14893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14900, %r512, %r14771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14903, %r509, %r14768, %r14900;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14907, %r512, %r14780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14910, %r509, %r14777, %r14907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14914, %r512, %r14789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14917, %r509, %r14786, %r14914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14921, %r512, %r14798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14924, %r509, %r14795, %r14921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14928, %r512, %r14807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14931, %r509, %r14804, %r14928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14935, %r512, %r14816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14938, %r509, %r14813, %r14935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14942, %r512, %r14825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14945, %r509, %r14822, %r14942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14949, %r512, %r14834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14952, %r509, %r14831, %r14949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14956, %r512, %r14843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14959, %r509, %r14840, %r14956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14963, %r512, %r14852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14966, %r509, %r14849, %r14963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14970, %r512, %r14861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14973, %r509, %r14858, %r14970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14977, %r512, %r14870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14980, %r509, %r14867, %r14977;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15273, %r15276}, {%r552, %r558, %r555, %r561}, {%r14733, %r14875}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15279, %r15282}, {%r552, %r558, %r555, %r561}, {%r14742, %r14882}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15285, %r15288}, {%r552, %r558, %r555, %r561}, {%r14751, %r14889}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15291, %r15294}, {%r552, %r558, %r555, %r561}, {%r14760, %r14896}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15297, %r15300}, {%r552, %r558, %r555, %r561}, {%r14769, %r14903}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15303, %r15306}, {%r552, %r558, %r555, %r561}, {%r14778, %r14910}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15309, %r15312}, {%r552, %r558, %r555, %r561}, {%r14787, %r14917}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15315, %r15318}, {%r552, %r558, %r555, %r561}, {%r14796, %r14924}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15274, %r15277}, {%r552, %r558, %r555, %r561}, {%r14805, %r14931}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15280, %r15283}, {%r552, %r558, %r555, %r561}, {%r14814, %r14938}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15286, %r15289}, {%r552, %r558, %r555, %r561}, {%r14823, %r14945}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15292, %r15295}, {%r552, %r558, %r555, %r561}, {%r14832, %r14952}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15298, %r15301}, {%r552, %r558, %r555, %r561}, {%r14841, %r14959}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15304, %r15307}, {%r552, %r558, %r555, %r561}, {%r14850, %r14966}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15310, %r15313}, {%r552, %r558, %r555, %r561}, {%r14859, %r14973}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15316, %r15319}, {%r552, %r558, %r555, %r561}, {%r14868, %r14980}, {%r15143, %r15143};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15272, %r15273, %r15274;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15275, %r15276, %r15277;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15278, %r15279, %r15280;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15281, %r15282, %r15283;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15284, %r15285, %r15286;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15287, %r15288, %r15289;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15290, %r15291, %r15292;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15293, %r15294, %r15295;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15296, %r15297, %r15298;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15299, %r15300, %r15301;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15302, %r15303, %r15304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15305, %r15306, %r15307;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15308, %r15309, %r15310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15311, %r15312, %r15313;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15314, %r15315, %r15316;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15317, %r15318, %r15319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15320, %r15273, %r15274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15323, %r15276, %r15277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15326, %r15279, %r15280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15329, %r15282, %r15283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15332, %r15285, %r15286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15335, %r15288, %r15289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15338, %r15291, %r15292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15341, %r15294, %r15295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15344, %r15297, %r15298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15347, %r15300, %r15301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15350, %r15303, %r15304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15353, %r15306, %r15307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15356, %r15309, %r15310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15359, %r15312, %r15313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15362, %r15315, %r15316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15365, %r15318, %r15319;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15368, %r215, %r15272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15371, %r215, %r15275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15374, %r215, %r15278;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15377, %r215, %r15281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15380, %r215, %r15284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15383, %r215, %r15287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15386, %r215, %r15290;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15389, %r215, %r15293;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15392, %r215, %r15296;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15395, %r215, %r15299;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15398, %r215, %r15302;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15401, %r215, %r15305;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15404, %r215, %r15308;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15407, %r215, %r15311;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15410, %r215, %r15314;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15413, %r215, %r15317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15416, %r216, %r15320;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15419, %r216, %r15323;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15422, %r216, %r15326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15425, %r216, %r15329;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15428, %r216, %r15332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15431, %r216, %r15335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15434, %r216, %r15338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15437, %r216, %r15341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15440, %r216, %r15344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15443, %r216, %r15347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15446, %r216, %r15350;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15449, %r216, %r15353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15452, %r216, %r15356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15455, %r216, %r15359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15458, %r216, %r15362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15461, %r216, %r15365;
	// end inline asm
	// begin inline asm
	mov.b32 %r15464, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15465, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15466, %r15368, %r15464;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15469, %r15466, %r15465;
	// end inline asm
	// begin inline asm
	mov.b32 %r15472, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15473, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15474, %r15371, %r15472;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15477, %r15474, %r15473;
	// end inline asm
	// begin inline asm
	mov.b32 %r15480, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15481, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15482, %r15374, %r15480;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15485, %r15482, %r15481;
	// end inline asm
	// begin inline asm
	mov.b32 %r15488, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15489, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15490, %r15377, %r15488;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15493, %r15490, %r15489;
	// end inline asm
	// begin inline asm
	mov.b32 %r15496, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15497, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15498, %r15380, %r15496;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15501, %r15498, %r15497;
	// end inline asm
	// begin inline asm
	mov.b32 %r15504, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15505, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15506, %r15383, %r15504;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15509, %r15506, %r15505;
	// end inline asm
	// begin inline asm
	mov.b32 %r15512, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15513, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15514, %r15386, %r15512;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15517, %r15514, %r15513;
	// end inline asm
	// begin inline asm
	mov.b32 %r15520, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15521, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15522, %r15389, %r15520;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15525, %r15522, %r15521;
	// end inline asm
	// begin inline asm
	mov.b32 %r15528, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15529, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15530, %r15392, %r15528;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15533, %r15530, %r15529;
	// end inline asm
	// begin inline asm
	mov.b32 %r15536, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15537, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15538, %r15395, %r15536;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15541, %r15538, %r15537;
	// end inline asm
	// begin inline asm
	mov.b32 %r15544, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15545, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15546, %r15398, %r15544;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15549, %r15546, %r15545;
	// end inline asm
	// begin inline asm
	mov.b32 %r15552, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15553, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15554, %r15401, %r15552;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15557, %r15554, %r15553;
	// end inline asm
	// begin inline asm
	mov.b32 %r15560, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15561, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15562, %r15404, %r15560;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15565, %r15562, %r15561;
	// end inline asm
	// begin inline asm
	mov.b32 %r15568, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15569, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15570, %r15407, %r15568;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15573, %r15570, %r15569;
	// end inline asm
	// begin inline asm
	mov.b32 %r15576, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15577, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15578, %r15410, %r15576;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15581, %r15578, %r15577;
	// end inline asm
	// begin inline asm
	mov.b32 %r15584, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15585, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15586, %r15413, %r15584;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15589, %r15586, %r15585;
	// end inline asm
	// begin inline asm
	mov.b32 %r15592, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15593, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15594, %r15416, %r15592;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15597, %r15594, %r15593;
	// end inline asm
	// begin inline asm
	mov.b32 %r15600, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15601, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15602, %r15419, %r15600;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15605, %r15602, %r15601;
	// end inline asm
	// begin inline asm
	mov.b32 %r15608, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15609, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15610, %r15422, %r15608;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15613, %r15610, %r15609;
	// end inline asm
	// begin inline asm
	mov.b32 %r15616, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15617, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15618, %r15425, %r15616;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15621, %r15618, %r15617;
	// end inline asm
	// begin inline asm
	mov.b32 %r15624, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15625, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15626, %r15428, %r15624;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15629, %r15626, %r15625;
	// end inline asm
	// begin inline asm
	mov.b32 %r15632, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15633, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15634, %r15431, %r15632;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15637, %r15634, %r15633;
	// end inline asm
	// begin inline asm
	mov.b32 %r15640, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15641, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15642, %r15434, %r15640;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15645, %r15642, %r15641;
	// end inline asm
	// begin inline asm
	mov.b32 %r15648, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15649, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15650, %r15437, %r15648;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15653, %r15650, %r15649;
	// end inline asm
	// begin inline asm
	mov.b32 %r15656, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15657, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15658, %r15440, %r15656;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15661, %r15658, %r15657;
	// end inline asm
	// begin inline asm
	mov.b32 %r15664, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15665, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15666, %r15443, %r15664;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15669, %r15666, %r15665;
	// end inline asm
	// begin inline asm
	mov.b32 %r15672, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15673, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15674, %r15446, %r15672;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15677, %r15674, %r15673;
	// end inline asm
	// begin inline asm
	mov.b32 %r15680, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15681, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15682, %r15449, %r15680;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15685, %r15682, %r15681;
	// end inline asm
	// begin inline asm
	mov.b32 %r15688, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15689, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15690, %r15452, %r15688;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15693, %r15690, %r15689;
	// end inline asm
	// begin inline asm
	mov.b32 %r15696, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15697, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15698, %r15455, %r15696;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15701, %r15698, %r15697;
	// end inline asm
	// begin inline asm
	mov.b32 %r15704, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15705, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15706, %r15458, %r15704;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15709, %r15706, %r15705;
	// end inline asm
	// begin inline asm
	mov.b32 %r15712, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15713, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15714, %r15461, %r15712;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15717, %r15714, %r15713;
	// end inline asm
	// begin inline asm
	mov.b32 %r15723, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15721, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15722, %r15723, %r15721;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15725, %r15469, %r15722;
	// end inline asm
	// begin inline asm
	mov.b32 %r15728, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15729, %r15723, %r15728;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15732, %r15477, %r15729;
	// end inline asm
	// begin inline asm
	mov.b32 %r15735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15736, %r15723, %r15735;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15739, %r15485, %r15736;
	// end inline asm
	// begin inline asm
	mov.b32 %r15742, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15743, %r15723, %r15742;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15746, %r15493, %r15743;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15749, %r15725, %r15739, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15753, %r15732, %r15746, %r4304;
	// end inline asm
	shl.b32 	%r15760, %r15753, 4;
	// begin inline asm
	lop3.b32 %r15757, %r4310, %r15749, %r15760, 202;
	// end inline asm
	xor.b32  	%r16080, %r15757, -2004318072;
	// begin inline asm
	mov.b32 %r15764, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15762, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15763, %r15764, %r15762;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15766, %r15501, %r15763;
	// end inline asm
	// begin inline asm
	mov.b32 %r15769, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15770, %r15764, %r15769;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15773, %r15509, %r15770;
	// end inline asm
	// begin inline asm
	mov.b32 %r15776, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15777, %r15764, %r15776;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15780, %r15517, %r15777;
	// end inline asm
	// begin inline asm
	mov.b32 %r15783, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15784, %r15764, %r15783;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15787, %r15525, %r15784;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15790, %r15766, %r15780, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15794, %r15773, %r15787, %r4304;
	// end inline asm
	shl.b32 	%r15801, %r15794, 4;
	// begin inline asm
	lop3.b32 %r15798, %r4310, %r15790, %r15801, 202;
	// end inline asm
	xor.b32  	%r16081, %r15798, -2004318072;
	// begin inline asm
	mov.b32 %r15805, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15803, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15804, %r15805, %r15803;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15807, %r15533, %r15804;
	// end inline asm
	// begin inline asm
	mov.b32 %r15810, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15811, %r15805, %r15810;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15814, %r15541, %r15811;
	// end inline asm
	// begin inline asm
	mov.b32 %r15817, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15818, %r15805, %r15817;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15821, %r15549, %r15818;
	// end inline asm
	// begin inline asm
	mov.b32 %r15824, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15825, %r15805, %r15824;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15828, %r15557, %r15825;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15831, %r15807, %r15821, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15835, %r15814, %r15828, %r4304;
	// end inline asm
	shl.b32 	%r15842, %r15835, 4;
	// begin inline asm
	lop3.b32 %r15839, %r4310, %r15831, %r15842, 202;
	// end inline asm
	xor.b32  	%r16082, %r15839, -2004318072;
	// begin inline asm
	mov.b32 %r15846, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15844, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15845, %r15846, %r15844;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15848, %r15565, %r15845;
	// end inline asm
	// begin inline asm
	mov.b32 %r15851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15852, %r15846, %r15851;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15855, %r15573, %r15852;
	// end inline asm
	// begin inline asm
	mov.b32 %r15858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15859, %r15846, %r15858;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15862, %r15581, %r15859;
	// end inline asm
	// begin inline asm
	mov.b32 %r15865, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15866, %r15846, %r15865;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15869, %r15589, %r15866;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15872, %r15848, %r15862, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15876, %r15855, %r15869, %r4304;
	// end inline asm
	shl.b32 	%r15883, %r15876, 4;
	// begin inline asm
	lop3.b32 %r15880, %r4310, %r15872, %r15883, 202;
	// end inline asm
	xor.b32  	%r16083, %r15880, -2004318072;
	// begin inline asm
	mov.b32 %r15887, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15885, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15886, %r15887, %r15885;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15889, %r15597, %r15886;
	// end inline asm
	// begin inline asm
	mov.b32 %r15892, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15893, %r15887, %r15892;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15896, %r15605, %r15893;
	// end inline asm
	// begin inline asm
	mov.b32 %r15899, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15900, %r15887, %r15899;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15903, %r15613, %r15900;
	// end inline asm
	// begin inline asm
	mov.b32 %r15906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15907, %r15887, %r15906;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15910, %r15621, %r15907;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15913, %r15889, %r15903, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15917, %r15896, %r15910, %r4304;
	// end inline asm
	shl.b32 	%r15924, %r15917, 4;
	// begin inline asm
	lop3.b32 %r15921, %r4310, %r15913, %r15924, 202;
	// end inline asm
	xor.b32  	%r16084, %r15921, -2004318072;
	// begin inline asm
	mov.b32 %r15928, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15926, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15927, %r15928, %r15926;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15930, %r15629, %r15927;
	// end inline asm
	// begin inline asm
	mov.b32 %r15933, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15934, %r15928, %r15933;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15937, %r15637, %r15934;
	// end inline asm
	// begin inline asm
	mov.b32 %r15940, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15941, %r15928, %r15940;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15944, %r15645, %r15941;
	// end inline asm
	// begin inline asm
	mov.b32 %r15947, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15948, %r15928, %r15947;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15951, %r15653, %r15948;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15954, %r15930, %r15944, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15958, %r15937, %r15951, %r4304;
	// end inline asm
	shl.b32 	%r15965, %r15958, 4;
	// begin inline asm
	lop3.b32 %r15962, %r4310, %r15954, %r15965, 202;
	// end inline asm
	xor.b32  	%r16085, %r15962, -2004318072;
	// begin inline asm
	mov.b32 %r15969, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15968, %r15969, %r15967;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15971, %r15661, %r15968;
	// end inline asm
	// begin inline asm
	mov.b32 %r15974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15975, %r15969, %r15974;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15978, %r15669, %r15975;
	// end inline asm
	// begin inline asm
	mov.b32 %r15981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15982, %r15969, %r15981;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15985, %r15677, %r15982;
	// end inline asm
	// begin inline asm
	mov.b32 %r15988, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15989, %r15969, %r15988;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15992, %r15685, %r15989;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15995, %r15971, %r15985, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15999, %r15978, %r15992, %r4304;
	// end inline asm
	shl.b32 	%r16006, %r15999, 4;
	// begin inline asm
	lop3.b32 %r16003, %r4310, %r15995, %r16006, 202;
	// end inline asm
	xor.b32  	%r16086, %r16003, -2004318072;
	// begin inline asm
	mov.b32 %r16010, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16009, %r16010, %r16008;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16012, %r15693, %r16009;
	// end inline asm
	// begin inline asm
	mov.b32 %r16015, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16016, %r16010, %r16015;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16019, %r15701, %r16016;
	// end inline asm
	// begin inline asm
	mov.b32 %r16022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16023, %r16010, %r16022;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16026, %r15709, %r16023;
	// end inline asm
	// begin inline asm
	mov.b32 %r16029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16030, %r16010, %r16029;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16033, %r15717, %r16030;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16036, %r16012, %r16026, %r4304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16040, %r16019, %r16033, %r4304;
	// end inline asm
	shl.b32 	%r16047, %r16040, 4;
	// begin inline asm
	lop3.b32 %r16044, %r4310, %r16036, %r16047, 202;
	// end inline asm
	xor.b32  	%r16087, %r16044, -2004318072;
	st.shared.u32 	[%rd82], %r16080;
	st.shared.u32 	[%rd83], %r16081;
	st.shared.u32 	[%rd84], %r16082;
	st.shared.u32 	[%rd85], %r16083;
	st.shared.u32 	[%rd86], %r16084;
	st.shared.u32 	[%rd87], %r16085;
	st.shared.u32 	[%rd88], %r16086;
	st.shared.u32 	[%rd89], %r16087;
	add.s32 	%r16187, %r16187, -128;
	add.s64 	%rd94, %rd94, 16644;
	setp.eq.s32 	%p300, %r16187, 0;
	@%p300 bra 	LBB0_179;
	bra.uni 	LBB0_178;
LBB0_179:                               // %guard_pass22984
                                        //   in Loop: Header=BB0_177 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16093, [%rd13];
	ld.shared.u32 	%r16094, [%rd14+128];
	ld.shared.u32 	%r16101, [%rd14+4];
	ld.shared.u32 	%r16102, [%rd14+132];
	ld.shared.u32 	%r16109, [%rd15];
	ld.shared.u32 	%r16110, [%rd16+128];
	ld.shared.u32 	%r16117, [%rd16+4];
	ld.shared.u32 	%r16118, [%rd16+132];
	// begin inline asm
	prmt.b32 %r16088, %r16093, %r16094, %r756;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16092, %r16093, %r16094, %r760;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16096, %r16101, %r16102, %r756;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16100, %r16101, %r16102, %r760;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16104, %r16109, %r16110, %r756;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16108, %r16109, %r16110, %r760;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16112, %r16117, %r16118, %r756;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16116, %r16117, %r16118, %r760;
	// end inline asm
	selp.b32 	%r16120, %r16092, %r16088, %p299;
	shfl.sync.bfly.b32	%r16121, %r16120, 8, 31, -1;
	selp.b32 	%r16122, %r16088, %r16121, %p299;
	selp.b32 	%r16123, %r16121, %r16092, %p299;
	selp.b32 	%r16124, %r16100, %r16096, %p299;
	shfl.sync.bfly.b32	%r16125, %r16124, 8, 31, -1;
	selp.b32 	%r16126, %r16096, %r16125, %p299;
	selp.b32 	%r16127, %r16125, %r16100, %p299;
	selp.b32 	%r16128, %r16108, %r16104, %p299;
	shfl.sync.bfly.b32	%r16129, %r16128, 8, 31, -1;
	selp.b32 	%r16130, %r16104, %r16129, %p299;
	selp.b32 	%r16131, %r16129, %r16108, %p299;
	selp.b32 	%r16132, %r16116, %r16112, %p299;
	shfl.sync.bfly.b32	%r16133, %r16132, 8, 31, -1;
	selp.b32 	%r16134, %r16112, %r16133, %p299;
	selp.b32 	%r16135, %r16133, %r16116, %p299;
	shl.b32 	%r16136, %r16186, 12;
	or.b32  	%r16137, %r16136, %r131;
	or.b32  	%r16138, %r16137, %r128;
	mul.wide.u32 	%rd90, %r16138, 4;
	add.s64 	%rd91, %rd3, %rd90;
	st.global.v4.u32 	[%rd91], {%r16122, %r16126, %r16123, %r16127};
	or.b32  	%r16139, %r16136, %r132;
	or.b32  	%r16140, %r16139, %r128;
	mul.wide.s32 	%rd92, %r16140, 4;
	add.s64 	%rd93, %rd3, %rd92;
	st.global.v4.u32 	[%rd93], {%r16130, %r16134, %r16131, %r16135};
	add.s32 	%r227, %r16186, 256;
	setp.le.s32 	%p302, %r6, %r227;
	setp.eq.s32 	%p303, %r16186, 32512;
	or.pred  	%p304, %p303, %p302;
	mov.u32 	%r16186, %r227;
	@%p304 bra 	LBB0_180;
	bra.uni 	LBB0_177;
LBB0_180:                               // %L63609
	st.global.u32 	[%rd4], %r15143;
	ret;
LBB0_1:                                 // %L8
	mov.u64 	%rd44, exception1;
	cvta.global.u64 	%rd45, %rd44;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd45;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd35;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L178
	mov.u32 	%r233, 2;
	st.global.u32 	[%rd4], %r233;
	mov.u64 	%rd47, exception5095;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd35;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
