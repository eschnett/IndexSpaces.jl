// PTX CompilerJob of upchan(CuDeviceVector{Int32, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int32, 1}) in world 33601 for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z17julia_upchan_408013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z17julia_upchan_408013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func julia_AssertionError_9665
()
.noreturn
{
	trap;
}
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[8]
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_9676
(
	.param .align 8 .b8 julia_power_by_squaring_9676_param_0[8],
	.param .b64 julia_power_by_squaring_9676_param_1,
	.param .b64 julia_power_by_squaring_9676_param_2
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2325[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z17julia_upchan_408013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z17julia_upchan_408013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z17julia_upchan_408013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[8],
	.param .align 8 .b8 _Z17julia_upchan_408013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z17julia_upchan_408013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z17julia_upchan_408013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z17julia_upchan_408013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z17julia_upchan_408013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<222>;
	.reg .b16 	%rs<1185>;
	.reg .b32 	%r<7808>;
	.reg .f32 	%f<930>;
	.reg .b64 	%rd<87>;

// %bb.0:                               // %conversion
	ld.param.u64 	%rd21, [_Z17julia_upchan_408013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r165, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r165, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd26, [_Z17julia_upchan_408013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd22, [_Z17julia_upchan_408013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r5, %r4, 9;
	or.b32  	%r166, %r3, %r1;
	or.b32  	%r167, %r166, %r5;
	mul.wide.u32 	%rd32, %r167, 4;
	add.s64 	%rd4, %rd26, %rd32;
	mov.u32 	%r168, 1;
	st.global.u32 	[%rd4], %r168;
	ld.global.u32 	%r6, [%rd22];
	and.b32  	%r169, %r6, -32513;
	setp.eq.s32 	%p2, %r169, 0;
	@%p2 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %pass71
	bfe.u32 	%r132, %r1, 1, 1;
	and.b32  	%r133, %r1, 1;
	bfe.u32 	%r135, %r1, 2, 1;
	shr.u32 	%r136, %r1, 4;
	shl.b32 	%r176, %r136, 1;
	shl.b32 	%r177, %r135, 2;
	shl.b32 	%r178, %r133, 3;
	shl.b32 	%r179, %r132, 4;
	or.b32  	%r180, %r178, %r179;
	or.b32  	%r181, %r177, %r180;
	or.b32  	%r182, %r176, %r181;
	bfe.u32 	%r138, %r1, 3, 1;
	or.b32  	%r139, %r138, %r182;
	or.b32  	%r140, %r139, 32;
	mov.f32 	%f185, 0f40000000;
	mov.f32 	%f186, 0f437F0000;
	div.approx.f32 	%f147, %f186, %f185;
	cvt.rn.f32.s32 	%f187, %r139;
	sub.f32 	%f188, %f187, %f147;
	mov.f32 	%f217, 0f42800000;
	div.approx.f32 	%f149, %f188, %f217;
	setp.ne.f32 	%p8, %f149, 0f00000000;
	mov.f32 	%f897, 0f3F800000;
	mov.f32 	%f890, %f897;
	@%p8 bra 	LBB0_5;
	bra.uni 	LBB0_6;
LBB0_5:                                 // %L466
	sin.approx.f32 	%f218, %f149;
	div.approx.f32 	%f890, %f218, %f149;
LBB0_6:                                 // %L469
	cvt.rn.f32.s32 	%f221, %r140;
	sub.f32 	%f222, %f221, %f147;
	div.approx.f32 	%f5, %f222, %f217;
	setp.eq.f32 	%p14, %f5, 0f00000000;
	mov.f32 	%f891, %f897;
	@%p14 bra 	LBB0_8;
// %bb.7:                               // %L486
	sin.approx.f32 	%f252, %f5;
	div.approx.f32 	%f891, %f252, %f5;
LBB0_8:                                 // %L489
	or.b32  	%r200, %r139, 64;
	or.b32  	%r8, %r139, 96;
	cvt.rn.f32.s32 	%f256, %r200;
	sub.f32 	%f257, %f256, %f147;
	div.approx.f32 	%f9, %f257, %f217;
	setp.eq.f32 	%p20, %f9, 0f00000000;
	mov.f32 	%f892, %f897;
	@%p20 bra 	LBB0_10;
// %bb.9:                               // %L567
	sin.approx.f32 	%f287, %f9;
	div.approx.f32 	%f892, %f287, %f9;
LBB0_10:                                // %L570
	cvt.rn.f32.s32 	%f290, %r8;
	sub.f32 	%f291, %f290, %f147;
	div.approx.f32 	%f14, %f291, %f217;
	setp.eq.f32 	%p26, %f14, 0f00000000;
	mov.f32 	%f893, %f897;
	@%p26 bra 	LBB0_12;
// %bb.11:                              // %L587
	sin.approx.f32 	%f321, %f14;
	div.approx.f32 	%f893, %f321, %f14;
LBB0_12:                                // %L590
	shl.b32 	%r171, %r1, 1;
	or.b32  	%r218, %r139, 128;
	or.b32  	%r10, %r139, 160;
	cvt.rn.f32.s32 	%f325, %r218;
	sub.f32 	%f326, %f325, %f147;
	div.approx.f32 	%f18, %f326, %f217;
	setp.eq.f32 	%p32, %f18, 0f00000000;
	mov.f32 	%f894, %f897;
	@%p32 bra 	LBB0_14;
// %bb.13:                              // %L668
	sin.approx.f32 	%f356, %f18;
	div.approx.f32 	%f894, %f356, %f18;
LBB0_14:                                // %L671
	and.b32  	%r124, %r171, 8;
	shl.b32 	%r125, %r1, 2;
	and.b32  	%r129, %r1, 18;
	cvt.rn.f32.s32 	%f359, %r10;
	sub.f32 	%f360, %f359, %f147;
	div.approx.f32 	%f23, %f360, %f217;
	setp.eq.f32 	%p38, %f23, 0f00000000;
	mov.f32 	%f895, %f897;
	@%p38 bra 	LBB0_16;
// %bb.15:                              // %L688
	sin.approx.f32 	%f390, %f23;
	div.approx.f32 	%f895, %f390, %f23;
LBB0_16:                                // %L691
	and.b32  	%r126, %r125, 32;
	or.b32  	%r172, %r129, %r124;
	or.b32  	%r236, %r139, 192;
	or.b32  	%r12, %r139, 224;
	cvt.rn.f32.s32 	%f394, %r236;
	sub.f32 	%f395, %f394, %f147;
	div.approx.f32 	%f27, %f395, %f217;
	setp.eq.f32 	%p44, %f27, 0f00000000;
	mov.f32 	%f896, %f897;
	@%p44 bra 	LBB0_18;
// %bb.17:                              // %L769
	sin.approx.f32 	%f425, %f27;
	div.approx.f32 	%f896, %f425, %f27;
LBB0_18:                                // %L772
	and.b32  	%r127, %r125, 4;
	or.b32  	%r173, %r172, %r126;
	cvt.rn.f32.s32 	%f428, %r12;
	sub.f32 	%f429, %f428, %f147;
	div.approx.f32 	%f32, %f429, %f217;
	setp.eq.f32 	%p50, %f32, 0f00000000;
	@%p50 bra 	LBB0_20;
// %bb.19:                              // %L789
	sin.approx.f32 	%f459, %f32;
	div.approx.f32 	%f897, %f459, %f32;
LBB0_20:                                // %L792
	or.b32  	%r174, %r173, %r127;
	mul.lo.s32 	%r14, %r139, 63;
	cvt.rn.f32.s32 	%f462, %r14;
	div.approx.f32 	%f35, %f462, %f217;
	abs.f32 	%f900, %f35;
	setp.lt.f32 	%p51, %f900, 0f40000000;
	@%p51 bra 	LBB0_32;
// %bb.21:
	setp.gtu.f32 	%p52, %f900, 0f4B800000;
	@%p52 bra 	LBB0_28;
	bra.uni 	LBB0_22;
LBB0_28:
	mov.b32 	%r16, %f900;
	and.b32  	%r254, %r16, 8388607;
	or.b32  	%r7766, %r254, 1065353216;
	mov.b32 	%f899, %r7766;
	add.s32 	%r255, %r16, -1073741824;
	and.b32  	%r7767, %r255, -8388608;
	setp.eq.s32 	%p58, %r7767, 0;
	@%p58 bra 	LBB0_31;
// %bb.29:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f473, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f472,%f473;
	// end inline asm
LBB0_30:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r256, %r7767, 192937984;
	add.s32 	%r257, %r256, %r7766;
	mov.b32 	%f474, %r257;
	mul.f32 	%f475, %f472, %f474;
	sub.f32 	%f476, %f474, %f475;
	fma.rn.f32 	%f477, %f476, %f472, %f475;
	sub.f32 	%f478, %f474, %f477;
	fma.rz.f32 	%f479, %f478, %f472, %f477;
	cvt.rzi.f32.f32 	%f480, %f479;
	sub.f32 	%f899, %f474, %f480;
	sub.s32 	%r7767, %r7767, %r256;
	mov.b32 	%r7766, %f899;
	setp.ne.s32 	%p59, %r7767, 0;
	setp.ne.s32 	%p60, %r7766, 0;
	and.pred  	%p61, %p59, %p60;
	@%p61 bra 	LBB0_30;
LBB0_31:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p62, %r16, 2139095039;
	selp.f32 	%f481, 0f7FFFFFFF, 0f4B800000, %p62;
	mul.f32 	%f482, %f899, 0f34000000;
	mul.f32 	%f900, %f481, %f482;
	bra.uni 	LBB0_32;
LBB0_22:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f465, %f900, %f185;
	cvt.rzi.f32.f32 	%f898, %f465;
	fma.rn.f32 	%f38, %f898, 0fC0000000, %f900;
	mov.b32 	%r15, %f38;
	setp.lt.u32 	%p53, %r15, 1073741824;
	@%p53 bra 	LBB0_27;
// %bb.23:
	setp.lt.u32 	%p54, %r15, -2147483647;
	@%p54 bra 	LBB0_25;
// %bb.24:
	add.f32 	%f470, %f898, 0fBF800000;
	setp.lt.f32 	%p57, %f38, 0fC0000000;
	add.f32 	%f471, %f470, 0fBF800000;
	selp.f32 	%f898, %f471, %f470, %p57;
	bra.uni 	LBB0_27;
LBB0_25:
	add.f32 	%f898, %f898, 0f3F800000;
	setp.ltu.f32 	%p55, %f38, 0f40800000;
	@%p55 bra 	LBB0_27;
// %bb.26:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f466, %f898, 0f3F800000;
	fma.rn.f32 	%f468, %f185, 0fC0400000, %f38;
	setp.ge.f32 	%p56, %f468, 0f00000000;
	add.f32 	%f469, %f466, 0f3F800000;
	selp.f32 	%f898, %f469, %f466, %p56;
LBB0_27:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f900, %f898, 0fC0000000, %f900;
LBB0_32:                                // %__internal_fmodf_kernel.exit.i
	shr.u32 	%r175, %r174, 1;
	abs.f32 	%f483, %f900;
	setp.gtu.f32 	%p63, %f483, 0f7F800000;
	@%p63 bra 	LBB0_34;
// %bb.33:
	mov.b32 	%r258, %f35;
	and.b32  	%r259, %r258, -2147483648;
	mov.b32 	%r260, %f900;
	or.b32  	%r261, %r259, %r260;
	mov.b32 	%f900, %r261;
LBB0_34:                                // %__nv_fmodf.exit
	ld.param.u64 	%rd1, [_Z17julia_upchan_408013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd35, %r175, 4;
	add.s32 	%r270, %r14, 2016;
	cvt.rn.f32.s32 	%f515, %r270;
	div.approx.f32 	%f54, %f515, %f217;
	abs.f32 	%f904, %f54;
	setp.lt.f32 	%p71, %f904, 0f40000000;
	@%p71 bra 	LBB0_46;
// %bb.35:
	setp.gtu.f32 	%p72, %f904, 0f4B800000;
	@%p72 bra 	LBB0_42;
	bra.uni 	LBB0_36;
LBB0_42:
	mov.b32 	%r24, %f904;
	and.b32  	%r271, %r24, 8388607;
	or.b32  	%r7768, %r271, 1065353216;
	mov.b32 	%f903, %r7768;
	add.s32 	%r272, %r24, -1073741824;
	and.b32  	%r7769, %r272, -8388608;
	setp.eq.s32 	%p78, %r7769, 0;
	@%p78 bra 	LBB0_45;
// %bb.43:                              // %__nv_fmaf_rn.exit4.i.i.i1136.preheader
	mov.f32 	%f526, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f525,%f526;
	// end inline asm
LBB0_44:                                // %__nv_fmaf_rn.exit4.i.i.i1136
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r273, %r7769, 192937984;
	add.s32 	%r274, %r273, %r7768;
	mov.b32 	%f527, %r274;
	mul.f32 	%f528, %f525, %f527;
	sub.f32 	%f529, %f527, %f528;
	fma.rn.f32 	%f530, %f529, %f525, %f528;
	sub.f32 	%f531, %f527, %f530;
	fma.rz.f32 	%f532, %f531, %f525, %f530;
	cvt.rzi.f32.f32 	%f533, %f532;
	sub.f32 	%f903, %f527, %f533;
	sub.s32 	%r7769, %r7769, %r273;
	mov.b32 	%r7768, %f903;
	setp.ne.s32 	%p79, %r7769, 0;
	setp.ne.s32 	%p80, %r7768, 0;
	and.pred  	%p81, %p79, %p80;
	@%p81 bra 	LBB0_44;
LBB0_45:                                // %__internal_fmodf_slowpath_mod.exit.i.i1138
	setp.gt.u32 	%p82, %r24, 2139095039;
	selp.f32 	%f534, 0f7FFFFFFF, 0f4B800000, %p82;
	mul.f32 	%f535, %f903, 0f34000000;
	mul.f32 	%f904, %f534, %f535;
	bra.uni 	LBB0_46;
LBB0_36:                                // %__nv_fast_fdividef.exit.i.i.i1108
	div.approx.f32 	%f518, %f904, %f185;
	cvt.rzi.f32.f32 	%f902, %f518;
	fma.rn.f32 	%f57, %f902, 0fC0000000, %f904;
	mov.b32 	%r23, %f57;
	setp.lt.u32 	%p73, %r23, 1073741824;
	@%p73 bra 	LBB0_41;
// %bb.37:
	setp.lt.u32 	%p74, %r23, -2147483647;
	@%p74 bra 	LBB0_39;
// %bb.38:
	add.f32 	%f523, %f902, 0fBF800000;
	setp.lt.f32 	%p77, %f57, 0fC0000000;
	add.f32 	%f524, %f523, 0fBF800000;
	selp.f32 	%f902, %f524, %f523, %p77;
	bra.uni 	LBB0_41;
LBB0_39:
	add.f32 	%f902, %f902, 0f3F800000;
	setp.ltu.f32 	%p75, %f57, 0f40800000;
	@%p75 bra 	LBB0_41;
// %bb.40:                              // %__nv_fmaf_rn.exit.i.i.i1113
	add.f32 	%f519, %f902, 0f3F800000;
	fma.rn.f32 	%f521, %f185, 0fC0400000, %f57;
	setp.ge.f32 	%p76, %f521, 0f00000000;
	add.f32 	%f522, %f519, 0f3F800000;
	selp.f32 	%f902, %f522, %f519, %p76;
LBB0_41:                                // %__internal_fmodf_fastpath_quot.exit.i.i1117
	fma.rn.f32 	%f904, %f902, 0fC0000000, %f904;
LBB0_46:                                // %__internal_fmodf_kernel.exit.i1142
	add.s64 	%rd36, %rd1, %rd35;
	abs.f32 	%f536, %f904;
	setp.gtu.f32 	%p83, %f536, 0f7F800000;
	@%p83 bra 	LBB0_48;
// %bb.47:
	mov.b32 	%r275, %f54;
	and.b32  	%r276, %r275, -2147483648;
	mov.b32 	%r277, %f904;
	or.b32  	%r278, %r276, %r277;
	mov.b32 	%f904, %r278;
LBB0_48:                                // %__nv_fmodf.exit1143
	ld.global.u32 	%r130, [%rd36];
	mov.u64 	%rd37, 2;
	mov.u64 	%rd38, 6;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9676, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd39, [retval0+0];
	} // callseq 4
	setp.ne.s64 	%p91, %rd39, 64;
	@%p91 bra 	LBB0_119;
// %bb.49:                              // %L889
	shr.u32 	%r134, %r1, 2;
	and.b32  	%r293, %r1, 3;
	shl.b32 	%r294, %r293, 1;
	neg.s32 	%r33, %r294;
	mul.lo.s32 	%r34, %r33, %r134;
	cvt.rn.f32.s32 	%f71, %r34;
	mov.f32 	%f570, 0f41000000;
	div.approx.f32 	%f72, %f71, %f570;
	abs.f32 	%f908, %f72;
	setp.lt.f32 	%p92, %f908, 0f40000000;
	@%p92 bra 	LBB0_61;
// %bb.50:
	setp.gtu.f32 	%p93, %f908, 0f4B800000;
	@%p93 bra 	LBB0_57;
	bra.uni 	LBB0_51;
LBB0_57:
	mov.b32 	%r36, %f908;
	and.b32  	%r295, %r36, 8388607;
	or.b32  	%r7770, %r295, 1065353216;
	mov.b32 	%f907, %r7770;
	add.s32 	%r296, %r36, -1073741824;
	and.b32  	%r7771, %r296, -8388608;
	setp.eq.s32 	%p99, %r7771, 0;
	@%p99 bra 	LBB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i1182.preheader
	mov.f32 	%f580, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f579,%f580;
	// end inline asm
LBB0_59:                                // %__nv_fmaf_rn.exit4.i.i.i1182
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r297, %r7771, 192937984;
	add.s32 	%r298, %r297, %r7770;
	mov.b32 	%f581, %r298;
	mul.f32 	%f582, %f579, %f581;
	sub.f32 	%f583, %f581, %f582;
	fma.rn.f32 	%f584, %f583, %f579, %f582;
	sub.f32 	%f585, %f581, %f584;
	fma.rz.f32 	%f586, %f585, %f579, %f584;
	cvt.rzi.f32.f32 	%f587, %f586;
	sub.f32 	%f907, %f581, %f587;
	sub.s32 	%r7771, %r7771, %r297;
	mov.b32 	%r7770, %f907;
	setp.ne.s32 	%p100, %r7771, 0;
	setp.ne.s32 	%p101, %r7770, 0;
	and.pred  	%p102, %p100, %p101;
	@%p102 bra 	LBB0_59;
LBB0_60:                                // %__internal_fmodf_slowpath_mod.exit.i.i1184
	setp.gt.u32 	%p103, %r36, 2139095039;
	selp.f32 	%f588, 0f7FFFFFFF, 0f4B800000, %p103;
	mul.f32 	%f589, %f907, 0f34000000;
	mul.f32 	%f908, %f588, %f589;
	bra.uni 	LBB0_61;
LBB0_51:                                // %__nv_fast_fdividef.exit.i.i.i1154
	div.approx.f32 	%f572, %f908, %f185;
	cvt.rzi.f32.f32 	%f906, %f572;
	fma.rn.f32 	%f75, %f906, 0fC0000000, %f908;
	mov.b32 	%r35, %f75;
	setp.lt.u32 	%p94, %r35, 1073741824;
	@%p94 bra 	LBB0_56;
// %bb.52:
	setp.lt.u32 	%p95, %r35, -2147483647;
	@%p95 bra 	LBB0_54;
// %bb.53:
	add.f32 	%f577, %f906, 0fBF800000;
	setp.lt.f32 	%p98, %f75, 0fC0000000;
	add.f32 	%f578, %f577, 0fBF800000;
	selp.f32 	%f906, %f578, %f577, %p98;
	bra.uni 	LBB0_56;
LBB0_54:
	add.f32 	%f906, %f906, 0f3F800000;
	setp.ltu.f32 	%p96, %f75, 0f40800000;
	@%p96 bra 	LBB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i1159
	add.f32 	%f573, %f906, 0f3F800000;
	fma.rn.f32 	%f575, %f185, 0fC0400000, %f75;
	setp.ge.f32 	%p97, %f575, 0f00000000;
	add.f32 	%f576, %f573, 0f3F800000;
	selp.f32 	%f906, %f576, %f573, %p97;
LBB0_56:                                // %__internal_fmodf_fastpath_quot.exit.i.i1163
	fma.rn.f32 	%f908, %f906, 0fC0000000, %f908;
LBB0_61:                                // %__internal_fmodf_kernel.exit.i1188
	abs.f32 	%f590, %f908;
	setp.gtu.f32 	%p104, %f590, 0f7F800000;
	@%p104 bra 	LBB0_63;
// %bb.62:
	mov.b32 	%r299, %f72;
	and.b32  	%r300, %r299, -2147483648;
	mov.b32 	%r301, %f908;
	or.b32  	%r302, %r300, %r301;
	mov.b32 	%f908, %r302;
LBB0_63:                                // %__nv_fmodf.exit1189
	shl.b32 	%r311, %r134, 3;
	sub.s32 	%r312, %r34, %r311;
	cvt.rn.f32.s32 	%f91, %r312;
	div.approx.f32 	%f92, %f91, %f570;
	abs.f32 	%f912, %f92;
	setp.lt.f32 	%p112, %f912, 0f40000000;
	@%p112 bra 	LBB0_75;
// %bb.64:
	setp.gtu.f32 	%p113, %f912, 0f4B800000;
	@%p113 bra 	LBB0_71;
	bra.uni 	LBB0_65;
LBB0_71:
	mov.b32 	%r44, %f912;
	and.b32  	%r313, %r44, 8388607;
	or.b32  	%r7772, %r313, 1065353216;
	mov.b32 	%f911, %r7772;
	add.s32 	%r314, %r44, -1073741824;
	and.b32  	%r7773, %r314, -8388608;
	setp.eq.s32 	%p119, %r7773, 0;
	@%p119 bra 	LBB0_74;
// %bb.72:                              // %__nv_fmaf_rn.exit4.i.i.i1228.preheader
	mov.f32 	%f632, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f631,%f632;
	// end inline asm
LBB0_73:                                // %__nv_fmaf_rn.exit4.i.i.i1228
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r315, %r7773, 192937984;
	add.s32 	%r316, %r315, %r7772;
	mov.b32 	%f633, %r316;
	mul.f32 	%f634, %f631, %f633;
	sub.f32 	%f635, %f633, %f634;
	fma.rn.f32 	%f636, %f635, %f631, %f634;
	sub.f32 	%f637, %f633, %f636;
	fma.rz.f32 	%f638, %f637, %f631, %f636;
	cvt.rzi.f32.f32 	%f639, %f638;
	sub.f32 	%f911, %f633, %f639;
	sub.s32 	%r7773, %r7773, %r315;
	mov.b32 	%r7772, %f911;
	setp.ne.s32 	%p120, %r7773, 0;
	setp.ne.s32 	%p121, %r7772, 0;
	and.pred  	%p122, %p120, %p121;
	@%p122 bra 	LBB0_73;
LBB0_74:                                // %__internal_fmodf_slowpath_mod.exit.i.i1230
	setp.gt.u32 	%p123, %r44, 2139095039;
	selp.f32 	%f640, 0f7FFFFFFF, 0f4B800000, %p123;
	mul.f32 	%f641, %f911, 0f34000000;
	mul.f32 	%f912, %f640, %f641;
	bra.uni 	LBB0_75;
LBB0_65:                                // %__nv_fast_fdividef.exit.i.i.i1200
	div.approx.f32 	%f624, %f912, %f185;
	cvt.rzi.f32.f32 	%f910, %f624;
	fma.rn.f32 	%f95, %f910, 0fC0000000, %f912;
	mov.b32 	%r43, %f95;
	setp.lt.u32 	%p114, %r43, 1073741824;
	@%p114 bra 	LBB0_70;
// %bb.66:
	setp.lt.u32 	%p115, %r43, -2147483647;
	@%p115 bra 	LBB0_68;
// %bb.67:
	add.f32 	%f629, %f910, 0fBF800000;
	setp.lt.f32 	%p118, %f95, 0fC0000000;
	add.f32 	%f630, %f629, 0fBF800000;
	selp.f32 	%f910, %f630, %f629, %p118;
	bra.uni 	LBB0_70;
LBB0_68:
	add.f32 	%f910, %f910, 0f3F800000;
	setp.ltu.f32 	%p116, %f95, 0f40800000;
	@%p116 bra 	LBB0_70;
// %bb.69:                              // %__nv_fmaf_rn.exit.i.i.i1205
	add.f32 	%f625, %f910, 0f3F800000;
	fma.rn.f32 	%f627, %f185, 0fC0400000, %f95;
	setp.ge.f32 	%p117, %f627, 0f00000000;
	add.f32 	%f628, %f625, 0f3F800000;
	selp.f32 	%f910, %f628, %f625, %p117;
LBB0_70:                                // %__internal_fmodf_fastpath_quot.exit.i.i1209
	fma.rn.f32 	%f912, %f910, 0fC0000000, %f912;
LBB0_75:                                // %__internal_fmodf_kernel.exit.i1234
	abs.f32 	%f642, %f912;
	setp.gtu.f32 	%p124, %f642, 0f7F800000;
	@%p124 bra 	LBB0_77;
// %bb.76:
	mov.b32 	%r317, %f92;
	and.b32  	%r318, %r317, -2147483648;
	mov.b32 	%r319, %f912;
	or.b32  	%r320, %r318, %r319;
	mov.b32 	%f912, %r320;
LBB0_77:                                // %__nv_fmodf.exit1235
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9676, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd45, [retval0+0];
	} // callseq 8
	setp.ne.s64 	%p132, %rd45, 64;
	@%p132 bra 	LBB0_118;
// %bb.78:                              // %L1027
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9676, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd51, [retval0+0];
	} // callseq 12
	cvt.rn.f32.s64 	%f676, %rd51;
	div.approx.f32 	%f109, %f71, %f676;
	abs.f32 	%f924, %f109;
	setp.lt.f32 	%p133, %f924, 0f40000000;
	@%p133 bra 	LBB0_127;
// %bb.79:
	setp.gtu.f32 	%p134, %f924, 0f4B800000;
	@%p134 bra 	LBB0_123;
	bra.uni 	LBB0_80;
LBB0_123:
	mov.b32 	%r142, %f924;
	and.b32  	%r341, %r142, 8388607;
	or.b32  	%r7804, %r341, 1065353216;
	mov.b32 	%f923, %r7804;
	add.s32 	%r342, %r142, -1073741824;
	and.b32  	%r7805, %r342, -8388608;
	setp.eq.s32 	%p140, %r7805, 0;
	@%p140 bra 	LBB0_126;
// %bb.124:                             // %__nv_fmaf_rn.exit4.i.i.i1366.preheader
	mov.f32 	%f686, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f685,%f686;
	// end inline asm
LBB0_125:                               // %__nv_fmaf_rn.exit4.i.i.i1366
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r343, %r7805, 192937984;
	add.s32 	%r344, %r343, %r7804;
	mov.b32 	%f687, %r344;
	mul.f32 	%f688, %f685, %f687;
	sub.f32 	%f689, %f687, %f688;
	fma.rn.f32 	%f690, %f689, %f685, %f688;
	sub.f32 	%f691, %f687, %f690;
	fma.rz.f32 	%f692, %f691, %f685, %f690;
	cvt.rzi.f32.f32 	%f693, %f692;
	sub.f32 	%f923, %f687, %f693;
	sub.s32 	%r7805, %r7805, %r343;
	mov.b32 	%r7804, %f923;
	setp.ne.s32 	%p141, %r7805, 0;
	setp.ne.s32 	%p142, %r7804, 0;
	and.pred  	%p143, %p141, %p142;
	@%p143 bra 	LBB0_125;
LBB0_126:                               // %__internal_fmodf_slowpath_mod.exit.i.i1368
	setp.gt.u32 	%p144, %r142, 2139095039;
	selp.f32 	%f694, 0f7FFFFFFF, 0f4B800000, %p144;
	mul.f32 	%f695, %f923, 0f34000000;
	mul.f32 	%f924, %f694, %f695;
	bra.uni 	LBB0_127;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i1338
	div.approx.f32 	%f678, %f924, %f185;
	cvt.rzi.f32.f32 	%f922, %f678;
	fma.rn.f32 	%f151, %f922, 0fC0000000, %f924;
	mov.b32 	%r141, %f151;
	setp.lt.u32 	%p135, %r141, 1073741824;
	@%p135 bra 	LBB0_122;
// %bb.81:
	setp.lt.u32 	%p136, %r141, -2147483647;
	@%p136 bra 	LBB0_120;
// %bb.82:
	add.f32 	%f683, %f922, 0fBF800000;
	setp.lt.f32 	%p139, %f151, 0fC0000000;
	add.f32 	%f684, %f683, 0fBF800000;
	selp.f32 	%f922, %f684, %f683, %p139;
	bra.uni 	LBB0_122;
LBB0_120:
	add.f32 	%f922, %f922, 0f3F800000;
	setp.ltu.f32 	%p137, %f151, 0f40800000;
	@%p137 bra 	LBB0_122;
// %bb.121:                             // %__nv_fmaf_rn.exit.i.i.i1343
	add.f32 	%f679, %f922, 0f3F800000;
	fma.rn.f32 	%f681, %f185, 0fC0400000, %f151;
	setp.ge.f32 	%p138, %f681, 0f00000000;
	add.f32 	%f682, %f679, 0f3F800000;
	selp.f32 	%f922, %f682, %f679, %p138;
LBB0_122:                               // %__internal_fmodf_fastpath_quot.exit.i.i1347
	fma.rn.f32 	%f924, %f922, 0fC0000000, %f924;
LBB0_127:                               // %__internal_fmodf_kernel.exit.i1372
	abs.f32 	%f696, %f924;
	setp.gtu.f32 	%p145, %f696, 0f7F800000;
	@%p145 bra 	LBB0_129;
// %bb.128:
	mov.b32 	%r345, %f109;
	and.b32  	%r346, %r345, -2147483648;
	mov.b32 	%r347, %f924;
	or.b32  	%r348, %r346, %r347;
	mov.b32 	%f924, %r348;
LBB0_129:                               // %__nv_fmodf.exit1373
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9676, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd55, [retval0+0];
	} // callseq 13
	cvt.rn.f32.s64 	%f728, %rd55;
	div.approx.f32 	%f167, %f91, %f728;
	abs.f32 	%f928, %f167;
	setp.lt.f32 	%p153, %f928, 0f40000000;
	@%p153 bra 	LBB0_141;
// %bb.130:
	setp.gtu.f32 	%p154, %f928, 0f4B800000;
	@%p154 bra 	LBB0_137;
	bra.uni 	LBB0_131;
LBB0_137:
	mov.b32 	%r150, %f928;
	and.b32  	%r357, %r150, 8388607;
	or.b32  	%r7806, %r357, 1065353216;
	mov.b32 	%f927, %r7806;
	add.s32 	%r358, %r150, -1073741824;
	and.b32  	%r7807, %r358, -8388608;
	setp.eq.s32 	%p160, %r7807, 0;
	@%p160 bra 	LBB0_140;
// %bb.138:                             // %__nv_fmaf_rn.exit4.i.i.i1412.preheader
	mov.f32 	%f738, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f737,%f738;
	// end inline asm
LBB0_139:                               // %__nv_fmaf_rn.exit4.i.i.i1412
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r359, %r7807, 192937984;
	add.s32 	%r360, %r359, %r7806;
	mov.b32 	%f739, %r360;
	mul.f32 	%f740, %f737, %f739;
	sub.f32 	%f741, %f739, %f740;
	fma.rn.f32 	%f742, %f741, %f737, %f740;
	sub.f32 	%f743, %f739, %f742;
	fma.rz.f32 	%f744, %f743, %f737, %f742;
	cvt.rzi.f32.f32 	%f745, %f744;
	sub.f32 	%f927, %f739, %f745;
	sub.s32 	%r7807, %r7807, %r359;
	mov.b32 	%r7806, %f927;
	setp.ne.s32 	%p161, %r7807, 0;
	setp.ne.s32 	%p162, %r7806, 0;
	and.pred  	%p163, %p161, %p162;
	@%p163 bra 	LBB0_139;
LBB0_140:                               // %__internal_fmodf_slowpath_mod.exit.i.i1414
	setp.gt.u32 	%p164, %r150, 2139095039;
	selp.f32 	%f746, 0f7FFFFFFF, 0f4B800000, %p164;
	mul.f32 	%f747, %f927, 0f34000000;
	mul.f32 	%f928, %f746, %f747;
	bra.uni 	LBB0_141;
LBB0_131:                               // %__nv_fast_fdividef.exit.i.i.i1384
	div.approx.f32 	%f730, %f928, %f185;
	cvt.rzi.f32.f32 	%f926, %f730;
	fma.rn.f32 	%f170, %f926, 0fC0000000, %f928;
	mov.b32 	%r149, %f170;
	setp.lt.u32 	%p155, %r149, 1073741824;
	@%p155 bra 	LBB0_136;
// %bb.132:
	setp.lt.u32 	%p156, %r149, -2147483647;
	@%p156 bra 	LBB0_134;
// %bb.133:
	add.f32 	%f735, %f926, 0fBF800000;
	setp.lt.f32 	%p159, %f170, 0fC0000000;
	add.f32 	%f736, %f735, 0fBF800000;
	selp.f32 	%f926, %f736, %f735, %p159;
	bra.uni 	LBB0_136;
LBB0_134:
	add.f32 	%f926, %f926, 0f3F800000;
	setp.ltu.f32 	%p157, %f170, 0f40800000;
	@%p157 bra 	LBB0_136;
// %bb.135:                             // %__nv_fmaf_rn.exit.i.i.i1389
	add.f32 	%f731, %f926, 0f3F800000;
	fma.rn.f32 	%f733, %f185, 0fC0400000, %f170;
	setp.ge.f32 	%p158, %f733, 0f00000000;
	add.f32 	%f734, %f731, 0f3F800000;
	selp.f32 	%f926, %f734, %f731, %p158;
LBB0_136:                               // %__internal_fmodf_fastpath_quot.exit.i.i1393
	fma.rn.f32 	%f928, %f926, 0fC0000000, %f928;
LBB0_141:                               // %__internal_fmodf_kernel.exit.i1418
	abs.f32 	%f748, %f928;
	setp.gtu.f32 	%p165, %f748, 0f7F800000;
	@%p165 bra 	LBB0_143;
// %bb.142:
	mov.b32 	%r361, %f167;
	and.b32  	%r362, %r361, -2147483648;
	mov.b32 	%r363, %f928;
	or.b32  	%r364, %r362, %r363;
	mov.b32 	%f928, %r364;
LBB0_143:                               // %__nv_fmodf.exit1419
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9676, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd59, [retval0+0];
	} // callseq 14
	setp.eq.s64 	%p173, %rd59, 64;
	@%p173 bra 	LBB0_83;
	bra.uni 	LBB0_144;
LBB0_83:                                // %L1110
	mov.f32 	%f189, 0f43808000;
	div.approx.f32 	%f190, %f188, %f189;
	div.approx.f32 	%f224, %f222, %f189;
	div.approx.f32 	%f259, %f257, %f189;
	div.approx.f32 	%f293, %f291, %f189;
	div.approx.f32 	%f328, %f326, %f189;
	div.approx.f32 	%f362, %f360, %f189;
	div.approx.f32 	%f397, %f395, %f189;
	div.approx.f32 	%f431, %f429, %f189;
	abs.f32 	%f191, %f190;
	abs.f32 	%f225, %f224;
	abs.f32 	%f260, %f259;
	abs.f32 	%f294, %f293;
	abs.f32 	%f329, %f328;
	abs.f32 	%f363, %f362;
	abs.f32 	%f398, %f397;
	abs.f32 	%f432, %f431;
	add.f32 	%f591, %f908, %f908;
	add.f32 	%f643, %f912, %f912;
	setp.gt.f32 	%p3, %f191, 0f4B800000;
	mul.f32 	%f192, %f190, 0f00000000;
	setp.gt.f32 	%p9, %f225, 0f4B800000;
	mul.f32 	%f226, %f224, 0f00000000;
	setp.gt.f32 	%p15, %f260, 0f4B800000;
	mul.f32 	%f261, %f259, 0f00000000;
	setp.gt.f32 	%p21, %f294, 0f4B800000;
	mul.f32 	%f295, %f293, 0f00000000;
	setp.gt.f32 	%p27, %f329, 0f4B800000;
	mul.f32 	%f330, %f328, 0f00000000;
	setp.gt.f32 	%p33, %f363, 0f4B800000;
	mul.f32 	%f364, %f362, 0f00000000;
	setp.gt.f32 	%p39, %f398, 0f4B800000;
	mul.f32 	%f399, %f397, 0f00000000;
	setp.gt.f32 	%p45, %f432, 0f4B800000;
	mul.f32 	%f433, %f431, 0f00000000;
	add.f32 	%f484, %f900, %f900;
	add.f32 	%f537, %f904, %f904;
	mov.b32 	%r303, %f591;
	mov.b32 	%r333, %f643;
	selp.f32 	%f193, %f192, %f190, %p3;
	selp.f32 	%f227, %f226, %f224, %p9;
	selp.f32 	%f262, %f261, %f259, %p15;
	selp.f32 	%f296, %f295, %f293, %p21;
	selp.f32 	%f331, %f330, %f328, %p27;
	selp.f32 	%f365, %f364, %f362, %p33;
	selp.f32 	%f400, %f399, %f397, %p39;
	selp.f32 	%f434, %f433, %f431, %p45;
	mov.b32 	%r262, %f484;
	mov.b32 	%r285, %f537;
	and.b32  	%r304, %r303, -2147483648;
	and.b32  	%r334, %r333, -2147483648;
	add.f32 	%f697, %f924, %f924;
	add.f32 	%f194, %f193, %f193;
	add.f32 	%f228, %f227, %f227;
	add.f32 	%f263, %f262, %f262;
	add.f32 	%f297, %f296, %f296;
	add.f32 	%f332, %f331, %f331;
	add.f32 	%f366, %f365, %f365;
	add.f32 	%f401, %f400, %f400;
	add.f32 	%f435, %f434, %f434;
	and.b32  	%r263, %r262, -2147483648;
	and.b32  	%r286, %r285, -2147483648;
	or.b32  	%r305, %r304, 1056964608;
	or.b32  	%r335, %r334, 1056964608;
	mov.b32 	%r349, %f697;
	mov.b32 	%r183, %f194;
	mov.b32 	%r190, %f228;
	mov.b32 	%r201, %f263;
	mov.b32 	%r208, %f297;
	mov.b32 	%r219, %f332;
	mov.b32 	%r226, %f366;
	mov.b32 	%r237, %f401;
	mov.b32 	%r244, %f435;
	or.b32  	%r264, %r263, 1056964608;
	or.b32  	%r287, %r286, 1056964608;
	mov.b32 	%f592, %r305;
	mov.b32 	%f644, %r335;
	and.b32  	%r350, %r349, -2147483648;
	and.b32  	%r184, %r183, -2147483648;
	and.b32  	%r191, %r190, -2147483648;
	and.b32  	%r202, %r201, -2147483648;
	and.b32  	%r209, %r208, -2147483648;
	and.b32  	%r220, %r219, -2147483648;
	and.b32  	%r227, %r226, -2147483648;
	and.b32  	%r238, %r237, -2147483648;
	and.b32  	%r245, %r244, -2147483648;
	mov.b32 	%f485, %r264;
	mov.b32 	%f538, %r287;
	add.f32 	%f593, %f591, %f592;
	abs.f32 	%f595, %f591;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	or.b32  	%r351, %r350, 1056964608;
	or.b32  	%r185, %r184, 1056964608;
	or.b32  	%r192, %r191, 1056964608;
	or.b32  	%r203, %r202, 1056964608;
	or.b32  	%r210, %r209, 1056964608;
	or.b32  	%r221, %r220, 1056964608;
	or.b32  	%r228, %r227, 1056964608;
	or.b32  	%r239, %r238, 1056964608;
	or.b32  	%r246, %r245, 1056964608;
	add.f32 	%f486, %f484, %f485;
	abs.f32 	%f488, %f484;
	add.f32 	%f539, %f537, %f538;
	abs.f32 	%f541, %f537;
	cvt.rzi.f32.f32 	%f594, %f593;
	setp.gt.f32 	%p105, %f595, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p125, %f647, 0f4B000000;
	mov.b32 	%f698, %r351;
	mov.b32 	%f195, %r185;
	mov.b32 	%f229, %r192;
	mov.b32 	%f264, %r203;
	mov.b32 	%f298, %r210;
	mov.b32 	%f333, %r221;
	mov.b32 	%f367, %r228;
	mov.b32 	%f402, %r239;
	mov.b32 	%f436, %r246;
	cvt.rzi.f32.f32 	%f487, %f486;
	setp.gt.f32 	%p64, %f488, 0f4B000000;
	cvt.rzi.f32.f32 	%f540, %f539;
	setp.gt.f32 	%p84, %f541, 0f4B000000;
	selp.f32 	%f596, %f591, %f594, %p105;
	cvt.rzi.f32.f32 	%f597, %f591;
	setp.lt.f32 	%p106, %f595, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p125;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p126, %f647, 0f3F000000;
	add.f32 	%f699, %f697, %f698;
	abs.f32 	%f701, %f697;
	add.f32 	%f196, %f194, %f195;
	abs.f32 	%f198, %f194;
	add.f32 	%f230, %f228, %f229;
	abs.f32 	%f232, %f228;
	add.f32 	%f265, %f263, %f264;
	abs.f32 	%f267, %f263;
	add.f32 	%f299, %f297, %f298;
	abs.f32 	%f301, %f297;
	add.f32 	%f334, %f332, %f333;
	abs.f32 	%f336, %f332;
	add.f32 	%f368, %f366, %f367;
	abs.f32 	%f370, %f366;
	add.f32 	%f403, %f401, %f402;
	abs.f32 	%f405, %f401;
	add.f32 	%f437, %f435, %f436;
	abs.f32 	%f439, %f435;
	selp.f32 	%f489, %f484, %f487, %p64;
	cvt.rzi.f32.f32 	%f490, %f484;
	setp.lt.f32 	%p65, %f488, 0f3F000000;
	selp.f32 	%f542, %f537, %f540, %p84;
	cvt.rzi.f32.f32 	%f543, %f537;
	setp.lt.f32 	%p85, %f541, 0f3F000000;
	selp.f32 	%f598, %f597, %f596, %p106;
	selp.f32 	%f650, %f649, %f648, %p126;
	cvt.rzi.f32.f32 	%f700, %f699;
	setp.gt.f32 	%p146, %f701, 0f4B000000;
	cvt.rzi.f32.f32 	%f197, %f196;
	setp.gt.f32 	%p4, %f198, 0f4B000000;
	cvt.rzi.f32.f32 	%f231, %f230;
	setp.gt.f32 	%p10, %f232, 0f4B000000;
	cvt.rzi.f32.f32 	%f266, %f265;
	setp.gt.f32 	%p16, %f267, 0f4B000000;
	cvt.rzi.f32.f32 	%f300, %f299;
	setp.gt.f32 	%p22, %f301, 0f4B000000;
	cvt.rzi.f32.f32 	%f335, %f334;
	setp.gt.f32 	%p28, %f336, 0f4B000000;
	cvt.rzi.f32.f32 	%f369, %f368;
	setp.gt.f32 	%p34, %f370, 0f4B000000;
	cvt.rzi.f32.f32 	%f404, %f403;
	setp.gt.f32 	%p40, %f405, 0f4B000000;
	cvt.rzi.f32.f32 	%f438, %f437;
	setp.gt.f32 	%p46, %f439, 0f4B000000;
	selp.f32 	%f491, %f490, %f489, %p65;
	selp.f32 	%f544, %f543, %f542, %p85;
	fma.rn.f32 	%f599, %f598, 0fBF000000, %f908;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f912;
	selp.f32 	%f702, %f697, %f700, %p146;
	cvt.rzi.f32.f32 	%f703, %f697;
	setp.lt.f32 	%p147, %f701, 0f3F000000;
	selp.f32 	%f199, %f194, %f197, %p4;
	cvt.rzi.f32.f32 	%f200, %f194;
	setp.lt.f32 	%p5, %f198, 0f3F000000;
	selp.f32 	%f233, %f228, %f231, %p10;
	cvt.rzi.f32.f32 	%f234, %f228;
	setp.lt.f32 	%p11, %f232, 0f3F000000;
	selp.f32 	%f268, %f263, %f266, %p16;
	cvt.rzi.f32.f32 	%f269, %f263;
	setp.lt.f32 	%p17, %f267, 0f3F000000;
	selp.f32 	%f302, %f297, %f300, %p22;
	cvt.rzi.f32.f32 	%f303, %f297;
	setp.lt.f32 	%p23, %f301, 0f3F000000;
	selp.f32 	%f337, %f332, %f335, %p28;
	cvt.rzi.f32.f32 	%f338, %f332;
	setp.lt.f32 	%p29, %f336, 0f3F000000;
	selp.f32 	%f371, %f366, %f369, %p34;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p35, %f370, 0f3F000000;
	selp.f32 	%f406, %f401, %f404, %p40;
	cvt.rzi.f32.f32 	%f407, %f401;
	setp.lt.f32 	%p41, %f405, 0f3F000000;
	selp.f32 	%f440, %f435, %f438, %p46;
	cvt.rzi.f32.f32 	%f441, %f435;
	setp.lt.f32 	%p47, %f439, 0f3F000000;
	fma.rn.f32 	%f492, %f491, 0fBF000000, %f900;
	fma.rn.f32 	%f545, %f544, 0fBF000000, %f904;
	mul.f32 	%f600, %f599, 0f34222169;
	mul.f32 	%f652, %f651, 0f34222169;
	selp.f32 	%f704, %f703, %f702, %p147;
	selp.f32 	%f201, %f200, %f199, %p5;
	selp.f32 	%f235, %f234, %f233, %p11;
	selp.f32 	%f270, %f269, %f268, %p17;
	selp.f32 	%f304, %f303, %f302, %p23;
	selp.f32 	%f339, %f338, %f337, %p29;
	selp.f32 	%f373, %f372, %f371, %p35;
	selp.f32 	%f408, %f407, %f406, %p41;
	selp.f32 	%f442, %f441, %f440, %p47;
	mul.f32 	%f493, %f492, 0f34222169;
	mul.f32 	%f546, %f545, 0f34222169;
	fma.rn.f32 	%f601, %f599, 0f40490FDA, %f600;
	fma.rn.f32 	%f653, %f651, 0f40490FDA, %f652;
	fma.rn.f32 	%f705, %f704, 0fBF000000, %f924;
	fma.rn.f32 	%f202, %f201, 0fBF000000, %f193;
	fma.rn.f32 	%f236, %f235, 0fBF000000, %f227;
	fma.rn.f32 	%f271, %f270, 0fBF000000, %f262;
	fma.rn.f32 	%f305, %f304, 0fBF000000, %f296;
	fma.rn.f32 	%f340, %f339, 0fBF000000, %f331;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f365;
	fma.rn.f32 	%f409, %f408, 0fBF000000, %f400;
	fma.rn.f32 	%f443, %f442, 0fBF000000, %f434;
	fma.rn.f32 	%f494, %f492, 0f40490FDA, %f493;
	fma.rn.f32 	%f547, %f545, 0f40490FDA, %f546;
	mul.f32 	%f602, %f601, %f601;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f706, %f705, 0f34222169;
	mul.f32 	%f203, %f202, %f202;
	mul.f32 	%f237, %f236, %f236;
	mul.f32 	%f272, %f271, %f271;
	mul.f32 	%f306, %f305, %f305;
	mul.f32 	%f341, %f340, %f340;
	mul.f32 	%f375, %f374, %f374;
	mul.f32 	%f410, %f409, %f409;
	mul.f32 	%f444, %f443, %f443;
	mul.f32 	%f495, %f494, %f494;
	mul.f32 	%f548, %f547, %f547;
	fma.rn.f32 	%f603, %f602, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f655, %f654, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f707, %f705, 0f40490FDA, %f706;
	cvt.rzi.s32.f32 	%r186, %f201;
	fma.rn.f32 	%f204, %f203, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f205, %f203, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r193, %f235;
	fma.rn.f32 	%f238, %f237, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f239, %f237, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r204, %f270;
	fma.rn.f32 	%f273, %f272, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f274, %f272, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r211, %f304;
	fma.rn.f32 	%f307, %f306, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f308, %f306, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r222, %f339;
	fma.rn.f32 	%f342, %f341, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f343, %f341, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r229, %f373;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r240, %f408;
	fma.rn.f32 	%f411, %f410, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f412, %f410, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r247, %f442;
	fma.rn.f32 	%f445, %f444, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f446, %f444, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f496, %f495, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f549, %f548, 0f37CBAC00, 0fBAB607ED;
	cvt.rzi.s32.f32 	%r306, %f598;
	fma.rn.f32 	%f604, %f603, %f602, 0f3D2AAABB;
	fma.rn.f32 	%f608, %f602, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r336, %f650;
	fma.rn.f32 	%f656, %f655, %f654, 0f3D2AAABB;
	fma.rn.f32 	%f660, %f654, 0fB94D4153, 0f3C0885E4;
	mul.f32 	%f708, %f707, %f707;
	add.s32 	%r187, %r186, 1;
	fma.rn.f32 	%f206, %f204, %f203, 0fC0A55DF6;
	fma.rn.f32 	%f207, %f205, %f203, 0f4081E0CF;
	fma.rn.f32 	%f208, %f203, %f202, 0f00000000;
	add.s32 	%r194, %r193, 1;
	fma.rn.f32 	%f240, %f238, %f237, 0fC0A55DF6;
	fma.rn.f32 	%f241, %f239, %f237, 0f4081E0CF;
	fma.rn.f32 	%f242, %f237, %f236, 0f00000000;
	add.s32 	%r205, %r204, 1;
	fma.rn.f32 	%f275, %f273, %f272, 0fC0A55DF6;
	fma.rn.f32 	%f276, %f274, %f272, 0f4081E0CF;
	fma.rn.f32 	%f277, %f272, %f271, 0f00000000;
	add.s32 	%r212, %r211, 1;
	fma.rn.f32 	%f309, %f307, %f306, 0fC0A55DF6;
	fma.rn.f32 	%f310, %f308, %f306, 0f4081E0CF;
	fma.rn.f32 	%f311, %f306, %f305, 0f00000000;
	add.s32 	%r223, %r222, 1;
	fma.rn.f32 	%f344, %f342, %f341, 0fC0A55DF6;
	fma.rn.f32 	%f345, %f343, %f341, 0f4081E0CF;
	fma.rn.f32 	%f346, %f341, %f340, 0f00000000;
	add.s32 	%r230, %r229, 1;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	add.s32 	%r241, %r240, 1;
	fma.rn.f32 	%f413, %f411, %f410, 0fC0A55DF6;
	fma.rn.f32 	%f414, %f412, %f410, 0f4081E0CF;
	fma.rn.f32 	%f415, %f410, %f409, 0f00000000;
	add.s32 	%r248, %r247, 1;
	fma.rn.f32 	%f447, %f445, %f444, 0fC0A55DF6;
	fma.rn.f32 	%f448, %f446, %f444, 0f4081E0CF;
	fma.rn.f32 	%f449, %f444, %f443, 0f00000000;
	cvt.rzi.s32.f32 	%r265, %f491;
	fma.rn.f32 	%f497, %f496, %f495, 0f3D2AAABB;
	fma.rn.f32 	%f501, %f495, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r288, %f544;
	fma.rn.f32 	%f550, %f549, %f548, 0f3D2AAABB;
	fma.rn.f32 	%f554, %f548, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f605, %f604, %f602, 0fBEFFFFFF;
	fma.rn.f32 	%f607, %f602, %f601, 0f00000000;
	fma.rn.f32 	%f609, %f608, %f602, 0fBE2AAAA8;
	and.b32  	%r307, %r306, 1;
	fma.rn.f32 	%f657, %f656, %f654, 0fBEFFFFFF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	fma.rn.f32 	%f661, %f660, %f654, 0fBE2AAAA8;
	and.b32  	%r337, %r336, 1;
	fma.rn.f32 	%f709, %f708, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f209, %f207, %f203, 0fC09DE9E6;
	fma.rn.f32 	%f210, %f206, %f208, 0f00000000;
	and.b32  	%r188, %r187, 1;
	fma.rn.f32 	%f243, %f241, %f237, 0fC09DE9E6;
	fma.rn.f32 	%f244, %f240, %f242, 0f00000000;
	and.b32  	%r195, %r194, 1;
	fma.rn.f32 	%f278, %f276, %f272, 0fC09DE9E6;
	fma.rn.f32 	%f279, %f275, %f277, 0f00000000;
	and.b32  	%r206, %r205, 1;
	fma.rn.f32 	%f312, %f310, %f306, 0fC09DE9E6;
	fma.rn.f32 	%f313, %f309, %f311, 0f00000000;
	and.b32  	%r213, %r212, 1;
	fma.rn.f32 	%f347, %f345, %f341, 0fC09DE9E6;
	fma.rn.f32 	%f348, %f344, %f346, 0f00000000;
	and.b32  	%r224, %r223, 1;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	and.b32  	%r231, %r230, 1;
	fma.rn.f32 	%f416, %f414, %f410, 0fC09DE9E6;
	fma.rn.f32 	%f417, %f413, %f415, 0f00000000;
	and.b32  	%r242, %r241, 1;
	fma.rn.f32 	%f450, %f448, %f444, 0fC09DE9E6;
	fma.rn.f32 	%f451, %f447, %f449, 0f00000000;
	and.b32  	%r249, %r248, 1;
	fma.rn.f32 	%f498, %f497, %f495, 0fBEFFFFFF;
	fma.rn.f32 	%f500, %f495, %f494, 0f00000000;
	fma.rn.f32 	%f502, %f501, %f495, 0fBE2AAAA8;
	and.b32  	%r266, %r265, 1;
	fma.rn.f32 	%f551, %f550, %f548, 0fBEFFFFFF;
	fma.rn.f32 	%f553, %f548, %f547, 0f00000000;
	fma.rn.f32 	%f555, %f554, %f548, 0fBE2AAAA8;
	and.b32  	%r289, %r288, 1;
	fma.rn.f32 	%f606, %f605, %f602, 0f3F800000;
	fma.rn.f32 	%f610, %f609, %f607, %f601;
	setp.eq.b32 	%p107, %r307, 1;
	fma.rn.f32 	%f658, %f657, %f654, 0f3F800000;
	fma.rn.f32 	%f662, %f661, %f659, %f653;
	setp.eq.b32 	%p127, %r337, 1;
	cvt.rzi.s32.f32 	%r352, %f704;
	fma.rn.f32 	%f710, %f709, %f708, 0f3D2AAABB;
	fma.rn.f32 	%f714, %f708, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f211, %f209, %f203, 0f3F800000;
	fma.rn.f32 	%f212, %f202, 0f40490FDB, %f210;
	setp.eq.b32 	%p6, %r188, 1;
	fma.rn.f32 	%f245, %f243, %f237, 0f3F800000;
	fma.rn.f32 	%f246, %f236, 0f40490FDB, %f244;
	setp.eq.b32 	%p12, %r195, 1;
	fma.rn.f32 	%f280, %f278, %f272, 0f3F800000;
	fma.rn.f32 	%f281, %f271, 0f40490FDB, %f279;
	setp.eq.b32 	%p18, %r206, 1;
	fma.rn.f32 	%f314, %f312, %f306, 0f3F800000;
	fma.rn.f32 	%f315, %f305, 0f40490FDB, %f313;
	setp.eq.b32 	%p24, %r213, 1;
	fma.rn.f32 	%f349, %f347, %f341, 0f3F800000;
	fma.rn.f32 	%f350, %f340, 0f40490FDB, %f348;
	setp.eq.b32 	%p30, %r224, 1;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	setp.eq.b32 	%p36, %r231, 1;
	fma.rn.f32 	%f418, %f416, %f410, 0f3F800000;
	fma.rn.f32 	%f419, %f409, 0f40490FDB, %f417;
	setp.eq.b32 	%p42, %r242, 1;
	fma.rn.f32 	%f452, %f450, %f444, 0f3F800000;
	fma.rn.f32 	%f453, %f443, 0f40490FDB, %f451;
	setp.eq.b32 	%p48, %r249, 1;
	fma.rn.f32 	%f499, %f498, %f495, 0f3F800000;
	fma.rn.f32 	%f503, %f502, %f500, %f494;
	setp.eq.b32 	%p66, %r266, 1;
	fma.rn.f32 	%f552, %f551, %f548, 0f3F800000;
	fma.rn.f32 	%f556, %f555, %f553, %f547;
	setp.eq.b32 	%p86, %r289, 1;
	selp.f32 	%f611, %f606, %f610, %p107;
	and.b32  	%r308, %r306, 2;
	selp.f32 	%f663, %f658, %f662, %p127;
	and.b32  	%r338, %r336, 2;
	fma.rn.f32 	%f711, %f710, %f708, 0fBEFFFFFF;
	fma.rn.f32 	%f713, %f708, %f707, 0f00000000;
	fma.rn.f32 	%f715, %f714, %f708, 0fBE2AAAA8;
	and.b32  	%r353, %r352, 1;
	selp.f32 	%f213, %f211, %f212, %p6;
	and.b32  	%r189, %r187, 2;
	mov.f32 	%f214, 0f00000000;
	selp.f32 	%f247, %f245, %f246, %p12;
	and.b32  	%r196, %r194, 2;
	selp.f32 	%f282, %f280, %f281, %p18;
	and.b32  	%r207, %r205, 2;
	selp.f32 	%f316, %f314, %f315, %p24;
	and.b32  	%r214, %r212, 2;
	selp.f32 	%f351, %f349, %f350, %p30;
	and.b32  	%r225, %r223, 2;
	selp.f32 	%f385, %f383, %f384, %p36;
	and.b32  	%r232, %r230, 2;
	selp.f32 	%f420, %f418, %f419, %p42;
	and.b32  	%r243, %r241, 2;
	selp.f32 	%f454, %f452, %f453, %p48;
	and.b32  	%r250, %r248, 2;
	selp.f32 	%f504, %f499, %f503, %p66;
	and.b32  	%r267, %r265, 2;
	selp.f32 	%f557, %f552, %f556, %p86;
	and.b32  	%r290, %r288, 2;
	setp.eq.s32 	%p108, %r308, 0;
	neg.f32 	%f613, %f611;
	add.s32 	%r309, %r306, 1;
	cvt.rzi.f32.f32 	%f618, %f908;
	setp.eq.s32 	%p128, %r338, 0;
	neg.f32 	%f665, %f663;
	add.s32 	%r339, %r336, 1;
	cvt.rzi.f32.f32 	%f670, %f912;
	fma.rn.f32 	%f712, %f711, %f708, 0f3F800000;
	fma.rn.f32 	%f716, %f715, %f713, %f707;
	setp.eq.b32 	%p148, %r353, 1;
	setp.eq.s32 	%p7, %r189, 0;
	sub.f32 	%f215, %f214, %f213;
	setp.eq.s32 	%p13, %r196, 0;
	sub.f32 	%f249, %f214, %f247;
	setp.eq.s32 	%p19, %r207, 0;
	sub.f32 	%f284, %f214, %f282;
	setp.eq.s32 	%p25, %r214, 0;
	sub.f32 	%f318, %f214, %f316;
	setp.eq.s32 	%p31, %r225, 0;
	sub.f32 	%f353, %f214, %f351;
	setp.eq.s32 	%p37, %r232, 0;
	sub.f32 	%f387, %f214, %f385;
	setp.eq.s32 	%p43, %r243, 0;
	sub.f32 	%f422, %f214, %f420;
	setp.eq.s32 	%p49, %r250, 0;
	sub.f32 	%f456, %f214, %f454;
	setp.eq.s32 	%p67, %r267, 0;
	neg.f32 	%f506, %f504;
	add.s32 	%r268, %r265, 1;
	cvt.rzi.f32.f32 	%f511, %f900;
	setp.eq.s32 	%p87, %r290, 0;
	neg.f32 	%f559, %f557;
	add.s32 	%r291, %r288, 1;
	cvt.rzi.f32.f32 	%f564, %f904;
	selp.f32 	%f612, %f610, %f606, %p107;
	selp.f32 	%f614, %f611, %f613, %p108;
	and.b32  	%r310, %r309, 2;
	setp.eq.f32 	%p110, %f618, %f908;
	mul.f32 	%f619, %f908, 0f00000000;
	selp.f32 	%f664, %f662, %f658, %p127;
	selp.f32 	%f666, %f663, %f665, %p128;
	and.b32  	%r340, %r339, 2;
	setp.eq.f32 	%p130, %f670, %f912;
	mul.f32 	%f671, %f912, 0f00000000;
	selp.f32 	%f717, %f712, %f716, %p148;
	and.b32  	%r354, %r352, 2;
	selp.f32 	%f216, %f213, %f215, %p7;
	selp.f32 	%f250, %f247, %f249, %p13;
	selp.f32 	%f285, %f282, %f284, %p19;
	selp.f32 	%f319, %f316, %f318, %p25;
	selp.f32 	%f354, %f351, %f353, %p31;
	selp.f32 	%f388, %f385, %f387, %p37;
	selp.f32 	%f423, %f420, %f422, %p43;
	selp.f32 	%f457, %f454, %f456, %p49;
	selp.f32 	%f505, %f503, %f499, %p66;
	selp.f32 	%f507, %f504, %f506, %p67;
	and.b32  	%r269, %r268, 2;
	setp.eq.f32 	%p69, %f511, %f900;
	mul.f32 	%f512, %f900, 0f00000000;
	selp.f32 	%f558, %f556, %f552, %p86;
	selp.f32 	%f560, %f557, %f559, %p87;
	and.b32  	%r292, %r291, 2;
	setp.eq.f32 	%p89, %f564, %f904;
	mul.f32 	%f565, %f904, 0f00000000;
	setp.eq.s32 	%p109, %r310, 0;
	sub.f32 	%f616, %f214, %f612;
	selp.f32 	%f89, %f619, %f614, %p110;
	abs.f32 	%f620, %f908;
	setp.eq.s32 	%p129, %r340, 0;
	sub.f32 	%f668, %f214, %f664;
	selp.f32 	%f672, %f671, %f666, %p130;
	abs.f32 	%f673, %f912;
	setp.eq.s32 	%p149, %r354, 0;
	neg.f32 	%f719, %f717;
	add.s32 	%r355, %r352, 1;
	cvt.rzi.f32.f32 	%f724, %f924;
	mul.f32 	%f148, %f216, %f216;
	mul.f32 	%f4, %f250, %f250;
	mul.f32 	%f8, %f285, %f285;
	mul.f32 	%f13, %f319, %f319;
	mul.f32 	%f17, %f354, %f354;
	mul.f32 	%f22, %f388, %f388;
	mul.f32 	%f26, %f423, %f423;
	mul.f32 	%f31, %f457, %f457;
	setp.eq.s32 	%p68, %r269, 0;
	sub.f32 	%f509, %f214, %f505;
	selp.f32 	%f52, %f512, %f507, %p69;
	abs.f32 	%f513, %f900;
	setp.eq.s32 	%p88, %r292, 0;
	sub.f32 	%f562, %f214, %f558;
	selp.f32 	%f566, %f565, %f560, %p89;
	abs.f32 	%f567, %f904;
	selp.f32 	%f617, %f612, %f616, %p109;
	setp.gt.f32 	%p111, %f620, 0f4B800000;
	add.f32 	%f621, %f89, 0f3F800000;
	selp.f32 	%f669, %f664, %f668, %p129;
	setp.gt.f32 	%p131, %f673, 0f4B800000;
	add.f32 	%f674, %f672, 0f3F800000;
	selp.f32 	%f718, %f716, %f712, %p148;
	selp.f32 	%f720, %f717, %f719, %p149;
	and.b32  	%r356, %r355, 2;
	setp.eq.f32 	%p151, %f724, %f924;
	mul.f32 	%f725, %f924, 0f00000000;
	setp.eq.s32 	%p150, %r356, 0;
	sub.f32 	%f722, %f214, %f718;
	selp.f32 	%f165, %f725, %f720, %p151;
	abs.f32 	%f726, %f924;
	shr.u32 	%r131, %r1, 1;
	shr.u32 	%r137, %r1, 3;
	add.f32 	%f749, %f928, %f928;
	mov.b32 	%r371, %f749;
	and.b32  	%r372, %r371, -2147483648;
	or.b32  	%r373, %r372, 1056964608;
	mov.b32 	%f750, %r373;
	add.f32 	%f751, %f749, %f750;
	cvt.rzi.f32.f32 	%f752, %f751;
	abs.f32 	%f753, %f749;
	setp.gt.f32 	%p166, %f753, 0f4B000000;
	selp.f32 	%f754, %f749, %f752, %p166;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p167, %f753, 0f3F000000;
	selp.f32 	%f756, %f755, %f754, %p167;
	cvt.rzi.s32.f32 	%r374, %f756;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f928;
	mul.f32 	%f758, %f757, 0f34222169;
	fma.rn.f32 	%f759, %f757, 0f40490FDA, %f758;
	mul.f32 	%f760, %f759, %f759;
	fma.rn.f32 	%f761, %f760, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f762, %f761, %f760, 0f3D2AAABB;
	fma.rn.f32 	%f763, %f762, %f760, 0fBEFFFFFF;
	fma.rn.f32 	%f764, %f763, %f760, 0f3F800000;
	fma.rn.f32 	%f765, %f760, %f759, 0f00000000;
	fma.rn.f32 	%f766, %f760, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f767, %f766, %f760, 0fBE2AAAA8;
	fma.rn.f32 	%f768, %f767, %f765, %f759;
	and.b32  	%r375, %r374, 1;
	setp.eq.b32 	%p168, %r375, 1;
	selp.f32 	%f769, %f764, %f768, %p168;
	selp.f32 	%f770, %f768, %f764, %p168;
	and.b32  	%r376, %r374, 2;
	setp.eq.s32 	%p169, %r376, 0;
	neg.f32 	%f771, %f769;
	selp.f32 	%f772, %f769, %f771, %p169;
	add.s32 	%r377, %r374, 1;
	and.b32  	%r378, %r377, 2;
	setp.eq.s32 	%p170, %r378, 0;
	sub.f32 	%f774, %f214, %f770;
	cvt.rzi.f32.f32 	%f776, %f928;
	setp.eq.f32 	%p171, %f776, %f928;
	mul.f32 	%f777, %f928, 0f00000000;
	selp.f32 	%f778, %f777, %f772, %p171;
	abs.f32 	%f779, %f928;
	and.b32  	%r379, %r137, 2;
	and.b32  	%r380, %r131, 4;
	or.b32  	%r381, %r135, %r379;
	or.b32  	%r55, %r381, %r380;
	mul.lo.s32 	%r56, %r33, %r55;
	cvt.rn.f32.s32 	%f782, %r56;
	div.approx.f32 	%f111, %f782, %f570;
	abs.f32 	%f916, %f111;
	setp.lt.f32 	%p174, %f916, 0f40000000;
	@%p174 bra 	LBB0_95;
// %bb.84:
	setp.gtu.f32 	%p175, %f916, 0f4B800000;
	@%p175 bra 	LBB0_91;
	bra.uni 	LBB0_85;
LBB0_91:
	mov.b32 	%r58, %f916;
	and.b32  	%r382, %r58, 8388607;
	or.b32  	%r7774, %r382, 1065353216;
	mov.b32 	%f915, %r7774;
	add.s32 	%r383, %r58, -1073741824;
	and.b32  	%r7775, %r383, -8388608;
	setp.eq.s32 	%p181, %r7775, 0;
	@%p181 bra 	LBB0_94;
// %bb.92:                              // %__nv_fmaf_rn.exit4.i.i.i1274.preheader
	mov.f32 	%f793, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f792,%f793;
	// end inline asm
LBB0_93:                                // %__nv_fmaf_rn.exit4.i.i.i1274
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r384, %r7775, 192937984;
	add.s32 	%r385, %r384, %r7774;
	mov.b32 	%f794, %r385;
	mul.f32 	%f795, %f792, %f794;
	sub.f32 	%f796, %f794, %f795;
	fma.rn.f32 	%f797, %f796, %f792, %f795;
	sub.f32 	%f798, %f794, %f797;
	fma.rz.f32 	%f799, %f798, %f792, %f797;
	cvt.rzi.f32.f32 	%f800, %f799;
	sub.f32 	%f915, %f794, %f800;
	sub.s32 	%r7775, %r7775, %r384;
	mov.b32 	%r7774, %f915;
	setp.ne.s32 	%p182, %r7775, 0;
	setp.ne.s32 	%p183, %r7774, 0;
	and.pred  	%p184, %p182, %p183;
	@%p184 bra 	LBB0_93;
LBB0_94:                                // %__internal_fmodf_slowpath_mod.exit.i.i1276
	setp.gt.u32 	%p185, %r58, 2139095039;
	selp.f32 	%f801, 0f7FFFFFFF, 0f4B800000, %p185;
	mul.f32 	%f802, %f915, 0f34000000;
	mul.f32 	%f916, %f801, %f802;
	bra.uni 	LBB0_95;
LBB0_85:                                // %__nv_fast_fdividef.exit.i.i.i1246
	div.approx.f32 	%f785, %f916, %f185;
	cvt.rzi.f32.f32 	%f914, %f785;
	fma.rn.f32 	%f114, %f914, 0fC0000000, %f916;
	mov.b32 	%r57, %f114;
	setp.lt.u32 	%p176, %r57, 1073741824;
	@%p176 bra 	LBB0_90;
// %bb.86:
	setp.lt.u32 	%p177, %r57, -2147483647;
	@%p177 bra 	LBB0_88;
// %bb.87:
	add.f32 	%f790, %f914, 0fBF800000;
	setp.lt.f32 	%p180, %f114, 0fC0000000;
	add.f32 	%f791, %f790, 0fBF800000;
	selp.f32 	%f914, %f791, %f790, %p180;
	bra.uni 	LBB0_90;
LBB0_88:
	add.f32 	%f914, %f914, 0f3F800000;
	setp.ltu.f32 	%p178, %f114, 0f40800000;
	@%p178 bra 	LBB0_90;
// %bb.89:                              // %__nv_fmaf_rn.exit.i.i.i1251
	add.f32 	%f786, %f914, 0f3F800000;
	fma.rn.f32 	%f788, %f185, 0fC0400000, %f114;
	setp.ge.f32 	%p179, %f788, 0f00000000;
	add.f32 	%f789, %f786, 0f3F800000;
	selp.f32 	%f914, %f789, %f786, %p179;
LBB0_90:                                // %__internal_fmodf_fastpath_quot.exit.i.i1255
	fma.rn.f32 	%f916, %f914, 0fC0000000, %f916;
LBB0_95:                                // %__internal_fmodf_kernel.exit.i1280
	mul.f32 	%f220, %f148, 0f3C0AF64E;
	mul.f32 	%f254, %f4, 0f3C0AF64E;
	mul.f32 	%f289, %f8, 0f3C0AF64E;
	mul.f32 	%f323, %f13, 0f3C0AF64E;
	mul.f32 	%f358, %f17, 0f3C0AF64E;
	mul.f32 	%f392, %f22, 0f3C0AF64E;
	mul.f32 	%f427, %f26, 0f3C0AF64E;
	mul.f32 	%f460, %f31, 0f3C0AF64E;
	selp.f32 	%f510, %f505, %f509, %p68;
	setp.gt.f32 	%p70, %f513, 0f4B800000;
	add.f32 	%f514, %f52, 0f3F800000;
	selp.f32 	%f563, %f558, %f562, %p88;
	setp.gt.f32 	%p90, %f567, 0f4B800000;
	add.f32 	%f568, %f566, 0f3F800000;
	selp.f32 	%f90, %f621, %f617, %p111;
	selp.f32 	%f675, %f674, %f669, %p131;
	selp.f32 	%f723, %f718, %f722, %p150;
	setp.gt.f32 	%p152, %f726, 0f4B800000;
	add.f32 	%f727, %f165, 0f3F800000;
	selp.f32 	%f775, %f770, %f774, %p170;
	setp.gt.f32 	%p172, %f779, 0f4B800000;
	add.f32 	%f780, %f778, 0f3F800000;
	abs.f32 	%f803, %f916;
	setp.gtu.f32 	%p186, %f803, 0f7F800000;
	@%p186 bra 	LBB0_97;
// %bb.96:
	mov.b32 	%r386, %f111;
	and.b32  	%r387, %r386, -2147483648;
	mov.b32 	%r388, %f916;
	or.b32  	%r389, %r387, %r388;
	mov.b32 	%f916, %r389;
LBB0_97:                                // %__nv_fmodf.exit1281
	mul.f32 	%f3, %f220, %f890;
	mul.f32 	%f255, %f254, %f891;
	mul.f32 	%f12, %f289, %f892;
	mul.f32 	%f324, %f323, %f893;
	mul.f32 	%f21, %f358, %f894;
	mul.f32 	%f393, %f392, %f895;
	mul.f32 	%f30, %f427, %f896;
	mul.f32 	%f461, %f460, %f897;
	selp.f32 	%f53, %f514, %f510, %p70;
	selp.f32 	%f569, %f568, %f563, %p90;
	mov.b32 	%r323, %f675;
	mov.b32 	%r322, %f90;
	mov.b32 	%r329, %f672;
	mov.b32 	%r328, %f89;
	selp.f32 	%f166, %f727, %f723, %p152;
	selp.f32 	%f781, %f780, %f775, %p172;
	add.f32 	%f804, %f916, %f916;
	mov.b32 	%r390, %f804;
	and.b32  	%r391, %r390, -2147483648;
	or.b32  	%r392, %r391, 1056964608;
	mov.b32 	%f805, %r392;
	add.f32 	%f806, %f804, %f805;
	cvt.rzi.f32.f32 	%f807, %f806;
	abs.f32 	%f808, %f804;
	setp.gt.f32 	%p187, %f808, 0f4B000000;
	selp.f32 	%f809, %f804, %f807, %p187;
	cvt.rzi.f32.f32 	%f810, %f804;
	setp.lt.f32 	%p188, %f808, 0f3F000000;
	selp.f32 	%f811, %f810, %f809, %p188;
	cvt.rzi.s32.f32 	%r393, %f811;
	fma.rn.f32 	%f812, %f811, 0fBF000000, %f916;
	mul.f32 	%f813, %f812, 0f34222169;
	fma.rn.f32 	%f814, %f812, 0f40490FDA, %f813;
	mul.f32 	%f815, %f814, %f814;
	fma.rn.f32 	%f816, %f815, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f817, %f816, %f815, 0f3D2AAABB;
	fma.rn.f32 	%f818, %f817, %f815, 0fBEFFFFFF;
	fma.rn.f32 	%f819, %f818, %f815, 0f3F800000;
	fma.rn.f32 	%f820, %f815, %f814, 0f00000000;
	fma.rn.f32 	%f821, %f815, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f822, %f821, %f815, 0fBE2AAAA8;
	fma.rn.f32 	%f823, %f822, %f820, %f814;
	and.b32  	%r394, %r393, 1;
	setp.eq.b32 	%p189, %r394, 1;
	selp.f32 	%f824, %f819, %f823, %p189;
	selp.f32 	%f825, %f823, %f819, %p189;
	and.b32  	%r395, %r393, 2;
	setp.eq.s32 	%p190, %r395, 0;
	neg.f32 	%f826, %f824;
	selp.f32 	%f827, %f824, %f826, %p190;
	add.s32 	%r396, %r393, 1;
	and.b32  	%r397, %r396, 2;
	setp.eq.s32 	%p191, %r397, 0;
	sub.f32 	%f829, %f214, %f825;
	selp.f32 	%f830, %f825, %f829, %p191;
	cvt.rzi.f32.f32 	%f831, %f916;
	setp.eq.f32 	%p192, %f831, %f916;
	mul.f32 	%f832, %f916, 0f00000000;
	selp.f32 	%f128, %f832, %f827, %p192;
	abs.f32 	%f833, %f916;
	setp.gt.f32 	%p193, %f833, 0f4B800000;
	add.f32 	%f834, %f128, 0f3F800000;
	shl.b32 	%r398, %r55, 3;
	sub.s32 	%r399, %r56, %r398;
	cvt.rn.f32.s32 	%f835, %r399;
	div.approx.f32 	%f130, %f835, %f570;
	abs.f32 	%f920, %f130;
	setp.lt.f32 	%p194, %f920, 0f40000000;
	@%p194 bra 	LBB0_109;
// %bb.98:
	setp.gtu.f32 	%p195, %f920, 0f4B800000;
	@%p195 bra 	LBB0_105;
	bra.uni 	LBB0_99;
LBB0_105:
	mov.b32 	%r66, %f920;
	and.b32  	%r400, %r66, 8388607;
	or.b32  	%r7776, %r400, 1065353216;
	mov.b32 	%f919, %r7776;
	add.s32 	%r401, %r66, -1073741824;
	and.b32  	%r7777, %r401, -8388608;
	setp.eq.s32 	%p201, %r7777, 0;
	@%p201 bra 	LBB0_108;
// %bb.106:                             // %__nv_fmaf_rn.exit4.i.i.i1320.preheader
	mov.f32 	%f846, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f845,%f846;
	// end inline asm
LBB0_107:                               // %__nv_fmaf_rn.exit4.i.i.i1320
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r402, %r7777, 192937984;
	add.s32 	%r403, %r402, %r7776;
	mov.b32 	%f847, %r403;
	mul.f32 	%f848, %f845, %f847;
	sub.f32 	%f849, %f847, %f848;
	fma.rn.f32 	%f850, %f849, %f845, %f848;
	sub.f32 	%f851, %f847, %f850;
	fma.rz.f32 	%f852, %f851, %f845, %f850;
	cvt.rzi.f32.f32 	%f853, %f852;
	sub.f32 	%f919, %f847, %f853;
	sub.s32 	%r7777, %r7777, %r402;
	mov.b32 	%r7776, %f919;
	setp.ne.s32 	%p202, %r7777, 0;
	setp.ne.s32 	%p203, %r7776, 0;
	and.pred  	%p204, %p202, %p203;
	@%p204 bra 	LBB0_107;
LBB0_108:                               // %__internal_fmodf_slowpath_mod.exit.i.i1322
	setp.gt.u32 	%p205, %r66, 2139095039;
	selp.f32 	%f854, 0f7FFFFFFF, 0f4B800000, %p205;
	mul.f32 	%f855, %f919, 0f34000000;
	mul.f32 	%f920, %f854, %f855;
	bra.uni 	LBB0_109;
LBB0_99:                                // %__nv_fast_fdividef.exit.i.i.i1292
	div.approx.f32 	%f838, %f920, %f185;
	cvt.rzi.f32.f32 	%f918, %f838;
	fma.rn.f32 	%f133, %f918, 0fC0000000, %f920;
	mov.b32 	%r65, %f133;
	setp.lt.u32 	%p196, %r65, 1073741824;
	@%p196 bra 	LBB0_104;
// %bb.100:
	setp.lt.u32 	%p197, %r65, -2147483647;
	@%p197 bra 	LBB0_102;
// %bb.101:
	add.f32 	%f843, %f918, 0fBF800000;
	setp.lt.f32 	%p200, %f133, 0fC0000000;
	add.f32 	%f844, %f843, 0fBF800000;
	selp.f32 	%f918, %f844, %f843, %p200;
	bra.uni 	LBB0_104;
LBB0_102:
	add.f32 	%f918, %f918, 0f3F800000;
	setp.ltu.f32 	%p198, %f133, 0f40800000;
	@%p198 bra 	LBB0_104;
// %bb.103:                             // %__nv_fmaf_rn.exit.i.i.i1297
	add.f32 	%f839, %f918, 0f3F800000;
	fma.rn.f32 	%f841, %f185, 0fC0400000, %f133;
	setp.ge.f32 	%p199, %f841, 0f00000000;
	add.f32 	%f842, %f839, 0f3F800000;
	selp.f32 	%f918, %f842, %f839, %p199;
LBB0_104:                               // %__internal_fmodf_fastpath_quot.exit.i.i1301
	fma.rn.f32 	%f920, %f918, 0fC0000000, %f920;
LBB0_109:                               // %__internal_fmodf_kernel.exit.i1326
	and.b32  	%r128, %r1, 16;
	mov.b32 	%r199, %f255;
	mov.b32 	%r198, %f3;
	mov.b32 	%r217, %f324;
	mov.b32 	%r216, %f12;
	mov.b32 	%r235, %f393;
	mov.b32 	%r234, %f21;
	mov.b32 	%r253, %f461;
	mov.b32 	%r252, %f30;
	mov.b32 	%r281, %f569;
	mov.b32 	%r280, %f53;
	mov.b32 	%r284, %f566;
	mov.b32 	%r283, %f52;
	xor.b32  	%r326, %r329, -2147483648;
	xor.b32  	%r325, %r328, -2147483648;
	mov.b32 	%r367, %f781;
	mov.b32 	%r366, %f166;
	mov.b32 	%r370, %f778;
	mov.b32 	%r369, %f165;
	selp.f32 	%f129, %f834, %f830, %p193;
	abs.f32 	%f856, %f920;
	setp.gtu.f32 	%p206, %f856, 0f7F800000;
	@%p206 bra 	LBB0_111;
// %bb.110:
	mov.b32 	%r404, %f130;
	and.b32  	%r405, %r404, -2147483648;
	mov.b32 	%r406, %f920;
	or.b32  	%r407, %r405, %r406;
	mov.b32 	%f920, %r407;
LBB0_111:                               // %__nv_fmodf.exit1327
	ld.param.u64 	%rd2, [_Z17julia_upchan_408013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z17julia_upchan_408013CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	// begin inline asm
	cvt.rn.f16x2.f32 %r197, %r199, %r198;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r215, %r217, %r216;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r233, %r235, %r234;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r251, %r253, %r252;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r279, %r281, %r280;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r282, %r284, %r283;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r321, %r323, %r322;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r324, %r326, %r325;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r327, %r329, %r328;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r330, %r323, %r322;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r365, %r367, %r366;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r368, %r370, %r369;
	// end inline asm
	add.f32 	%f857, %f920, %f920;
	mov.b32 	%r421, %f857;
	and.b32  	%r422, %r421, -2147483648;
	or.b32  	%r423, %r422, 1056964608;
	mov.b32 	%f858, %r423;
	add.f32 	%f859, %f857, %f858;
	cvt.rzi.f32.f32 	%f860, %f859;
	abs.f32 	%f861, %f857;
	setp.gt.f32 	%p207, %f861, 0f4B000000;
	selp.f32 	%f862, %f857, %f860, %p207;
	cvt.rzi.f32.f32 	%f863, %f857;
	setp.lt.f32 	%p208, %f861, 0f3F000000;
	selp.f32 	%f864, %f863, %f862, %p208;
	cvt.rzi.s32.f32 	%r424, %f864;
	fma.rn.f32 	%f865, %f864, 0fBF000000, %f920;
	mul.f32 	%f866, %f865, 0f34222169;
	fma.rn.f32 	%f867, %f865, 0f40490FDA, %f866;
	mul.f32 	%f868, %f867, %f867;
	fma.rn.f32 	%f869, %f868, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f870, %f869, %f868, 0f3D2AAABB;
	fma.rn.f32 	%f871, %f870, %f868, 0fBEFFFFFF;
	fma.rn.f32 	%f872, %f871, %f868, 0f3F800000;
	fma.rn.f32 	%f873, %f868, %f867, 0f00000000;
	fma.rn.f32 	%f874, %f868, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f875, %f874, %f868, 0fBE2AAAA8;
	fma.rn.f32 	%f876, %f875, %f873, %f867;
	and.b32  	%r425, %r424, 1;
	setp.eq.b32 	%p209, %r425, 1;
	selp.f32 	%f877, %f872, %f876, %p209;
	selp.f32 	%f878, %f876, %f872, %p209;
	and.b32  	%r426, %r424, 2;
	setp.eq.s32 	%p210, %r426, 0;
	neg.f32 	%f879, %f877;
	selp.f32 	%f880, %f877, %f879, %p210;
	add.s32 	%r427, %r424, 1;
	and.b32  	%r428, %r427, 2;
	setp.eq.s32 	%p211, %r428, 0;
	sub.f32 	%f882, %f214, %f878;
	selp.f32 	%f883, %f878, %f882, %p211;
	cvt.rzi.f32.f32 	%f884, %f920;
	setp.eq.f32 	%p212, %f884, %f920;
	mul.f32 	%f885, %f920, 0f00000000;
	selp.f32 	%f886, %f885, %f880, %p212;
	abs.f32 	%f887, %f920;
	setp.gt.f32 	%p213, %f887, 0f4B800000;
	add.f32 	%f888, %f886, 0f3F800000;
	selp.f32 	%f889, %f888, %f883, %p213;
	mov.b32 	%r410, %f889;
	mov.b32 	%r409, %f129;
	// begin inline asm
	cvt.rn.f16x2.f32 %r73, %r410, %r409;
	// end inline asm
	mov.b32 	%r416, %f886;
	xor.b32  	%r413, %r416, -2147483648;
	mov.b32 	%r415, %f128;
	xor.b32  	%r412, %r415, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r74, %r413, %r412;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r75, %r416, %r415;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r76, %r410, %r409;
	// end inline asm
	shl.b32 	%r429, %r4, 4;
	and.b32  	%r77, %r429, 1920;
	or.b32  	%r430, %r128, %r2;
	or.b32  	%r78, %r430, %r126;
	and.b32  	%r431, %r125, 28;
	shl.b32 	%r432, %r4, 5;
	and.b32  	%r79, %r5, 2048;
	and.b32  	%r433, %r432, 96;
	or.b32  	%r80, %r431, %r433;
	and.b32  	%r81, %r1, 8;
	shr.u32 	%r434, %r2, 3;
	mul.lo.s32 	%r435, %r136, 65;
	shr.u32 	%r436, %r2, 1;
	bfe.u32 	%r437, %r2, 1, 1;
	bfe.u32 	%r438, %r2, 2, 1;
	shl.b32 	%r439, %r1, 4;
	or.b32  	%r440, %r439, %r81;
	shr.u32 	%r441, %r440, 2;
	and.b32  	%r442, %r441, 30;
	and.b32  	%r443, %r2, 1;
	mad.lo.s32 	%r444, %r434, 130, %r435;
	mad.lo.s32 	%r445, %r443, 1040, %r444;
	mad.lo.s32 	%r446, %r437, 520, %r445;
	mad.lo.s32 	%r447, %r438, 260, %r446;
	add.s32 	%r448, %r447, %r442;
	mul.wide.u32 	%rd63, %r448, 4;
	mov.u64 	%rd64, shmem;
	add.s64 	%rd5, %rd64, %rd63;
	add.s32 	%r449, %r448, 32;
	mul.wide.u32 	%rd65, %r449, 4;
	add.s64 	%rd6, %rd64, %rd65;
	add.s32 	%r450, %r448, 1;
	mul.wide.u32 	%rd66, %r450, 4;
	add.s64 	%rd7, %rd64, %rd66;
	add.s32 	%r451, %r448, 33;
	mul.wide.u32 	%rd67, %r451, 4;
	add.s64 	%rd8, %rd64, %rd67;
	mul.lo.s32 	%r452, %r133, 130;
	and.b32  	%r453, %r3, 32;
	mul.lo.s32 	%r454, %r132, 65;
	mul.lo.s32 	%r455, %r136, 520;
	mul.lo.s32 	%r456, %r135, 260;
	mul.lo.s32 	%r457, %r138, 1040;
	or.b32  	%r458, %r453, %r436;
	add.s32 	%r459, %r458, %r452;
	add.s32 	%r460, %r459, %r455;
	add.s32 	%r461, %r460, %r454;
	add.s32 	%r462, %r461, %r456;
	add.s32 	%r463, %r462, %r457;
	or.b32  	%r464, %r436, 8;
	add.s32 	%r465, %r452, %r453;
	add.s32 	%r466, %r465, %r455;
	add.s32 	%r467, %r466, %r464;
	add.s32 	%r468, %r467, %r454;
	add.s32 	%r469, %r468, %r456;
	add.s32 	%r470, %r469, %r457;
	or.b32  	%r471, %r436, 16;
	add.s32 	%r472, %r466, %r471;
	add.s32 	%r473, %r472, %r454;
	add.s32 	%r474, %r473, %r456;
	add.s32 	%r475, %r474, %r457;
	or.b32  	%r476, %r436, 24;
	add.s32 	%r477, %r466, %r476;
	add.s32 	%r478, %r477, %r454;
	add.s32 	%r479, %r478, %r456;
	add.s32 	%r480, %r479, %r457;
	shl.b32 	%r481, %r4, 3;
	and.b32  	%r482, %r481, 960;
	or.b32  	%r483, %r129, %r482;
	or.b32  	%r484, %r483, %r124;
	or.b32  	%r485, %r484, %r127;
	or.b32  	%r486, %r485, %r126;
	bfe.u32 	%r487, %r486, 1, 5;
	mul.lo.s32 	%r488, %r487, 65;
	add.s32 	%r489, %r458, %r488;
	or.b32  	%r490, %r464, %r453;
	add.s32 	%r491, %r490, %r488;
	or.b32  	%r492, %r471, %r453;
	add.s32 	%r493, %r492, %r488;
	or.b32  	%r494, %r476, %r453;
	add.s32 	%r495, %r494, %r488;
	shl.b32 	%r496, %r2, 1;
	or.b32  	%r497, %r136, %r496;
	mul.lo.s32 	%r498, %r497, 65;
	add.s32 	%r499, %r442, %r498;
	mul.wide.u32 	%rd68, %r499, 4;
	add.s64 	%rd9, %rd64, %rd68;
	cvt.u64.u32 	%rd69, %r442;
	cvt.u64.u32 	%rd70, %r498;
	add.s64 	%rd71, %rd70, %rd69;
	shl.b64 	%rd72, %rd71, 2;
	add.s64 	%rd10, %rd64, %rd72;
	shl.b32 	%r500, %r4, 15;
	and.b32  	%r82, %r500, 131072;
	shl.b32 	%r501, %r2, 9;
	or.b32  	%r502, %r482, %r137;
	shl.b32 	%r503, %r502, 7;
	or.b32  	%r83, %r503, %r501;
	mul.wide.u32 	%rd11, %r495, 4;
	mul.wide.u32 	%rd12, %r493, 4;
	mul.wide.u32 	%rd13, %r491, 4;
	mul.wide.u32 	%rd14, %r489, 4;
	mul.wide.u32 	%rd15, %r480, 4;
	mul.wide.u32 	%rd16, %r475, 4;
	mul.wide.u32 	%rd17, %r470, 4;
	mul.wide.u32 	%rd18, %r463, 4;
	mov.u32 	%r7792, 0;
	setp.eq.s32 	%p214, %r81, 0;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r7793, %r7792;
	mov.u32 	%r7794, %r7792;
	mov.u32 	%r7795, %r7792;
	mov.u32 	%r7796, %r7792;
	mov.u32 	%r7797, %r7792;
	mov.u32 	%r7798, %r7792;
	mov.u32 	%r7799, %r7792;
	mov.u32 	%r7800, %r7792;
	mov.u32 	%r7801, %r7792;
	mov.u32 	%r7802, %r7792;
	mov.u32 	%r7803, %r7792;
	mov.u32 	%r7790, %r7792;
	bra.uni 	LBB0_112;
LBB0_116:                               // %L29369
                                        //   in Loop: Header=BB0_112 Depth=1
	add.s32 	%r7790, %r96, 256;
	setp.gt.s32 	%p219, %r6, %r7790;
	setp.ne.s32 	%p220, %r96, 32512;
	and.pred  	%p221, %p220, %p219;
	@%p221 bra 	LBB0_112;
	bra.uni 	LBB0_117;
LBB0_112:                               // %L1260
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_113 Depth 2
	mov.u32 	%r96, %r7790;
	or.b32  	%r521, %r78, %r96;
	shl.b32 	%r522, %r521, 12;
	or.b32  	%r523, %r522, %r77;
	or.b32  	%r524, %r523, %r79;
	or.b32  	%r525, %r524, %r80;
	mul.wide.s32 	%rd74, %r525, 4;
	add.s64 	%rd75, %rd2, %rd74;
	ld.global.v4.u32 	{%r526, %r527, %r528, %r529}, [%rd75];
	selp.b32 	%r530, %r528, %r526, %p214;
	shfl.sync.bfly.b32	%r531, %r530, 8, 31, -1;
	selp.b32 	%r505, %r526, %r531, %p214;
	selp.b32 	%r506, %r531, %r528, %p214;
	selp.b32 	%r532, %r529, %r527, %p214;
	shfl.sync.bfly.b32	%r533, %r532, 8, 31, -1;
	selp.b32 	%r513, %r527, %r533, %p214;
	selp.b32 	%r514, %r533, %r529, %p214;
	mov.u32 	%r515, 21520;
	// begin inline asm
	prmt.b32 %r504, %r505, %r506, %r515;
	// end inline asm
	mov.u32 	%r519, 30258;
	// begin inline asm
	prmt.b32 %r508, %r505, %r506, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r512, %r513, %r514, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r516, %r513, %r514, %r519;
	// end inline asm
	st.shared.u32 	[%rd5], %r504;
	st.shared.u32 	[%rd6], %r508;
	st.shared.u32 	[%rd7], %r512;
	st.shared.u32 	[%rd8], %r516;
	bar.sync 	0;
	mov.u32 	%r7791, 256;
	mov.u64 	%rd86, %rd64;
LBB0_113:                               // %L4385
                                        //   Parent Loop BB0_112 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd76, %rd86, %rd18;
	ld.shared.u32 	%r7718, [%rd76];
	add.s64 	%rd77, %rd86, %rd17;
	ld.shared.u32 	%r7719, [%rd77];
	add.s64 	%rd78, %rd86, %rd16;
	ld.shared.u32 	%r7720, [%rd78];
	add.s64 	%rd79, %rd86, %rd15;
	ld.shared.u32 	%r7721, [%rd79];
	// begin inline asm
	mov.b32 %r539, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r550, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r538, %r7718, -2004318072;
	mov.u32 	%r537, 983055;
	// begin inline asm
	lop3.b32 %r536, %r537, %r538, %r539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r540, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r541, %r539, %r540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r544, %r536, %r541;
	// end inline asm
	mov.u32 	%r548, 15728880;
	// begin inline asm
	lop3.b32 %r547, %r548, %r538, %r550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r551, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r552, %r550, %r551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r555, %r547, %r552;
	// end inline asm
	shr.u32 	%r560, %r538, 8;
	// begin inline asm
	lop3.b32 %r558, %r537, %r560, %r539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r562, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r563, %r539, %r562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r566, %r558, %r563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r569, %r548, %r560, %r550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r573, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r574, %r550, %r573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r577, %r569, %r574;
	// end inline asm
	// begin inline asm
	mov.b32 %r585, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r596, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r584, %r7719, -2004318072;
	// begin inline asm
	lop3.b32 %r582, %r537, %r584, %r585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r586, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r587, %r585, %r586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r590, %r582, %r587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r593, %r548, %r584, %r596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r597, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r598, %r596, %r597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r601, %r593, %r598;
	// end inline asm
	shr.u32 	%r606, %r584, 8;
	// begin inline asm
	lop3.b32 %r604, %r537, %r606, %r585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r608, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r609, %r585, %r608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r612, %r604, %r609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r615, %r548, %r606, %r596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r619, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r620, %r596, %r619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r623, %r615, %r620;
	// end inline asm
	// begin inline asm
	mov.b32 %r631, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r642, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r630, %r7720, -2004318072;
	// begin inline asm
	lop3.b32 %r628, %r537, %r630, %r631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r632, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r633, %r631, %r632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r636, %r628, %r633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r639, %r548, %r630, %r642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r643, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r644, %r642, %r643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r647, %r639, %r644;
	// end inline asm
	shr.u32 	%r652, %r630, 8;
	// begin inline asm
	lop3.b32 %r650, %r537, %r652, %r631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r654, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r655, %r631, %r654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r658, %r650, %r655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r661, %r548, %r652, %r642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r665, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r666, %r642, %r665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r669, %r661, %r666;
	// end inline asm
	// begin inline asm
	mov.b32 %r677, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r688, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r676, %r7721, -2004318072;
	// begin inline asm
	lop3.b32 %r674, %r537, %r676, %r677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r678, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r679, %r677, %r678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r682, %r674, %r679;
	// end inline asm
	// begin inline asm
	lop3.b32 %r685, %r548, %r676, %r688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r689, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r690, %r688, %r689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r693, %r685, %r690;
	// end inline asm
	shr.u32 	%r698, %r676, 8;
	// begin inline asm
	lop3.b32 %r696, %r537, %r698, %r677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r700, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r701, %r677, %r700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r704, %r696, %r701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r707, %r548, %r698, %r688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r711, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r712, %r688, %r711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r715, %r707, %r712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r718, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r720, %r718, %r544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r723, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r725, %r723, %r555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r728, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r730, %r728, %r566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r733, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r735, %r733, %r577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r738, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r740, %r738, %r590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r743, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r745, %r743, %r601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r748, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r750, %r748, %r612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r753, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r755, %r753, %r623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r758, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r760, %r758, %r636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r763, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r765, %r763, %r647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r768, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r770, %r768, %r658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r773, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r775, %r773, %r669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r778, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r780, %r778, %r682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r783, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r785, %r783, %r693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r788, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r790, %r788, %r704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r793, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r795, %r793, %r715;
	// end inline asm
	// begin inline asm
	mov.b32 %r803, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r814, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r802, %r7792, -2004318072;
	// begin inline asm
	lop3.b32 %r800, %r537, %r802, %r803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r804, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r805, %r803, %r804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r808, %r800, %r805;
	// end inline asm
	// begin inline asm
	lop3.b32 %r811, %r548, %r802, %r814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r815, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r816, %r814, %r815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r819, %r811, %r816;
	// end inline asm
	shr.u32 	%r824, %r802, 8;
	// begin inline asm
	lop3.b32 %r822, %r537, %r824, %r803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r826, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r827, %r803, %r826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r830, %r822, %r827;
	// end inline asm
	// begin inline asm
	lop3.b32 %r833, %r548, %r824, %r814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r837, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r838, %r814, %r837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r841, %r833, %r838;
	// end inline asm
	// begin inline asm
	mov.b32 %r849, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r848, %r7793, -2004318072;
	// begin inline asm
	lop3.b32 %r846, %r537, %r848, %r849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r850, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r851, %r849, %r850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r854, %r846, %r851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r857, %r548, %r848, %r860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r861, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r862, %r860, %r861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r865, %r857, %r862;
	// end inline asm
	shr.u32 	%r870, %r848, 8;
	// begin inline asm
	lop3.b32 %r868, %r537, %r870, %r849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r872, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r873, %r849, %r872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r876, %r868, %r873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r879, %r548, %r870, %r860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r883, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r884, %r860, %r883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r887, %r879, %r884;
	// end inline asm
	// begin inline asm
	mov.b32 %r895, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r894, %r7794, -2004318072;
	// begin inline asm
	lop3.b32 %r892, %r537, %r894, %r895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r896, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r897, %r895, %r896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r900, %r892, %r897;
	// end inline asm
	// begin inline asm
	lop3.b32 %r903, %r548, %r894, %r906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r907, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r908, %r906, %r907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r911, %r903, %r908;
	// end inline asm
	shr.u32 	%r916, %r894, 8;
	// begin inline asm
	lop3.b32 %r914, %r537, %r916, %r895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r918, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r919, %r895, %r918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r922, %r914, %r919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r925, %r548, %r916, %r906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r929, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r930, %r906, %r929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r933, %r925, %r930;
	// end inline asm
	// begin inline asm
	mov.b32 %r941, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r940, %r7795, -2004318072;
	// begin inline asm
	lop3.b32 %r938, %r537, %r940, %r941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r942, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r943, %r941, %r942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r946, %r938, %r943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r949, %r548, %r940, %r952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r953, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r954, %r952, %r953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r957, %r949, %r954;
	// end inline asm
	shr.u32 	%r962, %r940, 8;
	// begin inline asm
	lop3.b32 %r960, %r537, %r962, %r941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r964, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r965, %r941, %r964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r968, %r960, %r965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r971, %r548, %r962, %r952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r975, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r976, %r952, %r975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r979, %r971, %r976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r982, %r197, %r808, %r720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r986, %r197, %r819, %r725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r990, %r197, %r830, %r730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r994, %r197, %r841, %r735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r998, %r197, %r854, %r740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1002, %r197, %r865, %r745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1006, %r197, %r876, %r750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1010, %r197, %r887, %r755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1014, %r197, %r900, %r760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1018, %r197, %r911, %r765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1022, %r197, %r922, %r770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1026, %r197, %r933, %r775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1030, %r197, %r946, %r780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1034, %r197, %r957, %r785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1038, %r197, %r968, %r790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1042, %r197, %r979, %r795;
	// end inline asm
	// begin inline asm
	mov.b32 %r1051, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1062, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1050, %r7796, -2004318072;
	// begin inline asm
	lop3.b32 %r1048, %r537, %r1050, %r1051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1052, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1053, %r1051, %r1052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1056, %r1048, %r1053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1059, %r548, %r1050, %r1062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1063, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1064, %r1062, %r1063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1067, %r1059, %r1064;
	// end inline asm
	shr.u32 	%r1072, %r1050, 8;
	// begin inline asm
	lop3.b32 %r1070, %r537, %r1072, %r1051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1074, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1075, %r1051, %r1074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1078, %r1070, %r1075;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1081, %r548, %r1072, %r1062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1085, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1086, %r1062, %r1085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1089, %r1081, %r1086;
	// end inline asm
	// begin inline asm
	mov.b32 %r1097, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1108, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1096, %r7797, -2004318072;
	// begin inline asm
	lop3.b32 %r1094, %r537, %r1096, %r1097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1098, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1099, %r1097, %r1098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1102, %r1094, %r1099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1105, %r548, %r1096, %r1108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1109, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1110, %r1108, %r1109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1113, %r1105, %r1110;
	// end inline asm
	shr.u32 	%r1118, %r1096, 8;
	// begin inline asm
	lop3.b32 %r1116, %r537, %r1118, %r1097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1120, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1121, %r1097, %r1120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1124, %r1116, %r1121;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1127, %r548, %r1118, %r1108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1131, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1132, %r1108, %r1131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1135, %r1127, %r1132;
	// end inline asm
	// begin inline asm
	mov.b32 %r1143, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1154, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1142, %r7798, -2004318072;
	// begin inline asm
	lop3.b32 %r1140, %r537, %r1142, %r1143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1144, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1145, %r1143, %r1144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1148, %r1140, %r1145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1151, %r548, %r1142, %r1154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1155, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1156, %r1154, %r1155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1159, %r1151, %r1156;
	// end inline asm
	shr.u32 	%r1164, %r1142, 8;
	// begin inline asm
	lop3.b32 %r1162, %r537, %r1164, %r1143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1166, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1167, %r1143, %r1166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1170, %r1162, %r1167;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1173, %r548, %r1164, %r1154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1177, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1178, %r1154, %r1177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1181, %r1173, %r1178;
	// end inline asm
	// begin inline asm
	mov.b32 %r1189, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1200, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1188, %r7799, -2004318072;
	// begin inline asm
	lop3.b32 %r1186, %r537, %r1188, %r1189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1190, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1191, %r1189, %r1190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1194, %r1186, %r1191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1197, %r548, %r1188, %r1200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1201, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1202, %r1200, %r1201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1205, %r1197, %r1202;
	// end inline asm
	shr.u32 	%r1210, %r1188, 8;
	// begin inline asm
	lop3.b32 %r1208, %r537, %r1210, %r1189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1212, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1213, %r1189, %r1212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1216, %r1208, %r1213;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1219, %r548, %r1210, %r1200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1223, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1224, %r1200, %r1223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1227, %r1219, %r1224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1230, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1232, %r1230, %r1056, %r982;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1236, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1238, %r1236, %r1067, %r986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1242, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1244, %r1242, %r1078, %r990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1248, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1250, %r1248, %r1089, %r994;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1254, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1256, %r1254, %r1102, %r998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1260, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1262, %r1260, %r1113, %r1002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1266, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1268, %r1266, %r1124, %r1006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1272, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1274, %r1272, %r1135, %r1010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1278, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1280, %r1278, %r1148, %r1014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1284, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1286, %r1284, %r1159, %r1018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1290, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1292, %r1290, %r1170, %r1022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1296, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1298, %r1296, %r1181, %r1026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1302, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1304, %r1302, %r1194, %r1030;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1308, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1310, %r1308, %r1205, %r1034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1314, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1316, %r1314, %r1216, %r1038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1320, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1322, %r1320, %r1227, %r1042;
	// end inline asm
	// begin inline asm
	mov.b32 %r1331, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1342, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1330, %r7800, -2004318072;
	// begin inline asm
	lop3.b32 %r1328, %r537, %r1330, %r1331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1332, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1333, %r1331, %r1332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1336, %r1328, %r1333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1339, %r548, %r1330, %r1342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1343, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1344, %r1342, %r1343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1347, %r1339, %r1344;
	// end inline asm
	shr.u32 	%r1352, %r1330, 8;
	// begin inline asm
	lop3.b32 %r1350, %r537, %r1352, %r1331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1354, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1355, %r1331, %r1354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1358, %r1350, %r1355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1361, %r548, %r1352, %r1342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1365, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1366, %r1342, %r1365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1369, %r1361, %r1366;
	// end inline asm
	// begin inline asm
	mov.b32 %r1377, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1388, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1376, %r7801, -2004318072;
	// begin inline asm
	lop3.b32 %r1374, %r537, %r1376, %r1377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1378, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1379, %r1377, %r1378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1382, %r1374, %r1379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1385, %r548, %r1376, %r1388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1389, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1390, %r1388, %r1389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1393, %r1385, %r1390;
	// end inline asm
	shr.u32 	%r1398, %r1376, 8;
	// begin inline asm
	lop3.b32 %r1396, %r537, %r1398, %r1377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1400, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1401, %r1377, %r1400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1404, %r1396, %r1401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1407, %r548, %r1398, %r1388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1411, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1412, %r1388, %r1411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1415, %r1407, %r1412;
	// end inline asm
	// begin inline asm
	mov.b32 %r1423, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1434, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1422, %r7802, -2004318072;
	// begin inline asm
	lop3.b32 %r1420, %r537, %r1422, %r1423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1424, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1425, %r1423, %r1424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1428, %r1420, %r1425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1431, %r548, %r1422, %r1434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1435, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1436, %r1434, %r1435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1439, %r1431, %r1436;
	// end inline asm
	shr.u32 	%r1444, %r1422, 8;
	// begin inline asm
	lop3.b32 %r1442, %r537, %r1444, %r1423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1446, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1447, %r1423, %r1446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1450, %r1442, %r1447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1453, %r548, %r1444, %r1434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1457, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1458, %r1434, %r1457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1461, %r1453, %r1458;
	// end inline asm
	// begin inline asm
	mov.b32 %r1469, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1480, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1468, %r7803, -2004318072;
	// begin inline asm
	lop3.b32 %r1466, %r537, %r1468, %r1469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1470, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1471, %r1469, %r1470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1474, %r1466, %r1471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1477, %r548, %r1468, %r1480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1481, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1482, %r1480, %r1481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1485, %r1477, %r1482;
	// end inline asm
	shr.u32 	%r1490, %r1468, 8;
	// begin inline asm
	lop3.b32 %r1488, %r537, %r1490, %r1469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1492, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1493, %r1469, %r1492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1496, %r1488, %r1493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1499, %r548, %r1490, %r1480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1503, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1504, %r1480, %r1503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1507, %r1499, %r1504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1581, %r233, %r1336, %r1232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1578, %r233, %r1347, %r1238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1590, %r233, %r1358, %r1244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1587, %r233, %r1369, %r1250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1599, %r233, %r1382, %r1256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1596, %r233, %r1393, %r1262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1608, %r233, %r1404, %r1268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1605, %r233, %r1415, %r1274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1617, %r233, %r1428, %r1280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1614, %r233, %r1439, %r1286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1626, %r233, %r1450, %r1292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1623, %r233, %r1461, %r1298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1635, %r233, %r1474, %r1304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1632, %r233, %r1485, %r1310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1644, %r233, %r1496, %r1316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1641, %r233, %r1507, %r1322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1574, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1576, %r1574, %r1578;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1579, %r279, %r1581, %r1576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1583, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1585, %r1583, %r1587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1588, %r279, %r1590, %r1585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1592, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1594, %r1592, %r1596;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1597, %r279, %r1599, %r1594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1601, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1603, %r1601, %r1605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1606, %r279, %r1608, %r1603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1610, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1612, %r1610, %r1614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1615, %r279, %r1617, %r1612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1619, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1621, %r1619, %r1623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1624, %r279, %r1626, %r1621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1628, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1630, %r1628, %r1632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1633, %r279, %r1635, %r1630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1637, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1639, %r1637, %r1641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1642, %r279, %r1644, %r1639;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1646, %r282, %r1581;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1649, %r279, %r1578, %r1646;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1653, %r282, %r1590;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1656, %r279, %r1587, %r1653;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1660, %r282, %r1599;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1663, %r279, %r1596, %r1660;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1667, %r282, %r1608;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1670, %r279, %r1605, %r1667;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1674, %r282, %r1617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1677, %r279, %r1614, %r1674;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1681, %r282, %r1626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1684, %r279, %r1623, %r1681;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1688, %r282, %r1635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1691, %r279, %r1632, %r1688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1695, %r282, %r1644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1698, %r279, %r1641, %r1695;
	// end inline asm
	mov.u32 	%r7377, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1789, %r1786}, {%r321, %r327, %r324, %r330}, {%r1579, %r1649}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1798, %r1795}, {%r321, %r327, %r324, %r330}, {%r1588, %r1656}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1807, %r1804}, {%r321, %r327, %r324, %r330}, {%r1597, %r1663}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1816, %r1813}, {%r321, %r327, %r324, %r330}, {%r1606, %r1670}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1825, %r1822}, {%r321, %r327, %r324, %r330}, {%r1615, %r1677}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1834, %r1831}, {%r321, %r327, %r324, %r330}, {%r1624, %r1684}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1843, %r1840}, {%r321, %r327, %r324, %r330}, {%r1633, %r1691}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1852, %r1849}, {%r321, %r327, %r324, %r330}, {%r1642, %r1698}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1782, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1784, %r1782, %r1786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r365, %r1789, %r1784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1791, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1793, %r1791, %r1795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1796, %r365, %r1798, %r1793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1800, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1802, %r1800, %r1804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1805, %r365, %r1807, %r1802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1809, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1811, %r1809, %r1813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1814, %r365, %r1816, %r1811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1818, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1820, %r1818, %r1822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1823, %r365, %r1825, %r1820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1827, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1829, %r1827, %r1831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1832, %r365, %r1834, %r1829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1836, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1838, %r1836, %r1840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1841, %r365, %r1843, %r1838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1845, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1847, %r1845, %r1849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1850, %r365, %r1852, %r1847;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1854, %r368, %r1789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1857, %r365, %r1786, %r1854;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1861, %r368, %r1798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1864, %r365, %r1795, %r1861;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1868, %r368, %r1807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1871, %r365, %r1804, %r1868;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1875, %r368, %r1816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1878, %r365, %r1813, %r1875;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1882, %r368, %r1825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1885, %r365, %r1822, %r1882;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1889, %r368, %r1834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1892, %r365, %r1831, %r1889;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1896, %r368, %r1843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1899, %r365, %r1840, %r1896;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1903, %r368, %r1852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1906, %r365, %r1849, %r1903;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1910, %r1911}, {%r73, %r75, %r74, %r76}, {%r1787, %r1857}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1920, %r1921}, {%r73, %r75, %r74, %r76}, {%r1796, %r1864}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1930, %r1931}, {%r73, %r75, %r74, %r76}, {%r1805, %r1871}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1940, %r1941}, {%r73, %r75, %r74, %r76}, {%r1814, %r1878}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1950, %r1951}, {%r73, %r75, %r74, %r76}, {%r1823, %r1885}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1960, %r1961}, {%r73, %r75, %r74, %r76}, {%r1832, %r1892}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1970, %r1971}, {%r73, %r75, %r74, %r76}, {%r1841, %r1899}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1980, %r1981}, {%r73, %r75, %r74, %r76}, {%r1850, %r1906}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1990, %r130, %r1910;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1993, %r130, %r1911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1996, %r130, %r1920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1999, %r130, %r1921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2002, %r130, %r1930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2005, %r130, %r1931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2008, %r130, %r1940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2011, %r130, %r1941;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2014, %r130, %r1950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2017, %r130, %r1951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2020, %r130, %r1960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2023, %r130, %r1961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2026, %r130, %r1970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2029, %r130, %r1971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2032, %r130, %r1980;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2035, %r130, %r1981;
	// end inline asm
	// begin inline asm
	mov.b32 %r2038, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2039, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2040, %r1990, %r2038;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2043, %r2040, %r2039;
	// end inline asm
	// begin inline asm
	mov.b32 %r2046, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2047, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2048, %r1993, %r2046;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2051, %r2048, %r2047;
	// end inline asm
	// begin inline asm
	mov.b32 %r2054, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2055, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2056, %r1996, %r2054;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2059, %r2056, %r2055;
	// end inline asm
	// begin inline asm
	mov.b32 %r2062, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2063, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2064, %r1999, %r2062;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2067, %r2064, %r2063;
	// end inline asm
	// begin inline asm
	mov.b32 %r2070, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2071, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2072, %r2002, %r2070;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2075, %r2072, %r2071;
	// end inline asm
	// begin inline asm
	mov.b32 %r2078, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2079, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2080, %r2005, %r2078;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2083, %r2080, %r2079;
	// end inline asm
	// begin inline asm
	mov.b32 %r2086, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2087, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2088, %r2008, %r2086;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2091, %r2088, %r2087;
	// end inline asm
	// begin inline asm
	mov.b32 %r2094, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2095, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2096, %r2011, %r2094;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2099, %r2096, %r2095;
	// end inline asm
	// begin inline asm
	mov.b32 %r2102, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2103, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2104, %r2014, %r2102;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2107, %r2104, %r2103;
	// end inline asm
	// begin inline asm
	mov.b32 %r2110, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2111, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2112, %r2017, %r2110;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2115, %r2112, %r2111;
	// end inline asm
	// begin inline asm
	mov.b32 %r2118, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2119, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2120, %r2020, %r2118;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2123, %r2120, %r2119;
	// end inline asm
	// begin inline asm
	mov.b32 %r2126, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2127, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2128, %r2023, %r2126;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2131, %r2128, %r2127;
	// end inline asm
	// begin inline asm
	mov.b32 %r2134, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2135, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2136, %r2026, %r2134;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2139, %r2136, %r2135;
	// end inline asm
	// begin inline asm
	mov.b32 %r2142, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2143, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2144, %r2029, %r2142;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2147, %r2144, %r2143;
	// end inline asm
	// begin inline asm
	mov.b32 %r2150, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2151, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2152, %r2032, %r2150;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2155, %r2152, %r2151;
	// end inline asm
	// begin inline asm
	mov.b32 %r2158, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2159, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2160, %r2035, %r2158;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2163, %r2160, %r2159;
	// end inline asm
	// begin inline asm
	mov.b32 %r2169, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2167, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2168, %r2169, %r2167;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2171, %r2043, %r2168;
	// end inline asm
	// begin inline asm
	mov.b32 %r2174, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2175, %r2169, %r2174;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2178, %r2051, %r2175;
	// end inline asm
	// begin inline asm
	mov.b32 %r2181, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2182, %r2169, %r2181;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2185, %r2059, %r2182;
	// end inline asm
	// begin inline asm
	mov.b32 %r2188, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2189, %r2169, %r2188;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2192, %r2067, %r2189;
	// end inline asm
	mov.u32 	%r2198, 25152;
	// begin inline asm
	prmt.b32 %r2195, %r2171, %r2185, %r2198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2199, %r2178, %r2192, %r2198;
	// end inline asm
	shl.b32 	%r2206, %r2199, 4;
	mov.u32 	%r2204, 252645135;
	// begin inline asm
	lop3.b32 %r2203, %r2204, %r2195, %r2206, 202;
	// end inline asm
	xor.b32  	%r7722, %r2203, -2004318072;
	// begin inline asm
	mov.b32 %r2210, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2208, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2209, %r2210, %r2208;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2212, %r2075, %r2209;
	// end inline asm
	// begin inline asm
	mov.b32 %r2215, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2216, %r2210, %r2215;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2219, %r2083, %r2216;
	// end inline asm
	// begin inline asm
	mov.b32 %r2222, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2223, %r2210, %r2222;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2226, %r2091, %r2223;
	// end inline asm
	// begin inline asm
	mov.b32 %r2229, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2230, %r2210, %r2229;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2233, %r2099, %r2230;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2236, %r2212, %r2226, %r2198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2240, %r2219, %r2233, %r2198;
	// end inline asm
	shl.b32 	%r2247, %r2240, 4;
	// begin inline asm
	lop3.b32 %r2244, %r2204, %r2236, %r2247, 202;
	// end inline asm
	xor.b32  	%r7723, %r2244, -2004318072;
	// begin inline asm
	mov.b32 %r2251, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2249, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2250, %r2251, %r2249;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2253, %r2107, %r2250;
	// end inline asm
	// begin inline asm
	mov.b32 %r2256, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2257, %r2251, %r2256;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2260, %r2115, %r2257;
	// end inline asm
	// begin inline asm
	mov.b32 %r2263, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2264, %r2251, %r2263;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2267, %r2123, %r2264;
	// end inline asm
	// begin inline asm
	mov.b32 %r2270, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2271, %r2251, %r2270;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2274, %r2131, %r2271;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2277, %r2253, %r2267, %r2198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2281, %r2260, %r2274, %r2198;
	// end inline asm
	shl.b32 	%r2288, %r2281, 4;
	// begin inline asm
	lop3.b32 %r2285, %r2204, %r2277, %r2288, 202;
	// end inline asm
	xor.b32  	%r7724, %r2285, -2004318072;
	// begin inline asm
	mov.b32 %r2292, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2290, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2291, %r2292, %r2290;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2294, %r2139, %r2291;
	// end inline asm
	// begin inline asm
	mov.b32 %r2297, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2298, %r2292, %r2297;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2301, %r2147, %r2298;
	// end inline asm
	// begin inline asm
	mov.b32 %r2304, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2305, %r2292, %r2304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2308, %r2155, %r2305;
	// end inline asm
	// begin inline asm
	mov.b32 %r2311, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2312, %r2292, %r2311;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2315, %r2163, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2318, %r2294, %r2308, %r2198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2322, %r2301, %r2315, %r2198;
	// end inline asm
	shl.b32 	%r2329, %r2322, 4;
	// begin inline asm
	lop3.b32 %r2326, %r2204, %r2318, %r2329, 202;
	// end inline asm
	xor.b32  	%r7725, %r2326, -2004318072;
	add.s64 	%rd80, %rd86, %rd14;
	st.shared.u32 	[%rd80], %r7722;
	add.s64 	%rd81, %rd86, %rd13;
	st.shared.u32 	[%rd81], %r7723;
	add.s64 	%rd82, %rd86, %rd12;
	st.shared.u32 	[%rd82], %r7724;
	add.s64 	%rd83, %rd86, %rd11;
	st.shared.u32 	[%rd83], %r7725;
	ld.shared.u32 	%r7792, [%rd76];
	ld.shared.u32 	%r7793, [%rd77];
	ld.shared.u32 	%r7794, [%rd78];
	ld.shared.u32 	%r7795, [%rd79];
	// begin inline asm
	mov.b32 %r2335, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2346, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2334, %r7792, -2004318072;
	// begin inline asm
	lop3.b32 %r2332, %r537, %r2334, %r2335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2336, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2337, %r2335, %r2336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2340, %r2332, %r2337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2343, %r548, %r2334, %r2346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2347, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2348, %r2346, %r2347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2351, %r2343, %r2348;
	// end inline asm
	shr.u32 	%r2356, %r2334, 8;
	// begin inline asm
	lop3.b32 %r2354, %r537, %r2356, %r2335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2358, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2359, %r2335, %r2358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2362, %r2354, %r2359;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2365, %r548, %r2356, %r2346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2369, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2370, %r2346, %r2369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2373, %r2365, %r2370;
	// end inline asm
	// begin inline asm
	mov.b32 %r2381, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2392, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2380, %r7793, -2004318072;
	// begin inline asm
	lop3.b32 %r2378, %r537, %r2380, %r2381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2382, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2383, %r2381, %r2382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2386, %r2378, %r2383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2389, %r548, %r2380, %r2392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2393, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2394, %r2392, %r2393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2397, %r2389, %r2394;
	// end inline asm
	shr.u32 	%r2402, %r2380, 8;
	// begin inline asm
	lop3.b32 %r2400, %r537, %r2402, %r2381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2404, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2405, %r2381, %r2404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2408, %r2400, %r2405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2411, %r548, %r2402, %r2392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2415, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2416, %r2392, %r2415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2419, %r2411, %r2416;
	// end inline asm
	// begin inline asm
	mov.b32 %r2427, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2438, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2426, %r7794, -2004318072;
	// begin inline asm
	lop3.b32 %r2424, %r537, %r2426, %r2427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2428, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2429, %r2427, %r2428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2432, %r2424, %r2429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2435, %r548, %r2426, %r2438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2439, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2440, %r2438, %r2439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2443, %r2435, %r2440;
	// end inline asm
	shr.u32 	%r2448, %r2426, 8;
	// begin inline asm
	lop3.b32 %r2446, %r537, %r2448, %r2427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2450, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2451, %r2427, %r2450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2454, %r2446, %r2451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2457, %r548, %r2448, %r2438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2461, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2462, %r2438, %r2461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2465, %r2457, %r2462;
	// end inline asm
	// begin inline asm
	mov.b32 %r2473, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2484, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2472, %r7795, -2004318072;
	// begin inline asm
	lop3.b32 %r2470, %r537, %r2472, %r2473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2474, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2475, %r2473, %r2474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2478, %r2470, %r2475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2481, %r548, %r2472, %r2484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2485, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2486, %r2484, %r2485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2489, %r2481, %r2486;
	// end inline asm
	shr.u32 	%r2494, %r2472, 8;
	// begin inline asm
	lop3.b32 %r2492, %r537, %r2494, %r2473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2496, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2497, %r2473, %r2496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2500, %r2492, %r2497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2503, %r548, %r2494, %r2484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2507, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2508, %r2484, %r2507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2511, %r2503, %r2508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2514, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2516, %r2514, %r2340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2519, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2521, %r2519, %r2351;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2524, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2526, %r2524, %r2362;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2529, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2531, %r2529, %r2373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2534, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2536, %r2534, %r2386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2539, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2541, %r2539, %r2397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2544, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2546, %r2544, %r2408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2549, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2551, %r2549, %r2419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2554, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2556, %r2554, %r2432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2559, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2561, %r2559, %r2443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2564, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2566, %r2564, %r2454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2569, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2571, %r2569, %r2465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2574, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2576, %r2574, %r2478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2579, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2581, %r2579, %r2489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2584, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2586, %r2584, %r2500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2589, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2591, %r2589, %r2511;
	// end inline asm
	// begin inline asm
	mov.b32 %r2599, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2610, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2596, %r537, %r1050, %r2599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2600, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2601, %r2599, %r2600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2604, %r2596, %r2601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2607, %r548, %r1050, %r2610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2611, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2612, %r2610, %r2611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2615, %r2607, %r2612;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2618, %r537, %r1072, %r2599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2622, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2623, %r2599, %r2622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2626, %r2618, %r2623;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2629, %r548, %r1072, %r2610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2633, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2634, %r2610, %r2633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2637, %r2629, %r2634;
	// end inline asm
	// begin inline asm
	mov.b32 %r2645, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2656, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2642, %r537, %r1096, %r2645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2646, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2647, %r2645, %r2646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2650, %r2642, %r2647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2653, %r548, %r1096, %r2656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2657, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2658, %r2656, %r2657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2661, %r2653, %r2658;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2664, %r537, %r1118, %r2645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2668, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2669, %r2645, %r2668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2672, %r2664, %r2669;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2675, %r548, %r1118, %r2656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2679, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2680, %r2656, %r2679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2683, %r2675, %r2680;
	// end inline asm
	// begin inline asm
	mov.b32 %r2691, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2702, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2688, %r537, %r1142, %r2691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2692, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2693, %r2691, %r2692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2696, %r2688, %r2693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2699, %r548, %r1142, %r2702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2703, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2704, %r2702, %r2703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2707, %r2699, %r2704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2710, %r537, %r1164, %r2691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2714, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2715, %r2691, %r2714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2718, %r2710, %r2715;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2721, %r548, %r1164, %r2702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2725, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2726, %r2702, %r2725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2729, %r2721, %r2726;
	// end inline asm
	// begin inline asm
	mov.b32 %r2737, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2748, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2734, %r537, %r1188, %r2737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2738, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2739, %r2737, %r2738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2742, %r2734, %r2739;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2745, %r548, %r1188, %r2748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2749, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2750, %r2748, %r2749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2753, %r2745, %r2750;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2756, %r537, %r1210, %r2737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2760, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2761, %r2737, %r2760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2764, %r2756, %r2761;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2767, %r548, %r1210, %r2748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2771, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2772, %r2748, %r2771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2775, %r2767, %r2772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2778, %r197, %r2604, %r2516;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2782, %r197, %r2615, %r2521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2786, %r197, %r2626, %r2526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2790, %r197, %r2637, %r2531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2794, %r197, %r2650, %r2536;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2798, %r197, %r2661, %r2541;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2802, %r197, %r2672, %r2546;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2806, %r197, %r2683, %r2551;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2810, %r197, %r2696, %r2556;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2814, %r197, %r2707, %r2561;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2818, %r197, %r2718, %r2566;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2822, %r197, %r2729, %r2571;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2826, %r197, %r2742, %r2576;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2830, %r197, %r2753, %r2581;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2834, %r197, %r2764, %r2586;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2838, %r197, %r2775, %r2591;
	// end inline asm
	// begin inline asm
	mov.b32 %r2847, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2858, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2844, %r537, %r1330, %r2847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2848, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2849, %r2847, %r2848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2852, %r2844, %r2849;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2855, %r548, %r1330, %r2858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2859, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2860, %r2858, %r2859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2863, %r2855, %r2860;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2866, %r537, %r1352, %r2847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2870, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2871, %r2847, %r2870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2874, %r2866, %r2871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2877, %r548, %r1352, %r2858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2881, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2882, %r2858, %r2881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2885, %r2877, %r2882;
	// end inline asm
	// begin inline asm
	mov.b32 %r2893, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2904, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2890, %r537, %r1376, %r2893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2894, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2895, %r2893, %r2894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2898, %r2890, %r2895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2901, %r548, %r1376, %r2904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2905, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2906, %r2904, %r2905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2909, %r2901, %r2906;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2912, %r537, %r1398, %r2893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2916, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2917, %r2893, %r2916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2920, %r2912, %r2917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2923, %r548, %r1398, %r2904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2927, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2928, %r2904, %r2927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2931, %r2923, %r2928;
	// end inline asm
	// begin inline asm
	mov.b32 %r2939, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2950, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2936, %r537, %r1422, %r2939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2940, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2941, %r2939, %r2940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2944, %r2936, %r2941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2947, %r548, %r1422, %r2950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2951, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2952, %r2950, %r2951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2955, %r2947, %r2952;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2958, %r537, %r1444, %r2939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2962, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2963, %r2939, %r2962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2966, %r2958, %r2963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2969, %r548, %r1444, %r2950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2973, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2974, %r2950, %r2973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2977, %r2969, %r2974;
	// end inline asm
	// begin inline asm
	mov.b32 %r2985, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2996, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2982, %r537, %r1468, %r2985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2986, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2987, %r2985, %r2986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2990, %r2982, %r2987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2993, %r548, %r1468, %r2996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2997, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2998, %r2996, %r2997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3001, %r2993, %r2998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3004, %r537, %r1490, %r2985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3008, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3009, %r2985, %r3008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3012, %r3004, %r3009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3015, %r548, %r1490, %r2996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3019, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3020, %r2996, %r3019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3023, %r3015, %r3020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3026, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3028, %r3026, %r2852, %r2778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3032, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3034, %r3032, %r2863, %r2782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3038, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3040, %r3038, %r2874, %r2786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3044, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3046, %r3044, %r2885, %r2790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3050, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3052, %r3050, %r2898, %r2794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3056, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3058, %r3056, %r2909, %r2798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3062, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3064, %r3062, %r2920, %r2802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3068, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3070, %r3068, %r2931, %r2806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3074, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3076, %r3074, %r2944, %r2810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3080, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3082, %r3080, %r2955, %r2814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3086, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3088, %r3086, %r2966, %r2818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3092, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3094, %r3092, %r2977, %r2822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3098, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3100, %r3098, %r2990, %r2826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3104, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3106, %r3104, %r3001, %r2830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3110, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3112, %r3110, %r3012, %r2834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3116, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3118, %r3116, %r3023, %r2838;
	// end inline asm
	// begin inline asm
	mov.b32 %r3127, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3138, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3124, %r537, %r538, %r3127, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3128, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3129, %r3127, %r3128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3132, %r3124, %r3129;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3135, %r548, %r538, %r3138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3139, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3140, %r3138, %r3139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3143, %r3135, %r3140;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3146, %r537, %r560, %r3127, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3150, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3151, %r3127, %r3150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3154, %r3146, %r3151;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3157, %r548, %r560, %r3138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3161, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3162, %r3138, %r3161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3165, %r3157, %r3162;
	// end inline asm
	// begin inline asm
	mov.b32 %r3173, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3184, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3170, %r537, %r584, %r3173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3174, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3175, %r3173, %r3174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3178, %r3170, %r3175;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3181, %r548, %r584, %r3184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3185, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3186, %r3184, %r3185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3189, %r3181, %r3186;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3192, %r537, %r606, %r3173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3196, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3197, %r3173, %r3196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3200, %r3192, %r3197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3203, %r548, %r606, %r3184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3207, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3208, %r3184, %r3207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3211, %r3203, %r3208;
	// end inline asm
	// begin inline asm
	mov.b32 %r3219, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3230, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3216, %r537, %r630, %r3219, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3220, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3221, %r3219, %r3220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3224, %r3216, %r3221;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3227, %r548, %r630, %r3230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3231, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3232, %r3230, %r3231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3235, %r3227, %r3232;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3238, %r537, %r652, %r3219, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3242, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3243, %r3219, %r3242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3246, %r3238, %r3243;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3249, %r548, %r652, %r3230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3253, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3254, %r3230, %r3253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3257, %r3249, %r3254;
	// end inline asm
	// begin inline asm
	mov.b32 %r3265, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3276, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3262, %r537, %r676, %r3265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3266, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3267, %r3265, %r3266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3270, %r3262, %r3267;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3273, %r548, %r676, %r3276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3277, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3278, %r3276, %r3277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3281, %r3273, %r3278;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3284, %r537, %r698, %r3265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3288, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3289, %r3265, %r3288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3292, %r3284, %r3289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3295, %r548, %r698, %r3276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3299, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3300, %r3276, %r3299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3303, %r3295, %r3300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3377, %r233, %r3132, %r3028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3374, %r233, %r3143, %r3034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3386, %r233, %r3154, %r3040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3383, %r233, %r3165, %r3046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3395, %r233, %r3178, %r3052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3392, %r233, %r3189, %r3058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3404, %r233, %r3200, %r3064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3401, %r233, %r3211, %r3070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3413, %r233, %r3224, %r3076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3410, %r233, %r3235, %r3082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3422, %r233, %r3246, %r3088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3419, %r233, %r3257, %r3094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3431, %r233, %r3270, %r3100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3428, %r233, %r3281, %r3106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3440, %r233, %r3292, %r3112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3437, %r233, %r3303, %r3118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3370, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3372, %r3370, %r3374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3375, %r279, %r3377, %r3372;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3379, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3381, %r3379, %r3383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3384, %r279, %r3386, %r3381;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3388, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3390, %r3388, %r3392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3393, %r279, %r3395, %r3390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3397, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3399, %r3397, %r3401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3402, %r279, %r3404, %r3399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3406, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3408, %r3406, %r3410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3411, %r279, %r3413, %r3408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3415, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3417, %r3415, %r3419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3420, %r279, %r3422, %r3417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3424, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3426, %r3424, %r3428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3429, %r279, %r3431, %r3426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3433, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3435, %r3433, %r3437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3438, %r279, %r3440, %r3435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3442, %r282, %r3377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3445, %r279, %r3374, %r3442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3449, %r282, %r3386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3452, %r279, %r3383, %r3449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3456, %r282, %r3395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3459, %r279, %r3392, %r3456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3463, %r282, %r3404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3466, %r279, %r3401, %r3463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3470, %r282, %r3413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3473, %r279, %r3410, %r3470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3477, %r282, %r3422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3480, %r279, %r3419, %r3477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3484, %r282, %r3431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3487, %r279, %r3428, %r3484;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3491, %r282, %r3440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3494, %r279, %r3437, %r3491;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3585, %r3582}, {%r321, %r327, %r324, %r330}, {%r3375, %r3445}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3594, %r3591}, {%r321, %r327, %r324, %r330}, {%r3384, %r3452}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3603, %r3600}, {%r321, %r327, %r324, %r330}, {%r3393, %r3459}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3612, %r3609}, {%r321, %r327, %r324, %r330}, {%r3402, %r3466}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3621, %r3618}, {%r321, %r327, %r324, %r330}, {%r3411, %r3473}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3630, %r3627}, {%r321, %r327, %r324, %r330}, {%r3420, %r3480}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3639, %r3636}, {%r321, %r327, %r324, %r330}, {%r3429, %r3487}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3648, %r3645}, {%r321, %r327, %r324, %r330}, {%r3438, %r3494}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3578, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3580, %r3578, %r3582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3583, %r365, %r3585, %r3580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3587, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3589, %r3587, %r3591;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3592, %r365, %r3594, %r3589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3596, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3598, %r3596, %r3600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3601, %r365, %r3603, %r3598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3605, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3607, %r3605, %r3609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3610, %r365, %r3612, %r3607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3614, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3616, %r3614, %r3618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3619, %r365, %r3621, %r3616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3623, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3625, %r3623, %r3627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3628, %r365, %r3630, %r3625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3632, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3634, %r3632, %r3636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3637, %r365, %r3639, %r3634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3641, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3643, %r3641, %r3645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3646, %r365, %r3648, %r3643;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3650, %r368, %r3585;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3653, %r365, %r3582, %r3650;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3657, %r368, %r3594;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3660, %r365, %r3591, %r3657;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3664, %r368, %r3603;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3667, %r365, %r3600, %r3664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3671, %r368, %r3612;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3674, %r365, %r3609, %r3671;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3678, %r368, %r3621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3681, %r365, %r3618, %r3678;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3685, %r368, %r3630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3688, %r365, %r3627, %r3685;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3692, %r368, %r3639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3695, %r365, %r3636, %r3692;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3699, %r368, %r3648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3702, %r365, %r3645, %r3699;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3706, %r3707}, {%r73, %r75, %r74, %r76}, {%r3583, %r3653}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3716, %r3717}, {%r73, %r75, %r74, %r76}, {%r3592, %r3660}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3726, %r3727}, {%r73, %r75, %r74, %r76}, {%r3601, %r3667}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3736, %r3737}, {%r73, %r75, %r74, %r76}, {%r3610, %r3674}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3746, %r3747}, {%r73, %r75, %r74, %r76}, {%r3619, %r3681}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3756, %r3757}, {%r73, %r75, %r74, %r76}, {%r3628, %r3688}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3766, %r3767}, {%r73, %r75, %r74, %r76}, {%r3637, %r3695}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3776, %r3777}, {%r73, %r75, %r74, %r76}, {%r3646, %r3702}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3786, %r130, %r3706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3789, %r130, %r3707;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3792, %r130, %r3716;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3795, %r130, %r3717;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3798, %r130, %r3726;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3801, %r130, %r3727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3804, %r130, %r3736;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3807, %r130, %r3737;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3810, %r130, %r3746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3813, %r130, %r3747;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3816, %r130, %r3756;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3819, %r130, %r3757;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3822, %r130, %r3766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3825, %r130, %r3767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3828, %r130, %r3776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3831, %r130, %r3777;
	// end inline asm
	// begin inline asm
	mov.b32 %r3834, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3835, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3836, %r3786, %r3834;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3839, %r3836, %r3835;
	// end inline asm
	// begin inline asm
	mov.b32 %r3842, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3843, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3844, %r3789, %r3842;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3847, %r3844, %r3843;
	// end inline asm
	// begin inline asm
	mov.b32 %r3850, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3851, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3852, %r3792, %r3850;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3855, %r3852, %r3851;
	// end inline asm
	// begin inline asm
	mov.b32 %r3858, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3859, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3860, %r3795, %r3858;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3863, %r3860, %r3859;
	// end inline asm
	// begin inline asm
	mov.b32 %r3866, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3867, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3868, %r3798, %r3866;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3871, %r3868, %r3867;
	// end inline asm
	// begin inline asm
	mov.b32 %r3874, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3875, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3876, %r3801, %r3874;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3879, %r3876, %r3875;
	// end inline asm
	// begin inline asm
	mov.b32 %r3882, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3883, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3884, %r3804, %r3882;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3887, %r3884, %r3883;
	// end inline asm
	// begin inline asm
	mov.b32 %r3890, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3891, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3892, %r3807, %r3890;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3895, %r3892, %r3891;
	// end inline asm
	// begin inline asm
	mov.b32 %r3898, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3899, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3900, %r3810, %r3898;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3903, %r3900, %r3899;
	// end inline asm
	// begin inline asm
	mov.b32 %r3906, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3907, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3908, %r3813, %r3906;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3911, %r3908, %r3907;
	// end inline asm
	// begin inline asm
	mov.b32 %r3914, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3915, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3916, %r3816, %r3914;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3919, %r3916, %r3915;
	// end inline asm
	// begin inline asm
	mov.b32 %r3922, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3923, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3924, %r3819, %r3922;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3927, %r3924, %r3923;
	// end inline asm
	// begin inline asm
	mov.b32 %r3930, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3931, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3932, %r3822, %r3930;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3935, %r3932, %r3931;
	// end inline asm
	// begin inline asm
	mov.b32 %r3938, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3939, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3940, %r3825, %r3938;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3943, %r3940, %r3939;
	// end inline asm
	// begin inline asm
	mov.b32 %r3946, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3947, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3948, %r3828, %r3946;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3951, %r3948, %r3947;
	// end inline asm
	// begin inline asm
	mov.b32 %r3954, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3955, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3956, %r3831, %r3954;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3959, %r3956, %r3955;
	// end inline asm
	// begin inline asm
	mov.b32 %r3965, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3963, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3964, %r3965, %r3963;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3967, %r3839, %r3964;
	// end inline asm
	// begin inline asm
	mov.b32 %r3970, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3971, %r3965, %r3970;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3974, %r3847, %r3971;
	// end inline asm
	// begin inline asm
	mov.b32 %r3977, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3978, %r3965, %r3977;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3981, %r3855, %r3978;
	// end inline asm
	// begin inline asm
	mov.b32 %r3984, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3985, %r3965, %r3984;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3988, %r3863, %r3985;
	// end inline asm
	// begin inline asm
	prmt.b32 %r3991, %r3967, %r3981, %r2198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r3995, %r3974, %r3988, %r2198;
	// end inline asm
	shl.b32 	%r4002, %r3995, 4;
	// begin inline asm
	lop3.b32 %r3999, %r2204, %r3991, %r4002, 202;
	// end inline asm
	xor.b32  	%r7726, %r3999, -2004318072;
	// begin inline asm
	mov.b32 %r4006, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4004, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4005, %r4006, %r4004;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4008, %r3871, %r4005;
	// end inline asm
	// begin inline asm
	mov.b32 %r4011, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4012, %r4006, %r4011;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4015, %r3879, %r4012;
	// end inline asm
	// begin inline asm
	mov.b32 %r4018, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4019, %r4006, %r4018;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4022, %r3887, %r4019;
	// end inline asm
	// begin inline asm
	mov.b32 %r4025, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4026, %r4006, %r4025;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4029, %r3895, %r4026;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4032, %r4008, %r4022, %r2198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4036, %r4015, %r4029, %r2198;
	// end inline asm
	shl.b32 	%r4043, %r4036, 4;
	// begin inline asm
	lop3.b32 %r4040, %r2204, %r4032, %r4043, 202;
	// end inline asm
	xor.b32  	%r7727, %r4040, -2004318072;
	// begin inline asm
	mov.b32 %r4047, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4045, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4046, %r4047, %r4045;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4049, %r3903, %r4046;
	// end inline asm
	// begin inline asm
	mov.b32 %r4052, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4053, %r4047, %r4052;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4056, %r3911, %r4053;
	// end inline asm
	// begin inline asm
	mov.b32 %r4059, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4060, %r4047, %r4059;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4063, %r3919, %r4060;
	// end inline asm
	// begin inline asm
	mov.b32 %r4066, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4067, %r4047, %r4066;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4070, %r3927, %r4067;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4073, %r4049, %r4063, %r2198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4077, %r4056, %r4070, %r2198;
	// end inline asm
	shl.b32 	%r4084, %r4077, 4;
	// begin inline asm
	lop3.b32 %r4081, %r2204, %r4073, %r4084, 202;
	// end inline asm
	xor.b32  	%r7728, %r4081, -2004318072;
	// begin inline asm
	mov.b32 %r4088, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4086, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4087, %r4088, %r4086;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4090, %r3935, %r4087;
	// end inline asm
	// begin inline asm
	mov.b32 %r4093, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4094, %r4088, %r4093;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4097, %r3943, %r4094;
	// end inline asm
	// begin inline asm
	mov.b32 %r4100, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4101, %r4088, %r4100;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4104, %r3951, %r4101;
	// end inline asm
	// begin inline asm
	mov.b32 %r4107, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4108, %r4088, %r4107;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4111, %r3959, %r4108;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4114, %r4090, %r4104, %r2198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4118, %r4097, %r4111, %r2198;
	// end inline asm
	shl.b32 	%r4125, %r4118, 4;
	// begin inline asm
	lop3.b32 %r4122, %r2204, %r4114, %r4125, 202;
	// end inline asm
	xor.b32  	%r7729, %r4122, -2004318072;
	st.shared.u32 	[%rd80], %r7726;
	st.shared.u32 	[%rd81], %r7727;
	st.shared.u32 	[%rd82], %r7728;
	st.shared.u32 	[%rd83], %r7729;
	ld.shared.u32 	%r7796, [%rd76];
	ld.shared.u32 	%r7797, [%rd77];
	ld.shared.u32 	%r7798, [%rd78];
	ld.shared.u32 	%r7799, [%rd79];
	// begin inline asm
	mov.b32 %r4131, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4142, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4130, %r7796, -2004318072;
	// begin inline asm
	lop3.b32 %r4128, %r537, %r4130, %r4131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4132, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4133, %r4131, %r4132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4136, %r4128, %r4133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4139, %r548, %r4130, %r4142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4143, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4144, %r4142, %r4143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4147, %r4139, %r4144;
	// end inline asm
	shr.u32 	%r4152, %r4130, 8;
	// begin inline asm
	lop3.b32 %r4150, %r537, %r4152, %r4131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4154, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4155, %r4131, %r4154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4158, %r4150, %r4155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4161, %r548, %r4152, %r4142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4165, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4166, %r4142, %r4165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4169, %r4161, %r4166;
	// end inline asm
	// begin inline asm
	mov.b32 %r4177, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4176, %r7797, -2004318072;
	// begin inline asm
	lop3.b32 %r4174, %r537, %r4176, %r4177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4178, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4179, %r4177, %r4178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4182, %r4174, %r4179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4185, %r548, %r4176, %r4188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4189, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4190, %r4188, %r4189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4193, %r4185, %r4190;
	// end inline asm
	shr.u32 	%r4198, %r4176, 8;
	// begin inline asm
	lop3.b32 %r4196, %r537, %r4198, %r4177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4200, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4201, %r4177, %r4200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4204, %r4196, %r4201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4207, %r548, %r4198, %r4188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4211, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4212, %r4188, %r4211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4215, %r4207, %r4212;
	// end inline asm
	// begin inline asm
	mov.b32 %r4223, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4234, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4222, %r7798, -2004318072;
	// begin inline asm
	lop3.b32 %r4220, %r537, %r4222, %r4223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4225, %r4223, %r4224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4228, %r4220, %r4225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4231, %r548, %r4222, %r4234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4236, %r4234, %r4235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4239, %r4231, %r4236;
	// end inline asm
	shr.u32 	%r4244, %r4222, 8;
	// begin inline asm
	lop3.b32 %r4242, %r537, %r4244, %r4223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4246, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4247, %r4223, %r4246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4250, %r4242, %r4247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4253, %r548, %r4244, %r4234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4257, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4258, %r4234, %r4257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4261, %r4253, %r4258;
	// end inline asm
	// begin inline asm
	mov.b32 %r4269, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4280, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4268, %r7799, -2004318072;
	// begin inline asm
	lop3.b32 %r4266, %r537, %r4268, %r4269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4270, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4271, %r4269, %r4270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4274, %r4266, %r4271;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4277, %r548, %r4268, %r4280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4281, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4282, %r4280, %r4281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4285, %r4277, %r4282;
	// end inline asm
	shr.u32 	%r4290, %r4268, 8;
	// begin inline asm
	lop3.b32 %r4288, %r537, %r4290, %r4269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4292, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4293, %r4269, %r4292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4296, %r4288, %r4293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4299, %r548, %r4290, %r4280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4303, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4304, %r4280, %r4303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4307, %r4299, %r4304;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4310, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4312, %r4310, %r4136;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4315, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4317, %r4315, %r4147;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4320, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4322, %r4320, %r4158;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4325, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4327, %r4325, %r4169;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4330, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4332, %r4330, %r4182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4335, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4337, %r4335, %r4193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4340, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4342, %r4340, %r4204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4345, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4347, %r4345, %r4215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4350, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4352, %r4350, %r4228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4355, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4357, %r4355, %r4239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4360, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4362, %r4360, %r4250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4365, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4367, %r4365, %r4261;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4370, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4372, %r4370, %r4274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4375, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4377, %r4375, %r4285;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4380, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4382, %r4380, %r4296;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4385, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4387, %r4385, %r4307;
	// end inline asm
	// begin inline asm
	mov.b32 %r4395, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4406, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4392, %r537, %r1330, %r4395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4396, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4397, %r4395, %r4396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4400, %r4392, %r4397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4403, %r548, %r1330, %r4406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4407, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4408, %r4406, %r4407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4411, %r4403, %r4408;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4414, %r537, %r1352, %r4395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4418, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4419, %r4395, %r4418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4422, %r4414, %r4419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4425, %r548, %r1352, %r4406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4429, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4430, %r4406, %r4429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4433, %r4425, %r4430;
	// end inline asm
	// begin inline asm
	mov.b32 %r4441, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4452, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4438, %r537, %r1376, %r4441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4442, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4443, %r4441, %r4442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4446, %r4438, %r4443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4449, %r548, %r1376, %r4452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4453, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4454, %r4452, %r4453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4457, %r4449, %r4454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4460, %r537, %r1398, %r4441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4464, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4465, %r4441, %r4464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4468, %r4460, %r4465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4471, %r548, %r1398, %r4452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4475, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4476, %r4452, %r4475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4479, %r4471, %r4476;
	// end inline asm
	// begin inline asm
	mov.b32 %r4487, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4498, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4484, %r537, %r1422, %r4487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4488, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4489, %r4487, %r4488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4492, %r4484, %r4489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4495, %r548, %r1422, %r4498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4499, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4500, %r4498, %r4499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4503, %r4495, %r4500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4506, %r537, %r1444, %r4487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4510, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4511, %r4487, %r4510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4514, %r4506, %r4511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4517, %r548, %r1444, %r4498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4521, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4522, %r4498, %r4521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4525, %r4517, %r4522;
	// end inline asm
	// begin inline asm
	mov.b32 %r4533, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4544, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4530, %r537, %r1468, %r4533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4534, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4535, %r4533, %r4534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4538, %r4530, %r4535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4541, %r548, %r1468, %r4544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4545, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4546, %r4544, %r4545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4549, %r4541, %r4546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4552, %r537, %r1490, %r4533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4556, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4557, %r4533, %r4556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4560, %r4552, %r4557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4563, %r548, %r1490, %r4544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4567, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4568, %r4544, %r4567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4571, %r4563, %r4568;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4574, %r197, %r4400, %r4312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4578, %r197, %r4411, %r4317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4582, %r197, %r4422, %r4322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4586, %r197, %r4433, %r4327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4590, %r197, %r4446, %r4332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4594, %r197, %r4457, %r4337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4598, %r197, %r4468, %r4342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4602, %r197, %r4479, %r4347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4606, %r197, %r4492, %r4352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4610, %r197, %r4503, %r4357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4614, %r197, %r4514, %r4362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4618, %r197, %r4525, %r4367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4622, %r197, %r4538, %r4372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4626, %r197, %r4549, %r4377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4630, %r197, %r4560, %r4382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4634, %r197, %r4571, %r4387;
	// end inline asm
	// begin inline asm
	mov.b32 %r4643, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4654, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4640, %r537, %r538, %r4643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4644, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4645, %r4643, %r4644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4648, %r4640, %r4645;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4651, %r548, %r538, %r4654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4655, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4656, %r4654, %r4655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4659, %r4651, %r4656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4662, %r537, %r560, %r4643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4666, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4667, %r4643, %r4666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4670, %r4662, %r4667;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4673, %r548, %r560, %r4654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4677, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4678, %r4654, %r4677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4681, %r4673, %r4678;
	// end inline asm
	// begin inline asm
	mov.b32 %r4689, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4700, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4686, %r537, %r584, %r4689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4690, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4691, %r4689, %r4690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4694, %r4686, %r4691;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4697, %r548, %r584, %r4700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4701, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4702, %r4700, %r4701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4705, %r4697, %r4702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4708, %r537, %r606, %r4689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4712, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4713, %r4689, %r4712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4716, %r4708, %r4713;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4719, %r548, %r606, %r4700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4723, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4724, %r4700, %r4723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4727, %r4719, %r4724;
	// end inline asm
	// begin inline asm
	mov.b32 %r4735, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4746, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4732, %r537, %r630, %r4735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4736, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4737, %r4735, %r4736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4740, %r4732, %r4737;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4743, %r548, %r630, %r4746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4747, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4748, %r4746, %r4747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4751, %r4743, %r4748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4754, %r537, %r652, %r4735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4758, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4759, %r4735, %r4758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4762, %r4754, %r4759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4765, %r548, %r652, %r4746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4769, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4770, %r4746, %r4769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4773, %r4765, %r4770;
	// end inline asm
	// begin inline asm
	mov.b32 %r4781, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4792, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4778, %r537, %r676, %r4781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4782, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4783, %r4781, %r4782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4786, %r4778, %r4783;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4789, %r548, %r676, %r4792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4793, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4794, %r4792, %r4793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4797, %r4789, %r4794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4800, %r537, %r698, %r4781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4804, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4805, %r4781, %r4804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4808, %r4800, %r4805;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4811, %r548, %r698, %r4792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4815, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4816, %r4792, %r4815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4819, %r4811, %r4816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4822, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4824, %r4822, %r4648, %r4574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4828, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4830, %r4828, %r4659, %r4578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4834, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4836, %r4834, %r4670, %r4582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4840, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4842, %r4840, %r4681, %r4586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4846, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4848, %r4846, %r4694, %r4590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4852, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4854, %r4852, %r4705, %r4594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4858, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4860, %r4858, %r4716, %r4598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4864, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4866, %r4864, %r4727, %r4602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4870, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4872, %r4870, %r4740, %r4606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4876, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4878, %r4876, %r4751, %r4610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4882, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4884, %r4882, %r4762, %r4614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4888, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4890, %r4888, %r4773, %r4618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4894, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4896, %r4894, %r4786, %r4622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4900, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4902, %r4900, %r4797, %r4626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4906, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4908, %r4906, %r4808, %r4630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4912, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4914, %r4912, %r4819, %r4634;
	// end inline asm
	// begin inline asm
	mov.b32 %r4923, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4934, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4920, %r537, %r2334, %r4923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4924, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4925, %r4923, %r4924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4928, %r4920, %r4925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4931, %r548, %r2334, %r4934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4935, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4936, %r4934, %r4935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4939, %r4931, %r4936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4942, %r537, %r2356, %r4923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4946, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4947, %r4923, %r4946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4950, %r4942, %r4947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4953, %r548, %r2356, %r4934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4957, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4958, %r4934, %r4957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4961, %r4953, %r4958;
	// end inline asm
	// begin inline asm
	mov.b32 %r4969, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4980, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4966, %r537, %r2380, %r4969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4970, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4971, %r4969, %r4970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4974, %r4966, %r4971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4977, %r548, %r2380, %r4980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4981, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4982, %r4980, %r4981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4985, %r4977, %r4982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4988, %r537, %r2402, %r4969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4992, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4993, %r4969, %r4992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4996, %r4988, %r4993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4999, %r548, %r2402, %r4980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5003, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5004, %r4980, %r5003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5007, %r4999, %r5004;
	// end inline asm
	// begin inline asm
	mov.b32 %r5015, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5026, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5012, %r537, %r2426, %r5015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5016, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5017, %r5015, %r5016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5020, %r5012, %r5017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5023, %r548, %r2426, %r5026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5027, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5028, %r5026, %r5027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5031, %r5023, %r5028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5034, %r537, %r2448, %r5015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5038, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5039, %r5015, %r5038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5042, %r5034, %r5039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5045, %r548, %r2448, %r5026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5049, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5050, %r5026, %r5049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5053, %r5045, %r5050;
	// end inline asm
	// begin inline asm
	mov.b32 %r5061, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5072, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5058, %r537, %r2472, %r5061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5062, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5063, %r5061, %r5062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5066, %r5058, %r5063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5069, %r548, %r2472, %r5072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5073, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5074, %r5072, %r5073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5077, %r5069, %r5074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5080, %r537, %r2494, %r5061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5084, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5085, %r5061, %r5084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5088, %r5080, %r5085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5091, %r548, %r2494, %r5072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5095, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5096, %r5072, %r5095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5099, %r5091, %r5096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5173, %r233, %r4928, %r4824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5170, %r233, %r4939, %r4830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5182, %r233, %r4950, %r4836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5179, %r233, %r4961, %r4842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5191, %r233, %r4974, %r4848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5188, %r233, %r4985, %r4854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5200, %r233, %r4996, %r4860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5197, %r233, %r5007, %r4866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5209, %r233, %r5020, %r4872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5206, %r233, %r5031, %r4878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5218, %r233, %r5042, %r4884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5215, %r233, %r5053, %r4890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5227, %r233, %r5066, %r4896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5224, %r233, %r5077, %r4902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5236, %r233, %r5088, %r4908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5233, %r233, %r5099, %r4914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5166, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5168, %r5166, %r5170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5171, %r279, %r5173, %r5168;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5175, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5177, %r5175, %r5179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5180, %r279, %r5182, %r5177;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5184, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5186, %r5184, %r5188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5189, %r279, %r5191, %r5186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5193, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5195, %r5193, %r5197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5198, %r279, %r5200, %r5195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5202, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5204, %r5202, %r5206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5207, %r279, %r5209, %r5204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5211, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5213, %r5211, %r5215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5216, %r279, %r5218, %r5213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5220, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5222, %r5220, %r5224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5225, %r279, %r5227, %r5222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5229, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5231, %r5229, %r5233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5234, %r279, %r5236, %r5231;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5238, %r282, %r5173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5241, %r279, %r5170, %r5238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5245, %r282, %r5182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5248, %r279, %r5179, %r5245;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5252, %r282, %r5191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5255, %r279, %r5188, %r5252;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5259, %r282, %r5200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5262, %r279, %r5197, %r5259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5266, %r282, %r5209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5269, %r279, %r5206, %r5266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5273, %r282, %r5218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5276, %r279, %r5215, %r5273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5280, %r282, %r5227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5283, %r279, %r5224, %r5280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5287, %r282, %r5236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5290, %r279, %r5233, %r5287;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5381, %r5378}, {%r321, %r327, %r324, %r330}, {%r5171, %r5241}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5390, %r5387}, {%r321, %r327, %r324, %r330}, {%r5180, %r5248}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5399, %r5396}, {%r321, %r327, %r324, %r330}, {%r5189, %r5255}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5408, %r5405}, {%r321, %r327, %r324, %r330}, {%r5198, %r5262}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5417, %r5414}, {%r321, %r327, %r324, %r330}, {%r5207, %r5269}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5426, %r5423}, {%r321, %r327, %r324, %r330}, {%r5216, %r5276}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5435, %r5432}, {%r321, %r327, %r324, %r330}, {%r5225, %r5283}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5444, %r5441}, {%r321, %r327, %r324, %r330}, {%r5234, %r5290}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5374, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5376, %r5374, %r5378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5379, %r365, %r5381, %r5376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5383, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5385, %r5383, %r5387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5388, %r365, %r5390, %r5385;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5392, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5394, %r5392, %r5396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5397, %r365, %r5399, %r5394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5401, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5403, %r5401, %r5405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5406, %r365, %r5408, %r5403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5410, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5412, %r5410, %r5414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5415, %r365, %r5417, %r5412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5419, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5421, %r5419, %r5423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5424, %r365, %r5426, %r5421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5428, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5430, %r5428, %r5432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5433, %r365, %r5435, %r5430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5437, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5439, %r5437, %r5441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5442, %r365, %r5444, %r5439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5446, %r368, %r5381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5449, %r365, %r5378, %r5446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5453, %r368, %r5390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5456, %r365, %r5387, %r5453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5460, %r368, %r5399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5463, %r365, %r5396, %r5460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5467, %r368, %r5408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5470, %r365, %r5405, %r5467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5474, %r368, %r5417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5477, %r365, %r5414, %r5474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5481, %r368, %r5426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5484, %r365, %r5423, %r5481;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5488, %r368, %r5435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5491, %r365, %r5432, %r5488;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5495, %r368, %r5444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5498, %r365, %r5441, %r5495;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5502, %r5503}, {%r73, %r75, %r74, %r76}, {%r5379, %r5449}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5512, %r5513}, {%r73, %r75, %r74, %r76}, {%r5388, %r5456}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5522, %r5523}, {%r73, %r75, %r74, %r76}, {%r5397, %r5463}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5532, %r5533}, {%r73, %r75, %r74, %r76}, {%r5406, %r5470}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5542, %r5543}, {%r73, %r75, %r74, %r76}, {%r5415, %r5477}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5552, %r5553}, {%r73, %r75, %r74, %r76}, {%r5424, %r5484}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5562, %r5563}, {%r73, %r75, %r74, %r76}, {%r5433, %r5491}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5572, %r5573}, {%r73, %r75, %r74, %r76}, {%r5442, %r5498}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5582, %r130, %r5502;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5585, %r130, %r5503;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5588, %r130, %r5512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5591, %r130, %r5513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5594, %r130, %r5522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5597, %r130, %r5523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5600, %r130, %r5532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5603, %r130, %r5533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5606, %r130, %r5542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5609, %r130, %r5543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5612, %r130, %r5552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5615, %r130, %r5553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5618, %r130, %r5562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5621, %r130, %r5563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5624, %r130, %r5572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5627, %r130, %r5573;
	// end inline asm
	// begin inline asm
	mov.b32 %r5630, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5631, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5632, %r5582, %r5630;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5635, %r5632, %r5631;
	// end inline asm
	// begin inline asm
	mov.b32 %r5638, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5639, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5640, %r5585, %r5638;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5643, %r5640, %r5639;
	// end inline asm
	// begin inline asm
	mov.b32 %r5646, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5647, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5648, %r5588, %r5646;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5651, %r5648, %r5647;
	// end inline asm
	// begin inline asm
	mov.b32 %r5654, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5655, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5656, %r5591, %r5654;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5659, %r5656, %r5655;
	// end inline asm
	// begin inline asm
	mov.b32 %r5662, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5663, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5664, %r5594, %r5662;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5667, %r5664, %r5663;
	// end inline asm
	// begin inline asm
	mov.b32 %r5670, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5671, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5672, %r5597, %r5670;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5675, %r5672, %r5671;
	// end inline asm
	// begin inline asm
	mov.b32 %r5678, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5679, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5680, %r5600, %r5678;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5683, %r5680, %r5679;
	// end inline asm
	// begin inline asm
	mov.b32 %r5686, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5687, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5688, %r5603, %r5686;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5691, %r5688, %r5687;
	// end inline asm
	// begin inline asm
	mov.b32 %r5694, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5695, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5696, %r5606, %r5694;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5699, %r5696, %r5695;
	// end inline asm
	// begin inline asm
	mov.b32 %r5702, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5703, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5704, %r5609, %r5702;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5707, %r5704, %r5703;
	// end inline asm
	// begin inline asm
	mov.b32 %r5710, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5711, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5712, %r5612, %r5710;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5715, %r5712, %r5711;
	// end inline asm
	// begin inline asm
	mov.b32 %r5718, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5719, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5720, %r5615, %r5718;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5723, %r5720, %r5719;
	// end inline asm
	// begin inline asm
	mov.b32 %r5726, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5727, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5728, %r5618, %r5726;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5731, %r5728, %r5727;
	// end inline asm
	// begin inline asm
	mov.b32 %r5734, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5735, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5736, %r5621, %r5734;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5739, %r5736, %r5735;
	// end inline asm
	// begin inline asm
	mov.b32 %r5742, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5743, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5744, %r5624, %r5742;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5747, %r5744, %r5743;
	// end inline asm
	// begin inline asm
	mov.b32 %r5750, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5751, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5752, %r5627, %r5750;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5755, %r5752, %r5751;
	// end inline asm
	// begin inline asm
	mov.b32 %r5761, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5759, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5760, %r5761, %r5759;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5763, %r5635, %r5760;
	// end inline asm
	// begin inline asm
	mov.b32 %r5766, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5767, %r5761, %r5766;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5770, %r5643, %r5767;
	// end inline asm
	// begin inline asm
	mov.b32 %r5773, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5774, %r5761, %r5773;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5777, %r5651, %r5774;
	// end inline asm
	// begin inline asm
	mov.b32 %r5780, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5781, %r5761, %r5780;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5784, %r5659, %r5781;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5787, %r5763, %r5777, %r2198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5791, %r5770, %r5784, %r2198;
	// end inline asm
	shl.b32 	%r5798, %r5791, 4;
	// begin inline asm
	lop3.b32 %r5795, %r2204, %r5787, %r5798, 202;
	// end inline asm
	xor.b32  	%r7730, %r5795, -2004318072;
	// begin inline asm
	mov.b32 %r5802, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5800, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5801, %r5802, %r5800;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5804, %r5667, %r5801;
	// end inline asm
	// begin inline asm
	mov.b32 %r5807, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5808, %r5802, %r5807;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5811, %r5675, %r5808;
	// end inline asm
	// begin inline asm
	mov.b32 %r5814, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5815, %r5802, %r5814;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5818, %r5683, %r5815;
	// end inline asm
	// begin inline asm
	mov.b32 %r5821, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5822, %r5802, %r5821;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5825, %r5691, %r5822;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5828, %r5804, %r5818, %r2198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5832, %r5811, %r5825, %r2198;
	// end inline asm
	shl.b32 	%r5839, %r5832, 4;
	// begin inline asm
	lop3.b32 %r5836, %r2204, %r5828, %r5839, 202;
	// end inline asm
	xor.b32  	%r7731, %r5836, -2004318072;
	// begin inline asm
	mov.b32 %r5843, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5841, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5842, %r5843, %r5841;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5845, %r5699, %r5842;
	// end inline asm
	// begin inline asm
	mov.b32 %r5848, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5849, %r5843, %r5848;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5852, %r5707, %r5849;
	// end inline asm
	// begin inline asm
	mov.b32 %r5855, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5856, %r5843, %r5855;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5859, %r5715, %r5856;
	// end inline asm
	// begin inline asm
	mov.b32 %r5862, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5863, %r5843, %r5862;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5866, %r5723, %r5863;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5869, %r5845, %r5859, %r2198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5873, %r5852, %r5866, %r2198;
	// end inline asm
	shl.b32 	%r5880, %r5873, 4;
	// begin inline asm
	lop3.b32 %r5877, %r2204, %r5869, %r5880, 202;
	// end inline asm
	xor.b32  	%r7732, %r5877, -2004318072;
	// begin inline asm
	mov.b32 %r5884, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5882, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5883, %r5884, %r5882;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5886, %r5731, %r5883;
	// end inline asm
	// begin inline asm
	mov.b32 %r5889, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5890, %r5884, %r5889;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5893, %r5739, %r5890;
	// end inline asm
	// begin inline asm
	mov.b32 %r5896, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5897, %r5884, %r5896;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5900, %r5747, %r5897;
	// end inline asm
	// begin inline asm
	mov.b32 %r5903, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5904, %r5884, %r5903;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5907, %r5755, %r5904;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5910, %r5886, %r5900, %r2198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5914, %r5893, %r5907, %r2198;
	// end inline asm
	shl.b32 	%r5921, %r5914, 4;
	// begin inline asm
	lop3.b32 %r5918, %r2204, %r5910, %r5921, 202;
	// end inline asm
	xor.b32  	%r7733, %r5918, -2004318072;
	st.shared.u32 	[%rd80], %r7730;
	st.shared.u32 	[%rd81], %r7731;
	st.shared.u32 	[%rd82], %r7732;
	st.shared.u32 	[%rd83], %r7733;
	ld.shared.u32 	%r7800, [%rd76];
	ld.shared.u32 	%r7801, [%rd77];
	ld.shared.u32 	%r7802, [%rd78];
	ld.shared.u32 	%r7803, [%rd79];
	// begin inline asm
	mov.b32 %r5927, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5938, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5926, %r7800, -2004318072;
	// begin inline asm
	lop3.b32 %r5924, %r537, %r5926, %r5927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5928, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5929, %r5927, %r5928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5932, %r5924, %r5929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5935, %r548, %r5926, %r5938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5939, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5940, %r5938, %r5939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5943, %r5935, %r5940;
	// end inline asm
	shr.u32 	%r5948, %r5926, 8;
	// begin inline asm
	lop3.b32 %r5946, %r537, %r5948, %r5927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5950, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5951, %r5927, %r5950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5954, %r5946, %r5951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5957, %r548, %r5948, %r5938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5961, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5962, %r5938, %r5961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5965, %r5957, %r5962;
	// end inline asm
	// begin inline asm
	mov.b32 %r5973, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5984, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5972, %r7801, -2004318072;
	// begin inline asm
	lop3.b32 %r5970, %r537, %r5972, %r5973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5974, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5975, %r5973, %r5974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5978, %r5970, %r5975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5981, %r548, %r5972, %r5984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5985, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5986, %r5984, %r5985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5989, %r5981, %r5986;
	// end inline asm
	shr.u32 	%r5994, %r5972, 8;
	// begin inline asm
	lop3.b32 %r5992, %r537, %r5994, %r5973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5996, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5997, %r5973, %r5996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6000, %r5992, %r5997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6003, %r548, %r5994, %r5984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6007, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6008, %r5984, %r6007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6011, %r6003, %r6008;
	// end inline asm
	// begin inline asm
	mov.b32 %r6019, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6030, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6018, %r7802, -2004318072;
	// begin inline asm
	lop3.b32 %r6016, %r537, %r6018, %r6019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6020, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6021, %r6019, %r6020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6024, %r6016, %r6021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6027, %r548, %r6018, %r6030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6031, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6032, %r6030, %r6031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6035, %r6027, %r6032;
	// end inline asm
	shr.u32 	%r6040, %r6018, 8;
	// begin inline asm
	lop3.b32 %r6038, %r537, %r6040, %r6019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6042, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6043, %r6019, %r6042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6046, %r6038, %r6043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6049, %r548, %r6040, %r6030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6053, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6054, %r6030, %r6053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6057, %r6049, %r6054;
	// end inline asm
	// begin inline asm
	mov.b32 %r6065, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6076, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6064, %r7803, -2004318072;
	// begin inline asm
	lop3.b32 %r6062, %r537, %r6064, %r6065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6066, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6067, %r6065, %r6066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6070, %r6062, %r6067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6073, %r548, %r6064, %r6076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6077, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6078, %r6076, %r6077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6081, %r6073, %r6078;
	// end inline asm
	shr.u32 	%r6086, %r6064, 8;
	// begin inline asm
	lop3.b32 %r6084, %r537, %r6086, %r6065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6088, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6089, %r6065, %r6088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6092, %r6084, %r6089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6095, %r548, %r6086, %r6076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6099, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6100, %r6076, %r6099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6103, %r6095, %r6100;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6106, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6108, %r6106, %r5932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6111, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6113, %r6111, %r5943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6116, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6118, %r6116, %r5954;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6121, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6123, %r6121, %r5965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6126, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6128, %r6126, %r5978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6131, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6133, %r6131, %r5989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6136, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6138, %r6136, %r6000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6141, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6143, %r6141, %r6011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6146, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6148, %r6146, %r6024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6151, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6153, %r6151, %r6035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6156, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6158, %r6156, %r6046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6161, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6163, %r6161, %r6057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6166, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6168, %r6166, %r6070;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6171, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6173, %r6171, %r6081;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6176, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6178, %r6176, %r6092;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6181, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6183, %r6181, %r6103;
	// end inline asm
	// begin inline asm
	mov.b32 %r6191, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6202, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6188, %r537, %r538, %r6191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6192, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6193, %r6191, %r6192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6196, %r6188, %r6193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6199, %r548, %r538, %r6202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6203, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6204, %r6202, %r6203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6207, %r6199, %r6204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6210, %r537, %r560, %r6191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6214, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6215, %r6191, %r6214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6218, %r6210, %r6215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6221, %r548, %r560, %r6202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6225, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6226, %r6202, %r6225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6229, %r6221, %r6226;
	// end inline asm
	// begin inline asm
	mov.b32 %r6237, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6248, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6234, %r537, %r584, %r6237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6238, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6239, %r6237, %r6238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6242, %r6234, %r6239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6245, %r548, %r584, %r6248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6249, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6250, %r6248, %r6249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6253, %r6245, %r6250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6256, %r537, %r606, %r6237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6260, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6261, %r6237, %r6260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6264, %r6256, %r6261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6267, %r548, %r606, %r6248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6271, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6272, %r6248, %r6271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6275, %r6267, %r6272;
	// end inline asm
	// begin inline asm
	mov.b32 %r6283, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6294, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6280, %r537, %r630, %r6283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6284, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6285, %r6283, %r6284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6288, %r6280, %r6285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6291, %r548, %r630, %r6294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6295, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6296, %r6294, %r6295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6299, %r6291, %r6296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6302, %r537, %r652, %r6283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6306, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6307, %r6283, %r6306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6310, %r6302, %r6307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6313, %r548, %r652, %r6294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6317, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6318, %r6294, %r6317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6321, %r6313, %r6318;
	// end inline asm
	// begin inline asm
	mov.b32 %r6329, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6340, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6326, %r537, %r676, %r6329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6330, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6331, %r6329, %r6330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6334, %r6326, %r6331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6337, %r548, %r676, %r6340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6341, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6342, %r6340, %r6341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6345, %r6337, %r6342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6348, %r537, %r698, %r6329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6352, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6353, %r6329, %r6352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6356, %r6348, %r6353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6359, %r548, %r698, %r6340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6363, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6364, %r6340, %r6363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6367, %r6359, %r6364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6370, %r197, %r6196, %r6108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6374, %r197, %r6207, %r6113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6378, %r197, %r6218, %r6118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6382, %r197, %r6229, %r6123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6386, %r197, %r6242, %r6128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6390, %r197, %r6253, %r6133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6394, %r197, %r6264, %r6138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6398, %r197, %r6275, %r6143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6402, %r197, %r6288, %r6148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6406, %r197, %r6299, %r6153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6410, %r197, %r6310, %r6158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6414, %r197, %r6321, %r6163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6418, %r197, %r6334, %r6168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6422, %r197, %r6345, %r6173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6426, %r197, %r6356, %r6178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6430, %r197, %r6367, %r6183;
	// end inline asm
	// begin inline asm
	mov.b32 %r6439, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6450, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6436, %r537, %r2334, %r6439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6440, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6441, %r6439, %r6440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6444, %r6436, %r6441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6447, %r548, %r2334, %r6450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6451, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6452, %r6450, %r6451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6455, %r6447, %r6452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6458, %r537, %r2356, %r6439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6462, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6463, %r6439, %r6462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6466, %r6458, %r6463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6469, %r548, %r2356, %r6450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6473, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6474, %r6450, %r6473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6477, %r6469, %r6474;
	// end inline asm
	// begin inline asm
	mov.b32 %r6485, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6496, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6482, %r537, %r2380, %r6485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6486, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6487, %r6485, %r6486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6490, %r6482, %r6487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6493, %r548, %r2380, %r6496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6497, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6498, %r6496, %r6497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6501, %r6493, %r6498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6504, %r537, %r2402, %r6485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6508, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6509, %r6485, %r6508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6512, %r6504, %r6509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6515, %r548, %r2402, %r6496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6519, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6520, %r6496, %r6519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6523, %r6515, %r6520;
	// end inline asm
	// begin inline asm
	mov.b32 %r6531, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6542, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6528, %r537, %r2426, %r6531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6532, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6533, %r6531, %r6532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6536, %r6528, %r6533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6539, %r548, %r2426, %r6542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6543, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6544, %r6542, %r6543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6547, %r6539, %r6544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6550, %r537, %r2448, %r6531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6554, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6555, %r6531, %r6554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6558, %r6550, %r6555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6561, %r548, %r2448, %r6542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6565, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6566, %r6542, %r6565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6569, %r6561, %r6566;
	// end inline asm
	// begin inline asm
	mov.b32 %r6577, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6588, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6574, %r537, %r2472, %r6577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6578, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6579, %r6577, %r6578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6582, %r6574, %r6579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6585, %r548, %r2472, %r6588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6589, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6590, %r6588, %r6589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6593, %r6585, %r6590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6596, %r537, %r2494, %r6577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6600, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6601, %r6577, %r6600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6604, %r6596, %r6601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6607, %r548, %r2494, %r6588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6611, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6612, %r6588, %r6611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6615, %r6607, %r6612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6618, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6620, %r6618, %r6444, %r6370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6624, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6626, %r6624, %r6455, %r6374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6630, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6632, %r6630, %r6466, %r6378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6636, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6638, %r6636, %r6477, %r6382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6642, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6644, %r6642, %r6490, %r6386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6648, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6650, %r6648, %r6501, %r6390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6654, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6656, %r6654, %r6512, %r6394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6660, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6662, %r6660, %r6523, %r6398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6666, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6668, %r6666, %r6536, %r6402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6672, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6674, %r6672, %r6547, %r6406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6678, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6680, %r6678, %r6558, %r6410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6684, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6686, %r6684, %r6569, %r6414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6690, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6692, %r6690, %r6582, %r6418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6696, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6698, %r6696, %r6593, %r6422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6702, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6704, %r6702, %r6604, %r6426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6708, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6710, %r6708, %r6615, %r6430;
	// end inline asm
	// begin inline asm
	mov.b32 %r6719, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6730, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6716, %r537, %r4130, %r6719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6720, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6721, %r6719, %r6720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6724, %r6716, %r6721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6727, %r548, %r4130, %r6730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6731, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6732, %r6730, %r6731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6735, %r6727, %r6732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6738, %r537, %r4152, %r6719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6742, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6743, %r6719, %r6742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6746, %r6738, %r6743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6749, %r548, %r4152, %r6730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6753, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6754, %r6730, %r6753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6757, %r6749, %r6754;
	// end inline asm
	// begin inline asm
	mov.b32 %r6765, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6776, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6762, %r537, %r4176, %r6765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6766, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6767, %r6765, %r6766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6770, %r6762, %r6767;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6773, %r548, %r4176, %r6776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6777, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6778, %r6776, %r6777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6781, %r6773, %r6778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6784, %r537, %r4198, %r6765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6788, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6789, %r6765, %r6788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6792, %r6784, %r6789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6795, %r548, %r4198, %r6776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6799, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6800, %r6776, %r6799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6803, %r6795, %r6800;
	// end inline asm
	// begin inline asm
	mov.b32 %r6811, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6822, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6808, %r537, %r4222, %r6811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6812, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6813, %r6811, %r6812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6816, %r6808, %r6813;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6819, %r548, %r4222, %r6822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6823, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6824, %r6822, %r6823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6827, %r6819, %r6824;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6830, %r537, %r4244, %r6811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6834, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6835, %r6811, %r6834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6838, %r6830, %r6835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6841, %r548, %r4244, %r6822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6845, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6846, %r6822, %r6845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6849, %r6841, %r6846;
	// end inline asm
	// begin inline asm
	mov.b32 %r6857, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6868, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6854, %r537, %r4268, %r6857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6858, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6859, %r6857, %r6858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6862, %r6854, %r6859;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6865, %r548, %r4268, %r6868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6869, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6870, %r6868, %r6869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6873, %r6865, %r6870;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6876, %r537, %r4290, %r6857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6880, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6881, %r6857, %r6880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6884, %r6876, %r6881;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6887, %r548, %r4290, %r6868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6891, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6892, %r6868, %r6891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6895, %r6887, %r6892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6969, %r233, %r6724, %r6620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6966, %r233, %r6735, %r6626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6978, %r233, %r6746, %r6632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6975, %r233, %r6757, %r6638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6987, %r233, %r6770, %r6644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6984, %r233, %r6781, %r6650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6996, %r233, %r6792, %r6656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6993, %r233, %r6803, %r6662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7005, %r233, %r6816, %r6668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7002, %r233, %r6827, %r6674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7014, %r233, %r6838, %r6680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7011, %r233, %r6849, %r6686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7023, %r233, %r6862, %r6692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7020, %r233, %r6873, %r6698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7032, %r233, %r6884, %r6704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7029, %r233, %r6895, %r6710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6962, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6964, %r6962, %r6966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6967, %r279, %r6969, %r6964;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6971, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6973, %r6971, %r6975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6976, %r279, %r6978, %r6973;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6980, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6982, %r6980, %r6984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6985, %r279, %r6987, %r6982;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6989, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6991, %r6989, %r6993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6994, %r279, %r6996, %r6991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6998, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7000, %r6998, %r7002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7003, %r279, %r7005, %r7000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7007, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7009, %r7007, %r7011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7012, %r279, %r7014, %r7009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7016, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7018, %r7016, %r7020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7021, %r279, %r7023, %r7018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7025, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7027, %r7025, %r7029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7030, %r279, %r7032, %r7027;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7034, %r282, %r6969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7037, %r279, %r6966, %r7034;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7041, %r282, %r6978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7044, %r279, %r6975, %r7041;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7048, %r282, %r6987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7051, %r279, %r6984, %r7048;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7055, %r282, %r6996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7058, %r279, %r6993, %r7055;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7062, %r282, %r7005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7065, %r279, %r7002, %r7062;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7069, %r282, %r7014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7072, %r279, %r7011, %r7069;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7076, %r282, %r7023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7079, %r279, %r7020, %r7076;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7083, %r282, %r7032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7086, %r279, %r7029, %r7083;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7177, %r7174}, {%r321, %r327, %r324, %r330}, {%r6967, %r7037}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7186, %r7183}, {%r321, %r327, %r324, %r330}, {%r6976, %r7044}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7195, %r7192}, {%r321, %r327, %r324, %r330}, {%r6985, %r7051}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7204, %r7201}, {%r321, %r327, %r324, %r330}, {%r6994, %r7058}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7213, %r7210}, {%r321, %r327, %r324, %r330}, {%r7003, %r7065}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7222, %r7219}, {%r321, %r327, %r324, %r330}, {%r7012, %r7072}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7231, %r7228}, {%r321, %r327, %r324, %r330}, {%r7021, %r7079}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7240, %r7237}, {%r321, %r327, %r324, %r330}, {%r7030, %r7086}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7170, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7172, %r7170, %r7174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7175, %r365, %r7177, %r7172;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7179, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7181, %r7179, %r7183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7184, %r365, %r7186, %r7181;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7188, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7190, %r7188, %r7192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7193, %r365, %r7195, %r7190;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7197, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7199, %r7197, %r7201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7202, %r365, %r7204, %r7199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7206, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7208, %r7206, %r7210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7211, %r365, %r7213, %r7208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7215, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7217, %r7215, %r7219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7220, %r365, %r7222, %r7217;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7224, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7226, %r7224, %r7228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7229, %r365, %r7231, %r7226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7233, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7235, %r7233, %r7237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7238, %r365, %r7240, %r7235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7242, %r368, %r7177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7245, %r365, %r7174, %r7242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7249, %r368, %r7186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7252, %r365, %r7183, %r7249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7256, %r368, %r7195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7259, %r365, %r7192, %r7256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7263, %r368, %r7204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7266, %r365, %r7201, %r7263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7270, %r368, %r7213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7273, %r365, %r7210, %r7270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7277, %r368, %r7222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7280, %r365, %r7219, %r7277;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7284, %r368, %r7231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7287, %r365, %r7228, %r7284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7291, %r368, %r7240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7294, %r365, %r7237, %r7291;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7298, %r7299}, {%r73, %r75, %r74, %r76}, {%r7175, %r7245}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7308, %r7309}, {%r73, %r75, %r74, %r76}, {%r7184, %r7252}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7318, %r7319}, {%r73, %r75, %r74, %r76}, {%r7193, %r7259}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7328, %r7329}, {%r73, %r75, %r74, %r76}, {%r7202, %r7266}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7338, %r7339}, {%r73, %r75, %r74, %r76}, {%r7211, %r7273}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7348, %r7349}, {%r73, %r75, %r74, %r76}, {%r7220, %r7280}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7358, %r7359}, {%r73, %r75, %r74, %r76}, {%r7229, %r7287}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7368, %r7369}, {%r73, %r75, %r74, %r76}, {%r7238, %r7294}, {%r7377, %r7377};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7378, %r130, %r7298;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7381, %r130, %r7299;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7384, %r130, %r7308;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7387, %r130, %r7309;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7390, %r130, %r7318;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7393, %r130, %r7319;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7396, %r130, %r7328;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7399, %r130, %r7329;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7402, %r130, %r7338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7405, %r130, %r7339;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7408, %r130, %r7348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7411, %r130, %r7349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7414, %r130, %r7358;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7417, %r130, %r7359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7420, %r130, %r7368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7423, %r130, %r7369;
	// end inline asm
	// begin inline asm
	mov.b32 %r7426, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7427, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7428, %r7378, %r7426;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7431, %r7428, %r7427;
	// end inline asm
	// begin inline asm
	mov.b32 %r7434, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7435, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7436, %r7381, %r7434;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7439, %r7436, %r7435;
	// end inline asm
	// begin inline asm
	mov.b32 %r7442, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7443, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7444, %r7384, %r7442;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7447, %r7444, %r7443;
	// end inline asm
	// begin inline asm
	mov.b32 %r7450, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7451, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7452, %r7387, %r7450;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7455, %r7452, %r7451;
	// end inline asm
	// begin inline asm
	mov.b32 %r7458, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7459, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7460, %r7390, %r7458;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7463, %r7460, %r7459;
	// end inline asm
	// begin inline asm
	mov.b32 %r7466, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7467, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7468, %r7393, %r7466;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7471, %r7468, %r7467;
	// end inline asm
	// begin inline asm
	mov.b32 %r7474, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7475, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7476, %r7396, %r7474;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7479, %r7476, %r7475;
	// end inline asm
	// begin inline asm
	mov.b32 %r7482, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7483, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7484, %r7399, %r7482;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7487, %r7484, %r7483;
	// end inline asm
	// begin inline asm
	mov.b32 %r7490, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7491, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7492, %r7402, %r7490;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7495, %r7492, %r7491;
	// end inline asm
	// begin inline asm
	mov.b32 %r7498, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7499, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7500, %r7405, %r7498;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7503, %r7500, %r7499;
	// end inline asm
	// begin inline asm
	mov.b32 %r7506, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7507, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7508, %r7408, %r7506;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7511, %r7508, %r7507;
	// end inline asm
	// begin inline asm
	mov.b32 %r7514, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7515, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7516, %r7411, %r7514;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7519, %r7516, %r7515;
	// end inline asm
	// begin inline asm
	mov.b32 %r7522, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7523, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7524, %r7414, %r7522;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7527, %r7524, %r7523;
	// end inline asm
	// begin inline asm
	mov.b32 %r7530, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7531, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7532, %r7417, %r7530;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7535, %r7532, %r7531;
	// end inline asm
	// begin inline asm
	mov.b32 %r7538, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7539, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7540, %r7420, %r7538;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7543, %r7540, %r7539;
	// end inline asm
	// begin inline asm
	mov.b32 %r7546, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7547, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7548, %r7423, %r7546;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7551, %r7548, %r7547;
	// end inline asm
	// begin inline asm
	mov.b32 %r7557, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7555, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7556, %r7557, %r7555;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7559, %r7431, %r7556;
	// end inline asm
	// begin inline asm
	mov.b32 %r7562, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7563, %r7557, %r7562;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7566, %r7439, %r7563;
	// end inline asm
	// begin inline asm
	mov.b32 %r7569, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7570, %r7557, %r7569;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7573, %r7447, %r7570;
	// end inline asm
	// begin inline asm
	mov.b32 %r7576, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7577, %r7557, %r7576;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7580, %r7455, %r7577;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7583, %r7559, %r7573, %r2198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7587, %r7566, %r7580, %r2198;
	// end inline asm
	shl.b32 	%r7594, %r7587, 4;
	// begin inline asm
	lop3.b32 %r7591, %r2204, %r7583, %r7594, 202;
	// end inline asm
	xor.b32  	%r7734, %r7591, -2004318072;
	// begin inline asm
	mov.b32 %r7598, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7596, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7597, %r7598, %r7596;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7600, %r7463, %r7597;
	// end inline asm
	// begin inline asm
	mov.b32 %r7603, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7604, %r7598, %r7603;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7607, %r7471, %r7604;
	// end inline asm
	// begin inline asm
	mov.b32 %r7610, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7611, %r7598, %r7610;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7614, %r7479, %r7611;
	// end inline asm
	// begin inline asm
	mov.b32 %r7617, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7618, %r7598, %r7617;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7621, %r7487, %r7618;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7624, %r7600, %r7614, %r2198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7628, %r7607, %r7621, %r2198;
	// end inline asm
	shl.b32 	%r7635, %r7628, 4;
	// begin inline asm
	lop3.b32 %r7632, %r2204, %r7624, %r7635, 202;
	// end inline asm
	xor.b32  	%r7735, %r7632, -2004318072;
	// begin inline asm
	mov.b32 %r7639, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7637, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7638, %r7639, %r7637;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7641, %r7495, %r7638;
	// end inline asm
	// begin inline asm
	mov.b32 %r7644, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7645, %r7639, %r7644;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7648, %r7503, %r7645;
	// end inline asm
	// begin inline asm
	mov.b32 %r7651, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7652, %r7639, %r7651;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7655, %r7511, %r7652;
	// end inline asm
	// begin inline asm
	mov.b32 %r7658, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7659, %r7639, %r7658;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7662, %r7519, %r7659;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7665, %r7641, %r7655, %r2198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7669, %r7648, %r7662, %r2198;
	// end inline asm
	shl.b32 	%r7676, %r7669, 4;
	// begin inline asm
	lop3.b32 %r7673, %r2204, %r7665, %r7676, 202;
	// end inline asm
	xor.b32  	%r7736, %r7673, -2004318072;
	// begin inline asm
	mov.b32 %r7680, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7678, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7679, %r7680, %r7678;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7682, %r7527, %r7679;
	// end inline asm
	// begin inline asm
	mov.b32 %r7685, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7686, %r7680, %r7685;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7689, %r7535, %r7686;
	// end inline asm
	// begin inline asm
	mov.b32 %r7692, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7693, %r7680, %r7692;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7696, %r7543, %r7693;
	// end inline asm
	// begin inline asm
	mov.b32 %r7699, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7700, %r7680, %r7699;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7703, %r7551, %r7700;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7706, %r7682, %r7696, %r2198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7710, %r7689, %r7703, %r2198;
	// end inline asm
	shl.b32 	%r7717, %r7710, 4;
	// begin inline asm
	lop3.b32 %r7714, %r2204, %r7706, %r7717, 202;
	// end inline asm
	xor.b32  	%r7737, %r7714, -2004318072;
	st.shared.u32 	[%rd80], %r7734;
	st.shared.u32 	[%rd81], %r7735;
	st.shared.u32 	[%rd82], %r7736;
	st.shared.u32 	[%rd83], %r7737;
	add.s32 	%r7791, %r7791, -64;
	add.s64 	%rd86, %rd86, 8324;
	setp.eq.s32 	%p215, %r7791, 0;
	@%p215 bra 	LBB0_114;
	bra.uni 	LBB0_113;
LBB0_114:                               // %guard_pass10509
                                        //   in Loop: Header=BB0_112 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7743, [%rd9];
	ld.shared.u32 	%r7744, [%rd10+128];
	ld.shared.u32 	%r7751, [%rd10+4];
	ld.shared.u32 	%r7752, [%rd10+132];
	// begin inline asm
	prmt.b32 %r7738, %r7743, %r7744, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7742, %r7743, %r7744, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7746, %r7751, %r7752, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7750, %r7751, %r7752, %r519;
	// end inline asm
	selp.b32 	%r7754, %r7742, %r7738, %p214;
	shfl.sync.bfly.b32	%r163, %r7754, 8, 31, -1;
	selp.b32 	%r7755, %r7750, %r7746, %p214;
	shfl.sync.bfly.b32	%r164, %r7755, 8, 31, -1;
	setp.eq.s32 	%p217, %r96, 0;
	@%p217 bra 	LBB0_116;
// %bb.115:                             // %L29166
                                        //   in Loop: Header=BB0_112 Depth=1
	selp.b32 	%r7756, %r164, %r7750, %p214;
	selp.b32 	%r7757, %r7746, %r164, %p214;
	selp.b32 	%r7758, %r163, %r7742, %p214;
	selp.b32 	%r7759, %r7738, %r163, %p214;
	shl.b32 	%r7760, %r96, 12;
	or.b32  	%r7761, %r7760, %r82;
	or.b32  	%r7762, %r7761, %r80;
	or.b32  	%r7763, %r83, %r7762;
	add.s32 	%r7764, %r7763, -786432;
	mul.wide.s32 	%rd84, %r7764, 4;
	add.s64 	%rd85, %rd3, %rd84;
	st.global.v4.u32 	[%rd85], {%r7759, %r7757, %r7758, %r7756};
	bra.uni 	LBB0_116;
LBB0_117:                               // %L29384
	st.global.u32 	[%rd4], %r7377;
	ret;
LBB0_1:                                 // %L8
	mov.u64 	%rd30, exception1;
	cvta.global.u64 	%rd31, %rd30;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd31;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L178
	mov.u32 	%r170, 2;
	st.global.u32 	[%rd4], %r170;
	mov.u64 	%rd33, exception2325;
	cvta.global.u64 	%rd34, %rd33;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd34;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
LBB0_119:                               // %L29482
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9665, 
	(
	);
	} // callseq 5
	mov.u64 	%rd41, exception1;
	cvta.global.u64 	%rd42, %rd41;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd42;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	// begin inline asm
	exit;
	// end inline asm
LBB0_118:                               // %L29479
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9665, 
	(
	);
	} // callseq 9
	mov.u64 	%rd47, exception1;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 10
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 11
	// begin inline asm
	exit;
	// end inline asm
LBB0_144:                               // %L29476
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9665, 
	(
	);
	} // callseq 15
	mov.u64 	%rd61, exception1;
	cvta.global.u64 	%rd62, %rd61;
	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd62;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 16
	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 17
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
