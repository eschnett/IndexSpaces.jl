[Choosing CUDA device...]
NVIDIA A40
[Creating frb kernel...]
mem_var=info_memory:
    reg_layout=Layout{Physics,Machine}:
    Physics.BlockTag.block:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/32 => Machine.SIMDTag.simd:1/32
    Physics.ThreadTag.thread:1/32 => Machine.ThreadTag.thread:1/32
    Physics.WarpTag.warp:1/24 => Machine.WarpTag.warp:1/24

    mem_layout=Layout{Physics,Machine}:
    Physics.BlockTag.block:1/56 => Machine.MemoryTag.memory:768/56
    Physics.IntValueTag.intvalue:1/32 => Machine.SIMDTag.simd:1/32
    Physics.ThreadTag.thread:1/32 => Machine.MemoryTag.memory:1/32
    Physics.WarpTag.warp:1/24 => Machine.MemoryTag.memory:32/24

            phys=Physics.WarpTag.warp:1/24
            mach=Machine.MemoryTag.memory:32/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 32
            phys=Physics.ThreadTag.thread:1/32
            mach=Machine.MemoryTag.memory:1/32
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) ÷ 1) % 32) * 1
            phys=Physics.BlockTag.block:1/56
            mach=Machine.MemoryTag.memory:768/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 768
            phys=Physics.IntValueTag.intvalue:1/32
            mach=Machine.SIMDTag.simd:1/32
    reg_name=info
        vals=Dict{Any, Union{Expr, Number, Symbol}}(ThreadTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32), WarpTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), BlockTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24) * 32 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) % 32 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 768
            phys=Physics.IntValueTag.intvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.MNTag.mn:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.DishTag.dish:1/576
            mach=Machine.MemoryTag.memory:1/576
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24) * 24 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 576) * 1
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.MemoryTag.memory:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.MemoryTag.memory:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.MemoryTag.memory:144/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 144
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.MemoryTag.memory:32256/2
                machval=((0 ÷ 1) % 2) * 32256
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:576/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 576
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.MemoryTag.memory:24/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 24
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.MemoryTag.memory:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.MemoryTag.memory:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.MemoryTag.memory:144/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 144
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.MemoryTag.memory:32256/2
                machval=((1 ÷ 1) % 2) * 32256
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:576/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 576
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.MemoryTag.memory:24/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 24
            phys=Physics.DishTag.dish:1/4
            mach=Machine.SIMDTag.simd:8/4
            phys=Physics.TimeTag.time:1/2064
            mach=Machine.MemoryTag.memory:14336/2064
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 2064) * 14336
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.MemoryTag.memory:7168/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) ÷ 1) % 2) * 7168
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:4/128
            mach=Machine.MemoryTag.memory:1/128
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16) ÷ 4) % 128) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:128/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 128
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:1/4
            mach=Machine.SIMDTag.simd:8/4
            phys=Physics.TimeTag.time:1/2064
            mach=Machine.MemoryTag.memory:14336/2064
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 2064) * 14336
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.MemoryTag.memory:7168/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) ÷ 1) % 2) * 7168
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:4/128
            mach=Machine.MemoryTag.memory:1/128
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 256) ÷ 4) % 128) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:128/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 128
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:1/4
            mach=Machine.SIMDTag.simd:8/4
            phys=Physics.TimeTag.time:1/2064
            mach=Machine.MemoryTag.memory:14336/2064
                machval=((((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 24) + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 2064) * 14336
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.MemoryTag.memory:7168/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) ÷ 1) % 2) * 7168
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:4/128
            mach=Machine.MemoryTag.memory:1/128
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16) ÷ 4) % 128) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:128/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 128
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:1/4
            mach=Machine.SIMDTag.simd:8/4
            phys=Physics.TimeTag.time:1/2064
            mach=Machine.MemoryTag.memory:14336/2064
                machval=((((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 24) + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 2064) * 14336
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.MemoryTag.memory:7168/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) ÷ 1) % 2) * 7168
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:4/128
            mach=Machine.MemoryTag.memory:1/128
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 256) ÷ 4) % 128) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:128/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 128
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
mem_var=Fsh1_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/2 => Machine.RegisterTag.time:24/2
    Physics.DishTag.dish:2/2 => Machine.RegisterTag.dish:8/2
    Physics.DishTag.dish:4/2 => Machine.RegisterTag.dish:4/2
    Physics.DishTag.dish:8/2 => Machine.ThreadTag.thread:16/2
    Physics.DishTag.dish:16/16 => Machine.ThreadTag.thread:1/16
    Physics.DishTag.dish:256/2 => Machine.RegisterTag.dish:256/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.WarpTag.warp:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/8 => Machine.SharedTag.shared:32/8
    Physics.DishTag.dish:8/64 => Machine.SharedTag.shared:257/64
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=E_dish0_time0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), DishTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) ÷ 8) % 64) * 257 + (((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) % 8) * 32
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=E_dish4_time0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), DishTag => :(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) ÷ 8) % 64) * 257 + (((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) % 8) * 32
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=E_dish8_time0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), DishTag => :(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) ÷ 8) % 64) * 257 + (((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) % 8) * 32
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=E_dish12_time0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), DishTag => :((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) ÷ 8) % 64) * 257 + (((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24 + (((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) % 8) * 32
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=E_dish256_time0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), DishTag => :(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) ÷ 8) % 64) * 257 + (((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) % 8) * 32
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=E_dish260_time0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), DishTag => :((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) ÷ 8) % 64) * 257 + (((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24 + (((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) % 8) * 32
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=E_dish264_time0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), DishTag => :((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) ÷ 8) % 64) * 257 + (((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24 + (((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) % 8) * 32
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=E_dish268_time0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), DishTag => :(((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) ÷ 8) % 64) * 257 + (((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24 + ((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) % 8) * 32
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 1) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 1) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=E_dish0_time24
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), DishTag => :(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 1), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 1) ÷ 8) % 64) * 257 + (((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 1) % 8) * 32
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 1) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 1) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=E_dish4_time24
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), DishTag => :((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 1), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 1) ÷ 8) % 64) * 257 + (((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24 + (((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 1) % 8) * 32
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) + 1) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) + 1) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=E_dish8_time24
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), DishTag => :((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) + 1), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) + 1) ÷ 8) % 64) * 257 + (((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24 + (((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) + 1) % 8) * 32
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) + 1) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) + 1) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=E_dish12_time24
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), DishTag => :(((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) + 1), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) + 1) ÷ 8) % 64) * 257 + (((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24 + ((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 2) + 1) % 8) * 32
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 1) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 1) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=E_dish256_time24
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), DishTag => :((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 1), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 1) ÷ 8) % 64) * 257 + (((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24 + (((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 1) % 8) * 32
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 1) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 1) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=E_dish260_time24
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), DishTag => :(((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 1), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 1) ÷ 8) % 64) * 257 + (((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24 + ((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 1) % 8) * 32
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) + 1) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) + 1) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=E_dish264_time24
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), DishTag => :(((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) + 1), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) + 1) ÷ 8) % 64) * 257 + (((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24 + ((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) + 1) % 8) * 32
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=((((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) + 1) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=((((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) + 1) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=E_dish268_time24
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), DishTag => :((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) + 1), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) + 1) ÷ 8) % 64) * 257 + (((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24 + (((((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 16) * 16 + 4) + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 16) % 2) * 8) + 256) + 2) + 1) % 8) * 32
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 24) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 24) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 48) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 48) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 72) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 72) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 96) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 96) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 120) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 120) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 144) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 144) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 168) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 168) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 192) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 192) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 216) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 216) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 240) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 240) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 264) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 264) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 288) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 288) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 312) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 312) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 336) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 336) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 360) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 360) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 384) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 384) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 408) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 408) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 432) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 432) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 456) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 456) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 480) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 480) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishTag.dish:8/64
            mach=Machine.SharedTag.shared:257/64
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 504) ÷ 8) % 64) * 257
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.DishTag.dish:1/8
            mach=Machine.SharedTag.shared:32/8
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24 + 504) ÷ 1) % 8) * 32
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
mem_var=Fsh2_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishTag.dish:1/24 => Machine.WarpTag.warp:1/24
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.ThreadTag.thread:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/4 => Machine.SIMDTag.simd:1/4
    Physics.PolrTag.polr:1/2 => Machine.SIMDTag.simd:4/2
    Physics.TimeTag.time:1/24 => Machine.SharedTag.shared:1/24
    Physics.TimeTag.time:24/2 => Machine.SIMDTag.simd:8/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
    reg_name=Freg1′
        vals=Dict{Any, Union{Expr, Number, Symbol}}(TimeTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48), DishTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 24 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) % 24
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 1) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 2) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 3) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 4) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 5) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 6) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 7) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 8) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 9) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 10) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 11) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 12) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 13) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 14) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 15) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 16) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 17) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 18) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 19) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 20) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 21) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 22) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
            phys=Physics.DishNhiTag.dishNhi:1/4
            mach=Machine.SharedTag.shared:4806/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 4806
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SIMDTag.simd:4/2
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.SIMDTag.simd:8/2
            phys=Physics.DishNloTag.dishNlo:1/6
            mach=Machine.SharedTag.shared:801/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 801
            phys=Physics.TimeTag.time:1/24
            mach=Machine.SharedTag.shared:1/24
                machval=(((((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48 + 23) ÷ 1) % 24) * 1
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:198/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 198
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:33/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 33
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.IntValueTag.intvalue:1/4
            mach=Machine.SIMDTag.simd:1/4
mem_var=Gsh_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.BeamQTag.beamQ:1/2 => Machine.RegisterTag.cplx:1/2
    Physics.BeamQTag.beamQ:2/32 => Machine.ThreadTag.thread:1/32
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishMhiTag.dishMhi:1/4 => Machine.WarpTag.warp:6/4
    Physics.DishMloTag.dishMlo:1/6 => Machine.WarpTag.warp:1/6
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.PolrTag.polr:1/2 => Machine.RegisterTag.polr:1/2
    Physics.TimeTag.time:1/4 => Machine.RegisterTag.time:1/4
    Physics.TimeTag.time:4/6 => Machine.LoopTag.t_inner_lo:4/6
    Physics.TimeTag.time:24/2 => Machine.LoopTag.t_inner_hi:24/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.BeamQTag.beamQ:1/2 => Machine.SharedTag.shared:8256/2
    Physics.BeamQTag.beamQ:2/2 => Machine.SharedTag.shared:4112/2
    Physics.BeamQTag.beamQ:4/2 => Machine.SharedTag.shared:2056/2
    Physics.BeamQTag.beamQ:8/2 => Machine.SharedTag.shared:1028/2
    Physics.BeamQTag.beamQ:16/2 => Machine.SharedTag.shared:514/2
    Physics.BeamQTag.beamQ:32/2 => Machine.SharedTag.shared:257/2
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishMhiTag.dishMhi:1/4 => Machine.SharedTag.shared:6/4
    Physics.DishMloTag.dishMlo:1/6 => Machine.SharedTag.shared:1/6
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.PolrTag.polr:1/2 => Machine.SharedTag.shared:32/2
    Physics.TimeTag.time:1/4 => Machine.SharedTag.shared:64/4
    Physics.TimeTag.time:4/6 => Machine.LoopTag.t_inner_lo:4/6
    Physics.TimeTag.time:24/2 => Machine.UnrolledLoopTag.t_inner_hi:24/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx0_polr0_time0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 0, TimeTag => :((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 0 + (((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx1_polr0_time0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :(1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 0, TimeTag => :((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + ((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 0 + (((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx0_polr1_time0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 1, TimeTag => :((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 32 + (((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx1_polr1_time0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :(1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 1, TimeTag => :((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + ((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 32 + (((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx0_polr0_time1
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 0, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 0 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx1_polr0_time1
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :(1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 0, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + ((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 0 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx0_polr1_time1
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 1, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 32 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx1_polr1_time1
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :(1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 1, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + ((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 32 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx0_polr0_time2
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 0, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 0 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx1_polr0_time2
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :(1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 0, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + ((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 0 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx0_polr1_time2
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 1, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 32 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx1_polr1_time2
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :(1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 1, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + ((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 32 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx0_polr0_time3
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 0, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 0 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx1_polr0_time3
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :(1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 0, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + ((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 0 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx0_polr1_time3
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 1, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 32 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx1_polr1_time3
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :(1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 1, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + ((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 32 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
mem_var=I_memory:
    reg_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/32 => Machine.ThreadTag.thread:1/32
    Physics.BeamQTag.beamQ:1/2 => Machine.RegisterTag.beamQ:1/2
    Physics.BeamQTag.beamQ:2/24 => Machine.WarpTag.warp:1/24
    Physics.DSTimeTag.dstime:1/52 => Machine.LoopTag.dstime:1/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56

    mem_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/24 => Machine.MemoryTag.memory:1/24
    Physics.BeamQTag.beamQ:1/48 => Machine.MemoryTag.memory:24/48
    Physics.DSTimeTag.dstime:1/52 => Machine.MemoryTag.memory:1152/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.MemoryTag.memory:59904/56

            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ1
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
mem_var=I_memory:
    reg_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/32 => Machine.ThreadTag.thread:1/32
    Physics.BeamQTag.beamQ:1/2 => Machine.RegisterTag.beamQ:1/2
    Physics.BeamQTag.beamQ:2/24 => Machine.WarpTag.warp:1/24
    Physics.DSTimeTag.dstime:1/52 => Machine.LoopTag.dstime:1/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56

    mem_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/24 => Machine.MemoryTag.memory:1/24
    Physics.BeamQTag.beamQ:1/48 => Machine.MemoryTag.memory:24/48
    Physics.DSTimeTag.dstime:1/52 => Machine.MemoryTag.memory:1152/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.MemoryTag.memory:59904/56

            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ1
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
mem_var=I_memory:
    reg_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/32 => Machine.ThreadTag.thread:1/32
    Physics.BeamQTag.beamQ:1/2 => Machine.RegisterTag.beamQ:1/2
    Physics.BeamQTag.beamQ:2/24 => Machine.WarpTag.warp:1/24
    Physics.DSTimeTag.dstime:1/52 => Machine.LoopTag.dstime:1/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56

    mem_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/24 => Machine.MemoryTag.memory:1/24
    Physics.BeamQTag.beamQ:1/48 => Machine.MemoryTag.memory:24/48
    Physics.DSTimeTag.dstime:1/52 => Machine.MemoryTag.memory:1152/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.MemoryTag.memory:59904/56

            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ1
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
mem_var=I_memory:
    reg_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/32 => Machine.ThreadTag.thread:1/32
    Physics.BeamQTag.beamQ:1/2 => Machine.RegisterTag.beamQ:1/2
    Physics.BeamQTag.beamQ:2/24 => Machine.WarpTag.warp:1/24
    Physics.DSTimeTag.dstime:1/52 => Machine.LoopTag.dstime:1/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56

    mem_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/24 => Machine.MemoryTag.memory:1/24
    Physics.BeamQTag.beamQ:1/48 => Machine.MemoryTag.memory:24/48
    Physics.DSTimeTag.dstime:1/52 => Machine.MemoryTag.memory:1152/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.MemoryTag.memory:59904/56

            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ1
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
mem_var=Gsh_shared:
    reg_layout=Layout{Physics,Machine}:
    Physics.BeamQTag.beamQ:1/2 => Machine.RegisterTag.cplx:1/2
    Physics.BeamQTag.beamQ:2/32 => Machine.ThreadTag.thread:1/32
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishMhiTag.dishMhi:1/4 => Machine.WarpTag.warp:6/4
    Physics.DishMloTag.dishMlo:1/6 => Machine.WarpTag.warp:1/6
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.PolrTag.polr:1/2 => Machine.RegisterTag.polr:1/2
    Physics.TimeTag.time:1/4 => Machine.RegisterTag.time:1/4
    Physics.TimeTag.time:4/6 => Machine.LoopTag.t_inner_lo:4/6
    Physics.TimeTag.time:24/2 => Machine.LoopTag.t_inner_hi:24/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

    mem_layout=Layout{Physics,Machine}:
    Physics.BeamQTag.beamQ:1/2 => Machine.SharedTag.shared:8256/2
    Physics.BeamQTag.beamQ:2/2 => Machine.SharedTag.shared:4112/2
    Physics.BeamQTag.beamQ:4/2 => Machine.SharedTag.shared:2056/2
    Physics.BeamQTag.beamQ:8/2 => Machine.SharedTag.shared:1028/2
    Physics.BeamQTag.beamQ:16/2 => Machine.SharedTag.shared:514/2
    Physics.BeamQTag.beamQ:32/2 => Machine.SharedTag.shared:257/2
    Physics.CplxTag.cplx:1/2 => Machine.SIMDTag.simd:16/2
    Physics.DishMhiTag.dishMhi:1/4 => Machine.SharedTag.shared:6/4
    Physics.DishMloTag.dishMlo:1/6 => Machine.SharedTag.shared:1/6
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56
    Physics.PolrTag.polr:1/2 => Machine.SharedTag.shared:32/2
    Physics.TimeTag.time:1/4 => Machine.SharedTag.shared:64/4
    Physics.TimeTag.time:4/6 => Machine.LoopTag.t_inner_lo:4/6
    Physics.TimeTag.time:24/2 => Machine.UnrolledLoopTag.t_inner_hi:24/2
    Physics.TimeTag.time:48/43 => Machine.LoopTag.t_outer:48/43

            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx0_polr0_time0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 0, TimeTag => :((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 0 + (((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx1_polr0_time0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :(1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 0, TimeTag => :((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + ((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 0 + (((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx0_polr1_time0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 1, TimeTag => :((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 32 + (((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx1_polr1_time0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :(1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 1, TimeTag => :((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + ((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 32 + (((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx0_polr0_time1
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 0, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 0 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx1_polr0_time1
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :(1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 0, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + ((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 0 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx0_polr1_time1
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 1, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 32 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx1_polr1_time1
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :(1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 1, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + ((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 32 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 1) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx0_polr0_time2
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 0, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 0 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx1_polr0_time2
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :(1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 0, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + ((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 0 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx0_polr1_time2
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 1, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 32 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx1_polr1_time2
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :(1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 1, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + ((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 32 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 2) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx0_polr0_time3
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 0, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 0 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx1_polr0_time3
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :(1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 0, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + ((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 0 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx0_polr1_time3
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 1, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 32 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + ((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
    reg_name=G_cplx1_polr1_time3
        vals=Dict{Any, Union{Expr, Number, Symbol}}(DishMhiTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4), BeamQTag => :(1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), PolrTag => 1, TimeTag => :(((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24), DishMloTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 8) % 2) * 1028 + ((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) % 2) * 8256 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 2) * 4112 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 32) % 2) * 257 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 16) % 2) * 514 + 32 + ((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + 3) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) % 4) * 64 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) ÷ 6) % 4) % 4) * 6 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 6) % 6 + (((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 4) % 2) * 2056
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
mem_var=I_memory:
    reg_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/32 => Machine.ThreadTag.thread:1/32
    Physics.BeamQTag.beamQ:1/2 => Machine.RegisterTag.beamQ:1/2
    Physics.BeamQTag.beamQ:2/24 => Machine.WarpTag.warp:1/24
    Physics.DSTimeTag.dstime:1/52 => Machine.LoopTag.dstime:1/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56

    mem_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/24 => Machine.MemoryTag.memory:1/24
    Physics.BeamQTag.beamQ:1/48 => Machine.MemoryTag.memory:24/48
    Physics.DSTimeTag.dstime:1/52 => Machine.MemoryTag.memory:1152/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.MemoryTag.memory:59904/56

            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ1
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
mem_var=I_memory:
    reg_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/32 => Machine.ThreadTag.thread:1/32
    Physics.BeamQTag.beamQ:1/2 => Machine.RegisterTag.beamQ:1/2
    Physics.BeamQTag.beamQ:2/24 => Machine.WarpTag.warp:1/24
    Physics.DSTimeTag.dstime:1/52 => Machine.LoopTag.dstime:1/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56

    mem_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/24 => Machine.MemoryTag.memory:1/24
    Physics.BeamQTag.beamQ:1/48 => Machine.MemoryTag.memory:24/48
    Physics.DSTimeTag.dstime:1/52 => Machine.MemoryTag.memory:1152/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.MemoryTag.memory:59904/56

            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ1
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
mem_var=I_memory:
    reg_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/32 => Machine.ThreadTag.thread:1/32
    Physics.BeamQTag.beamQ:1/2 => Machine.RegisterTag.beamQ:1/2
    Physics.BeamQTag.beamQ:2/24 => Machine.WarpTag.warp:1/24
    Physics.DSTimeTag.dstime:1/52 => Machine.LoopTag.dstime:1/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56

    mem_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/24 => Machine.MemoryTag.memory:1/24
    Physics.BeamQTag.beamQ:1/48 => Machine.MemoryTag.memory:24/48
    Physics.DSTimeTag.dstime:1/52 => Machine.MemoryTag.memory:1152/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.MemoryTag.memory:59904/56

            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ1
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((0 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamQTag.beamQ:8/2
            mach=Machine.SharedTag.shared:1028/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 8) % 2) * 1028
            phys=Physics.TimeTag.time:4/6
            mach=Machine.LoopTag.t_inner_lo:4/6
            phys=Physics.BeamQTag.beamQ:1/2
            mach=Machine.SharedTag.shared:8256/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 2) * 8256
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.BlockTag.block:1/56
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:2/2
            mach=Machine.SharedTag.shared:4112/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 2) % 2) * 4112
            phys=Physics.BeamQTag.beamQ:32/2
            mach=Machine.SharedTag.shared:257/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 32) % 2) * 257
            phys=Physics.BeamQTag.beamQ:16/2
            mach=Machine.SharedTag.shared:514/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 16) % 2) * 514
            phys=Physics.PolrTag.polr:1/2
            mach=Machine.SharedTag.shared:32/2
                machval=((1 ÷ 1) % 2) * 32
            phys=Physics.TimeTag.time:1/4
            mach=Machine.SharedTag.shared:64/4
                machval=(((((((IndexSpaces.assume_inrange(t_inner_lo, 0, 4, 24) ÷ 4) % 6) * 4 + t % 4) + ((IndexSpaces.assume_inrange(t_outer, 0, 48, 2064) ÷ 48) % 43) * 48) + ((IndexSpaces.assume_inrange(t_inner_hi, 0, 24, 48) ÷ 24) % 2) * 24) ÷ 1) % 4) * 64
            phys=Physics.TimeTag.time:48/43
            mach=Machine.LoopTag.t_outer:48/43
            phys=Physics.TimeTag.time:24/2
            mach=Machine.UnrolledLoopTag.t_inner_hi:24/2
            phys=Physics.DishMhiTag.dishMhi:1/4
            mach=Machine.SharedTag.shared:6/4
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 4) ÷ 1) % 4) * 6
            phys=Physics.DishMloTag.dishMlo:1/6
            mach=Machine.SharedTag.shared:1/6
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) ÷ 4) % 8) ÷ 1) % 6) * 1
            phys=Physics.BeamQTag.beamQ:4/2
            mach=Machine.SharedTag.shared:2056/2
                machval=(((1 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 4) % 2) * 2056
            phys=Physics.CplxTag.cplx:1/2
            mach=Machine.SIMDTag.simd:16/2
mem_var=I_memory:
    reg_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/32 => Machine.ThreadTag.thread:1/32
    Physics.BeamQTag.beamQ:1/2 => Machine.RegisterTag.beamQ:1/2
    Physics.BeamQTag.beamQ:2/24 => Machine.WarpTag.warp:1/24
    Physics.DSTimeTag.dstime:1/52 => Machine.LoopTag.dstime:1/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56

    mem_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/24 => Machine.MemoryTag.memory:1/24
    Physics.BeamQTag.beamQ:1/48 => Machine.MemoryTag.memory:24/48
    Physics.DSTimeTag.dstime:1/52 => Machine.MemoryTag.memory:1152/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.MemoryTag.memory:59904/56

            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ1
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
mem_var=I_memory:
    reg_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/32 => Machine.ThreadTag.thread:1/32
    Physics.BeamQTag.beamQ:1/2 => Machine.RegisterTag.beamQ:1/2
    Physics.BeamQTag.beamQ:2/24 => Machine.WarpTag.warp:1/24
    Physics.DSTimeTag.dstime:1/52 => Machine.LoopTag.dstime:1/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.BlockTag.block:1/56

    mem_layout=Layout{Physics,Machine}:
    Physics.BeamPTag.beamP:1/2 => Machine.SIMDTag.simd:16/2
    Physics.BeamPTag.beamP:2/24 => Machine.MemoryTag.memory:1/24
    Physics.BeamQTag.beamQ:1/48 => Machine.MemoryTag.memory:24/48
    Physics.DSTimeTag.dstime:1/52 => Machine.MemoryTag.memory:1152/52
    Physics.FloatValueTag.floatvalue:1/16 => Machine.SIMDTag.simd:1/16
    Physics.FreqTag.freq:1/56 => Machine.MemoryTag.memory:59904/56

            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ0
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
            phys=Physics.FloatValueTag.floatvalue:1/16
            mach=Machine.SIMDTag.simd:1/16
            phys=Physics.BeamQTag.beamQ:1/48
            mach=Machine.MemoryTag.memory:24/48
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) ÷ 1) % 48) * 24
            phys=Physics.DSTimeTag.dstime:1/52
            mach=Machine.MemoryTag.memory:1152/52
                machval=(((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) ÷ 1) % 52) * 1152
            phys=Physics.BeamPTag.beamP:1/2
            mach=Machine.SIMDTag.simd:16/2
            phys=Physics.BeamPTag.beamP:2/24
            mach=Machine.MemoryTag.memory:1/24
                machval=((((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24) * 1
            phys=Physics.FreqTag.freq:1/56
            mach=Machine.MemoryTag.memory:59904/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 59904
    reg_name=I_beamQ1
        vals=Dict{Any, Union{Expr, Number, Symbol}}(BeamQTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1), BeamPTag => :((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2), DSTimeTag => :(IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52), FreqTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) * 2 + 1) % 48) * 24 + ((IndexSpaces.assume_inrange(dstime, 0, 1, 52) % 52) % 52) * 1152 + (((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) * 2) ÷ 2) % 24 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 59904
mem_var=info_memory:
    reg_layout=Layout{Physics,Machine}:
    Physics.BlockTag.block:1/56 => Machine.BlockTag.block:1/56
    Physics.IntValueTag.intvalue:1/32 => Machine.SIMDTag.simd:1/32
    Physics.ThreadTag.thread:1/32 => Machine.ThreadTag.thread:1/32
    Physics.WarpTag.warp:1/24 => Machine.WarpTag.warp:1/24

    mem_layout=Layout{Physics,Machine}:
    Physics.BlockTag.block:1/56 => Machine.MemoryTag.memory:768/56
    Physics.IntValueTag.intvalue:1/32 => Machine.SIMDTag.simd:1/32
    Physics.ThreadTag.thread:1/32 => Machine.MemoryTag.memory:1/32
    Physics.WarpTag.warp:1/24 => Machine.MemoryTag.memory:32/24

            phys=Physics.WarpTag.warp:1/24
            mach=Machine.MemoryTag.memory:32/24
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) ÷ 1) % 24) * 32
            phys=Physics.ThreadTag.thread:1/32
            mach=Machine.MemoryTag.memory:1/32
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) ÷ 1) % 32) * 1
            phys=Physics.BlockTag.block:1/56
            mach=Machine.MemoryTag.memory:768/56
                machval=(((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) ÷ 1) % 56) * 768
            phys=Physics.IntValueTag.intvalue:1/32
            mach=Machine.SIMDTag.simd:1/32
    reg_name=info
        vals=Dict{Any, Union{Expr, Number, Symbol}}(ThreadTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32), WarpTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24), BlockTag => :(IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56))
        addr=((IndexSpaces.assume_inrange(IndexSpaces.cuda_warpidx(), 0, 24) % 24) % 24) * 32 + (IndexSpaces.assume_inrange(IndexSpaces.cuda_threadidx(), 0, 32) % 32) % 32 + ((IndexSpaces.assume_inrange(IndexSpaces.cuda_blockidx(), 0, 56) % 56) % 56) * 768
[Done creating frb kernel]
CHORD FRB beamformer
Compiling kernel...
Allocating input data...
Setting up input data...
dish = 249
freq = 29
polr = 0
time = 1068
Wvalue = 0.36607796f0 - 0.7806393f0im
Evalue = 2 + 7im
dstime = 26
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Done.
CHORD FRB beamformer
Compiling kernel...
Allocating input data...
Self-test iteration #1:
Setting up input data...
dish = 249
freq = 29
polr = 0
time = 1068
Wvalue = 0.36607796f0 - 0.7806393f0im
Evalue = 2 + 7im
dstime = 26
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #2:
Setting up input data...
dish = 69
freq = 39
polr = 0
time = 2029
Wvalue = -0.017679665f0 - 0.07402898f0im
Evalue = -5 - 7im
dstime = 50
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #3:
Setting up input data...
dish = 326
freq = 11
polr = 1
time = 1804
Wvalue = 0.4964291f0 + 0.16948603f0im
Evalue = -6 + 6im
dstime = 45
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #4:
Setting up input data...
dish = 443
freq = 55
polr = 0
time = 299
Wvalue = 0.013335339f0 + 0.0051926626f0im
Evalue = -5 - 5im
dstime = 7
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #5:
Setting up input data...
dish = 310
freq = 23
polr = 1
time = 41
Wvalue = -0.00072253274f0 - 0.10677186f0im
Evalue = 7 + 1im
dstime = 1
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #6:
Setting up input data...
dish = 492
freq = 25
polr = 1
time = 1473
Wvalue = -0.23372367f0 - 0.28525877f0im
Evalue = -3 + 2im
dstime = 36
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #7:
Setting up input data...
dish = 4
freq = 29
polr = 0
time = 1381
Wvalue = -0.6405029f0 + 0.44668418f0im
Evalue = -2 - 5im
dstime = 34
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #8:
Setting up input data...
dish = 431
freq = 6
polr = 1
time = 2054
Wvalue = -0.122906916f0 - 0.032210395f0im
Evalue = 4 + 5im
dstime = 51
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #9:
Setting up input data...
dish = 313
freq = 48
polr = 0
time = 1941
Wvalue = -0.13697161f0 - 0.39114696f0im
Evalue = 2 - 7im
dstime = 48
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #10:
Setting up input data...
dish = 5
freq = 22
polr = 0
time = 789
Wvalue = 0.003957305f0 - 0.39201403f0im
Evalue = 7 - 5im
dstime = 19
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #11:
Setting up input data...
dish = 6
freq = 6
polr = 1
time = 1327
Wvalue = -0.061282706f0 - 0.01097996f0im
Evalue = -1 - 4im
dstime = 33
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #12:
Setting up input data...
dish = 90
freq = 41
polr = 0
time = 1323
Wvalue = 0.85149986f0 - 0.24173726f0im
Evalue = -3 + 6im
dstime = 33
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #13:
Setting up input data...
dish = 124
freq = 51
polr = 1
time = 812
Wvalue = -0.83320975f0 - 0.2814991f0im
Evalue = -3 + 5im
dstime = 20
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #14:
Setting up input data...
dish = 408
freq = 7
polr = 0
time = 564
Wvalue = 0.048453942f0 + 0.40953878f0im
Evalue = -6 - 5im
dstime = 14
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #15:
Setting up input data...
dish = 135
freq = 14
polr = 0
time = 1657
Wvalue = -0.88925844f0 - 0.33243257f0im
Evalue = 7 - 3im
dstime = 41
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #16:
Setting up input data...
dish = 19
freq = 17
polr = 0
time = 1012
Wvalue = -0.0059774625f0 + 0.0061536734f0im
Evalue = -6 + 0im
dstime = 25
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #17:
Setting up input data...
dish = 38
freq = 47
polr = 1
time = 988
Wvalue = 0.21972078f0 - 0.19476055f0im
Evalue = -5 - 1im
dstime = 24
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #18:
Setting up input data...
dish = 398
freq = 18
polr = 1
time = 18
Wvalue = 0.048563585f0 - 0.058633994f0im
Evalue = -2 + 2im
dstime = 0
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #19:
Setting up input data...
dish = 434
freq = 38
polr = 0
time = 802
Wvalue = -0.113800295f0 - 0.5192574f0im
Evalue = -2 + 3im
dstime = 20
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #20:
Setting up input data...
dish = 217
freq = 39
polr = 0
time = 704
Wvalue = 0.13096291f0 + 0.7617541f0im
Evalue = 0 - 2im
dstime = 17
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #21:
Setting up input data...
dish = 251
freq = 7
polr = 0
time = 1118
Wvalue = 0.010968361f0 + 0.12676415f0im
Evalue = -5 + 6im
dstime = 27
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #22:
Setting up input data...
dish = 73
freq = 37
polr = 1
time = 1640
Wvalue = 0.12216603f0 + 0.28983545f0im
Evalue = 0 - 6im
dstime = 41
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #23:
Setting up input data...
dish = 427
freq = 46
polr = 1
time = 1519
Wvalue = -0.043027353f0 + 0.016969671f0im
Evalue = 1 + 7im
dstime = 37
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #24:
Setting up input data...
dish = 179
freq = 49
polr = 1
time = 1305
Wvalue = -0.47671944f0 + 0.23500708f0im
Evalue = 4 + 4im
dstime = 32
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #25:
Setting up input data...
dish = 379
freq = 24
polr = 1
time = 56
Wvalue = -0.027548142f0 + 0.3998407f0im
Evalue = 2 + 1im
dstime = 1
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #26:
Setting up input data...
dish = 78
freq = 13
polr = 1
time = 397
Wvalue = -0.014650839f0 - 0.050460946f0im
Evalue = -6 + 4im
dstime = 9
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #27:
Setting up input data...
dish = 170
freq = 21
polr = 1
time = 1450
Wvalue = 0.6174151f0 - 0.1933859f0im
Evalue = -5 + 2im
dstime = 36
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #28:
Setting up input data...
dish = 166
freq = 40
polr = 0
time = 1921
Wvalue = 0.05542828f0 - 0.0486346f0im
Evalue = -2 - 4im
dstime = 48
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #29:
Setting up input data...
dish = 131
freq = 32
polr = 1
time = 1408
Wvalue = -0.13848528f0 - 0.017565407f0im
Evalue = 4 - 6im
dstime = 35
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #30:
Setting up input data...
dish = 360
freq = 54
polr = 0
time = 814
Wvalue = 0.20792921f0 - 0.21283521f0im
Evalue = -7 + 7im
dstime = 20
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #31:
Setting up input data...
dish = 237
freq = 27
polr = 1
time = 465
Wvalue = 0.1253563f0 + 0.374849f0im
Evalue = -3 + 4im
dstime = 11
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #32:
Setting up input data...
dish = 479
freq = 41
polr = 0
time = 322
Wvalue = 0.0055528395f0 - 0.017625077f0im
Evalue = 2 - 6im
dstime = 8
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #33:
Setting up input data...
dish = 120
freq = 51
polr = 1
time = 1531
Wvalue = 0.36187556f0 + 0.15263672f0im
Evalue = 4 + 2im
dstime = 38
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #34:
Setting up input data...
dish = 111
freq = 25
polr = 1
time = 402
Wvalue = 0.40568617f0 - 0.0393354f0im
Evalue = -6 + 5im
dstime = 10
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #35:
Setting up input data...
dish = 6
freq = 42
polr = 1
time = 1223
Wvalue = 0.08669895f0 - 0.2042756f0im
Evalue = 1 - 1im
dstime = 30
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #36:
Setting up input data...
dish = 462
freq = 41
polr = 1
time = 1868
Wvalue = 0.36259618f0 - 0.040575895f0im
Evalue = 0 + 0im
dstime = 46
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #37:
Setting up input data...
dish = 329
freq = 9
polr = 0
time = 1789
Wvalue = 0.02567561f0 + 0.08709604f0im
Evalue = 2 + 0im
dstime = 44
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #38:
Setting up input data...
dish = 324
freq = 31
polr = 1
time = 1465
Wvalue = -0.012307993f0 + 0.39152095f0im
Evalue = 6 + 2im
dstime = 36
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #39:
Setting up input data...
dish = 85
freq = 42
polr = 0
time = 318
Wvalue = -0.24833743f0 - 0.8358513f0im
Evalue = 6 - 5im
dstime = 7
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #40:
Setting up input data...
dish = 285
freq = 13
polr = 0
time = 174
Wvalue = -0.013127021f0 - 0.0018028592f0im
Evalue = 4 + 3im
dstime = 4
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #41:
Setting up input data...
dish = 200
freq = 42
polr = 0
time = 1968
Wvalue = 0.24108979f0 + 0.33540416f0im
Evalue = 1 - 7im
dstime = 49
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #42:
Setting up input data...
dish = 155
freq = 42
polr = 0
time = 1993
Wvalue = 0.1462518f0 + 0.12919699f0im
Evalue = -4 + 4im
dstime = 49
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #43:
Setting up input data...
dish = 409
freq = 38
polr = 1
time = 803
Wvalue = 0.6277333f0 + 0.222703f0im
Evalue = 0 + 7im
dstime = 20
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #44:
Setting up input data...
dish = 48
freq = 31
polr = 1
time = 693
Wvalue = -0.3317149f0 + 0.5136723f0im
Evalue = 7 - 3im
dstime = 17
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #45:
Setting up input data...
dish = 151
freq = 40
polr = 0
time = 1350
Wvalue = -0.21367313f0 - 0.5201239f0im
Evalue = -6 + 6im
dstime = 33
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #46:
Setting up input data...
dish = 3
freq = 27
polr = 0
time = 401
Wvalue = -0.06802399f0 + 0.2578287f0im
Evalue = 5 - 1im
dstime = 10
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #47:
Setting up input data...
dish = 73
freq = 17
polr = 1
time = 1409
Wvalue = -0.24424012f0 - 0.40450254f0im
Evalue = -7 - 6im
dstime = 35
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #48:
Setting up input data...
dish = 352
freq = 11
polr = 1
time = 655
Wvalue = 0.018226001f0 - 0.046194993f0im
Evalue = 2 - 4im
dstime = 16
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #49:
Setting up input data...
dish = 239
freq = 42
polr = 0
time = 1881
Wvalue = 0.33528098f0 - 0.29149732f0im
Evalue = 1 - 6im
dstime = 47
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #50:
Setting up input data...
dish = 133
freq = 42
polr = 0
time = 510
Wvalue = 0.13566649f0 - 0.6619654f0im
Evalue = -7 + 3im
dstime = 12
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #51:
Setting up input data...
dish = 452
freq = 33
polr = 0
time = 1628
Wvalue = -0.12832657f0 + 0.13315341f0im
Evalue = 7 + 2im
dstime = 40
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #52:
Setting up input data...
dish = 418
freq = 52
polr = 0
time = 1794
Wvalue = -0.06438927f0 - 0.17029864f0im
Evalue = 1 - 2im
dstime = 44
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #53:
Setting up input data...
dish = 130
freq = 36
polr = 1
time = 2031
Wvalue = 0.42745066f0 - 0.3330377f0im
Evalue = 0 - 1im
dstime = 50
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #54:
Setting up input data...
dish = 458
freq = 13
polr = 0
time = 1416
Wvalue = 0.105373494f0 + 0.16129431f0im
Evalue = 1 - 3im
dstime = 35
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #55:
Setting up input data...
dish = 353
freq = 38
polr = 0
time = 1073
Wvalue = -0.01725229f0 - 0.09459181f0im
Evalue = 0 - 1im
dstime = 26
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #56:
Setting up input data...
dish = 395
freq = 46
polr = 1
time = 322
Wvalue = 0.35176113f0 - 0.14001507f0im
Evalue = -2 + 1im
dstime = 8
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #57:
Setting up input data...
dish = 420
freq = 9
polr = 0
time = 897
Wvalue = 0.120816626f0 - 0.009100378f0im
Evalue = -7 - 7im
dstime = 22
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #58:
Setting up input data...
dish = 207
freq = 40
polr = 0
time = 1442
Wvalue = 0.06218977f0 + 0.13220909f0im
Evalue = 3 + 0im
dstime = 36
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #59:
Setting up input data...
dish = 447
freq = 6
polr = 0
time = 1789
Wvalue = 0.10270862f0 - 0.14753328f0im
Evalue = -6 + 2im
dstime = 44
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #60:
Setting up input data...
dish = 120
freq = 25
polr = 0
time = 34
Wvalue = -0.39879403f0 - 0.091739506f0im
Evalue = -7 - 1im
dstime = 0
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #61:
Setting up input data...
dish = 93
freq = 48
polr = 1
time = 14
Wvalue = -0.04810796f0 + 0.023133257f0im
Evalue = -7 - 7im
dstime = 0
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #62:
Setting up input data...
dish = 175
freq = 19
polr = 0
time = 175
Wvalue = -0.005140123f0 - 0.5324983f0im
Evalue = 1 - 3im
dstime = 4
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #63:
Setting up input data...
dish = 273
freq = 48
polr = 1
time = 445
Wvalue = -0.02876341f0 - 0.014482065f0im
Evalue = -6 + 4im
dstime = 11
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #64:
Setting up input data...
dish = 140
freq = 37
polr = 0
time = 356
Wvalue = -0.36923295f0 - 0.1462343f0im
Evalue = 3 + 7im
dstime = 8
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #65:
Setting up input data...
dish = 182
freq = 36
polr = 0
time = 1142
Wvalue = -0.3872625f0 + 0.3395071f0im
Evalue = 7 - 6im
dstime = 28
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #66:
Setting up input data...
dish = 190
freq = 42
polr = 1
time = 2014
Wvalue = 0.24941137f0 - 0.06752768f0im
Evalue = 5 + 7im
dstime = 50
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #67:
Setting up input data...
dish = 446
freq = 33
polr = 0
time = 1176
Wvalue = 0.23015942f0 + 0.4315959f0im
Evalue = 7 + 2im
dstime = 29
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #68:
Setting up input data...
dish = 252
freq = 33
polr = 1
time = 329
Wvalue = -0.19406615f0 - 0.1254519f0im
Evalue = -1 - 7im
dstime = 8
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #69:
Setting up input data...
dish = 167
freq = 54
polr = 1
time = 46
Wvalue = 0.047713425f0 - 0.43365723f0im
Evalue = -3 - 4im
dstime = 1
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #70:
Setting up input data...
dish = 434
freq = 30
polr = 1
time = 905
Wvalue = 0.101922624f0 - 0.072011866f0im
Evalue = -3 + 0im
dstime = 22
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #71:
Setting up input data...
dish = 196
freq = 48
polr = 0
time = 1850
Wvalue = 0.07581402f0 - 0.13151832f0im
Evalue = 4 + 2im
dstime = 46
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #72:
Setting up input data...
dish = 445
freq = 11
polr = 1
time = 1859
Wvalue = 0.04817162f0 - 0.37817055f0im
Evalue = -2 - 2im
dstime = 46
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #73:
Setting up input data...
dish = 363
freq = 48
polr = 1
time = 329
Wvalue = 0.09127257f0 + 0.06692531f0im
Evalue = -3 - 4im
dstime = 8
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #74:
Setting up input data...
dish = 348
freq = 49
polr = 1
time = 1824
Wvalue = -0.0015240385f0 - 0.12611194f0im
Evalue = -2 + 2im
dstime = 45
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #75:
Setting up input data...
dish = 104
freq = 47
polr = 0
time = 1606
Wvalue = -0.28645426f0 + 0.266116f0im
Evalue = -2 - 5im
dstime = 40
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #76:
Setting up input data...
dish = 341
freq = 19
polr = 0
time = 1735
Wvalue = 0.10355236f0 - 0.15213853f0im
Evalue = -5 + 0im
dstime = 43
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #77:
Setting up input data...
dish = 235
freq = 7
polr = 0
time = 1261
Wvalue = -0.04087382f0 - 0.06224362f0im
Evalue = -5 + 6im
dstime = 31
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #78:
Setting up input data...
dish = 117
freq = 45
polr = 0
time = 833
Wvalue = -0.02252787f0 + 0.6265304f0im
Evalue = -4 + 4im
dstime = 20
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #79:
Setting up input data...
dish = 147
freq = 25
polr = 0
time = 189
Wvalue = -0.08431182f0 + 0.07226746f0im
Evalue = 7 + 0im
dstime = 4
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #80:
Setting up input data...
dish = 456
freq = 40
polr = 1
time = 1518
Wvalue = 0.48760656f0 - 0.07083833f0im
Evalue = 0 - 5im
dstime = 37
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #81:
Setting up input data...
dish = 233
freq = 16
polr = 0
time = 1648
Wvalue = -0.2389775f0 + 0.13953982f0im
Evalue = 3 + 5im
dstime = 41
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #82:
Setting up input data...
dish = 189
freq = 9
polr = 1
time = 1448
Wvalue = -0.19563133f0 - 0.25901788f0im
Evalue = -4 - 4im
dstime = 36
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #83:
Setting up input data...
dish = 306
freq = 38
polr = 0
time = 1954
Wvalue = -0.13240068f0 - 0.03950853f0im
Evalue = 3 + 0im
dstime = 48
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #84:
Setting up input data...
dish = 475
freq = 2
polr = 0
time = 1993
Wvalue = -0.13194686f0 - 0.13377337f0im
Evalue = -1 - 2im
dstime = 49
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #85:
Setting up input data...
dish = 381
freq = 22
polr = 0
time = 1390
Wvalue = -0.13887171f0 - 0.21884826f0im
Evalue = -4 - 5im
dstime = 34
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #86:
Setting up input data...
dish = 274
freq = 55
polr = 0
time = 1955
Wvalue = 0.23724033f0 + 0.18627058f0im
Evalue = -7 + 1im
dstime = 48
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #87:
Setting up input data...
dish = 93
freq = 6
polr = 0
time = 919
Wvalue = 0.06794671f0 - 0.10222925f0im
Evalue = -7 - 7im
dstime = 22
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #88:
Setting up input data...
dish = 391
freq = 4
polr = 0
time = 1985
Wvalue = 0.052926853f0 - 0.0032777176f0im
Evalue = -7 - 4im
dstime = 49
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #89:
Setting up input data...
dish = 139
freq = 4
polr = 1
time = 707
Wvalue = -0.3370981f0 + 0.6248503f0im
Evalue = -5 - 5im
dstime = 17
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #90:
Setting up input data...
dish = 337
freq = 6
polr = 0
time = 637
Wvalue = 0.24972482f0 + 0.0010770257f0im
Evalue = 3 - 2im
dstime = 15
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #91:
Setting up input data...
dish = 123
freq = 6
polr = 0
time = 1390
Wvalue = 0.027036939f0 - 0.12849723f0im
Evalue = 5 + 7im
dstime = 34
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #92:
Setting up input data...
dish = 268
freq = 31
polr = 1
time = 171
Wvalue = -0.28053465f0 + 0.12793967f0im
Evalue = 5 + 7im
dstime = 4
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #93:
Setting up input data...
dish = 181
freq = 30
polr = 1
time = 955
Wvalue = -0.27829587f0 - 0.1994388f0im
Evalue = -2 - 5im
dstime = 23
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #94:
Setting up input data...
dish = 242
freq = 51
polr = 0
time = 1924
Wvalue = -0.14332424f0 + 0.20533557f0im
Evalue = 7 + 5im
dstime = 48
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #95:
Setting up input data...
dish = 318
freq = 11
polr = 1
time = 513
Wvalue = 0.29771116f0 + 0.33948645f0im
Evalue = -1 - 2im
dstime = 12
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #96:
Setting up input data...
dish = 216
freq = 17
polr = 1
time = 1707
Wvalue = -0.011551555f0 + 0.116499886f0im
Evalue = -7 + 2im
dstime = 42
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #97:
Setting up input data...
dish = 187
freq = 29
polr = 0
time = 1708
Wvalue = 0.05088872f0 - 0.09441432f0im
Evalue = -6 - 7im
dstime = 42
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #98:
Setting up input data...
dish = 158
freq = 11
polr = 1
time = 699
Wvalue = 0.1942183f0 - 0.041502163f0im
Evalue = 4 - 4im
dstime = 17
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #99:
Setting up input data...
dish = 102
freq = 14
polr = 1
time = 1849
Wvalue = -0.06385146f0 + 0.015415355f0im
Evalue = 4 + 1im
dstime = 46
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Self-test iteration #100:
Setting up input data...
dish = 423
freq = 26
polr = 0
time = 508
Wvalue = -0.20599046f0 - 0.016618669f0im
Evalue = -5 + 2im
dstime = 12
Copying data from CPU to GPU...
Running kernel...
Copying data back from GPU to CPU...
Checking results...
    I:
Done.
