// PTX CompilerJob of upchan(CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int32, 1}) in world 33570 for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z17julia_upchan_405313CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE // -- Begin function _Z17julia_upchan_405313CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[8]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z17julia_upchan_405313CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE
.visible .entry _Z17julia_upchan_405313CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE(
	.param .align 8 .b8 _Z17julia_upchan_405313CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_0[8],
	.param .align 8 .b8 _Z17julia_upchan_405313CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z17julia_upchan_405313CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z17julia_upchan_405313CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z17julia_upchan_405313CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_4[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<215>;
	.reg .b16 	%rs<112>;
	.reg .b32 	%r<1127>;
	.reg .f32 	%f<935>;
	.reg .b64 	%rd<119>;

// %bb.0:                               // %conversion
	// begin inline asm
	mov.u32 %r125, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r125, 69887;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd34, [_Z17julia_upchan_405313CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_4];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r2, %r1, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	mov.u32 	%r5, %tid.x;
	or.b32  	%r126, %r4, %r5;
	or.b32  	%r127, %r126, %r2;
	mul.wide.u32 	%rd40, %r127, 4;
	add.s64 	%rd3, %rd34, %rd40;
	mov.u32 	%r128, 1;
	st.global.u32 	[%rd3], %r128;
	bfe.u32 	%r10, %r5, 1, 1;
	and.b32  	%r11, %r5, 1;
	shl.b32 	%r132, %r11, 1;
	shl.b32 	%r133, %r10, 2;
	or.b32  	%r134, %r132, %r133;
	bfe.u32 	%r13, %r5, 2, 1;
	or.b32  	%r14, %r13, %r134;
	or.b32  	%r15, %r14, 8;
	mov.f32 	%f184, 0f40000000;
	mov.f32 	%f185, 0f427C0000;
	div.approx.f32 	%f1, %f185, %f184;
	cvt.rn.f32.s32 	%f186, %r14;
	sub.f32 	%f187, %f186, %f1;
	mov.f32 	%f188, 0f42820000;
	div.approx.f32 	%f189, %f187, %f188;
	abs.f32 	%f190, %f189;
	setp.gt.f32 	%p2, %f190, 0f4B800000;
	mul.f32 	%f191, %f189, 0f00000000;
	mov.f32 	%f216, 0f41800000;
	div.approx.f32 	%f3, %f187, %f216;
	setp.eq.f32 	%p7, %f3, 0f00000000;
	mov.f32 	%f902, 0f3F800000;
	mov.f32 	%f895, %f902;
	@%p7 bra 	LBB0_4;
// %bb.3:                               // %L291
	sin.approx.f32 	%f217, %f3;
	div.approx.f32 	%f895, %f217, %f3;
LBB0_4:                                 // %L294
	selp.f32 	%f192, %f191, %f189, %p2;
	cvt.rn.f32.s32 	%f220, %r15;
	sub.f32 	%f221, %f220, %f1;
	div.approx.f32 	%f223, %f221, %f188;
	abs.f32 	%f224, %f223;
	setp.gt.f32 	%p8, %f224, 0f4B800000;
	mul.f32 	%f225, %f223, 0f00000000;
	selp.f32 	%f226, %f225, %f223, %p8;
	div.approx.f32 	%f8, %f221, %f216;
	setp.eq.f32 	%p13, %f8, 0f00000000;
	mov.f32 	%f896, %f902;
	@%p13 bra 	LBB0_6;
// %bb.5:                               // %L311
	sin.approx.f32 	%f251, %f8;
	div.approx.f32 	%f896, %f251, %f8;
LBB0_6:                                 // %L314
	add.f32 	%f193, %f192, %f192;
	add.f32 	%f227, %f226, %f226;
	or.b32  	%r152, %r14, 16;
	or.b32  	%r17, %r14, 24;
	cvt.rn.f32.s32 	%f255, %r152;
	sub.f32 	%f256, %f255, %f1;
	div.approx.f32 	%f258, %f256, %f188;
	abs.f32 	%f259, %f258;
	setp.gt.f32 	%p14, %f259, 0f4B800000;
	mul.f32 	%f260, %f258, 0f00000000;
	selp.f32 	%f261, %f260, %f258, %p14;
	add.f32 	%f262, %f261, %f261;
	div.approx.f32 	%f12, %f256, %f216;
	setp.eq.f32 	%p19, %f12, 0f00000000;
	mov.f32 	%f897, %f902;
	@%p19 bra 	LBB0_8;
// %bb.7:                               // %L392
	sin.approx.f32 	%f286, %f12;
	div.approx.f32 	%f897, %f286, %f12;
LBB0_8:                                 // %L395
	mov.b32 	%r135, %f193;
	mov.b32 	%r142, %f227;
	mov.b32 	%r153, %f262;
	cvt.rn.f32.s32 	%f289, %r17;
	sub.f32 	%f290, %f289, %f1;
	div.approx.f32 	%f292, %f290, %f188;
	abs.f32 	%f293, %f292;
	setp.gt.f32 	%p20, %f293, 0f4B800000;
	mul.f32 	%f294, %f292, 0f00000000;
	selp.f32 	%f295, %f294, %f292, %p20;
	add.f32 	%f296, %f295, %f295;
	mov.b32 	%r160, %f296;
	div.approx.f32 	%f17, %f290, %f216;
	setp.eq.f32 	%p25, %f17, 0f00000000;
	mov.f32 	%f898, %f902;
	@%p25 bra 	LBB0_10;
// %bb.9:                               // %L412
	sin.approx.f32 	%f320, %f17;
	div.approx.f32 	%f898, %f320, %f17;
LBB0_10:                                // %L415
	and.b32  	%r136, %r135, -2147483648;
	and.b32  	%r143, %r142, -2147483648;
	and.b32  	%r154, %r153, -2147483648;
	and.b32  	%r161, %r160, -2147483648;
	or.b32  	%r170, %r14, 32;
	or.b32  	%r19, %r14, 40;
	cvt.rn.f32.s32 	%f324, %r170;
	sub.f32 	%f325, %f324, %f1;
	div.approx.f32 	%f327, %f325, %f188;
	abs.f32 	%f328, %f327;
	setp.gt.f32 	%p26, %f328, 0f4B800000;
	mul.f32 	%f329, %f327, 0f00000000;
	selp.f32 	%f330, %f329, %f327, %p26;
	add.f32 	%f331, %f330, %f330;
	mov.b32 	%r171, %f331;
	and.b32  	%r172, %r171, -2147483648;
	div.approx.f32 	%f21, %f325, %f216;
	setp.eq.f32 	%p31, %f21, 0f00000000;
	mov.f32 	%f899, %f902;
	@%p31 bra 	LBB0_12;
// %bb.11:                              // %L493
	sin.approx.f32 	%f355, %f21;
	div.approx.f32 	%f899, %f355, %f21;
LBB0_12:                                // %L496
	cvt.u16.u32 	%rs1, %r5;
	or.b32  	%r137, %r136, 1056964608;
	or.b32  	%r144, %r143, 1056964608;
	or.b32  	%r155, %r154, 1056964608;
	or.b32  	%r162, %r161, 1056964608;
	or.b32  	%r173, %r172, 1056964608;
	cvt.rn.f32.s32 	%f358, %r19;
	sub.f32 	%f359, %f358, %f1;
	div.approx.f32 	%f361, %f359, %f188;
	abs.f32 	%f362, %f361;
	setp.gt.f32 	%p32, %f362, 0f4B800000;
	mul.f32 	%f363, %f361, 0f00000000;
	selp.f32 	%f364, %f363, %f361, %p32;
	add.f32 	%f365, %f364, %f364;
	mov.b32 	%r178, %f365;
	and.b32  	%r179, %r178, -2147483648;
	or.b32  	%r180, %r179, 1056964608;
	div.approx.f32 	%f26, %f359, %f216;
	setp.eq.f32 	%p37, %f26, 0f00000000;
	mov.f32 	%f900, %f902;
	@%p37 bra 	LBB0_14;
// %bb.13:                              // %L513
	sin.approx.f32 	%f389, %f26;
	div.approx.f32 	%f900, %f389, %f26;
LBB0_14:                                // %L516
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	mov.b32 	%f194, %r137;
	mov.b32 	%f228, %r144;
	mov.b32 	%f263, %r155;
	mov.b32 	%f297, %r162;
	mov.b32 	%f332, %r173;
	mov.b32 	%f366, %r180;
	or.b32  	%r188, %r14, 48;
	or.b32  	%r21, %r14, 56;
	cvt.rn.f32.s32 	%f393, %r188;
	sub.f32 	%f394, %f393, %f1;
	div.approx.f32 	%f396, %f394, %f188;
	abs.f32 	%f397, %f396;
	setp.gt.f32 	%p38, %f397, 0f4B800000;
	mul.f32 	%f398, %f396, 0f00000000;
	selp.f32 	%f399, %f398, %f396, %p38;
	add.f32 	%f400, %f399, %f399;
	mov.b32 	%r189, %f400;
	and.b32  	%r190, %r189, -2147483648;
	or.b32  	%r191, %r190, 1056964608;
	mov.b32 	%f401, %r191;
	div.approx.f32 	%f30, %f394, %f216;
	setp.eq.f32 	%p43, %f30, 0f00000000;
	mov.f32 	%f901, %f902;
	@%p43 bra 	LBB0_16;
// %bb.15:                              // %L594
	sin.approx.f32 	%f424, %f30;
	div.approx.f32 	%f901, %f424, %f30;
LBB0_16:                                // %L597
	or.b16  	%rs4, %rs3, %rs2;
	add.f32 	%f195, %f193, %f194;
	abs.f32 	%f197, %f193;
	add.f32 	%f229, %f227, %f228;
	abs.f32 	%f231, %f227;
	add.f32 	%f264, %f262, %f263;
	abs.f32 	%f266, %f262;
	add.f32 	%f298, %f296, %f297;
	abs.f32 	%f300, %f296;
	add.f32 	%f333, %f331, %f332;
	abs.f32 	%f335, %f331;
	add.f32 	%f367, %f365, %f366;
	abs.f32 	%f369, %f365;
	add.f32 	%f402, %f400, %f401;
	abs.f32 	%f404, %f400;
	cvt.rn.f32.s32 	%f427, %r21;
	sub.f32 	%f428, %f427, %f1;
	div.approx.f32 	%f430, %f428, %f188;
	abs.f32 	%f431, %f430;
	setp.gt.f32 	%p44, %f431, 0f4B800000;
	mul.f32 	%f432, %f430, 0f00000000;
	selp.f32 	%f433, %f432, %f430, %p44;
	add.f32 	%f434, %f433, %f433;
	mov.b32 	%r196, %f434;
	and.b32  	%r197, %r196, -2147483648;
	or.b32  	%r198, %r197, 1056964608;
	mov.b32 	%f435, %r198;
	add.f32 	%f436, %f434, %f435;
	abs.f32 	%f438, %f434;
	div.approx.f32 	%f35, %f428, %f216;
	setp.eq.f32 	%p49, %f35, 0f00000000;
	@%p49 bra 	LBB0_18;
// %bb.17:                              // %L614
	sin.approx.f32 	%f458, %f35;
	div.approx.f32 	%f902, %f458, %f35;
LBB0_18:                                // %L617
	shr.u16 	%rs6, %rs4, 4;
	cvt.rzi.f32.f32 	%f196, %f195;
	setp.gt.f32 	%p3, %f197, 0f4B000000;
	cvt.rzi.f32.f32 	%f230, %f229;
	setp.gt.f32 	%p9, %f231, 0f4B000000;
	cvt.rzi.f32.f32 	%f265, %f264;
	setp.gt.f32 	%p15, %f266, 0f4B000000;
	cvt.rzi.f32.f32 	%f299, %f298;
	setp.gt.f32 	%p21, %f300, 0f4B000000;
	cvt.rzi.f32.f32 	%f334, %f333;
	setp.gt.f32 	%p27, %f335, 0f4B000000;
	cvt.rzi.f32.f32 	%f368, %f367;
	setp.gt.f32 	%p33, %f369, 0f4B000000;
	cvt.rzi.f32.f32 	%f403, %f402;
	setp.gt.f32 	%p39, %f404, 0f4B000000;
	cvt.rzi.f32.f32 	%f437, %f436;
	setp.gt.f32 	%p45, %f438, 0f4B000000;
	mul.lo.s32 	%r23, %r14, 15;
	cvt.rn.f32.s32 	%f461, %r23;
	div.approx.f32 	%f38, %f461, %f216;
	abs.f32 	%f905, %f38;
	setp.lt.f32 	%p50, %f905, 0f40000000;
	@%p50 bra 	LBB0_30;
// %bb.19:
	setp.gtu.f32 	%p51, %f905, 0f4B800000;
	@%p51 bra 	LBB0_26;
	bra.uni 	LBB0_20;
LBB0_26:
	mov.b32 	%r25, %f905;
	and.b32  	%r206, %r25, 8388607;
	or.b32  	%r1103, %r206, 1065353216;
	mov.b32 	%f904, %r1103;
	add.s32 	%r207, %r25, -1073741824;
	and.b32  	%r1104, %r207, -8388608;
	setp.eq.s32 	%p57, %r1104, 0;
	@%p57 bra 	LBB0_29;
// %bb.27:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f472, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f471,%f472;
	// end inline asm
LBB0_28:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r208, %r1104, 192937984;
	add.s32 	%r209, %r208, %r1103;
	mov.b32 	%f473, %r209;
	mul.f32 	%f474, %f471, %f473;
	sub.f32 	%f475, %f473, %f474;
	fma.rn.f32 	%f476, %f475, %f471, %f474;
	sub.f32 	%f477, %f473, %f476;
	fma.rz.f32 	%f478, %f477, %f471, %f476;
	cvt.rzi.f32.f32 	%f479, %f478;
	sub.f32 	%f904, %f473, %f479;
	sub.s32 	%r1104, %r1104, %r208;
	mov.b32 	%r1103, %f904;
	setp.ne.s32 	%p58, %r1104, 0;
	setp.ne.s32 	%p59, %r1103, 0;
	and.pred  	%p60, %p58, %p59;
	@%p60 bra 	LBB0_28;
LBB0_29:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p61, %r25, 2139095039;
	selp.f32 	%f480, 0f7FFFFFFF, 0f4B800000, %p61;
	mul.f32 	%f481, %f904, 0f34000000;
	mul.f32 	%f905, %f480, %f481;
	bra.uni 	LBB0_30;
LBB0_20:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f464, %f905, %f184;
	cvt.rzi.f32.f32 	%f903, %f464;
	fma.rn.f32 	%f41, %f903, 0fC0000000, %f905;
	mov.b32 	%r24, %f41;
	setp.lt.u32 	%p52, %r24, 1073741824;
	@%p52 bra 	LBB0_25;
// %bb.21:
	setp.lt.u32 	%p53, %r24, -2147483647;
	@%p53 bra 	LBB0_23;
// %bb.22:
	add.f32 	%f469, %f903, 0fBF800000;
	setp.lt.f32 	%p56, %f41, 0fC0000000;
	add.f32 	%f470, %f469, 0fBF800000;
	selp.f32 	%f903, %f470, %f469, %p56;
	bra.uni 	LBB0_25;
LBB0_23:
	add.f32 	%f903, %f903, 0f3F800000;
	setp.ltu.f32 	%p54, %f41, 0f40800000;
	@%p54 bra 	LBB0_25;
// %bb.24:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f465, %f903, 0f3F800000;
	fma.rn.f32 	%f467, %f184, 0fC0400000, %f41;
	setp.ge.f32 	%p55, %f467, 0f00000000;
	add.f32 	%f468, %f465, 0f3F800000;
	selp.f32 	%f903, %f468, %f465, %p55;
LBB0_25:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f905, %f903, 0fC0000000, %f905;
LBB0_30:                                // %__internal_fmodf_kernel.exit.i
	shl.b16 	%rs5, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	selp.f32 	%f198, %f193, %f196, %p3;
	cvt.rzi.f32.f32 	%f199, %f193;
	setp.lt.f32 	%p4, %f197, 0f3F000000;
	selp.f32 	%f232, %f227, %f230, %p9;
	cvt.rzi.f32.f32 	%f233, %f227;
	setp.lt.f32 	%p10, %f231, 0f3F000000;
	selp.f32 	%f267, %f262, %f265, %p15;
	cvt.rzi.f32.f32 	%f268, %f262;
	setp.lt.f32 	%p16, %f266, 0f3F000000;
	selp.f32 	%f301, %f296, %f299, %p21;
	cvt.rzi.f32.f32 	%f302, %f296;
	setp.lt.f32 	%p22, %f300, 0f3F000000;
	selp.f32 	%f336, %f331, %f334, %p27;
	cvt.rzi.f32.f32 	%f337, %f331;
	setp.lt.f32 	%p28, %f335, 0f3F000000;
	selp.f32 	%f370, %f365, %f368, %p33;
	cvt.rzi.f32.f32 	%f371, %f365;
	setp.lt.f32 	%p34, %f369, 0f3F000000;
	selp.f32 	%f405, %f400, %f403, %p39;
	cvt.rzi.f32.f32 	%f406, %f400;
	setp.lt.f32 	%p40, %f404, 0f3F000000;
	selp.f32 	%f439, %f434, %f437, %p45;
	cvt.rzi.f32.f32 	%f440, %f434;
	setp.lt.f32 	%p46, %f438, 0f3F000000;
	abs.f32 	%f482, %f905;
	setp.gtu.f32 	%p62, %f482, 0f7F800000;
	@%p62 bra 	LBB0_32;
// %bb.31:
	mov.b32 	%r210, %f38;
	and.b32  	%r211, %r210, -2147483648;
	mov.b32 	%r212, %f905;
	or.b32  	%r213, %r211, %r212;
	mov.b32 	%f905, %r213;
LBB0_32:                                // %__nv_fmodf.exit
	or.b16  	%rs8, %rs7, %rs5;
	selp.f32 	%f200, %f199, %f198, %p4;
	selp.f32 	%f234, %f233, %f232, %p10;
	selp.f32 	%f269, %f268, %f267, %p16;
	selp.f32 	%f303, %f302, %f301, %p22;
	selp.f32 	%f338, %f337, %f336, %p28;
	selp.f32 	%f372, %f371, %f370, %p34;
	selp.f32 	%f407, %f406, %f405, %p40;
	selp.f32 	%f441, %f440, %f439, %p46;
	add.f32 	%f483, %f905, %f905;
	mov.b32 	%r214, %f483;
	and.b32  	%r215, %r214, -2147483648;
	or.b32  	%r216, %r215, 1056964608;
	mov.b32 	%f484, %r216;
	add.f32 	%f485, %f483, %f484;
	cvt.rzi.f32.f32 	%f486, %f485;
	abs.f32 	%f487, %f483;
	setp.gt.f32 	%p63, %f487, 0f4B000000;
	selp.f32 	%f488, %f483, %f486, %p63;
	cvt.rzi.f32.f32 	%f489, %f483;
	setp.lt.f32 	%p64, %f487, 0f3F000000;
	selp.f32 	%f490, %f489, %f488, %p64;
	fma.rn.f32 	%f491, %f490, 0fBF000000, %f905;
	mul.f32 	%f492, %f491, 0f34222169;
	add.s32 	%r222, %r23, 120;
	cvt.rn.f32.s32 	%f514, %r222;
	div.approx.f32 	%f57, %f514, %f216;
	abs.f32 	%f909, %f57;
	setp.lt.f32 	%p70, %f909, 0f40000000;
	@%p70 bra 	LBB0_44;
// %bb.33:
	setp.gtu.f32 	%p71, %f909, 0f4B800000;
	@%p71 bra 	LBB0_40;
	bra.uni 	LBB0_34;
LBB0_40:
	mov.b32 	%r33, %f909;
	and.b32  	%r223, %r33, 8388607;
	or.b32  	%r1105, %r223, 1065353216;
	mov.b32 	%f908, %r1105;
	add.s32 	%r224, %r33, -1073741824;
	and.b32  	%r1106, %r224, -8388608;
	setp.eq.s32 	%p77, %r1106, 0;
	@%p77 bra 	LBB0_43;
// %bb.41:                              // %__nv_fmaf_rn.exit4.i.i.i840.preheader
	mov.f32 	%f525, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f524,%f525;
	// end inline asm
LBB0_42:                                // %__nv_fmaf_rn.exit4.i.i.i840
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r225, %r1106, 192937984;
	add.s32 	%r226, %r225, %r1105;
	mov.b32 	%f526, %r226;
	mul.f32 	%f527, %f524, %f526;
	sub.f32 	%f528, %f526, %f527;
	fma.rn.f32 	%f529, %f528, %f524, %f527;
	sub.f32 	%f530, %f526, %f529;
	fma.rz.f32 	%f531, %f530, %f524, %f529;
	cvt.rzi.f32.f32 	%f532, %f531;
	sub.f32 	%f908, %f526, %f532;
	sub.s32 	%r1106, %r1106, %r225;
	mov.b32 	%r1105, %f908;
	setp.ne.s32 	%p78, %r1106, 0;
	setp.ne.s32 	%p79, %r1105, 0;
	and.pred  	%p80, %p78, %p79;
	@%p80 bra 	LBB0_42;
LBB0_43:                                // %__internal_fmodf_slowpath_mod.exit.i.i842
	setp.gt.u32 	%p81, %r33, 2139095039;
	selp.f32 	%f533, 0f7FFFFFFF, 0f4B800000, %p81;
	mul.f32 	%f534, %f908, 0f34000000;
	mul.f32 	%f909, %f533, %f534;
	bra.uni 	LBB0_44;
LBB0_34:                                // %__nv_fast_fdividef.exit.i.i.i812
	div.approx.f32 	%f517, %f909, %f184;
	cvt.rzi.f32.f32 	%f907, %f517;
	fma.rn.f32 	%f60, %f907, 0fC0000000, %f909;
	mov.b32 	%r32, %f60;
	setp.lt.u32 	%p72, %r32, 1073741824;
	@%p72 bra 	LBB0_39;
// %bb.35:
	setp.lt.u32 	%p73, %r32, -2147483647;
	@%p73 bra 	LBB0_37;
// %bb.36:
	add.f32 	%f522, %f907, 0fBF800000;
	setp.lt.f32 	%p76, %f60, 0fC0000000;
	add.f32 	%f523, %f522, 0fBF800000;
	selp.f32 	%f907, %f523, %f522, %p76;
	bra.uni 	LBB0_39;
LBB0_37:
	add.f32 	%f907, %f907, 0f3F800000;
	setp.ltu.f32 	%p74, %f60, 0f40800000;
	@%p74 bra 	LBB0_39;
// %bb.38:                              // %__nv_fmaf_rn.exit.i.i.i817
	add.f32 	%f518, %f907, 0f3F800000;
	fma.rn.f32 	%f520, %f184, 0fC0400000, %f60;
	setp.ge.f32 	%p75, %f520, 0f00000000;
	add.f32 	%f521, %f518, 0f3F800000;
	selp.f32 	%f907, %f521, %f518, %p75;
LBB0_39:                                // %__internal_fmodf_fastpath_quot.exit.i.i821
	fma.rn.f32 	%f909, %f907, 0fC0000000, %f909;
LBB0_44:                                // %__internal_fmodf_kernel.exit.i846
	and.b16  	%rs9, %rs8, 13107;
	shr.u16 	%rs11, %rs8, 2;
	fma.rn.f32 	%f201, %f200, 0fBF000000, %f192;
	fma.rn.f32 	%f235, %f234, 0fBF000000, %f226;
	fma.rn.f32 	%f270, %f269, 0fBF000000, %f261;
	fma.rn.f32 	%f304, %f303, 0fBF000000, %f295;
	fma.rn.f32 	%f339, %f338, 0fBF000000, %f330;
	fma.rn.f32 	%f373, %f372, 0fBF000000, %f364;
	fma.rn.f32 	%f408, %f407, 0fBF000000, %f399;
	fma.rn.f32 	%f442, %f441, 0fBF000000, %f433;
	fma.rn.f32 	%f493, %f491, 0f40490FDA, %f492;
	shr.u32 	%r12, %r5, 2;
	abs.f32 	%f535, %f909;
	setp.gtu.f32 	%p82, %f535, 0f7F800000;
	@%p82 bra 	LBB0_46;
// %bb.45:
	mov.b32 	%r227, %f57;
	and.b32  	%r228, %r227, -2147483648;
	mov.b32 	%r229, %f909;
	or.b32  	%r230, %r228, %r229;
	mov.b32 	%f909, %r230;
LBB0_46:                                // %__nv_fmodf.exit847
	shl.b16 	%rs10, %rs9, 2;
	and.b16  	%rs12, %rs11, 13107;
	mul.f32 	%f202, %f201, %f201;
	mul.f32 	%f236, %f235, %f235;
	mul.f32 	%f271, %f270, %f270;
	mul.f32 	%f305, %f304, %f304;
	mul.f32 	%f340, %f339, %f339;
	mul.f32 	%f374, %f373, %f373;
	mul.f32 	%f409, %f408, %f408;
	mul.f32 	%f443, %f442, %f442;
	mul.f32 	%f494, %f493, %f493;
	add.f32 	%f536, %f909, %f909;
	mov.b32 	%r237, %f536;
	and.b32  	%r238, %r237, -2147483648;
	or.b32  	%r239, %r238, 1056964608;
	mov.b32 	%f537, %r239;
	add.f32 	%f538, %f536, %f537;
	cvt.rzi.f32.f32 	%f539, %f538;
	abs.f32 	%f540, %f536;
	setp.gt.f32 	%p83, %f540, 0f4B000000;
	selp.f32 	%f541, %f536, %f539, %p83;
	cvt.rzi.f32.f32 	%f542, %f536;
	setp.lt.f32 	%p84, %f540, 0f3F000000;
	selp.f32 	%f543, %f542, %f541, %p84;
	fma.rn.f32 	%f544, %f543, 0fBF000000, %f909;
	mul.f32 	%f545, %f544, 0f34222169;
	fma.rn.f32 	%f546, %f544, 0f40490FDA, %f545;
	mul.f32 	%f547, %f546, %f546;
	and.b32  	%r245, %r5, 3;
	mul.wide.u32 	%rd43, %r245, %r12;
	shl.b64 	%rd44, %rd43, 1;
	neg.s64 	%rd45, %rd44;
	cvt.rn.f32.s64 	%f569, %rd45;
	mov.f32 	%f570, 0f41000000;
	div.approx.f32 	%f74, %f569, %f570;
	abs.f32 	%f913, %f74;
	setp.lt.f32 	%p90, %f913, 0f40000000;
	@%p90 bra 	LBB0_58;
// %bb.47:
	setp.gtu.f32 	%p91, %f913, 0f4B800000;
	@%p91 bra 	LBB0_54;
	bra.uni 	LBB0_48;
LBB0_54:
	mov.b32 	%r46, %f913;
	and.b32  	%r246, %r46, 8388607;
	or.b32  	%r1107, %r246, 1065353216;
	mov.b32 	%f912, %r1107;
	add.s32 	%r247, %r46, -1073741824;
	and.b32  	%r1108, %r247, -8388608;
	setp.eq.s32 	%p97, %r1108, 0;
	@%p97 bra 	LBB0_57;
// %bb.55:                              // %__nv_fmaf_rn.exit4.i.i.i886.preheader
	mov.f32 	%f580, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f579,%f580;
	// end inline asm
LBB0_56:                                // %__nv_fmaf_rn.exit4.i.i.i886
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r248, %r1108, 192937984;
	add.s32 	%r249, %r248, %r1107;
	mov.b32 	%f581, %r249;
	mul.f32 	%f582, %f579, %f581;
	sub.f32 	%f583, %f581, %f582;
	fma.rn.f32 	%f584, %f583, %f579, %f582;
	sub.f32 	%f585, %f581, %f584;
	fma.rz.f32 	%f586, %f585, %f579, %f584;
	cvt.rzi.f32.f32 	%f587, %f586;
	sub.f32 	%f912, %f581, %f587;
	sub.s32 	%r1108, %r1108, %r248;
	mov.b32 	%r1107, %f912;
	setp.ne.s32 	%p98, %r1108, 0;
	setp.ne.s32 	%p99, %r1107, 0;
	and.pred  	%p100, %p98, %p99;
	@%p100 bra 	LBB0_56;
LBB0_57:                                // %__internal_fmodf_slowpath_mod.exit.i.i888
	setp.gt.u32 	%p101, %r46, 2139095039;
	selp.f32 	%f588, 0f7FFFFFFF, 0f4B800000, %p101;
	mul.f32 	%f589, %f912, 0f34000000;
	mul.f32 	%f913, %f588, %f589;
	bra.uni 	LBB0_58;
LBB0_48:                                // %__nv_fast_fdividef.exit.i.i.i858
	div.approx.f32 	%f572, %f913, %f184;
	cvt.rzi.f32.f32 	%f911, %f572;
	fma.rn.f32 	%f77, %f911, 0fC0000000, %f913;
	mov.b32 	%r45, %f77;
	setp.lt.u32 	%p92, %r45, 1073741824;
	@%p92 bra 	LBB0_53;
// %bb.49:
	setp.lt.u32 	%p93, %r45, -2147483647;
	@%p93 bra 	LBB0_51;
// %bb.50:
	add.f32 	%f577, %f911, 0fBF800000;
	setp.lt.f32 	%p96, %f77, 0fC0000000;
	add.f32 	%f578, %f577, 0fBF800000;
	selp.f32 	%f911, %f578, %f577, %p96;
	bra.uni 	LBB0_53;
LBB0_51:
	add.f32 	%f911, %f911, 0f3F800000;
	setp.ltu.f32 	%p94, %f77, 0f40800000;
	@%p94 bra 	LBB0_53;
// %bb.52:                              // %__nv_fmaf_rn.exit.i.i.i863
	add.f32 	%f573, %f911, 0f3F800000;
	fma.rn.f32 	%f575, %f184, 0fC0400000, %f77;
	setp.ge.f32 	%p95, %f575, 0f00000000;
	add.f32 	%f576, %f573, 0f3F800000;
	selp.f32 	%f911, %f576, %f573, %p95;
LBB0_53:                                // %__internal_fmodf_fastpath_quot.exit.i.i867
	fma.rn.f32 	%f913, %f911, 0fC0000000, %f913;
LBB0_58:                                // %__internal_fmodf_kernel.exit.i892
	or.b16  	%rs13, %rs12, %rs10;
	cvt.rzi.s32.f32 	%r138, %f200;
	fma.rn.f32 	%f203, %f202, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f204, %f202, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r145, %f234;
	fma.rn.f32 	%f237, %f236, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f238, %f236, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r156, %f269;
	fma.rn.f32 	%f272, %f271, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f273, %f271, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r163, %f303;
	fma.rn.f32 	%f306, %f305, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f307, %f305, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r174, %f338;
	fma.rn.f32 	%f341, %f340, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f342, %f340, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r181, %f372;
	fma.rn.f32 	%f375, %f374, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f376, %f374, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r192, %f407;
	fma.rn.f32 	%f410, %f409, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f411, %f409, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r199, %f441;
	fma.rn.f32 	%f444, %f443, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f445, %f443, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f495, %f494, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f548, %f547, 0f37CBAC00, 0fBAB607ED;
	or.b32  	%r43, %r245, 4;
	cvt.u64.u32 	%rd4, %r12;
	abs.f32 	%f590, %f913;
	setp.gtu.f32 	%p102, %f590, 0f7F800000;
	@%p102 bra 	LBB0_60;
// %bb.59:
	mov.b32 	%r250, %f74;
	and.b32  	%r251, %r250, -2147483648;
	mov.b32 	%r252, %f913;
	or.b32  	%r253, %r251, %r252;
	mov.b32 	%f913, %r253;
LBB0_60:                                // %__nv_fmodf.exit893
	and.b16  	%rs15, %rs13, 16384;
	add.s32 	%r139, %r138, 1;
	fma.rn.f32 	%f205, %f203, %f202, 0fC0A55DF6;
	fma.rn.f32 	%f206, %f204, %f202, 0f4081E0CF;
	fma.rn.f32 	%f207, %f202, %f201, 0f00000000;
	add.s32 	%r146, %r145, 1;
	fma.rn.f32 	%f239, %f237, %f236, 0fC0A55DF6;
	fma.rn.f32 	%f240, %f238, %f236, 0f4081E0CF;
	fma.rn.f32 	%f241, %f236, %f235, 0f00000000;
	add.s32 	%r157, %r156, 1;
	fma.rn.f32 	%f274, %f272, %f271, 0fC0A55DF6;
	fma.rn.f32 	%f275, %f273, %f271, 0f4081E0CF;
	fma.rn.f32 	%f276, %f271, %f270, 0f00000000;
	add.s32 	%r164, %r163, 1;
	fma.rn.f32 	%f308, %f306, %f305, 0fC0A55DF6;
	fma.rn.f32 	%f309, %f307, %f305, 0f4081E0CF;
	fma.rn.f32 	%f310, %f305, %f304, 0f00000000;
	add.s32 	%r175, %r174, 1;
	fma.rn.f32 	%f343, %f341, %f340, 0fC0A55DF6;
	fma.rn.f32 	%f344, %f342, %f340, 0f4081E0CF;
	fma.rn.f32 	%f345, %f340, %f339, 0f00000000;
	add.s32 	%r182, %r181, 1;
	fma.rn.f32 	%f377, %f375, %f374, 0fC0A55DF6;
	fma.rn.f32 	%f378, %f376, %f374, 0f4081E0CF;
	fma.rn.f32 	%f379, %f374, %f373, 0f00000000;
	add.s32 	%r193, %r192, 1;
	fma.rn.f32 	%f412, %f410, %f409, 0fC0A55DF6;
	fma.rn.f32 	%f413, %f411, %f409, 0f4081E0CF;
	fma.rn.f32 	%f414, %f409, %f408, 0f00000000;
	add.s32 	%r200, %r199, 1;
	fma.rn.f32 	%f446, %f444, %f443, 0fC0A55DF6;
	fma.rn.f32 	%f447, %f445, %f443, 0f4081E0CF;
	fma.rn.f32 	%f448, %f443, %f442, 0f00000000;
	cvt.rzi.s32.f32 	%r217, %f490;
	fma.rn.f32 	%f496, %f495, %f494, 0f3D2AAABB;
	fma.rn.f32 	%f500, %f494, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r240, %f543;
	fma.rn.f32 	%f549, %f548, %f547, 0f3D2AAABB;
	fma.rn.f32 	%f553, %f547, 0fB94D4153, 0f3C0885E4;
	add.f32 	%f591, %f913, %f913;
	mov.b32 	%r254, %f591;
	and.b32  	%r255, %r254, -2147483648;
	or.b32  	%r256, %r255, 1056964608;
	mov.b32 	%f592, %r256;
	add.f32 	%f593, %f591, %f592;
	cvt.rzi.f32.f32 	%f594, %f593;
	abs.f32 	%f595, %f591;
	setp.gt.f32 	%p103, %f595, 0f4B000000;
	selp.f32 	%f596, %f591, %f594, %p103;
	cvt.rzi.f32.f32 	%f597, %f591;
	setp.lt.f32 	%p104, %f595, 0f3F000000;
	selp.f32 	%f598, %f597, %f596, %p104;
	cvt.rzi.s32.f32 	%r257, %f598;
	fma.rn.f32 	%f599, %f598, 0fBF000000, %f913;
	mul.f32 	%f600, %f599, 0f34222169;
	fma.rn.f32 	%f601, %f599, 0f40490FDA, %f600;
	mul.f32 	%f602, %f601, %f601;
	fma.rn.f32 	%f603, %f602, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f604, %f603, %f602, 0f3D2AAABB;
	fma.rn.f32 	%f605, %f604, %f602, 0fBEFFFFFF;
	fma.rn.f32 	%f607, %f602, %f601, 0f00000000;
	fma.rn.f32 	%f608, %f602, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f609, %f608, %f602, 0fBE2AAAA8;
	and.b32  	%r258, %r257, 1;
	cvt.u64.u32 	%rd46, %r43;
	mul.lo.s64 	%rd47, %rd46, %rd4;
	shl.b64 	%rd48, %rd47, 1;
	neg.s64 	%rd49, %rd48;
	cvt.rn.f32.s64 	%f622, %rd49;
	div.approx.f32 	%f93, %f622, %f570;
	abs.f32 	%f917, %f93;
	setp.lt.f32 	%p110, %f917, 0f40000000;
	@%p110 bra 	LBB0_72;
// %bb.61:
	setp.gtu.f32 	%p111, %f917, 0f4B800000;
	@%p111 bra 	LBB0_68;
	bra.uni 	LBB0_62;
LBB0_68:
	mov.b32 	%r54, %f917;
	and.b32  	%r262, %r54, 8388607;
	or.b32  	%r1109, %r262, 1065353216;
	mov.b32 	%f916, %r1109;
	add.s32 	%r263, %r54, -1073741824;
	and.b32  	%r1110, %r263, -8388608;
	setp.eq.s32 	%p117, %r1110, 0;
	@%p117 bra 	LBB0_71;
// %bb.69:                              // %__nv_fmaf_rn.exit4.i.i.i932.preheader
	mov.f32 	%f633, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f632,%f633;
	// end inline asm
LBB0_70:                                // %__nv_fmaf_rn.exit4.i.i.i932
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r264, %r1110, 192937984;
	add.s32 	%r265, %r264, %r1109;
	mov.b32 	%f634, %r265;
	mul.f32 	%f635, %f632, %f634;
	sub.f32 	%f636, %f634, %f635;
	fma.rn.f32 	%f637, %f636, %f632, %f635;
	sub.f32 	%f638, %f634, %f637;
	fma.rz.f32 	%f639, %f638, %f632, %f637;
	cvt.rzi.f32.f32 	%f640, %f639;
	sub.f32 	%f916, %f634, %f640;
	sub.s32 	%r1110, %r1110, %r264;
	mov.b32 	%r1109, %f916;
	setp.ne.s32 	%p118, %r1110, 0;
	setp.ne.s32 	%p119, %r1109, 0;
	and.pred  	%p120, %p118, %p119;
	@%p120 bra 	LBB0_70;
LBB0_71:                                // %__internal_fmodf_slowpath_mod.exit.i.i934
	setp.gt.u32 	%p121, %r54, 2139095039;
	selp.f32 	%f641, 0f7FFFFFFF, 0f4B800000, %p121;
	mul.f32 	%f642, %f916, 0f34000000;
	mul.f32 	%f917, %f641, %f642;
	bra.uni 	LBB0_72;
LBB0_62:                                // %__nv_fast_fdividef.exit.i.i.i904
	div.approx.f32 	%f625, %f917, %f184;
	cvt.rzi.f32.f32 	%f915, %f625;
	fma.rn.f32 	%f96, %f915, 0fC0000000, %f917;
	mov.b32 	%r53, %f96;
	setp.lt.u32 	%p112, %r53, 1073741824;
	@%p112 bra 	LBB0_67;
// %bb.63:
	setp.lt.u32 	%p113, %r53, -2147483647;
	@%p113 bra 	LBB0_65;
// %bb.64:
	add.f32 	%f630, %f915, 0fBF800000;
	setp.lt.f32 	%p116, %f96, 0fC0000000;
	add.f32 	%f631, %f630, 0fBF800000;
	selp.f32 	%f915, %f631, %f630, %p116;
	bra.uni 	LBB0_67;
LBB0_65:
	add.f32 	%f915, %f915, 0f3F800000;
	setp.ltu.f32 	%p114, %f96, 0f40800000;
	@%p114 bra 	LBB0_67;
// %bb.66:                              // %__nv_fmaf_rn.exit.i.i.i909
	add.f32 	%f626, %f915, 0f3F800000;
	fma.rn.f32 	%f628, %f184, 0fC0400000, %f96;
	setp.ge.f32 	%p115, %f628, 0f00000000;
	add.f32 	%f629, %f626, 0f3F800000;
	selp.f32 	%f915, %f629, %f626, %p115;
LBB0_67:                                // %__internal_fmodf_fastpath_quot.exit.i.i913
	fma.rn.f32 	%f917, %f915, 0fC0000000, %f917;
LBB0_72:                                // %__internal_fmodf_kernel.exit.i938
	shr.u16 	%rs14, %rs13, 1;
	shl.b16 	%rs16, %rs15, 1;
	fma.rn.f32 	%f208, %f206, %f202, 0fC09DE9E6;
	fma.rn.f32 	%f209, %f205, %f207, 0f00000000;
	and.b32  	%r140, %r139, 1;
	fma.rn.f32 	%f242, %f240, %f236, 0fC09DE9E6;
	fma.rn.f32 	%f243, %f239, %f241, 0f00000000;
	and.b32  	%r147, %r146, 1;
	fma.rn.f32 	%f277, %f275, %f271, 0fC09DE9E6;
	fma.rn.f32 	%f278, %f274, %f276, 0f00000000;
	and.b32  	%r158, %r157, 1;
	fma.rn.f32 	%f311, %f309, %f305, 0fC09DE9E6;
	fma.rn.f32 	%f312, %f308, %f310, 0f00000000;
	and.b32  	%r165, %r164, 1;
	fma.rn.f32 	%f346, %f344, %f340, 0fC09DE9E6;
	fma.rn.f32 	%f347, %f343, %f345, 0f00000000;
	and.b32  	%r176, %r175, 1;
	fma.rn.f32 	%f380, %f378, %f374, 0fC09DE9E6;
	fma.rn.f32 	%f381, %f377, %f379, 0f00000000;
	and.b32  	%r183, %r182, 1;
	fma.rn.f32 	%f415, %f413, %f409, 0fC09DE9E6;
	fma.rn.f32 	%f416, %f412, %f414, 0f00000000;
	and.b32  	%r194, %r193, 1;
	fma.rn.f32 	%f449, %f447, %f443, 0fC09DE9E6;
	fma.rn.f32 	%f450, %f446, %f448, 0f00000000;
	and.b32  	%r201, %r200, 1;
	fma.rn.f32 	%f497, %f496, %f494, 0fBEFFFFFF;
	fma.rn.f32 	%f499, %f494, %f493, 0f00000000;
	fma.rn.f32 	%f501, %f500, %f494, 0fBE2AAAA8;
	and.b32  	%r218, %r217, 1;
	fma.rn.f32 	%f550, %f549, %f547, 0fBEFFFFFF;
	fma.rn.f32 	%f552, %f547, %f546, 0f00000000;
	fma.rn.f32 	%f554, %f553, %f547, 0fBE2AAAA8;
	and.b32  	%r241, %r240, 1;
	fma.rn.f32 	%f606, %f605, %f602, 0f3F800000;
	fma.rn.f32 	%f610, %f609, %f607, %f601;
	setp.eq.b32 	%p105, %r258, 1;
	mov.f32 	%f213, 0f00000000;
	abs.f32 	%f643, %f917;
	setp.gtu.f32 	%p122, %f643, 0f7F800000;
	@%p122 bra 	LBB0_74;
// %bb.73:
	mov.b32 	%r266, %f93;
	and.b32  	%r267, %r266, -2147483648;
	mov.b32 	%r268, %f917;
	or.b32  	%r269, %r267, %r268;
	mov.b32 	%f917, %r269;
LBB0_74:                                // %__nv_fmodf.exit939
	or.b16  	%rs17, %rs14, %rs16;
	fma.rn.f32 	%f210, %f208, %f202, 0f3F800000;
	fma.rn.f32 	%f211, %f201, 0f40490FDB, %f209;
	setp.eq.b32 	%p5, %r140, 1;
	fma.rn.f32 	%f244, %f242, %f236, 0f3F800000;
	fma.rn.f32 	%f245, %f235, 0f40490FDB, %f243;
	setp.eq.b32 	%p11, %r147, 1;
	fma.rn.f32 	%f279, %f277, %f271, 0f3F800000;
	fma.rn.f32 	%f280, %f270, 0f40490FDB, %f278;
	setp.eq.b32 	%p17, %r158, 1;
	fma.rn.f32 	%f313, %f311, %f305, 0f3F800000;
	fma.rn.f32 	%f314, %f304, 0f40490FDB, %f312;
	setp.eq.b32 	%p23, %r165, 1;
	fma.rn.f32 	%f348, %f346, %f340, 0f3F800000;
	fma.rn.f32 	%f349, %f339, 0f40490FDB, %f347;
	setp.eq.b32 	%p29, %r176, 1;
	fma.rn.f32 	%f382, %f380, %f374, 0f3F800000;
	fma.rn.f32 	%f383, %f373, 0f40490FDB, %f381;
	setp.eq.b32 	%p35, %r183, 1;
	fma.rn.f32 	%f417, %f415, %f409, 0f3F800000;
	fma.rn.f32 	%f418, %f408, 0f40490FDB, %f416;
	setp.eq.b32 	%p41, %r194, 1;
	fma.rn.f32 	%f451, %f449, %f443, 0f3F800000;
	fma.rn.f32 	%f452, %f442, 0f40490FDB, %f450;
	setp.eq.b32 	%p47, %r201, 1;
	fma.rn.f32 	%f498, %f497, %f494, 0f3F800000;
	fma.rn.f32 	%f502, %f501, %f499, %f493;
	setp.eq.b32 	%p65, %r218, 1;
	fma.rn.f32 	%f551, %f550, %f547, 0f3F800000;
	fma.rn.f32 	%f555, %f554, %f552, %f546;
	setp.eq.b32 	%p85, %r241, 1;
	selp.f32 	%f611, %f606, %f610, %p105;
	and.b32  	%r259, %r257, 2;
	add.f32 	%f644, %f917, %f917;
	mov.b32 	%r282, %f644;
	and.b32  	%r283, %r282, -2147483648;
	or.b32  	%r284, %r283, 1056964608;
	mov.b32 	%f645, %r284;
	add.f32 	%f646, %f644, %f645;
	cvt.rzi.f32.f32 	%f647, %f646;
	abs.f32 	%f648, %f644;
	setp.gt.f32 	%p123, %f648, 0f4B000000;
	selp.f32 	%f649, %f644, %f647, %p123;
	cvt.rzi.f32.f32 	%f650, %f644;
	setp.lt.f32 	%p124, %f648, 0f3F000000;
	selp.f32 	%f651, %f650, %f649, %p124;
	cvt.rzi.s32.f32 	%r285, %f651;
	fma.rn.f32 	%f652, %f651, 0fBF000000, %f917;
	mul.f32 	%f653, %f652, 0f34222169;
	fma.rn.f32 	%f654, %f652, 0f40490FDA, %f653;
	mul.f32 	%f655, %f654, %f654;
	fma.rn.f32 	%f656, %f655, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f657, %f656, %f655, 0f3D2AAABB;
	fma.rn.f32 	%f658, %f657, %f655, 0fBEFFFFFF;
	fma.rn.f32 	%f659, %f658, %f655, 0f3F800000;
	fma.rn.f32 	%f660, %f655, %f654, 0f00000000;
	fma.rn.f32 	%f661, %f655, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f662, %f661, %f655, 0fBE2AAAA8;
	fma.rn.f32 	%f663, %f662, %f660, %f654;
	and.b32  	%r286, %r285, 1;
	setp.eq.b32 	%p125, %r286, 1;
	selp.f32 	%f664, %f659, %f663, %p125;
	and.b32  	%r287, %r285, 2;
	div.approx.f32 	%f110, %f213, %f216;
	abs.f32 	%f921, %f110;
	setp.lt.f32 	%p130, %f921, 0f40000000;
	@%p130 bra 	LBB0_86;
// %bb.75:
	setp.gtu.f32 	%p131, %f921, 0f4B800000;
	@%p131 bra 	LBB0_82;
	bra.uni 	LBB0_76;
LBB0_82:
	mov.b32 	%r66, %f921;
	and.b32  	%r290, %r66, 8388607;
	or.b32  	%r1111, %r290, 1065353216;
	mov.b32 	%f920, %r1111;
	add.s32 	%r291, %r66, -1073741824;
	and.b32  	%r1112, %r291, -8388608;
	setp.eq.s32 	%p137, %r1112, 0;
	@%p137 bra 	LBB0_85;
// %bb.83:                              // %__nv_fmaf_rn.exit4.i.i.i978.preheader
	mov.f32 	%f687, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f686,%f687;
	// end inline asm
LBB0_84:                                // %__nv_fmaf_rn.exit4.i.i.i978
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r292, %r1112, 192937984;
	add.s32 	%r293, %r292, %r1111;
	mov.b32 	%f688, %r293;
	mul.f32 	%f689, %f686, %f688;
	sub.f32 	%f690, %f688, %f689;
	fma.rn.f32 	%f691, %f690, %f686, %f689;
	sub.f32 	%f692, %f688, %f691;
	fma.rz.f32 	%f693, %f692, %f686, %f691;
	cvt.rzi.f32.f32 	%f694, %f693;
	sub.f32 	%f920, %f688, %f694;
	sub.s32 	%r1112, %r1112, %r292;
	mov.b32 	%r1111, %f920;
	setp.ne.s32 	%p138, %r1112, 0;
	setp.ne.s32 	%p139, %r1111, 0;
	and.pred  	%p140, %p138, %p139;
	@%p140 bra 	LBB0_84;
LBB0_85:                                // %__internal_fmodf_slowpath_mod.exit.i.i980
	setp.gt.u32 	%p141, %r66, 2139095039;
	selp.f32 	%f695, 0f7FFFFFFF, 0f4B800000, %p141;
	mul.f32 	%f696, %f920, 0f34000000;
	mul.f32 	%f921, %f695, %f696;
	bra.uni 	LBB0_86;
LBB0_76:                                // %__nv_fast_fdividef.exit.i.i.i950
	div.approx.f32 	%f679, %f921, %f184;
	cvt.rzi.f32.f32 	%f919, %f679;
	fma.rn.f32 	%f113, %f919, 0fC0000000, %f921;
	mov.b32 	%r65, %f113;
	setp.lt.u32 	%p132, %r65, 1073741824;
	@%p132 bra 	LBB0_81;
// %bb.77:
	setp.lt.u32 	%p133, %r65, -2147483647;
	@%p133 bra 	LBB0_79;
// %bb.78:
	add.f32 	%f684, %f919, 0fBF800000;
	setp.lt.f32 	%p136, %f113, 0fC0000000;
	add.f32 	%f685, %f684, 0fBF800000;
	selp.f32 	%f919, %f685, %f684, %p136;
	bra.uni 	LBB0_81;
LBB0_79:
	add.f32 	%f919, %f919, 0f3F800000;
	setp.ltu.f32 	%p134, %f113, 0f40800000;
	@%p134 bra 	LBB0_81;
// %bb.80:                              // %__nv_fmaf_rn.exit.i.i.i955
	add.f32 	%f680, %f919, 0f3F800000;
	fma.rn.f32 	%f682, %f184, 0fC0400000, %f113;
	setp.ge.f32 	%p135, %f682, 0f00000000;
	add.f32 	%f683, %f680, 0f3F800000;
	selp.f32 	%f919, %f683, %f680, %p135;
LBB0_81:                                // %__internal_fmodf_fastpath_quot.exit.i.i959
	fma.rn.f32 	%f921, %f919, 0fC0000000, %f921;
LBB0_86:                                // %__internal_fmodf_kernel.exit.i984
	shr.u16 	%rs18, %rs17, 13;
	selp.f32 	%f212, %f210, %f211, %p5;
	and.b32  	%r141, %r139, 2;
	selp.f32 	%f246, %f244, %f245, %p11;
	and.b32  	%r148, %r146, 2;
	selp.f32 	%f281, %f279, %f280, %p17;
	and.b32  	%r159, %r157, 2;
	selp.f32 	%f315, %f313, %f314, %p23;
	and.b32  	%r166, %r164, 2;
	selp.f32 	%f350, %f348, %f349, %p29;
	and.b32  	%r177, %r175, 2;
	selp.f32 	%f384, %f382, %f383, %p35;
	and.b32  	%r184, %r182, 2;
	selp.f32 	%f419, %f417, %f418, %p41;
	and.b32  	%r195, %r193, 2;
	selp.f32 	%f453, %f451, %f452, %p47;
	and.b32  	%r202, %r200, 2;
	selp.f32 	%f503, %f498, %f502, %p65;
	and.b32  	%r219, %r217, 2;
	selp.f32 	%f556, %f551, %f555, %p85;
	and.b32  	%r242, %r240, 2;
	setp.eq.s32 	%p106, %r259, 0;
	neg.f32 	%f613, %f611;
	add.s32 	%r260, %r257, 1;
	cvt.rzi.f32.f32 	%f618, %f913;
	setp.eq.s32 	%p126, %r287, 0;
	neg.f32 	%f666, %f664;
	add.s32 	%r288, %r285, 1;
	cvt.rzi.f32.f32 	%f671, %f917;
	abs.f32 	%f697, %f921;
	setp.gtu.f32 	%p142, %f697, 0f7F800000;
	@%p142 bra 	LBB0_88;
// %bb.87:
	mov.b32 	%r294, %f110;
	and.b32  	%r295, %r294, -2147483648;
	mov.b32 	%r296, %f921;
	or.b32  	%r297, %r295, %r296;
	mov.b32 	%f921, %r297;
LBB0_88:                                // %__nv_fmodf.exit985
	and.b16  	%rs19, %rs18, 6;
	shl.b32 	%r7, %r5, 1;
	setp.eq.s32 	%p6, %r141, 0;
	sub.f32 	%f214, %f213, %f212;
	setp.eq.s32 	%p12, %r148, 0;
	sub.f32 	%f248, %f213, %f246;
	setp.eq.s32 	%p18, %r159, 0;
	sub.f32 	%f283, %f213, %f281;
	setp.eq.s32 	%p24, %r166, 0;
	sub.f32 	%f317, %f213, %f315;
	setp.eq.s32 	%p30, %r177, 0;
	sub.f32 	%f352, %f213, %f350;
	setp.eq.s32 	%p36, %r184, 0;
	sub.f32 	%f386, %f213, %f384;
	setp.eq.s32 	%p42, %r195, 0;
	sub.f32 	%f421, %f213, %f419;
	setp.eq.s32 	%p48, %r202, 0;
	sub.f32 	%f455, %f213, %f453;
	setp.eq.s32 	%p66, %r219, 0;
	neg.f32 	%f505, %f503;
	add.s32 	%r220, %r217, 1;
	cvt.rzi.f32.f32 	%f510, %f905;
	setp.eq.s32 	%p86, %r242, 0;
	neg.f32 	%f558, %f556;
	add.s32 	%r243, %r240, 1;
	cvt.rzi.f32.f32 	%f563, %f909;
	selp.f32 	%f612, %f610, %f606, %p105;
	selp.f32 	%f614, %f611, %f613, %p106;
	and.b32  	%r261, %r260, 2;
	setp.eq.f32 	%p108, %f618, %f913;
	mul.f32 	%f619, %f913, 0f00000000;
	selp.f32 	%f665, %f663, %f659, %p125;
	selp.f32 	%f667, %f664, %f666, %p126;
	and.b32  	%r289, %r288, 2;
	setp.eq.f32 	%p128, %f671, %f917;
	mul.f32 	%f672, %f917, 0f00000000;
	add.f32 	%f698, %f921, %f921;
	mov.b32 	%r298, %f698;
	and.b32  	%r299, %r298, -2147483648;
	or.b32  	%r300, %r299, 1056964608;
	mov.b32 	%f699, %r300;
	add.f32 	%f700, %f698, %f699;
	cvt.rzi.f32.f32 	%f701, %f700;
	abs.f32 	%f702, %f698;
	setp.gt.f32 	%p143, %f702, 0f4B000000;
	selp.f32 	%f703, %f698, %f701, %p143;
	cvt.rzi.f32.f32 	%f704, %f698;
	setp.lt.f32 	%p144, %f702, 0f3F000000;
	selp.f32 	%f705, %f704, %f703, %p144;
	cvt.rzi.s32.f32 	%r301, %f705;
	fma.rn.f32 	%f706, %f705, 0fBF000000, %f921;
	mul.f32 	%f707, %f706, 0f34222169;
	fma.rn.f32 	%f708, %f706, 0f40490FDA, %f707;
	mul.f32 	%f709, %f708, %f708;
	fma.rn.f32 	%f710, %f709, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f711, %f710, %f709, 0f3D2AAABB;
	fma.rn.f32 	%f712, %f711, %f709, 0fBEFFFFFF;
	fma.rn.f32 	%f713, %f712, %f709, 0f3F800000;
	fma.rn.f32 	%f714, %f709, %f708, 0f00000000;
	fma.rn.f32 	%f715, %f709, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f716, %f715, %f709, 0fBE2AAAA8;
	fma.rn.f32 	%f717, %f716, %f714, %f708;
	and.b32  	%r302, %r301, 1;
	setp.eq.b32 	%p145, %r302, 1;
	selp.f32 	%f718, %f713, %f717, %p145;
	and.b32  	%r303, %r301, 2;
	setp.eq.s32 	%p146, %r303, 0;
	neg.f32 	%f720, %f718;
	add.s32 	%r304, %r301, 1;
	cvt.rzi.f32.f32 	%f725, %f921;
	shl.b64 	%rd50, %rd4, 1;
	neg.s64 	%rd51, %rd50;
	cvt.rn.f32.s64 	%f729, %rd51;
	div.approx.f32 	%f129, %f729, %f216;
	abs.f32 	%f925, %f129;
	setp.lt.f32 	%p150, %f925, 0f40000000;
	@%p150 bra 	LBB0_100;
// %bb.89:
	setp.gtu.f32 	%p151, %f925, 0f4B800000;
	@%p151 bra 	LBB0_96;
	bra.uni 	LBB0_90;
LBB0_96:
	mov.b32 	%r74, %f925;
	and.b32  	%r306, %r74, 8388607;
	or.b32  	%r1113, %r306, 1065353216;
	mov.b32 	%f924, %r1113;
	add.s32 	%r307, %r74, -1073741824;
	and.b32  	%r1114, %r307, -8388608;
	setp.eq.s32 	%p157, %r1114, 0;
	@%p157 bra 	LBB0_99;
// %bb.97:                              // %__nv_fmaf_rn.exit4.i.i.i1024.preheader
	mov.f32 	%f740, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f739,%f740;
	// end inline asm
LBB0_98:                                // %__nv_fmaf_rn.exit4.i.i.i1024
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r308, %r1114, 192937984;
	add.s32 	%r309, %r308, %r1113;
	mov.b32 	%f741, %r309;
	mul.f32 	%f742, %f739, %f741;
	sub.f32 	%f743, %f741, %f742;
	fma.rn.f32 	%f744, %f743, %f739, %f742;
	sub.f32 	%f745, %f741, %f744;
	fma.rz.f32 	%f746, %f745, %f739, %f744;
	cvt.rzi.f32.f32 	%f747, %f746;
	sub.f32 	%f924, %f741, %f747;
	sub.s32 	%r1114, %r1114, %r308;
	mov.b32 	%r1113, %f924;
	setp.ne.s32 	%p158, %r1114, 0;
	setp.ne.s32 	%p159, %r1113, 0;
	and.pred  	%p160, %p158, %p159;
	@%p160 bra 	LBB0_98;
LBB0_99:                                // %__internal_fmodf_slowpath_mod.exit.i.i1026
	setp.gt.u32 	%p161, %r74, 2139095039;
	selp.f32 	%f748, 0f7FFFFFFF, 0f4B800000, %p161;
	mul.f32 	%f749, %f924, 0f34000000;
	mul.f32 	%f925, %f748, %f749;
	bra.uni 	LBB0_100;
LBB0_90:                                // %__nv_fast_fdividef.exit.i.i.i996
	div.approx.f32 	%f732, %f925, %f184;
	cvt.rzi.f32.f32 	%f923, %f732;
	fma.rn.f32 	%f132, %f923, 0fC0000000, %f925;
	mov.b32 	%r73, %f132;
	setp.lt.u32 	%p152, %r73, 1073741824;
	@%p152 bra 	LBB0_95;
// %bb.91:
	setp.lt.u32 	%p153, %r73, -2147483647;
	@%p153 bra 	LBB0_93;
// %bb.92:
	add.f32 	%f737, %f923, 0fBF800000;
	setp.lt.f32 	%p156, %f132, 0fC0000000;
	add.f32 	%f738, %f737, 0fBF800000;
	selp.f32 	%f923, %f738, %f737, %p156;
	bra.uni 	LBB0_95;
LBB0_93:
	add.f32 	%f923, %f923, 0f3F800000;
	setp.ltu.f32 	%p154, %f132, 0f40800000;
	@%p154 bra 	LBB0_95;
// %bb.94:                              // %__nv_fmaf_rn.exit.i.i.i1001
	add.f32 	%f733, %f923, 0f3F800000;
	fma.rn.f32 	%f735, %f184, 0fC0400000, %f132;
	setp.ge.f32 	%p155, %f735, 0f00000000;
	add.f32 	%f736, %f733, 0f3F800000;
	selp.f32 	%f923, %f736, %f733, %p155;
LBB0_95:                                // %__internal_fmodf_fastpath_quot.exit.i.i1005
	fma.rn.f32 	%f925, %f923, 0fC0000000, %f925;
LBB0_100:                               // %__internal_fmodf_kernel.exit.i1030
	cvt.u32.u16 	%r129, %rs19;
	and.b32  	%r130, %r7, 8;
	selp.f32 	%f215, %f212, %f214, %p6;
	selp.f32 	%f249, %f246, %f248, %p12;
	selp.f32 	%f284, %f281, %f283, %p18;
	selp.f32 	%f318, %f315, %f317, %p24;
	selp.f32 	%f353, %f350, %f352, %p30;
	selp.f32 	%f387, %f384, %f386, %p36;
	selp.f32 	%f422, %f419, %f421, %p42;
	selp.f32 	%f456, %f453, %f455, %p48;
	selp.f32 	%f504, %f502, %f498, %p65;
	selp.f32 	%f506, %f503, %f505, %p66;
	and.b32  	%r221, %r220, 2;
	setp.eq.f32 	%p68, %f510, %f905;
	mul.f32 	%f511, %f905, 0f00000000;
	selp.f32 	%f557, %f555, %f551, %p85;
	selp.f32 	%f559, %f556, %f558, %p86;
	and.b32  	%r244, %r243, 2;
	setp.eq.f32 	%p88, %f563, %f909;
	mul.f32 	%f564, %f909, 0f00000000;
	setp.eq.s32 	%p107, %r261, 0;
	sub.f32 	%f616, %f213, %f612;
	selp.f32 	%f91, %f619, %f614, %p108;
	abs.f32 	%f620, %f913;
	setp.eq.s32 	%p127, %r289, 0;
	sub.f32 	%f669, %f213, %f665;
	selp.f32 	%f673, %f672, %f667, %p128;
	abs.f32 	%f674, %f917;
	selp.f32 	%f719, %f717, %f713, %p145;
	selp.f32 	%f721, %f718, %f720, %p146;
	and.b32  	%r305, %r304, 2;
	setp.eq.f32 	%p148, %f725, %f921;
	mul.f32 	%f726, %f921, 0f00000000;
	abs.f32 	%f750, %f925;
	setp.gtu.f32 	%p162, %f750, 0f7F800000;
	@%p162 bra 	LBB0_102;
// %bb.101:
	mov.b32 	%r310, %f129;
	and.b32  	%r311, %r310, -2147483648;
	mov.b32 	%r312, %f925;
	or.b32  	%r313, %r311, %r312;
	mov.b32 	%f925, %r313;
LBB0_102:                               // %__nv_fmodf.exit1031
	or.b32  	%r131, %r130, %r129;
	mul.f32 	%f2, %f215, %f215;
	mul.f32 	%f7, %f249, %f249;
	mul.f32 	%f11, %f284, %f284;
	mul.f32 	%f16, %f318, %f318;
	mul.f32 	%f20, %f353, %f353;
	mul.f32 	%f25, %f387, %f387;
	mul.f32 	%f29, %f422, %f422;
	mul.f32 	%f34, %f456, %f456;
	setp.eq.s32 	%p67, %r221, 0;
	sub.f32 	%f508, %f213, %f504;
	selp.f32 	%f55, %f511, %f506, %p68;
	abs.f32 	%f512, %f905;
	setp.eq.s32 	%p87, %r244, 0;
	sub.f32 	%f561, %f213, %f557;
	selp.f32 	%f565, %f564, %f559, %p88;
	abs.f32 	%f566, %f909;
	selp.f32 	%f617, %f612, %f616, %p107;
	setp.gt.f32 	%p109, %f620, 0f4B800000;
	add.f32 	%f621, %f91, 0f3F800000;
	selp.f32 	%f670, %f665, %f669, %p127;
	setp.gt.f32 	%p129, %f674, 0f4B800000;
	add.f32 	%f675, %f673, 0f3F800000;
	setp.eq.s32 	%p147, %r305, 0;
	sub.f32 	%f723, %f213, %f719;
	selp.f32 	%f127, %f726, %f721, %p148;
	abs.f32 	%f727, %f921;
	and.b32  	%r42, %r12, 2;
	add.f32 	%f751, %f925, %f925;
	mov.b32 	%r320, %f751;
	and.b32  	%r321, %r320, -2147483648;
	or.b32  	%r322, %r321, 1056964608;
	mov.b32 	%f752, %r322;
	add.f32 	%f753, %f751, %f752;
	cvt.rzi.f32.f32 	%f754, %f753;
	abs.f32 	%f755, %f751;
	setp.gt.f32 	%p163, %f755, 0f4B000000;
	selp.f32 	%f756, %f751, %f754, %p163;
	cvt.rzi.f32.f32 	%f757, %f751;
	setp.lt.f32 	%p164, %f755, 0f3F000000;
	selp.f32 	%f758, %f757, %f756, %p164;
	cvt.rzi.s32.f32 	%r323, %f758;
	fma.rn.f32 	%f759, %f758, 0fBF000000, %f925;
	mul.f32 	%f760, %f759, 0f34222169;
	fma.rn.f32 	%f761, %f759, 0f40490FDA, %f760;
	mul.f32 	%f762, %f761, %f761;
	fma.rn.f32 	%f763, %f762, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f764, %f763, %f762, 0f3D2AAABB;
	fma.rn.f32 	%f765, %f764, %f762, 0fBEFFFFFF;
	fma.rn.f32 	%f766, %f765, %f762, 0f3F800000;
	fma.rn.f32 	%f767, %f762, %f761, 0f00000000;
	fma.rn.f32 	%f768, %f762, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f769, %f768, %f762, 0fBE2AAAA8;
	fma.rn.f32 	%f770, %f769, %f767, %f761;
	and.b32  	%r324, %r323, 1;
	setp.eq.b32 	%p165, %r324, 1;
	selp.f32 	%f771, %f766, %f770, %p165;
	selp.f32 	%f772, %f770, %f766, %p165;
	and.b32  	%r325, %r323, 2;
	setp.eq.s32 	%p166, %r325, 0;
	neg.f32 	%f773, %f771;
	selp.f32 	%f774, %f771, %f773, %p166;
	add.s32 	%r326, %r323, 1;
	and.b32  	%r327, %r326, 2;
	setp.eq.s32 	%p167, %r327, 0;
	sub.f32 	%f776, %f213, %f772;
	cvt.rzi.f32.f32 	%f778, %f925;
	setp.eq.f32 	%p168, %f778, %f925;
	mul.f32 	%f779, %f925, 0f00000000;
	selp.f32 	%f780, %f779, %f774, %p168;
	abs.f32 	%f781, %f925;
	shr.u32 	%r83, %r5, 4;
	shr.u16 	%rs37, %rs17, 14;
	div.approx.f32 	%f146, %f213, %f184;
	abs.f32 	%f929, %f146;
	setp.lt.f32 	%p170, %f929, 0f40000000;
	@%p170 bra 	LBB0_116;
// %bb.103:
	setp.gtu.f32 	%p171, %f929, 0f4B800000;
	@%p171 bra 	LBB0_112;
	bra.uni 	LBB0_104;
LBB0_112:
	mov.b32 	%r97, %f929;
	and.b32  	%r328, %r97, 8388607;
	or.b32  	%r1123, %r328, 1065353216;
	mov.b32 	%f928, %r1123;
	add.s32 	%r329, %r97, -1073741824;
	and.b32  	%r1124, %r329, -8388608;
	setp.eq.s32 	%p177, %r1124, 0;
	@%p177 bra 	LBB0_115;
// %bb.113:                             // %__nv_fmaf_rn.exit4.i.i.i1070.preheader
	mov.f32 	%f794, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f793,%f794;
	// end inline asm
LBB0_114:                               // %__nv_fmaf_rn.exit4.i.i.i1070
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r330, %r1124, 192937984;
	add.s32 	%r331, %r330, %r1123;
	mov.b32 	%f795, %r331;
	mul.f32 	%f796, %f793, %f795;
	sub.f32 	%f797, %f795, %f796;
	fma.rn.f32 	%f798, %f797, %f793, %f796;
	sub.f32 	%f799, %f795, %f798;
	fma.rz.f32 	%f800, %f799, %f793, %f798;
	cvt.rzi.f32.f32 	%f801, %f800;
	sub.f32 	%f928, %f795, %f801;
	sub.s32 	%r1124, %r1124, %r330;
	mov.b32 	%r1123, %f928;
	setp.ne.s32 	%p178, %r1124, 0;
	setp.ne.s32 	%p179, %r1123, 0;
	and.pred  	%p180, %p178, %p179;
	@%p180 bra 	LBB0_114;
LBB0_115:                               // %__internal_fmodf_slowpath_mod.exit.i.i1072
	setp.gt.u32 	%p181, %r97, 2139095039;
	selp.f32 	%f802, 0f7FFFFFFF, 0f4B800000, %p181;
	mul.f32 	%f803, %f928, 0f34000000;
	mul.f32 	%f929, %f802, %f803;
	bra.uni 	LBB0_116;
LBB0_104:                               // %__nv_fast_fdividef.exit.i.i.i1042
	div.approx.f32 	%f786, %f929, %f184;
	cvt.rzi.f32.f32 	%f927, %f786;
	fma.rn.f32 	%f149, %f927, 0fC0000000, %f929;
	mov.b32 	%r96, %f149;
	setp.lt.u32 	%p172, %r96, 1073741824;
	@%p172 bra 	LBB0_111;
// %bb.105:
	setp.lt.u32 	%p173, %r96, -2147483647;
	@%p173 bra 	LBB0_109;
// %bb.106:
	add.f32 	%f791, %f927, 0fBF800000;
	setp.lt.f32 	%p176, %f149, 0fC0000000;
	add.f32 	%f792, %f791, 0fBF800000;
	selp.f32 	%f927, %f792, %f791, %p176;
	bra.uni 	LBB0_111;
LBB0_109:
	add.f32 	%f927, %f927, 0f3F800000;
	setp.ltu.f32 	%p174, %f149, 0f40800000;
	@%p174 bra 	LBB0_111;
// %bb.110:                             // %__nv_fmaf_rn.exit.i.i.i1047
	add.f32 	%f787, %f927, 0f3F800000;
	fma.rn.f32 	%f789, %f184, 0fC0400000, %f149;
	setp.ge.f32 	%p175, %f789, 0f00000000;
	add.f32 	%f790, %f787, 0f3F800000;
	selp.f32 	%f927, %f790, %f787, %p175;
LBB0_111:                               // %__internal_fmodf_fastpath_quot.exit.i.i1051
	fma.rn.f32 	%f929, %f927, 0fC0000000, %f929;
LBB0_116:                               // %__internal_fmodf_kernel.exit.i1076
	shr.u32 	%r8, %r131, 1;
	mul.f32 	%f219, %f2, 0f3D09A17B;
	mul.f32 	%f253, %f7, 0f3D09A17B;
	mul.f32 	%f288, %f11, 0f3D09A17B;
	mul.f32 	%f322, %f16, 0f3D09A17B;
	mul.f32 	%f357, %f20, 0f3D09A17B;
	mul.f32 	%f391, %f25, 0f3D09A17B;
	mul.f32 	%f426, %f29, 0f3D09A17B;
	mul.f32 	%f459, %f34, 0f3D09A17B;
	selp.f32 	%f509, %f504, %f508, %p67;
	setp.gt.f32 	%p69, %f512, 0f4B800000;
	add.f32 	%f513, %f55, 0f3F800000;
	selp.f32 	%f562, %f557, %f561, %p87;
	setp.gt.f32 	%p89, %f566, 0f4B800000;
	add.f32 	%f567, %f565, 0f3F800000;
	selp.f32 	%f92, %f621, %f617, %p109;
	selp.f32 	%f676, %f675, %f670, %p129;
	selp.f32 	%f724, %f719, %f723, %p147;
	setp.gt.f32 	%p149, %f727, 0f4B800000;
	add.f32 	%f728, %f127, 0f3F800000;
	selp.f32 	%f777, %f772, %f776, %p167;
	setp.gt.f32 	%p169, %f781, 0f4B800000;
	add.f32 	%f782, %f780, 0f3F800000;
	cvt.u32.u16 	%r84, %rs37;
	or.b32  	%r85, %r42, %r83;
	abs.f32 	%f804, %f929;
	setp.gtu.f32 	%p182, %f804, 0f7F800000;
	@%p182 bra 	LBB0_118;
// %bb.117:
	mov.b32 	%r332, %f146;
	and.b32  	%r333, %r332, -2147483648;
	mov.b32 	%r334, %f929;
	or.b32  	%r335, %r333, %r334;
	mov.b32 	%f929, %r335;
LBB0_118:                               // %__nv_fmodf.exit1077
	ld.param.u64 	%rd30, [_Z17julia_upchan_405313CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_1];
	mul.wide.u32 	%rd41, %r8, 4;
	mul.f32 	%f6, %f219, %f895;
	mul.f32 	%f254, %f253, %f896;
	mul.f32 	%f15, %f288, %f897;
	mul.f32 	%f323, %f322, %f898;
	mul.f32 	%f24, %f357, %f899;
	mul.f32 	%f392, %f391, %f900;
	mul.f32 	%f33, %f426, %f901;
	mul.f32 	%f460, %f459, %f902;
	selp.f32 	%f56, %f513, %f509, %p69;
	selp.f32 	%f568, %f567, %f562, %p89;
	mov.b32 	%r272, %f676;
	mov.b32 	%r271, %f92;
	mov.b32 	%r278, %f673;
	mov.b32 	%r277, %f91;
	selp.f32 	%f128, %f728, %f724, %p149;
	selp.f32 	%f783, %f782, %f777, %p169;
	setp.eq.s32 	%p183, %r85, %r84;
	add.f32 	%f805, %f929, %f929;
	mov.b32 	%r336, %f805;
	and.b32  	%r337, %r336, -2147483648;
	or.b32  	%r338, %r337, 1056964608;
	mov.b32 	%f806, %r338;
	add.f32 	%f807, %f805, %f806;
	cvt.rzi.f32.f32 	%f808, %f807;
	abs.f32 	%f809, %f805;
	setp.gt.f32 	%p184, %f809, 0f4B000000;
	selp.f32 	%f810, %f805, %f808, %p184;
	cvt.rzi.f32.f32 	%f811, %f805;
	setp.lt.f32 	%p185, %f809, 0f3F000000;
	selp.f32 	%f812, %f811, %f810, %p185;
	cvt.rzi.s32.f32 	%r339, %f812;
	fma.rn.f32 	%f813, %f812, 0fBF000000, %f929;
	mul.f32 	%f814, %f813, 0f34222169;
	fma.rn.f32 	%f815, %f813, 0f40490FDA, %f814;
	mul.f32 	%f816, %f815, %f815;
	fma.rn.f32 	%f817, %f816, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f818, %f817, %f816, 0f3D2AAABB;
	fma.rn.f32 	%f819, %f818, %f816, 0fBEFFFFFF;
	fma.rn.f32 	%f820, %f819, %f816, 0f3F800000;
	fma.rn.f32 	%f821, %f816, %f815, 0f00000000;
	fma.rn.f32 	%f822, %f816, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f823, %f822, %f816, 0fBE2AAAA8;
	fma.rn.f32 	%f824, %f823, %f821, %f815;
	and.b32  	%r340, %r339, 1;
	setp.eq.b32 	%p186, %r340, 1;
	selp.f32 	%f825, %f820, %f824, %p186;
	selp.f32 	%f826, %f824, %f820, %p186;
	and.b32  	%r341, %r339, 2;
	setp.eq.s32 	%p187, %r341, 0;
	neg.f32 	%f827, %f825;
	selp.f32 	%f828, %f825, %f827, %p187;
	add.s32 	%r342, %r339, 1;
	and.b32  	%r343, %r342, 2;
	setp.eq.s32 	%p188, %r343, 0;
	sub.f32 	%f830, %f213, %f826;
	selp.f32 	%f831, %f826, %f830, %p188;
	cvt.rzi.f32.f32 	%f832, %f929;
	setp.eq.f32 	%p189, %f832, %f929;
	mul.f32 	%f833, %f929, 0f00000000;
	selp.f32 	%f834, %f833, %f828, %p189;
	abs.f32 	%f835, %f929;
	setp.gt.f32 	%p190, %f835, 0f4B800000;
	add.f32 	%f836, %f834, 0f3F800000;
	selp.f32 	%f837, %f836, %f831, %p190;
	selp.f32 	%f163, 0f3F800000, 0f00000000, %p183;
	mul.wide.u32 	%rd52, %r13, 2;
	neg.s64 	%rd53, %rd52;
	cvt.rn.f32.s64 	%f838, %rd53;
	div.approx.f32 	%f166, %f838, %f184;
	abs.f32 	%f933, %f166;
	setp.lt.f32 	%p191, %f933, 0f40000000;
	@%p191 bra 	LBB0_130;
// %bb.119:
	setp.gtu.f32 	%p192, %f933, 0f4B800000;
	@%p192 bra 	LBB0_126;
	bra.uni 	LBB0_120;
LBB0_126:
	mov.b32 	%r105, %f933;
	and.b32  	%r344, %r105, 8388607;
	or.b32  	%r1125, %r344, 1065353216;
	mov.b32 	%f932, %r1125;
	add.s32 	%r345, %r105, -1073741824;
	and.b32  	%r1126, %r345, -8388608;
	setp.eq.s32 	%p198, %r1126, 0;
	@%p198 bra 	LBB0_129;
// %bb.127:                             // %__nv_fmaf_rn.exit4.i.i.i1116.preheader
	mov.f32 	%f849, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f848,%f849;
	// end inline asm
LBB0_128:                               // %__nv_fmaf_rn.exit4.i.i.i1116
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r346, %r1126, 192937984;
	add.s32 	%r347, %r346, %r1125;
	mov.b32 	%f850, %r347;
	mul.f32 	%f851, %f848, %f850;
	sub.f32 	%f852, %f850, %f851;
	fma.rn.f32 	%f853, %f852, %f848, %f851;
	sub.f32 	%f854, %f850, %f853;
	fma.rz.f32 	%f855, %f854, %f848, %f853;
	cvt.rzi.f32.f32 	%f856, %f855;
	sub.f32 	%f932, %f850, %f856;
	sub.s32 	%r1126, %r1126, %r346;
	mov.b32 	%r1125, %f932;
	setp.ne.s32 	%p199, %r1126, 0;
	setp.ne.s32 	%p200, %r1125, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	LBB0_128;
LBB0_129:                               // %__internal_fmodf_slowpath_mod.exit.i.i1118
	setp.gt.u32 	%p202, %r105, 2139095039;
	selp.f32 	%f857, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f858, %f932, 0f34000000;
	mul.f32 	%f933, %f857, %f858;
	bra.uni 	LBB0_130;
LBB0_120:                               // %__nv_fast_fdividef.exit.i.i.i1088
	div.approx.f32 	%f841, %f933, %f184;
	cvt.rzi.f32.f32 	%f931, %f841;
	fma.rn.f32 	%f169, %f931, 0fC0000000, %f933;
	mov.b32 	%r104, %f169;
	setp.lt.u32 	%p193, %r104, 1073741824;
	@%p193 bra 	LBB0_125;
// %bb.121:
	setp.lt.u32 	%p194, %r104, -2147483647;
	@%p194 bra 	LBB0_123;
// %bb.122:
	add.f32 	%f846, %f931, 0fBF800000;
	setp.lt.f32 	%p197, %f169, 0fC0000000;
	add.f32 	%f847, %f846, 0fBF800000;
	selp.f32 	%f931, %f847, %f846, %p197;
	bra.uni 	LBB0_125;
LBB0_123:
	add.f32 	%f931, %f931, 0f3F800000;
	setp.ltu.f32 	%p195, %f169, 0f40800000;
	@%p195 bra 	LBB0_125;
// %bb.124:                             // %__nv_fmaf_rn.exit.i.i.i1093
	add.f32 	%f842, %f931, 0f3F800000;
	fma.rn.f32 	%f844, %f184, 0fC0400000, %f169;
	setp.ge.f32 	%p196, %f844, 0f00000000;
	add.f32 	%f845, %f842, 0f3F800000;
	selp.f32 	%f931, %f845, %f842, %p196;
LBB0_125:                               // %__internal_fmodf_fastpath_quot.exit.i.i1097
	fma.rn.f32 	%f933, %f931, 0fC0000000, %f933;
LBB0_130:                               // %__internal_fmodf_kernel.exit.i1122
	add.s64 	%rd42, %rd30, %rd41;
	mov.b32 	%r151, %f254;
	mov.b32 	%r150, %f6;
	mov.b32 	%r169, %f323;
	mov.b32 	%r168, %f15;
	mov.b32 	%r187, %f392;
	mov.b32 	%r186, %f24;
	mov.b32 	%r205, %f460;
	mov.b32 	%r204, %f33;
	mov.b32 	%r233, %f568;
	mov.b32 	%r232, %f56;
	mov.b32 	%r236, %f565;
	mov.b32 	%r235, %f55;
	xor.b32  	%r275, %r278, -2147483648;
	xor.b32  	%r274, %r277, -2147483648;
	mov.b32 	%r316, %f783;
	mov.b32 	%r315, %f128;
	mov.b32 	%r319, %f780;
	mov.b32 	%r318, %f127;
	shl.b32 	%r6, %r5, 2;
	and.b32  	%r44, %r12, 4;
	mul.f32 	%f164, %f837, %f163;
	mul.f32 	%f165, %f834, %f163;
	abs.f32 	%f859, %f933;
	setp.gtu.f32 	%p203, %f859, 0f7F800000;
	@%p203 bra 	LBB0_132;
// %bb.131:
	mov.b32 	%r348, %f166;
	and.b32  	%r349, %r348, -2147483648;
	mov.b32 	%r350, %f933;
	or.b32  	%r351, %r349, %r350;
	mov.b32 	%f933, %r351;
LBB0_132:                               // %__nv_fmodf.exit1123
	ld.param.u64 	%rd1, [_Z17julia_upchan_405313CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_2];
	ld.param.u64 	%rd2, [_Z17julia_upchan_405313CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_3];
	ld.global.u32 	%r9, [%rd42];
	// begin inline asm
	cvt.rn.f16x2.f32 %r149, %r151, %r150;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r167, %r169, %r168;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r185, %r187, %r186;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r203, %r205, %r204;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r231, %r233, %r232;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r234, %r236, %r235;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r270, %r272, %r271;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r273, %r275, %r274;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r276, %r278, %r277;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r279, %r272, %r271;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r314, %r316, %r315;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r317, %r319, %r318;
	// end inline asm
	add.f32 	%f860, %f933, %f933;
	mov.b32 	%r365, %f860;
	and.b32  	%r366, %r365, -2147483648;
	or.b32  	%r367, %r366, 1056964608;
	mov.b32 	%f861, %r367;
	add.f32 	%f862, %f860, %f861;
	cvt.rzi.f32.f32 	%f863, %f862;
	abs.f32 	%f864, %f860;
	setp.gt.f32 	%p204, %f864, 0f4B000000;
	selp.f32 	%f865, %f860, %f863, %p204;
	cvt.rzi.f32.f32 	%f866, %f860;
	setp.lt.f32 	%p205, %f864, 0f3F000000;
	selp.f32 	%f867, %f866, %f865, %p205;
	cvt.rzi.s32.f32 	%r368, %f867;
	fma.rn.f32 	%f868, %f867, 0fBF000000, %f933;
	mul.f32 	%f869, %f868, 0f34222169;
	fma.rn.f32 	%f870, %f868, 0f40490FDA, %f869;
	mul.f32 	%f871, %f870, %f870;
	fma.rn.f32 	%f872, %f871, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f873, %f872, %f871, 0f3D2AAABB;
	fma.rn.f32 	%f874, %f873, %f871, 0fBEFFFFFF;
	fma.rn.f32 	%f875, %f874, %f871, 0f3F800000;
	fma.rn.f32 	%f876, %f871, %f870, 0f00000000;
	fma.rn.f32 	%f877, %f871, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f878, %f877, %f871, 0fBE2AAAA8;
	fma.rn.f32 	%f879, %f878, %f876, %f870;
	and.b32  	%r369, %r368, 1;
	setp.eq.b32 	%p206, %r369, 1;
	selp.f32 	%f880, %f875, %f879, %p206;
	selp.f32 	%f881, %f879, %f875, %p206;
	and.b32  	%r370, %r368, 2;
	setp.eq.s32 	%p207, %r370, 0;
	neg.f32 	%f882, %f880;
	selp.f32 	%f883, %f880, %f882, %p207;
	add.s32 	%r371, %r368, 1;
	and.b32  	%r372, %r371, 2;
	setp.eq.s32 	%p208, %r372, 0;
	sub.f32 	%f885, %f213, %f881;
	selp.f32 	%f886, %f881, %f885, %p208;
	cvt.rzi.f32.f32 	%f887, %f933;
	setp.eq.f32 	%p209, %f887, %f933;
	mul.f32 	%f888, %f933, 0f00000000;
	selp.f32 	%f889, %f888, %f883, %p209;
	abs.f32 	%f890, %f933;
	setp.gt.f32 	%p210, %f890, 0f4B800000;
	add.f32 	%f891, %f889, 0f3F800000;
	selp.f32 	%f892, %f891, %f886, %p210;
	mul.f32 	%f893, %f892, %f163;
	mul.f32 	%f894, %f889, %f163;
	mov.b32 	%r354, %f893;
	mov.b32 	%r353, %f164;
	// begin inline asm
	cvt.rn.f16x2.f32 %r112, %r354, %r353;
	// end inline asm
	mov.b32 	%r360, %f894;
	xor.b32  	%r357, %r360, -2147483648;
	mov.b32 	%r359, %f165;
	xor.b32  	%r356, %r359, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r113, %r357, %r356;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r114, %r360, %r359;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r115, %r354, %r353;
	// end inline asm
	and.b32  	%r373, %r6, 28;
	shl.b32 	%r374, %r1, 5;
	and.b32  	%r375, %r374, 96;
	or.b32  	%r116, %r373, %r375;
	and.b32  	%r117, %r5, 8;
	and.b32  	%r376, %r3, 3;
	or.b32  	%r377, %r117, %r376;
	or.b32  	%r378, %r377, %r44;
	shl.b32 	%r379, %r3, 2;
	and.b32  	%r380, %r379, 48;
	or.b32  	%r118, %r378, %r380;
	and.b32  	%r119, %r2, 2048;
	shl.b32 	%r381, %r1, 4;
	and.b32  	%r120, %r381, 1920;
	and.b32  	%r382, %r3, 1;
	mul.lo.s32 	%r383, %r382, 260;
	mul.lo.s32 	%r384, %r83, 65;
	bfe.u32 	%r385, %r3, 1, 1;
	mul.lo.s32 	%r386, %r385, 130;
	shr.u32 	%r387, %r3, 2;
	mul.lo.s32 	%r388, %r387, 545;
	shl.b32 	%r389, %r5, 4;
	or.b32  	%r390, %r117, %r389;
	shr.u32 	%r391, %r390, 2;
	and.b32  	%r392, %r391, 30;
	add.s32 	%r393, %r383, %r384;
	add.s32 	%r394, %r393, %r388;
	add.s32 	%r395, %r394, %r386;
	add.s32 	%r396, %r395, %r392;
	mul.wide.u32 	%rd54, %r396, 4;
	mov.u64 	%rd55, shmem;
	add.s64 	%rd11, %rd55, %rd54;
	cvt.u64.u32 	%rd56, %r392;
	cvt.u64.u32 	%rd57, %r386;
	cvt.u64.u32 	%rd58, %r388;
	cvt.u64.u32 	%rd59, %r384;
	cvt.u64.u32 	%rd60, %r383;
	add.s64 	%rd61, %rd60, %rd59;
	add.s64 	%rd62, %rd61, %rd58;
	add.s64 	%rd63, %rd62, %rd57;
	add.s64 	%rd64, %rd63, %rd56;
	shl.b64 	%rd65, %rd64, 2;
	add.s64 	%rd12, %rd55, %rd65;
	or.b32  	%r397, %r387, 4;
	mul.lo.s32 	%r398, %r397, 545;
	add.s32 	%r399, %r393, %r386;
	add.s32 	%r400, %r399, %r398;
	add.s32 	%r401, %r400, %r392;
	mul.wide.u32 	%rd66, %r401, 4;
	add.s64 	%rd13, %rd55, %rd66;
	add.s64 	%rd67, %rd61, %rd57;
	cvt.u64.u32 	%rd68, %r398;
	add.s64 	%rd69, %rd67, %rd68;
	add.s64 	%rd70, %rd69, %rd56;
	shl.b64 	%rd71, %rd70, 2;
	add.s64 	%rd14, %rd55, %rd71;
	or.b32  	%r402, %r387, 8;
	mul.lo.s32 	%r403, %r402, 545;
	add.s32 	%r404, %r399, %r403;
	add.s32 	%r405, %r404, %r392;
	mul.wide.u32 	%rd72, %r405, 4;
	add.s64 	%rd15, %rd55, %rd72;
	cvt.u64.u32 	%rd73, %r403;
	add.s64 	%rd74, %rd67, %rd73;
	add.s64 	%rd75, %rd74, %rd56;
	shl.b64 	%rd76, %rd75, 2;
	add.s64 	%rd16, %rd55, %rd76;
	or.b32  	%r406, %r387, 12;
	mul.lo.s32 	%r407, %r406, 545;
	add.s32 	%r408, %r399, %r407;
	add.s32 	%r409, %r408, %r392;
	mul.wide.u32 	%rd77, %r409, 4;
	add.s64 	%rd17, %rd55, %rd77;
	cvt.u64.u32 	%rd78, %r407;
	add.s64 	%rd79, %rd67, %rd78;
	add.s64 	%rd80, %rd79, %rd56;
	shl.b64 	%rd81, %rd80, 2;
	add.s64 	%rd18, %rd55, %rd81;
	and.b32  	%r410, %r4, 32;
	and.b32  	%r411, %r7, 32;
	shl.b32 	%r412, %r5, 3;
	and.b32  	%r413, %r412, 64;
	shl.b32 	%r414, %r3, 1;
	or.b32  	%r415, %r413, %r414;
	or.b32  	%r416, %r415, %r411;
	shr.u32 	%r417, %r416, 2;
	mad.lo.s32 	%r418, %r11, 130, %r410;
	mad.lo.s32 	%r419, %r13, 260, %r418;
	mad.lo.s32 	%r420, %r10, 65, %r419;
	add.s32 	%r421, %r420, %r417;
	or.b32  	%r422, %r417, %r410;
	mad.lo.s32 	%r423, %r8, 65, %r422;
	and.b32  	%r424, %r379, 12;
	shl.b32 	%r425, %r1, 1;
	and.b32  	%r426, %r425, 240;
	shr.u32 	%r427, %r5, 3;
	or.b32  	%r428, %r426, %r427;
	or.b32  	%r429, %r428, %r424;
	shl.b32 	%r121, %r429, 7;
	shl.b32 	%r430, %r3, 14;
	and.b32  	%r122, %r430, 196608;
	shl.b32 	%r431, %r1, 13;
	and.b32  	%r123, %r431, 32768;
	and.b32  	%r432, %r414, 6;
	or.b32  	%r433, %r432, %r83;
	mul.lo.s32 	%r434, %r433, 65;
	add.s32 	%r435, %r434, %r388;
	add.s32 	%r436, %r435, %r392;
	mul.wide.u32 	%rd82, %r436, 4;
	add.s64 	%rd19, %rd55, %rd82;
	cvt.u64.u32 	%rd83, %r434;
	add.s64 	%rd84, %rd58, %rd83;
	add.s64 	%rd85, %rd84, %rd56;
	shl.b64 	%rd86, %rd85, 2;
	add.s64 	%rd20, %rd55, %rd86;
	add.s32 	%r437, %r434, %r398;
	add.s32 	%r438, %r437, %r392;
	mul.wide.u32 	%rd87, %r438, 4;
	add.s64 	%rd21, %rd55, %rd87;
	add.s64 	%rd88, %rd68, %rd83;
	add.s64 	%rd89, %rd88, %rd56;
	shl.b64 	%rd90, %rd89, 2;
	add.s64 	%rd22, %rd55, %rd90;
	add.s32 	%r439, %r434, %r403;
	add.s32 	%r440, %r439, %r392;
	mul.wide.u32 	%rd91, %r440, 4;
	add.s64 	%rd23, %rd55, %rd91;
	add.s64 	%rd92, %rd73, %rd83;
	add.s64 	%rd93, %rd92, %rd56;
	shl.b64 	%rd94, %rd93, 2;
	add.s64 	%rd24, %rd55, %rd94;
	add.s32 	%r441, %r434, %r407;
	add.s32 	%r442, %r441, %r392;
	mul.wide.u32 	%rd95, %r442, 4;
	add.s64 	%rd25, %rd55, %rd95;
	add.s64 	%rd96, %rd78, %rd83;
	add.s64 	%rd97, %rd96, %rd56;
	shl.b64 	%rd98, %rd97, 2;
	add.s64 	%rd26, %rd55, %rd98;
	mul.wide.u32 	%rd99, %r423, 4;
	add.s64 	%rd27, %rd55, %rd99;
	mul.wide.u32 	%rd100, %r421, 4;
	add.s64 	%rd28, %rd55, %rd100;
	mov.u32 	%r1120, 0;
	setp.eq.s32 	%p211, %r117, 0;
	mov.u16 	%rs103, 25600;
	mov.u16 	%rs77, 21504;
	mov.u16 	%rs111, 18432;
	mov.u16 	%rs99, -14592;
	mov.u32 	%r1121, %r1120;
	mov.u32 	%r1122, %r1120;
	mov.u32 	%r1118, %r1120;
LBB0_107:                               // %L1066
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_108 Depth 2
	or.b32  	%r508, %r118, %r1118;
	shl.b32 	%r509, %r508, 12;
	or.b32  	%r510, %r509, %r116;
	or.b32  	%r511, %r510, %r119;
	or.b32  	%r512, %r511, %r120;
	mul.wide.s32 	%rd101, %r512, 4;
	add.s64 	%rd102, %rd1, %rd101;
	ld.global.v4.u32 	{%r513, %r514, %r515, %r516}, [%rd102];
	or.b32  	%r517, %r512, 262144;
	mul.wide.s32 	%rd103, %r517, 4;
	add.s64 	%rd104, %rd1, %rd103;
	ld.global.v4.u32 	{%r518, %r519, %r520, %r521}, [%rd104];
	or.b32  	%r522, %r512, 524288;
	mul.wide.s32 	%rd105, %r522, 4;
	add.s64 	%rd106, %rd1, %rd105;
	ld.global.v4.u32 	{%r523, %r524, %r525, %r526}, [%rd106];
	or.b32  	%r527, %r512, 786432;
	mul.wide.s32 	%rd107, %r527, 4;
	add.s64 	%rd108, %rd1, %rd107;
	ld.global.v4.u32 	{%r528, %r529, %r530, %r531}, [%rd108];
	selp.b32 	%r532, %r515, %r513, %p211;
	shfl.sync.bfly.b32	%r533, %r532, 8, 31, -1;
	selp.b32 	%r444, %r513, %r533, %p211;
	selp.b32 	%r445, %r533, %r515, %p211;
	selp.b32 	%r534, %r516, %r514, %p211;
	shfl.sync.bfly.b32	%r535, %r534, 8, 31, -1;
	selp.b32 	%r452, %r514, %r535, %p211;
	selp.b32 	%r453, %r535, %r516, %p211;
	selp.b32 	%r536, %r520, %r518, %p211;
	shfl.sync.bfly.b32	%r537, %r536, 8, 31, -1;
	selp.b32 	%r460, %r518, %r537, %p211;
	selp.b32 	%r461, %r537, %r520, %p211;
	selp.b32 	%r538, %r521, %r519, %p211;
	shfl.sync.bfly.b32	%r539, %r538, 8, 31, -1;
	selp.b32 	%r468, %r519, %r539, %p211;
	selp.b32 	%r469, %r539, %r521, %p211;
	selp.b32 	%r540, %r525, %r523, %p211;
	shfl.sync.bfly.b32	%r541, %r540, 8, 31, -1;
	selp.b32 	%r476, %r523, %r541, %p211;
	selp.b32 	%r477, %r541, %r525, %p211;
	selp.b32 	%r542, %r526, %r524, %p211;
	shfl.sync.bfly.b32	%r543, %r542, 8, 31, -1;
	selp.b32 	%r484, %r524, %r543, %p211;
	selp.b32 	%r485, %r543, %r526, %p211;
	selp.b32 	%r544, %r530, %r528, %p211;
	shfl.sync.bfly.b32	%r545, %r544, 8, 31, -1;
	selp.b32 	%r492, %r528, %r545, %p211;
	selp.b32 	%r493, %r545, %r530, %p211;
	selp.b32 	%r546, %r531, %r529, %p211;
	shfl.sync.bfly.b32	%r547, %r546, 8, 31, -1;
	selp.b32 	%r500, %r529, %r547, %p211;
	selp.b32 	%r501, %r547, %r531, %p211;
	mov.u32 	%r502, 21520;
	// begin inline asm
	prmt.b32 %r443, %r444, %r445, %r502;
	// end inline asm
	mov.u32 	%r506, 30258;
	// begin inline asm
	prmt.b32 %r447, %r444, %r445, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r451, %r452, %r453, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r455, %r452, %r453, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r459, %r460, %r461, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r463, %r460, %r461, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r467, %r468, %r469, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r471, %r468, %r469, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r475, %r476, %r477, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r479, %r476, %r477, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r483, %r484, %r485, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r487, %r484, %r485, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r491, %r492, %r493, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r495, %r492, %r493, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r499, %r500, %r501, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r503, %r500, %r501, %r506;
	// end inline asm
	st.shared.u32 	[%rd11], %r443;
	st.shared.u32 	[%rd12+128], %r447;
	st.shared.u32 	[%rd12+4], %r451;
	st.shared.u32 	[%rd12+132], %r455;
	st.shared.u32 	[%rd13], %r459;
	st.shared.u32 	[%rd14+128], %r463;
	st.shared.u32 	[%rd14+4], %r467;
	st.shared.u32 	[%rd14+132], %r471;
	st.shared.u32 	[%rd15], %r475;
	st.shared.u32 	[%rd16+128], %r479;
	st.shared.u32 	[%rd16+4], %r483;
	st.shared.u32 	[%rd16+132], %r487;
	st.shared.u32 	[%rd17], %r491;
	st.shared.u32 	[%rd18+128], %r495;
	st.shared.u32 	[%rd18+4], %r499;
	st.shared.u32 	[%rd18+132], %r503;
	bar.sync 	0;
	mov.u32 	%r1119, 256;
	mov.u64 	%rd117, %rd28;
	mov.u64 	%rd118, %rd27;
LBB0_108:                               // %L10583
                                        //   Parent Loop BB0_107 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r93, %r1122;
	mov.u32 	%r92, %r1121;
	ld.shared.u32 	%r1122, [%rd117];
	// begin inline asm
	mov.b32 %r553, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r564, {%rs77, %rs77};
	// end inline asm
	xor.b32  	%r552, %r1122, -2004318072;
	mov.u32 	%r551, 983055;
	// begin inline asm
	lop3.b32 %r550, %r551, %r552, %r553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r554, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r555, %r553, %r554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r558, %r550, %r555;
	// end inline asm
	mov.u32 	%r562, 15728880;
	// begin inline asm
	lop3.b32 %r561, %r562, %r552, %r564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r565, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r566, %r564, %r565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r569, %r561, %r566;
	// end inline asm
	shr.u32 	%r574, %r552, 8;
	// begin inline asm
	lop3.b32 %r572, %r551, %r574, %r553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r576, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r577, %r553, %r576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r580, %r572, %r577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r583, %r562, %r574, %r564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r587, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r588, %r564, %r587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r591, %r583, %r588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r594, %r203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r596, %r594, %r558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r599, %r203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r601, %r599, %r569;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r604, %r203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r606, %r604, %r580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r609, %r203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r611, %r609, %r591;
	// end inline asm
	// begin inline asm
	mov.b32 %r619, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r630, {%rs77, %rs77};
	// end inline asm
	xor.b32  	%r618, %r1120, -2004318072;
	// begin inline asm
	lop3.b32 %r616, %r551, %r618, %r619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r620, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r621, %r619, %r620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r624, %r616, %r621;
	// end inline asm
	// begin inline asm
	lop3.b32 %r627, %r562, %r618, %r630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r631, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r632, %r630, %r631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r635, %r627, %r632;
	// end inline asm
	shr.u32 	%r640, %r618, 8;
	// begin inline asm
	lop3.b32 %r638, %r551, %r640, %r619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r642, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r643, %r619, %r642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r646, %r638, %r643;
	// end inline asm
	// begin inline asm
	lop3.b32 %r649, %r562, %r640, %r630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r653, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r654, %r630, %r653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r657, %r649, %r654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r660, %r149, %r624, %r596;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r664, %r149, %r635, %r601;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r668, %r149, %r646, %r606;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r672, %r149, %r657, %r611;
	// end inline asm
	// begin inline asm
	mov.b32 %r681, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r692, {%rs77, %rs77};
	// end inline asm
	xor.b32  	%r680, %r92, -2004318072;
	// begin inline asm
	lop3.b32 %r678, %r551, %r680, %r681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r682, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r683, %r681, %r682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r686, %r678, %r683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r689, %r562, %r680, %r692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r693, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r694, %r692, %r693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r697, %r689, %r694;
	// end inline asm
	shr.u32 	%r702, %r680, 8;
	// begin inline asm
	lop3.b32 %r700, %r551, %r702, %r681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r704, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r705, %r681, %r704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r708, %r700, %r705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r711, %r562, %r702, %r692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r715, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r716, %r692, %r715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r719, %r711, %r716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r722, %r167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r724, %r722, %r686, %r660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r728, %r167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r730, %r728, %r697, %r664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r734, %r167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r736, %r734, %r708, %r668;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r740, %r167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r742, %r740, %r719, %r672;
	// end inline asm
	// begin inline asm
	mov.b32 %r751, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r762, {%rs77, %rs77};
	// end inline asm
	xor.b32  	%r750, %r93, -2004318072;
	// begin inline asm
	lop3.b32 %r748, %r551, %r750, %r751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r752, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r753, %r751, %r752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r756, %r748, %r753;
	// end inline asm
	// begin inline asm
	lop3.b32 %r759, %r562, %r750, %r762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r763, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r764, %r762, %r763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r767, %r759, %r764;
	// end inline asm
	shr.u32 	%r772, %r750, 8;
	// begin inline asm
	lop3.b32 %r770, %r551, %r772, %r751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r774, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r775, %r751, %r774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r778, %r770, %r775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r781, %r562, %r772, %r762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r785, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r786, %r762, %r785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r789, %r781, %r786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r815, %r185, %r756, %r724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r812, %r185, %r767, %r730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r824, %r185, %r778, %r736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r821, %r185, %r789, %r742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r808, %r234;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r810, %r808, %r812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r813, %r231, %r815, %r810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r817, %r234;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r819, %r817, %r821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r822, %r231, %r824, %r819;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r826, %r234, %r815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r829, %r231, %r812, %r826;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r833, %r234, %r824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r836, %r231, %r821, %r833;
	// end inline asm
	mov.u32 	%r911, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r867, %r864}, {%r270, %r276, %r273, %r279}, {%r813, %r829}, {%r911, %r911};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r876, %r873}, {%r270, %r276, %r273, %r279}, {%r822, %r836}, {%r911, %r911};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r860, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r862, %r860, %r864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r865, %r314, %r867, %r862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r869, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r871, %r869, %r873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r874, %r314, %r876, %r871;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r878, %r317, %r867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r881, %r314, %r864, %r878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r885, %r317, %r876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r888, %r314, %r873, %r885;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r892, %r893}, {%r112, %r114, %r113, %r115}, {%r865, %r881}, {%r911, %r911};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r902, %r903}, {%r112, %r114, %r113, %r115}, {%r874, %r888}, {%r911, %r911};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r912, %r9, %r892;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r915, %r9, %r893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r918, %r9, %r902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r921, %r9, %r903;
	// end inline asm
	// begin inline asm
	mov.b32 %r924, {%rs99, %rs99};
	// end inline asm
	mov.u16 	%rs88, 18176;
	// begin inline asm
	mov.b32 %r925, {%rs88, %rs88};
	// end inline asm
	// begin inline asm
	max.f16x2 %r926, %r912, %r924;
	// end inline asm
	// begin inline asm
	min.f16x2 %r929, %r926, %r925;
	// end inline asm
	// begin inline asm
	mov.b32 %r932, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	mov.b32 %r933, {%rs88, %rs88};
	// end inline asm
	// begin inline asm
	max.f16x2 %r934, %r915, %r932;
	// end inline asm
	// begin inline asm
	min.f16x2 %r937, %r934, %r933;
	// end inline asm
	// begin inline asm
	mov.b32 %r940, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	mov.b32 %r941, {%rs88, %rs88};
	// end inline asm
	// begin inline asm
	max.f16x2 %r942, %r918, %r940;
	// end inline asm
	// begin inline asm
	min.f16x2 %r945, %r942, %r941;
	// end inline asm
	// begin inline asm
	mov.b32 %r948, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	mov.b32 %r949, {%rs88, %rs88};
	// end inline asm
	// begin inline asm
	max.f16x2 %r950, %r921, %r948;
	// end inline asm
	// begin inline asm
	min.f16x2 %r953, %r950, %r949;
	// end inline asm
	// begin inline asm
	mov.b32 %r959, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r957, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r958, %r959, %r957;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r961, %r929, %r958;
	// end inline asm
	// begin inline asm
	mov.b32 %r964, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r965, %r959, %r964;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r968, %r937, %r965;
	// end inline asm
	// begin inline asm
	mov.b32 %r971, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r972, %r959, %r971;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r975, %r945, %r972;
	// end inline asm
	// begin inline asm
	mov.b32 %r978, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r979, %r959, %r978;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r982, %r953, %r979;
	// end inline asm
	mov.u32 	%r988, 25152;
	// begin inline asm
	prmt.b32 %r985, %r961, %r975, %r988;
	// end inline asm
	// begin inline asm
	prmt.b32 %r989, %r968, %r982, %r988;
	// end inline asm
	shl.b32 	%r996, %r989, 4;
	mov.u32 	%r994, 252645135;
	// begin inline asm
	lop3.b32 %r993, %r994, %r985, %r996, 202;
	// end inline asm
	xor.b32  	%r997, %r993, -2004318072;
	st.shared.u32 	[%rd118], %r997;
	add.s32 	%r1119, %r1119, -16;
	add.s64 	%rd118, %rd118, 2180;
	add.s64 	%rd117, %rd117, 2180;
	setp.eq.s32 	%p212, %r1119, 0;
	mov.u32 	%r1120, %r92;
	mov.u32 	%r1121, %r93;
	@%p212 bra 	LBB0_133;
	bra.uni 	LBB0_108;
LBB0_133:                               // %guard_pass6952
                                        //   in Loop: Header=BB0_107 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r1003, [%rd19];
	ld.shared.u32 	%r1004, [%rd20+128];
	ld.shared.u32 	%r1011, [%rd20+4];
	ld.shared.u32 	%r1012, [%rd20+132];
	ld.shared.u32 	%r1019, [%rd21];
	ld.shared.u32 	%r1020, [%rd22+128];
	ld.shared.u32 	%r1027, [%rd22+4];
	ld.shared.u32 	%r1028, [%rd22+132];
	ld.shared.u32 	%r1035, [%rd23];
	ld.shared.u32 	%r1036, [%rd24+128];
	ld.shared.u32 	%r1043, [%rd24+4];
	ld.shared.u32 	%r1044, [%rd24+132];
	ld.shared.u32 	%r1051, [%rd25];
	ld.shared.u32 	%r1052, [%rd26+128];
	ld.shared.u32 	%r1059, [%rd26+4];
	ld.shared.u32 	%r1060, [%rd26+132];
	// begin inline asm
	prmt.b32 %r998, %r1003, %r1004, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1002, %r1003, %r1004, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1006, %r1011, %r1012, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1010, %r1011, %r1012, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1014, %r1019, %r1020, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1018, %r1019, %r1020, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1022, %r1027, %r1028, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1026, %r1027, %r1028, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1030, %r1035, %r1036, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1034, %r1035, %r1036, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1038, %r1043, %r1044, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1042, %r1043, %r1044, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1046, %r1051, %r1052, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1050, %r1051, %r1052, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1054, %r1059, %r1060, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1058, %r1059, %r1060, %r506;
	// end inline asm
	selp.b32 	%r1062, %r1002, %r998, %p211;
	shfl.sync.bfly.b32	%r1063, %r1062, 8, 31, -1;
	selp.b32 	%r1064, %r998, %r1063, %p211;
	selp.b32 	%r1065, %r1063, %r1002, %p211;
	selp.b32 	%r1066, %r1010, %r1006, %p211;
	shfl.sync.bfly.b32	%r1067, %r1066, 8, 31, -1;
	selp.b32 	%r1068, %r1006, %r1067, %p211;
	selp.b32 	%r1069, %r1067, %r1010, %p211;
	selp.b32 	%r1070, %r1018, %r1014, %p211;
	shfl.sync.bfly.b32	%r1071, %r1070, 8, 31, -1;
	selp.b32 	%r1072, %r1014, %r1071, %p211;
	selp.b32 	%r1073, %r1071, %r1018, %p211;
	selp.b32 	%r1074, %r1026, %r1022, %p211;
	shfl.sync.bfly.b32	%r1075, %r1074, 8, 31, -1;
	selp.b32 	%r1076, %r1022, %r1075, %p211;
	selp.b32 	%r1077, %r1075, %r1026, %p211;
	selp.b32 	%r1078, %r1034, %r1030, %p211;
	shfl.sync.bfly.b32	%r1079, %r1078, 8, 31, -1;
	selp.b32 	%r1080, %r1030, %r1079, %p211;
	selp.b32 	%r1081, %r1079, %r1034, %p211;
	selp.b32 	%r1082, %r1042, %r1038, %p211;
	shfl.sync.bfly.b32	%r1083, %r1082, 8, 31, -1;
	selp.b32 	%r1084, %r1038, %r1083, %p211;
	selp.b32 	%r1085, %r1083, %r1042, %p211;
	selp.b32 	%r1086, %r1050, %r1046, %p211;
	shfl.sync.bfly.b32	%r1087, %r1086, 8, 31, -1;
	selp.b32 	%r1088, %r1046, %r1087, %p211;
	selp.b32 	%r1089, %r1087, %r1050, %p211;
	selp.b32 	%r1090, %r1058, %r1054, %p211;
	shfl.sync.bfly.b32	%r1091, %r1090, 8, 31, -1;
	selp.b32 	%r1092, %r1054, %r1091, %p211;
	selp.b32 	%r1093, %r1091, %r1058, %p211;
	shl.b32 	%r1094, %r1118, 12;
	or.b32  	%r1095, %r1094, %r122;
	or.b32  	%r1096, %r1095, %r121;
	or.b32  	%r1097, %r1096, %r116;
	or.b32  	%r1098, %r1097, %r123;
	mul.wide.s32 	%rd109, %r1098, 4;
	add.s64 	%rd110, %rd2, %rd109;
	st.global.v4.u32 	[%rd110], {%r1064, %r1068, %r1065, %r1069};
	or.b32  	%r1099, %r1098, 262144;
	mul.wide.s32 	%rd111, %r1099, 4;
	add.s64 	%rd112, %rd2, %rd111;
	st.global.v4.u32 	[%rd112], {%r1072, %r1076, %r1073, %r1077};
	or.b32  	%r1100, %r1098, 524288;
	mul.wide.s32 	%rd113, %r1100, 4;
	add.s64 	%rd114, %rd2, %rd113;
	st.global.v4.u32 	[%rd114], {%r1080, %r1084, %r1081, %r1085};
	or.b32  	%r1101, %r1098, 786432;
	mul.wide.s32 	%rd115, %r1101, 4;
	add.s64 	%rd116, %rd2, %rd115;
	st.global.v4.u32 	[%rd116], {%r1088, %r1092, %r1089, %r1093};
	add.s32 	%r124, %r1118, 256;
	setp.eq.s32 	%p214, %r1118, 32512;
	mov.u32 	%r1120, %r92;
	mov.u32 	%r1121, %r93;
	mov.u32 	%r1118, %r124;
	@%p214 bra 	LBB0_134;
	bra.uni 	LBB0_107;
LBB0_134:                               // %L17325
	st.global.u32 	[%rd3], %r911;
	ret;
LBB0_1:                                 // %L8
	ld.param.u64 	%rd29, [_Z17julia_upchan_405313CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_0];
	mov.u64 	%rd38, exception1;
	cvta.global.u64 	%rd39, %rd38;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd39;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd29;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
